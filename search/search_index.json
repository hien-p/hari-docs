{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Harry's Home Honestly, it is always so hard for me to believe that my dream would come true someday. Challenges do bring growth, which I have experienced quite often recently. Thats the reason why I started this whole blogging thing, cause I want to share the lessons I learned from my journey with you. I'm fully aware that this will make it harder for my content to reach people, especially in these day. Especially when I'm just a 23-year-old average dude with no big achievements to his name yet. But there is something about reading that has always fascinated me. You can watch a TikTok reel or listening to a podcast while driving or cooking. You can pay half of your attention to these things and still get something out of it. But you can not be half-ass about reading. Words are boring and harder to follow, so if you want to get something out of it, you have to fully concentrate. You have to use your imagination and be very mindful about it. Thats why I chose this format. I want my readers to participate with me, to actively think while reading my stuffs. And I want to be surrounded by the type of people who enjoy that activity. So if you are reading this, you are exactly who I want to be here. Thank you a lot, and I wish yor with lots of growth and good challenges. We will see each other soon in 2025 \ud83d\udc9a Deciding what to write next??? \"Let's stay Connected\" To wrap things up, I truly believe that expanding network can open up amazing opportunities both personally and professionally. If you're interested in connecting, feel free to reach out and introduce yourself. I look forward to the possibility of building new connections and friends. Twitter: https://x.com/harry_phan06 Email: phanhoangvinhhien@gmail.com Telegram: @har20123 Facebook: https://www.facebook.com/Harrypy0611/ Last but not least, If you find my blog helpful you all can always support me by sponsoring me! My Sui address(\ud83e\udd23): 0x80d6241496f68b205dee09025b156ee6f6a944d88a5238cdf05d148a05bf399a","title":"Welcome to Harry's Home"},{"location":"#welcome-to-harrys-home","text":"Honestly, it is always so hard for me to believe that my dream would come true someday. Challenges do bring growth, which I have experienced quite often recently. Thats the reason why I started this whole blogging thing, cause I want to share the lessons I learned from my journey with you. I'm fully aware that this will make it harder for my content to reach people, especially in these day. Especially when I'm just a 23-year-old average dude with no big achievements to his name yet. But there is something about reading that has always fascinated me. You can watch a TikTok reel or listening to a podcast while driving or cooking. You can pay half of your attention to these things and still get something out of it. But you can not be half-ass about reading. Words are boring and harder to follow, so if you want to get something out of it, you have to fully concentrate. You have to use your imagination and be very mindful about it. Thats why I chose this format. I want my readers to participate with me, to actively think while reading my stuffs. And I want to be surrounded by the type of people who enjoy that activity. So if you are reading this, you are exactly who I want to be here. Thank you a lot, and I wish yor with lots of growth and good challenges. We will see each other soon in 2025 \ud83d\udc9a Deciding what to write next??? \"Let's stay Connected\" To wrap things up, I truly believe that expanding network can open up amazing opportunities both personally and professionally. If you're interested in connecting, feel free to reach out and introduce yourself. I look forward to the possibility of building new connections and friends. Twitter: https://x.com/harry_phan06 Email: phanhoangvinhhien@gmail.com Telegram: @har20123 Facebook: https://www.facebook.com/Harrypy0611/ Last but not least, If you find my blog helpful you all can always support me by sponsoring me! My Sui address(\ud83e\udd23): 0x80d6241496f68b205dee09025b156ee6f6a944d88a5238cdf05d148a05bf399a","title":"Welcome to Harry's Home"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Individial%20articles%20/00_How%20to%20use%20MCP/","text":"intro Sui MCP toolkit https://github.com/Jordan-Mysten/sui-mcp ( Not official, but there's one made by @jordangens from Mysten Labs) Vibe code with Claude Code and Suiware MCP All that needed is to add Suiware MCP to Claude Desktop MCP config and check that the Suiware MCP is connected: https://www.npmjs.com/package/@suiware/mcp With Claude Code: claude -p \"get my balances and address\" --mcp-config packages/mcp/claude_config Sui Agent Kit with Navi https://github.com/ParaDevsAI/Sui-Agent-Kit-Navi/","title":"intro Sui MCP toolkit"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Individial%20articles%20/00_How%20to%20use%20MCP/#intro-sui-mcp-toolkit","text":"https://github.com/Jordan-Mysten/sui-mcp ( Not official, but there's one made by @jordangens from Mysten Labs)","title":"intro Sui MCP toolkit"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Individial%20articles%20/00_How%20to%20use%20MCP/#vibe-code-with-claude-code-and-suiware-mcp","text":"All that needed is to add Suiware MCP to Claude Desktop MCP config and check that the Suiware MCP is connected: https://www.npmjs.com/package/@suiware/mcp With Claude Code: claude -p \"get my balances and address\" --mcp-config packages/mcp/claude_config","title":"Vibe code with Claude Code and Suiware MCP"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Individial%20articles%20/00_How%20to%20use%20MCP/#sui-agent-kit-with-navi","text":"https://github.com/ParaDevsAI/Sui-Agent-Kit-Navi/","title":"Sui Agent Kit with Navi"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Individial%20articles%20/Solidity-to-move/","text":"S\u1ef1 kh\u00e1c bi\u1ec7t v\u1ec1 syntax v\u00e0 concept khi chuy\u1ec3n t\u1eeb Solidity sang Move Nh\u1eefng b\u1ea1n quen code b\u1eb1ng Solidity c\u1ea7n \u0111\u1ec3 \u00fd m\u1ed9t v\u00e0i kh\u00e1c bi\u1ec7t v\u1ec1 syntax v\u00e0 concept khi chuy\u1ec3n sang Move. D\u00f9 c\u1ea3 hai \u0111\u1ec1u l\u00e0 ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh cho smart contract, nh\u01b0ng Move v\u00e0 Solidity kh\u00e1c nhau kh\u00e1 r\u00f5 v\u1ec1 tri\u1ebft l\u00fd thi\u1ebft k\u1ebf (design philosophy) v\u00e0 c\u00e1ch tri\u1ec3n khai (implementation details) N\u1ebfu dev smart contract b\u1eb1ng Solidity, th\u00ec ch\u1eafc c\u0169ng \u0111\u00e3 th\u00e2n thu\u1ed9c v\u1edbi m\u00f4 h\u00ecnh account-based c\u1ee7a Ethereum v\u00e0 c\u00fa ph\u00e1p msg.sender \u0111\u1ec3 ki\u1ec3m so\u00e1t quy\u1ec1n truy c\u1eadp(access control). Nh\u01b0ng Move s\u1ebd xoay quanh v\u00e0o ph\u1ea7n resource-oriented programming (l\u1eadp tr\u00ecnh h\u01b0\u1edbng t\u00e0i nguy\u00ean) . Ri\u00eang v\u1edbi Sui Move tri\u1ec3n khai theo N\u00f3i c\u00e1ch kh\u00e1c, thay v\u00ec ngh\u0129 m\u1ecdi th\u1ee9 ch\u1ec9 l\u00e0 resource trong storage to\u00e0n c\u1ee5c (ki\u1ec3u nh\u01b0 trong c\u00e1c chain kh\u00e1c d\u00f9ng Move), th\u00ec Sui \u0111\u1ea9y m\u1ecdi th\u1ee9 l\u00ean m\u1ed9t level l\u00e0 object c\u00f3 ch\u1ee7 s\u1edf h\u1eefu r\u00f5 r\u00e0ng. \u0110\u1ec3 hi\u1ec3u r\u00f5 nh\u1eefng \u0111i\u1ec3m kh\u00e1c bi\u1ec7t n\u00e0y th\u00ec m\u00ecnh s\u1ebd quay l\u1ea1i c\u00e1c kh\u00e1i ni\u1ec7m quen thu\u1ed9c t\u1eeb Solidity \u0111\u1ec3 nh\u00ecn ch\u00fang qua POV c\u1ee7a Sui Move nh\u00e9. Trong Solidity, m\u1ed7i smart contract khi \u0111\u01b0\u1ee3c deploy l\u00ean m\u1ed9t \u0111\u1ecba ch\u1ec9 (address) c\u1ee5 th\u1ec3 th\u00ec s\u1ebd c\u00f3 storage ri\u00eang bi\u1ec7t . V\u00ed d\u1ee5, m\u1ed9t contract ERC-20 c\u00f3 th\u1ec3 khai b\u00e1o bi\u1ebfn tr\u1ea1ng th\u00e1i nh\u01b0 sau: mapping(address => uint256) public balances; Mapping n\u00e0y s\u1ebd l\u01b0u s\u1ed1 d\u01b0 (token balance) c\u1ee7a t\u1eebng \u0111\u1ecba ch\u1ec9. V\u00e0 t\u1ea5t c\u1ea3 d\u1eef li\u1ec7u \u0111\u00f3 \u0111\u01b0\u1ee3c l\u01b0u b\u00ean trong storage c\u1ee7a ch\u00ednh contract, t\u1ea1i \u0111\u1ecba ch\u1ec9 m\u00e0 n\u00f3 \u0111\u01b0\u1ee3c deploy. C\u1ea5u tr\u00fac global state c\u1ee7a Ethereum v\u1ec1 c\u01a1 b\u1ea3n l\u00e0 m\u1ed9t b\u1ea3n \u0111\u1ed3 t\u1eeb contract address \u2192 storage data. V\u00ed d\u1ee5 nh\u01b0 khi Alice g\u1eedi token cho Bob, contract s\u1ebd th\u1ef1c hi\u1ec7n 2 b\u01b0\u1edbc: Gi\u1ea3m s\u1ed1 d\u01b0 c\u1ee7a Alice T\u0103ng s\u1ed1 d\u01b0 c\u1ee7a Bob V\u1eady Sui Move l\u00e0m \u0111i\u1ec1u kh\u00e1c bi\u1ec7t nh\u01b0 th\u1ebf n\u00e0o? Nh\u01b0 m\u00ecnh \u0111\u1ec1 c\u1eadp th\u00ec Sui s\u1eed d\u1ee5ng m\u1ed9t phi\u00ean b\u1ea3n kh\u00e1c c\u1ee7a Move, theo h\u01b0\u1edbng object-centric, ngh\u0129a l\u00e0 m\u1ecdi th\u1ee9 xoay quanh object. Khi m\u1ed9t transaction ch\u1ea1y tr\u00ean Sui, n\u00f3 ph\u1ea3i khai b\u00e1o r\u00f5 nh\u1eefng object n\u00e0o s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ecdc (read) ho\u1eb7c ch\u1ec9nh s\u1eeda (mutate). C\u00e1c object n\u00e0y \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o nh\u01b0 input cho function c\u1ee7a transaction. N\u1ebfu trong qu\u00e1 tr\u00ecnh th\u1ef1c thi c\u00f3 t\u1ea1o th\u00eam object m\u1edbi, th\u00ec khi transaction k\u1ebft th\u00fac, c\u00e1c object n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c th\u00eam v\u00e0o global state c\u1ee7a Sui, m\u1ed7i c\u00e1i \u0111\u1ec1u c\u00f3 ch\u1ee7 s\u1edf h\u1eefu (owner) ho\u1eb7c ki\u1ec3u s\u1edf h\u1eefu r\u00f5 r\u00e0ng nh\u01b0 Owned, Shared, Immutable hay Warraped. \u0110\u1ec3 d\u1ec5 h\u00ecnh dung m\u00f4 h\u00ecnh object-centric c\u1ee7a Sui, h\u00e3y xem c\u00e1ch coin balances \u0111\u01b0\u1ee3c qu\u1ea3n l\u00fd. Trong standard implementation c\u1ee7a Sui, kh\u00f4ng h\u1ec1 t\u1ed3n t\u1ea1i m\u1ed9t bi\u1ebfn balance duy nh\u1ea5t n\u1eb1m trong m\u1ed9t account hay contract nh\u01b0 tr\u00ean Ethereum. Thay v\u00e0o \u0111\u00f3, m\u1ed7i coin balance l\u00e0 m\u1ed9t object ri\u00eang bi\u1ec7t. V\u00ed d\u1ee5: n\u1ebfu Alice c\u00f3 10 X token, th\u00ec c\u00f4 \u1ea5y s\u1ebd s\u1edf h\u1eefu m\u1ed9t object \u0111\u1ea1i di\u1ec7n cho 10 X trong Sui state. Khi Alice mu\u1ed1n g\u1eedi 5 X cho Bob, transaction s\u1ebd di chuy\u1ec3n m\u1ed9t ph\u1ea7n c\u1ee7a object n\u00e0y sang cho Bob c\u00f3 th\u1ec3 l\u00e0 t\u00e1ch object 10 X ra th\u00e0nh hai object: m\u1ed9t object 5 X chuy\u1ec3n cho Bob, v\u00e0 m\u1ed9t object 5 X c\u00f2n l\u1ea1i Alice gi\u1eef. Sau transaction, Bob s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c **m\u1ed9t coin object m\u1edbi tr\u1ecb gi\u00e1 5 X**, v\u00e0 object n\u00e0y s\u1ebd c\u00f3 ch\u1ee7 s\u1edf h\u1eefu l\u00e0 **\u0111\u1ecba ch\u1ec9 c\u1ee7a Bob.**","title":"S\u1ef1 kh\u00e1c bi\u1ec7t v\u1ec1 syntax v\u00e0 concept khi chuy\u1ec3n t\u1eeb Solidity sang Move"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Individial%20articles%20/Solidity-to-move/#su-khac-biet-ve-syntax-va-concept-khi-chuyen-tu-solidity-sang-move","text":"Nh\u1eefng b\u1ea1n quen code b\u1eb1ng Solidity c\u1ea7n \u0111\u1ec3 \u00fd m\u1ed9t v\u00e0i kh\u00e1c bi\u1ec7t v\u1ec1 syntax v\u00e0 concept khi chuy\u1ec3n sang Move. D\u00f9 c\u1ea3 hai \u0111\u1ec1u l\u00e0 ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh cho smart contract, nh\u01b0ng Move v\u00e0 Solidity kh\u00e1c nhau kh\u00e1 r\u00f5 v\u1ec1 tri\u1ebft l\u00fd thi\u1ebft k\u1ebf (design philosophy) v\u00e0 c\u00e1ch tri\u1ec3n khai (implementation details) N\u1ebfu dev smart contract b\u1eb1ng Solidity, th\u00ec ch\u1eafc c\u0169ng \u0111\u00e3 th\u00e2n thu\u1ed9c v\u1edbi m\u00f4 h\u00ecnh account-based c\u1ee7a Ethereum v\u00e0 c\u00fa ph\u00e1p msg.sender \u0111\u1ec3 ki\u1ec3m so\u00e1t quy\u1ec1n truy c\u1eadp(access control). Nh\u01b0ng Move s\u1ebd xoay quanh v\u00e0o ph\u1ea7n resource-oriented programming (l\u1eadp tr\u00ecnh h\u01b0\u1edbng t\u00e0i nguy\u00ean) . Ri\u00eang v\u1edbi Sui Move tri\u1ec3n khai theo N\u00f3i c\u00e1ch kh\u00e1c, thay v\u00ec ngh\u0129 m\u1ecdi th\u1ee9 ch\u1ec9 l\u00e0 resource trong storage to\u00e0n c\u1ee5c (ki\u1ec3u nh\u01b0 trong c\u00e1c chain kh\u00e1c d\u00f9ng Move), th\u00ec Sui \u0111\u1ea9y m\u1ecdi th\u1ee9 l\u00ean m\u1ed9t level l\u00e0 object c\u00f3 ch\u1ee7 s\u1edf h\u1eefu r\u00f5 r\u00e0ng. \u0110\u1ec3 hi\u1ec3u r\u00f5 nh\u1eefng \u0111i\u1ec3m kh\u00e1c bi\u1ec7t n\u00e0y th\u00ec m\u00ecnh s\u1ebd quay l\u1ea1i c\u00e1c kh\u00e1i ni\u1ec7m quen thu\u1ed9c t\u1eeb Solidity \u0111\u1ec3 nh\u00ecn ch\u00fang qua POV c\u1ee7a Sui Move nh\u00e9. Trong Solidity, m\u1ed7i smart contract khi \u0111\u01b0\u1ee3c deploy l\u00ean m\u1ed9t \u0111\u1ecba ch\u1ec9 (address) c\u1ee5 th\u1ec3 th\u00ec s\u1ebd c\u00f3 storage ri\u00eang bi\u1ec7t . V\u00ed d\u1ee5, m\u1ed9t contract ERC-20 c\u00f3 th\u1ec3 khai b\u00e1o bi\u1ebfn tr\u1ea1ng th\u00e1i nh\u01b0 sau: mapping(address => uint256) public balances; Mapping n\u00e0y s\u1ebd l\u01b0u s\u1ed1 d\u01b0 (token balance) c\u1ee7a t\u1eebng \u0111\u1ecba ch\u1ec9. V\u00e0 t\u1ea5t c\u1ea3 d\u1eef li\u1ec7u \u0111\u00f3 \u0111\u01b0\u1ee3c l\u01b0u b\u00ean trong storage c\u1ee7a ch\u00ednh contract, t\u1ea1i \u0111\u1ecba ch\u1ec9 m\u00e0 n\u00f3 \u0111\u01b0\u1ee3c deploy. C\u1ea5u tr\u00fac global state c\u1ee7a Ethereum v\u1ec1 c\u01a1 b\u1ea3n l\u00e0 m\u1ed9t b\u1ea3n \u0111\u1ed3 t\u1eeb contract address \u2192 storage data. V\u00ed d\u1ee5 nh\u01b0 khi Alice g\u1eedi token cho Bob, contract s\u1ebd th\u1ef1c hi\u1ec7n 2 b\u01b0\u1edbc: Gi\u1ea3m s\u1ed1 d\u01b0 c\u1ee7a Alice T\u0103ng s\u1ed1 d\u01b0 c\u1ee7a Bob V\u1eady Sui Move l\u00e0m \u0111i\u1ec1u kh\u00e1c bi\u1ec7t nh\u01b0 th\u1ebf n\u00e0o? Nh\u01b0 m\u00ecnh \u0111\u1ec1 c\u1eadp th\u00ec Sui s\u1eed d\u1ee5ng m\u1ed9t phi\u00ean b\u1ea3n kh\u00e1c c\u1ee7a Move, theo h\u01b0\u1edbng object-centric, ngh\u0129a l\u00e0 m\u1ecdi th\u1ee9 xoay quanh object. Khi m\u1ed9t transaction ch\u1ea1y tr\u00ean Sui, n\u00f3 ph\u1ea3i khai b\u00e1o r\u00f5 nh\u1eefng object n\u00e0o s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ecdc (read) ho\u1eb7c ch\u1ec9nh s\u1eeda (mutate). C\u00e1c object n\u00e0y \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o nh\u01b0 input cho function c\u1ee7a transaction. N\u1ebfu trong qu\u00e1 tr\u00ecnh th\u1ef1c thi c\u00f3 t\u1ea1o th\u00eam object m\u1edbi, th\u00ec khi transaction k\u1ebft th\u00fac, c\u00e1c object n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c th\u00eam v\u00e0o global state c\u1ee7a Sui, m\u1ed7i c\u00e1i \u0111\u1ec1u c\u00f3 ch\u1ee7 s\u1edf h\u1eefu (owner) ho\u1eb7c ki\u1ec3u s\u1edf h\u1eefu r\u00f5 r\u00e0ng nh\u01b0 Owned, Shared, Immutable hay Warraped. \u0110\u1ec3 d\u1ec5 h\u00ecnh dung m\u00f4 h\u00ecnh object-centric c\u1ee7a Sui, h\u00e3y xem c\u00e1ch coin balances \u0111\u01b0\u1ee3c qu\u1ea3n l\u00fd. Trong standard implementation c\u1ee7a Sui, kh\u00f4ng h\u1ec1 t\u1ed3n t\u1ea1i m\u1ed9t bi\u1ebfn balance duy nh\u1ea5t n\u1eb1m trong m\u1ed9t account hay contract nh\u01b0 tr\u00ean Ethereum. Thay v\u00e0o \u0111\u00f3, m\u1ed7i coin balance l\u00e0 m\u1ed9t object ri\u00eang bi\u1ec7t. V\u00ed d\u1ee5: n\u1ebfu Alice c\u00f3 10 X token, th\u00ec c\u00f4 \u1ea5y s\u1ebd s\u1edf h\u1eefu m\u1ed9t object \u0111\u1ea1i di\u1ec7n cho 10 X trong Sui state. Khi Alice mu\u1ed1n g\u1eedi 5 X cho Bob, transaction s\u1ebd di chuy\u1ec3n m\u1ed9t ph\u1ea7n c\u1ee7a object n\u00e0y sang cho Bob c\u00f3 th\u1ec3 l\u00e0 t\u00e1ch object 10 X ra th\u00e0nh hai object: m\u1ed9t object 5 X chuy\u1ec3n cho Bob, v\u00e0 m\u1ed9t object 5 X c\u00f2n l\u1ea1i Alice gi\u1eef. Sau transaction, Bob s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c **m\u1ed9t coin object m\u1edbi tr\u1ecb gi\u00e1 5 X**, v\u00e0 object n\u00e0y s\u1ebd c\u00f3 ch\u1ee7 s\u1edf h\u1eefu l\u00e0 **\u0111\u1ecba ch\u1ec9 c\u1ee7a Bob.**","title":"S\u1ef1 kh\u00e1c bi\u1ec7t v\u1ec1 syntax v\u00e0 concept khi chuy\u1ec3n t\u1eeb Solidity sang Move"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Individial%20articles%20/Suiup%20tool%3A%20solve%20version%20management%20and%20user%20experience%20issues/","text":"What is SuiUp? suiup is a tool for managing binary files related to Sui blockchain, but the current version has deficiencies in version update prompts, error message processing, and nightly version switching. This article will detail solutions to these issues, aiming to improve the reliability and user-friendliness of the tool. Installation From script: curl -sSfL https://raw.githubusercontent.com/Mystenlabs/suiup/main/install.sh | sh Quick Start Install sui -- this will install the latest available testnet release suiup install sui@testnet Install walrus suiup install walrus -y Install mvr (Move Registry CLI) suiup install mvr List available binaries to install suiup list Github: https://github.com/mystenLabs/suiup","title":"What is SuiUp?"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Individial%20articles%20/Suiup%20tool%3A%20solve%20version%20management%20and%20user%20experience%20issues/#what-is-suiup","text":"suiup is a tool for managing binary files related to Sui blockchain, but the current version has deficiencies in version update prompts, error message processing, and nightly version switching. This article will detail solutions to these issues, aiming to improve the reliability and user-friendliness of the tool.","title":"What is SuiUp?"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Individial%20articles%20/Suiup%20tool%3A%20solve%20version%20management%20and%20user%20experience%20issues/#installation","text":"From script: curl -sSfL https://raw.githubusercontent.com/Mystenlabs/suiup/main/install.sh | sh","title":"Installation"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Individial%20articles%20/Suiup%20tool%3A%20solve%20version%20management%20and%20user%20experience%20issues/#quick-start","text":"Install sui -- this will install the latest available testnet release suiup install sui@testnet Install walrus suiup install walrus -y Install mvr (Move Registry CLI) suiup install mvr List available binaries to install suiup list Github: https://github.com/mystenLabs/suiup","title":"Quick Start"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_1/","text":"title: Move 101 \u2013 Bu\u1ed5i 1: Gi\u1edbi thi\u1ec7u Sui Blockchain v\u00e0 Move summary: Move 101 \u2013 Bu\u1ed5i 1: Gi\u1edbi thi\u1ec7u Sui Blockchain v\u00e0 Move - Harry Phan date: 2025-07-12 some_url: Move 101 \u2013 Bu\u1ed5i 1: Gi\u1edbi thi\u1ec7u Sui Blockchain v\u00e0 Move Link Luma: https://lu.ma/1ybrbfcf B\u00e0i vi\u1ebft n\u00e0y \u0111\u1ec3 recap l\u1ea1i event h\u00f4m Saturday, July 12 . N\u1ebfu Blockchain l\u00e0 m\u1ed9t c\u0103n nh\u00e0 ? H\u00ecnh dung blockchain nh\u01b0 m\u1ed9t c\u0103n nh\u00e0. Trong nh\u00e0 \u0111\u00f3 c\u00f3 nhi\u1ec1u ph\u00f2ng: A, B, C, D\u2026 nh\u01b0ng v\u1ea5n \u0111\u1ec1 l\u00e0 m\u1ed7i l\u1ea7n ch\u1ec9 \u0111\u01b0\u1ee3c 1 ng\u01b0\u1eddi b\u01b0\u1edbc v\u00f4 nh\u00e0. Ng\u01b0\u1eddi \u0111\u00f3 v\u00f4 r\u1ed3i th\u00ec ng\u01b0\u1eddi kh\u00e1c ph\u1ea3i x\u1ebfp h\u00e0ng ch\u1edd \u0111\u1ec3 x\u1eed l\u00fd tu\u1ea7n t\u1ef1 t\u1eebng ng\u01b0\u1eddi m\u1ed9t. \u0110\u00f3 l\u00e0 ki\u1ec3u sequential processing c\u1ee7a blockchain truy\u1ec1n th\u1ed1ng. M\u1ecdi ng\u01b0\u1eddi th\u1ea5y r\u00f5 v\u1ea5n \u0111\u1ec1 r\u1ed3i \u0111\u00fang kh\u00f4ng? V\u1eady gi\u1ea3 s\u1eed t\u1ea1i sao kh\u00f4ng chia c\u0103n nh\u00e0 ra th\u00e0nh nh\u1eefng ph\u00f2ng \u0111\u1ed9c l\u1eadp, \u0111\u1ec3 ng\u01b0\u1eddi kh\u00e1c c\u00f3 th\u1ec3 v\u00e0o c\u00e1c ph\u00f2ng song song (parallel) m\u00e0 kh\u00f4ng \u0111\u1ee5ng nhau? Thay v\u00ec coi c\u0103n nh\u00e0 l\u00e0 m\u1ed9t kh\u1ed1i th\u1ed1ng nh\u1ea5t, m\u00ecnh chia ra th\u00e0nh t\u1eebng ph\u00f2ng \u0111\u1ed9c l\u1eadp th\u00ec m\u1ed7i ph\u00f2ng l\u00e0 m\u1ed9t object ri\u00eang bi\u1ec7t. B\u1ea1n c\u1ea7n v\u00e0o ph\u00f2ng A, m\u00ecnh c\u1ea7n v\u00e0o ph\u00f2ng D \u2192 t\u1ee5i m\u00ecnh c\u00f9ng v\u00e0o x\u1eed l\u00fd song song \u0110\u00e2y ch\u00ednh l\u00e0 core idea c\u1ee7a Sui: Parallel Execution via Object-centric State Management. V\u1eady Sui l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u \u0111\u00f3 nh\u01b0 th\u1ebf n\u00e0o? Sui scale theo chi\u1ec1u ngang (horizontal) \u0111\u1ec3 \u0111\u00e1p \u1ee9ng nhu c\u1ea7u cao c\u1ee7a m\u1ea1ng. Khi c\u1ea7n, validators c\u00f3 th\u1ec3 th\u00eam compute power \u0111\u1ec3 x\u1eed l\u00fd nhi\u1ec1u giao d\u1ecbch h\u01a1n. Ngo\u00e0i ra th\u00ec Gas fee tr\u00ean Sui v\u1eabn th\u1ea5p v\u00e0 \u1ed5n \u0111\u1ecbnh d\u00f9 traffic t\u0103ng cao, nh\u1edd v\u00e0o tokenomics thi\u1ebft k\u1ebf h\u1ee3p l\u00fd. Do Validators \u0111\u01b0\u1ee3c incentivized b\u1eb1ng vi\u1ec7c x\u1eed l\u00fd nhi\u1ec1u tx h\u01a1n ch\u1ee9 kh\u00f4ng ph\u1ea3i t\u0103ng gas fee. B\u00ean c\u1ea1nh \u0111\u00f3 Kh\u1ea3 n\u0103ng scale c\u1ee7a Sui kh\u00f4ng ch\u1ec9 d\u1eebng \u1edf transaction processing. Ph\u1ea7n storage c\u0169ng r\u1ebb v\u00e0 c\u00f3 th\u1ec3 scale theo chi\u1ec1u ngang(horizontally scalable) . N\u00ean devs c\u00f3 th\u1ec3 t\u1ea1o ra c\u00e1c t\u00e0i s\u1ea3n (object) ph\u1ee9c t\u1ea1p, nhi\u1ec1u thu\u1ed9c t\u00ednh tr\u00ean on chain.","title":"Move 101 module 1"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_1/#move-101-buoi-1-gioi-thieu-sui-blockchain-va-move","text":"Link Luma: https://lu.ma/1ybrbfcf B\u00e0i vi\u1ebft n\u00e0y \u0111\u1ec3 recap l\u1ea1i event h\u00f4m Saturday, July 12 . N\u1ebfu Blockchain l\u00e0 m\u1ed9t c\u0103n nh\u00e0 ? H\u00ecnh dung blockchain nh\u01b0 m\u1ed9t c\u0103n nh\u00e0. Trong nh\u00e0 \u0111\u00f3 c\u00f3 nhi\u1ec1u ph\u00f2ng: A, B, C, D\u2026 nh\u01b0ng v\u1ea5n \u0111\u1ec1 l\u00e0 m\u1ed7i l\u1ea7n ch\u1ec9 \u0111\u01b0\u1ee3c 1 ng\u01b0\u1eddi b\u01b0\u1edbc v\u00f4 nh\u00e0. Ng\u01b0\u1eddi \u0111\u00f3 v\u00f4 r\u1ed3i th\u00ec ng\u01b0\u1eddi kh\u00e1c ph\u1ea3i x\u1ebfp h\u00e0ng ch\u1edd \u0111\u1ec3 x\u1eed l\u00fd tu\u1ea7n t\u1ef1 t\u1eebng ng\u01b0\u1eddi m\u1ed9t. \u0110\u00f3 l\u00e0 ki\u1ec3u sequential processing c\u1ee7a blockchain truy\u1ec1n th\u1ed1ng. M\u1ecdi ng\u01b0\u1eddi th\u1ea5y r\u00f5 v\u1ea5n \u0111\u1ec1 r\u1ed3i \u0111\u00fang kh\u00f4ng? V\u1eady gi\u1ea3 s\u1eed t\u1ea1i sao kh\u00f4ng chia c\u0103n nh\u00e0 ra th\u00e0nh nh\u1eefng ph\u00f2ng \u0111\u1ed9c l\u1eadp, \u0111\u1ec3 ng\u01b0\u1eddi kh\u00e1c c\u00f3 th\u1ec3 v\u00e0o c\u00e1c ph\u00f2ng song song (parallel) m\u00e0 kh\u00f4ng \u0111\u1ee5ng nhau? Thay v\u00ec coi c\u0103n nh\u00e0 l\u00e0 m\u1ed9t kh\u1ed1i th\u1ed1ng nh\u1ea5t, m\u00ecnh chia ra th\u00e0nh t\u1eebng ph\u00f2ng \u0111\u1ed9c l\u1eadp th\u00ec m\u1ed7i ph\u00f2ng l\u00e0 m\u1ed9t object ri\u00eang bi\u1ec7t. B\u1ea1n c\u1ea7n v\u00e0o ph\u00f2ng A, m\u00ecnh c\u1ea7n v\u00e0o ph\u00f2ng D \u2192 t\u1ee5i m\u00ecnh c\u00f9ng v\u00e0o x\u1eed l\u00fd song song","title":"Move 101 \u2013 Bu\u1ed5i 1: Gi\u1edbi thi\u1ec7u Sui Blockchain v\u00e0 Move"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_1/#ay-chinh-la-core-idea-cua-sui-parallel-execution-via-object-centric-state-management","text":"","title":"\u0110\u00e2y ch\u00ednh l\u00e0 core idea c\u1ee7a Sui: Parallel Execution via Object-centric State Management."},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_1/#vay-sui-lam-uoc-ieu-o-nhu-the-nao","text":"Sui scale theo chi\u1ec1u ngang (horizontal) \u0111\u1ec3 \u0111\u00e1p \u1ee9ng nhu c\u1ea7u cao c\u1ee7a m\u1ea1ng. Khi c\u1ea7n, validators c\u00f3 th\u1ec3 th\u00eam compute power \u0111\u1ec3 x\u1eed l\u00fd nhi\u1ec1u giao d\u1ecbch h\u01a1n. Ngo\u00e0i ra th\u00ec Gas fee tr\u00ean Sui v\u1eabn th\u1ea5p v\u00e0 \u1ed5n \u0111\u1ecbnh d\u00f9 traffic t\u0103ng cao, nh\u1edd v\u00e0o tokenomics thi\u1ebft k\u1ebf h\u1ee3p l\u00fd. Do Validators \u0111\u01b0\u1ee3c incentivized b\u1eb1ng vi\u1ec7c x\u1eed l\u00fd nhi\u1ec1u tx h\u01a1n ch\u1ee9 kh\u00f4ng ph\u1ea3i t\u0103ng gas fee. B\u00ean c\u1ea1nh \u0111\u00f3 Kh\u1ea3 n\u0103ng scale c\u1ee7a Sui kh\u00f4ng ch\u1ec9 d\u1eebng \u1edf transaction processing. Ph\u1ea7n storage c\u0169ng r\u1ebb v\u00e0 c\u00f3 th\u1ec3 scale theo chi\u1ec1u ngang(horizontally scalable) . N\u00ean devs c\u00f3 th\u1ec3 t\u1ea1o ra c\u00e1c t\u00e0i s\u1ea3n (object) ph\u1ee9c t\u1ea1p, nhi\u1ec1u thu\u1ed9c t\u00ednh tr\u00ean on chain.","title":"V\u1eady Sui l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u \u0111\u00f3 nh\u01b0 th\u1ebf n\u00e0o?"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_2/","text":"title: A Deep Dive into the Ethereum Virtual Machine (EVM) - Part 3 Execution Model of the EVM summary: This is a high-level overview of the execution model of the Ethereum Virtual Machine (EVM). It outlines the state(s) of the machine that changes between the exe authors: - Harry Phan date: 2025-07-19 some_url: Workshop move 101 bu\u1ed5i 2 Bu\u1ed5i workshop n\u00e0y m\u00ecnh chia s\u1ebb v\u1edbi m\u1ecdi ng\u01b0\u1eddi v\u1ec1 objects, resources tr\u00ean Sui.","title":"Move 101 module 2"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_2/#workshop-move-101-buoi-2","text":"Bu\u1ed5i workshop n\u00e0y m\u00ecnh chia s\u1ebb v\u1edbi m\u1ecdi ng\u01b0\u1eddi v\u1ec1 objects, resources tr\u00ean Sui.","title":"Workshop move 101 bu\u1ed5i 2"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_3/","text":"Advanced Smart Contract \u2013 Modules, Entry Functions & Practice link event: N\u1ed9i dung ch\u00ednh: \u200bHi\u1ec3u r\u00f5 vai tr\u00f2 v\u00e0 c\u1ea5u tr\u00fac c\u1ee7a Module trong Move \u200b* T\u00ecm hi\u1ec3u Entry Function \u2013 c\u00e1ch t\u01b0\u01a1ng t\u00e1c v\u1edbi contract th\u00f4ng qua call \u200b* T\u1ed5 ch\u1ee9c project chu\u1ea9n theo c\u1ea5u tr\u00fac Move.toml v\u00e0 sources/ \u200b* Vi\u1ebft th\u00eam c\u00e1c ch\u1ee9c n\u0103ng n\u00e2ng cao cho token v\u00e0 NFT \u0111\u00e3 h\u1ecdc 1. Review l\u1ea1i n\u1ed9i dung h\u1ecdc tu\u1ea7n tr\u01b0\u1edbc Slides xem l\u1ea1i bu\u1ed5i 2 nghe: https://x.tusky.io/Zoo9i 2. V\u1eady package l\u00e0 g\u00ec ? Theo \u0111\u1ecbnh ngh\u0129a t\u1eeb documentation: Packages are immutable. After you publish a package object on chain to a network, it lives there forever. You cannot directly change the code of an on-chain Ngh\u0129a l\u00e0 m\u1ed9t package l\u00e0 khi \u0111\u01b0\u1ee3c publish tr\u00ean Blockchain v\u00e0 \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh l\u00e0 m\u1ed9t address. Trong package c\u00f3 th\u1ec3 ch\u1ee9a m\u1ed9t ho\u1eb7c nhi\u1ec1u modules. Ri\u00eang ph\u1ea7n Package, m\u00ecnh s\u1ebd chia nh\u1ecf th\u00e0nh t\u1eebng ph\u1ea7n l\u00e0: Package Layout: C\u1ea5u tr\u00fac c\u1ee7a package Published Package: C\u00e1c package \u0111\u00e3 \u0111\u01b0\u1ee3c published b\u1ea1n c\u1ea7n l\u01b0u \u00fd Manifest Structure( Move.toml ): Config file trong sui move contract Artifact 2.1 Package Layout M\u1ed9t package s\u1ebd ch\u1ee9a nhi\u1ec1u Modules. Trong t\u1eebng modules \u0111\u00f3 bao g\u1ed3m functions, types... \u0110\u00e2y l\u00e0 v\u00ed d\u1ee5 minh ho\u1ea1 cho m\u1ed9t package layout: package HELLO_WORLD module a struct A1 fun hello_world() module b struct B1 fun hello_package() \u0110\u1ec3 t\u1ea1o package m\u1edbi, b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng l\u1ec7nh CLI Sui move new . M\u1ee5c \u0111\u00edch c\u1ee7a Move package system l\u00e0 \u0111\u1ec3 cho ph\u00e9p c\u00e1c developer c\u00f3 th\u1ec3 define d\u1ec5 d\u00e0ng n\u01a1i ch\u1ee9a c\u00e1c move code, b\u1ea1n c\u00f3 th\u1ec3 import v\u00e0 use packages \u1edf file move code kh\u00e1c. 2.2 Manifest Structure( Move.toml ): Config file trong sui move contract M\u1ed9t th\u01b0 m\u1ee5c source move package s\u1ebd lu\u00f4n c\u00f3 Move.toml l\u00e0 package manifest file bao g\u1ed3m c\u00e1c metadata cho package \u0111\u00f3. File n\u00e0y v\u00f4 c\u00f9ng quan tr\u1ecdng v\u00ec n\u00f3 qu\u1ea3n l\u00fd c\u00e1c dependencies, \u0111\u1ea3m b\u1ea3o \u0111\u01b0\u1ee3c m\u00f4i tr\u01b0\u1eddng stable cho move project c\u1ee7a b\u1ea1n v\u00e0 \u0111\u1ec3 qu\u1ea3n l\u00fd project. \u0110\u00e2y l\u00e0 c\u1ea5u tr\u00fac c\u1ee7a m\u1ed9t package layout: Root c\u1ee7a project l\u00e0 t\u00ean folder move project c\u1ee7a b\u1ea1n. Trong folder s\u1ebd ch\u1ee9a c\u00e1c files \u0111\u1ec3 ch\u1ea1y move project. Tr\u00ean h\u00ecnh b\u1ea1n \u0111\u00e3 th\u1ea5y c\u00e1c components quan tr\u1ecdng Move.toml, Move.lock v\u00e0 th\u01b0 m\u1ee5c sources. \u0110\u1ed1i v\u1edbi Move.toml v\u00e0 Move.lock ch\u1ecbu tr\u00e1ch nghi\u1ec7m trong vi\u1ec7c qu\u1ea3n l\u00fd c\u00e1c dependencies. C\u00f2n trong th\u01b0 m\u1ee5c Source l\u00e0 n\u01a1i ta th\u1ea5y c\u00e1c file module.move. C\u00e1c file n\u00e0y ch\u00ednh l\u00e0 core logic c\u1ee7a move code. Ngo\u00e0i ra, c\u00f2n c\u00f3 th\u01b0 m\u1ee5c test. \u0110\u00e2y l\u00e0 n\u01a1i \u0111\u1ec3 b\u1ea1n c\u00f3 th\u1ec3 vi\u1ebft test case cho move code c\u1ee7a b\u1ea1n \u0111\u1ea3m b\u1ea3o d\u1ef1 \u00e1n ch\u1ea1y nh\u01b0 k\u00ec v\u1ecdng v\u00e0 maintain \u0111\u01b0\u1ee3c ch\u1ea5t l\u01b0\u1ee3ng codebase. C\u1ea5u tr\u00fac \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf gi\u00fap cho c\u00e1c developer c\u00f3 th\u1ec3 qu\u1ea3n l\u00fd code d\u1ec5 h\u01a1n. Tuy nhi\u00ean \u0111\u00e2y ch\u01b0a honaf to\u00e0n l\u00e0 c\u1ea5u tr\u00fac \u0111\u1ea7y \u0111\u1ee7. N\u00f3 c\u00f2n th\u00eam doc_templates v\u00e0 examples. Your_Move_Project \u251c\u2500\u2500 Move.toml (required) \u251c\u2500\u2500 Move.lock (generated) \u251c\u2500\u2500 sources (required) \u251c\u2500\u2500 doc_templates (optional) \u251c\u2500\u2500 examples (optional, test & dev mode) \u2514\u2500\u2500 tests (optional, test mode) Move.toml file: \u0110\u00e2y l\u00e0 package manifest (m\u00ecnh kh\u00f4ng bi\u1ebft d\u1ecbch ti\u1ebfng vi\u1ec7t sao n\u00ean hi\u1ec3u nh\u01b0 package.json nh\u00e9) ch\u1ee9a c\u00e1c metadata c\u1ea7n thi\u1ebft cho package. C\u00e1c th\u00f4ng tin trong package \u0111\u00f3 bao g\u1ed3m 3. Modules trong Sui l\u00e0 g\u00ec ? \u1ede Sui Move, khi khai b\u00e1o m\u1ed9t smart contract, ta s\u1ebd s\u1eed d\u1ee5ng t\u1eeb kho\u00e1 module, gi\u1ed1ng v\u1edbi \u1edf solidity ta s\u1ebd c\u00f3 t\u1eeb contract. \u0110\u00e2y l\u00e0 syntax khi khai b\u00e1o smart contract module <package_name>::<module_name> { //module code \u1edf \u0111\u00e2y } Nh\u01b0ng m\u1ecdi ng\u01b0\u1eddi c\u00f3 th\u1ec3 set up m\u1ed9t module th\u1ebf n\u00e0y c\u0169ng \u0111\u01b0\u1ee3c: module <package_name>::<module_name>; package_name l\u00e0 t\u00ean c\u1ee7a package m\u00e0 b\u1ea1n \u0111\u00e3 t\u1ea1o. V\u00ed d\u1ee5 trong l\u1ec7nh sui move new hello_world th\u00ec package name s\u1ebd l\u00e0 hello_world . C\u00f2n module_name s\u1ebd l\u00e0 c\u00e1i t\u00ean module m\u00e0 b\u1ea1n \u0111\u00e3 t\u1ea1o trong package. \u1ede \u0111\u00e2y b\u1ea1n c\u0169ng c\u00f3 th\u1ec3 xem nh\u01b0 module l\u00e0 th\u01b0 vi\u1ec7n con trong package. T\u00ednh ch\u1ea5t \u0111\u00f3ng g\u00f3i (encapsulation) c\u1ee7a module gi\u00fap cho vi\u1ec7c ph\u00e1t tri\u1ec3n smart contract tr\u1edf n\u00ean module h\u00f3a, c\u00f3 kh\u1ea3 n\u0103ng k\u1ebft h\u1ee3p linh ho\u1ea1t, \u0111\u1ed3ng th\u1eddi n\u00e2ng cao kh\u1ea3 n\u0103ng t\u00e1i s\u1eed d\u1ee5ng m\u00e3 ngu\u1ed3n v\u00e0 t\u00ednh b\u1ea3o m\u1eadt. 3.1 T\u1eeb kho\u00e1 use - c\u00e1ch \u0111\u1ec3 import b\u1ea5t k\u1ef3 module Trong Sui move, use \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 import b\u1ea5t k\u00ec module. \u0110\u00e2y l\u00e0 c\u1ea5u tr\u00fac c\u1ee7a c\u00e1ch s\u1eed d\u1ee5ng use: use <Address/Alias>::<ModuleName>; Gi\u1ea3i th\u00edch v\u1ec1 <Address/Alias> v\u00e0 <ModuleName> : <Address/Alias> l\u00e0 nh\u1eefng \u0111\u1ecba ch\u1ec9 c\u1ee7a package c\u00f3 ch\u1ee9a nh\u1eefng module m\u00e0 ta mu\u1ed1n d\u00f9ng. Ch\u00fang ta th\u1ec3 s\u1eed d\u1ee5ng alias \u0111\u01b0\u1ee3c \u0111\u1eb7t trong Move.toml m\u00e0 \u0111\u00e3 vi\u1ebft \u1edf m\u1ee5c Package manifest. V\u00ed d\u1ee5: [addresses] sui = \"0x2\" # Tr\u01b0\u1edbc l\u00e0 suilend = \"0x0\" nh\u01b0ng gi\u1edd package \u0111\u00e3 published r\u1ed3i n\u00ean ta c\u00f3 th\u1ec3 thay th\u1ebf th\u00e0nh suilend = \"0xf95b06141ed4a174f239417323bde3f209b972f5930d8521ea38a52aff3a6ddf\" <ModuleName> \u0111\u01a1n gi\u1ea3n \u0111\u1ea1i di\u1ec7n cho t\u00ean c\u1ee7a module \u0111\u00f3. Sau \u0111\u00e2y l\u00e0 m\u1ed9t s\u1ed1 Sui modules m\u00e0 b\u1ea1n s\u1ebd th\u01b0\u1eddng s\u1eed d\u1ee5ng: # Module n\u00e0y gi\u00fap ch\u00fang ta x\u1eed l\u00fd li\u00ean quan \u0111\u1ebfn string use std::string; // https://github.com/MystenLabs/sui/blob/main/crates/sui-framework/packages/move-stdlib/sources/string.move # Module n\u00e0y s\u1ebd gi\u00fap khi ta c\u1ea7n c\u00e1c ch\u1ee9c n\u0103ng transfer object t\u1eeb m\u1ed9t account \u0111\u1ebfn account kh\u00e1c use sui::transfer; // https://github.com/MystenLabs/sui/blob/main/crates/sui-framework/packages/sui-framework/sources/transfer.move # d\u00f2ng d\u01b0\u1edbi \u0111\u00e2y gi\u00fap cho vi\u1ec7c t\u1ea1o object trong module. use sui::object; // https://github.com/MystenLabs/sui/blob/main/crates/sui-framework/packages/sui-framework/sources/object.move # \u0110\u00e2y l\u00e0 \u0111o\u1ea1n import t\u1eeb sui framework. Gi\u00fap ta trong vi\u1ec7c \u0111inh ngh\u0129a c\u00e1c th\u00f4ng tin c\u1ee7a transaction nh\u01b0 l\u00e0 \u0111\u1ecba ch\u1ec9 c\u1ee7a sender, \u0111\u1ecba ch\u1ec9 ng\u01b0\u1eddi k\u00fd ... use sui::tx_context; // https://github.com/MystenLabs/sui/blob/main/crates/sui-framework/packages/sui-framework/sources/tx_context.move B\u00ean c\u1ea1nh vi\u1ec7c import m\u1ed9t module, Move cho ph\u00e9p b\u1ea1n import c\u1ee5 th\u1ec3 \u0111\u1ed1i t\u01b0\u1ee3ng t\u1eeb module bao g\u1ed3m functions v\u00e0 types. \u0110i\u1ec1u n\u00e0y h\u1eefu \u00edch khi b\u1ea1n ch\u1ec9 mu\u1ed1n m\u1ed9t ch\u1ee9c n\u0103ng c\u1ee7a module, Gi\u1ea3m vi\u1ec7c kh\u00f4ng c\u1ea7n nh\u1eefng \u0111o\u1ea1n code kh\u00f4ng c\u1ea7n thi\u1ebft. V\u00ed d\u1ee5: // import function t\u1eeb m\u1ed9t module use sui_bootcamp::module_one::learn; // import t\u1eeb Learner Type use sui_bootcamp::module_one::Learner; Kh\u00f4ng ch\u1ec9 th\u1ebf Move cho ph\u00e9p ta import nhi\u1ec1u t\u1eeb module ho\u1eb7c package b\u1eb1ng c\u00e1ch d\u00f9ng d\u1ea5u {} : // import learn function v\u00e0 Learner type t\u1eeb module one use sui_bootcamp::module_one::{learn, Learner}; // import module v\u00e0 Learner type use sui_bootcamp::module_one::{Self, Learner}; L\u00e0m sao \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 tr\u00f9ng t\u00ean? (Name conflict) \ud83d\udc40 M\u00ecnh \u0111\u1ec3 c\u00e1c b\u1ea1n t\u00ecm c\u00e2u tr\u1ea3 l\u1eddi nh\u00e9 ho\u1eb7c th\u1ea3o lu\u1eadn trong nh\u00f3m First Movers 4. \u200bT\u00ecm hi\u1ec3u Entry Function \u2013 c\u00e1ch t\u01b0\u01a1ng t\u00e1c v\u1edbi contract th\u00f4ng qua call Tr\u01b0\u1edbc ti\u00ean b\u1ea1n c\u1ea7n hi\u1ec3u v\u1ec1 Visibility (ph\u1ea1m vi truy c\u1eadp) trong module . M\u1ed7i ph\u1ea7n t\u1eed (member) trong m\u1ed9t module \u0111\u1ec1u c\u00f3 visibility t\u1ee9c l\u00e0 m\u1ee9c \u0111\u1ed9 cho ph\u00e9p truy c\u1eadp t\u1eeb b\u00ean ngo\u00e0i hay kh\u00f4ng? Theo m\u1eb7c \u0111\u1ecbnh trong Sui move, t\u1ea5t c\u1ea3 c\u00e1c member \u0111\u1ec1u l\u00e0 private ngh\u0129a l\u00e0 anh em ch\u1ec9 \u0111\u01b0\u1ee3c d\u00f9ng trong ch\u00ednh module n\u01a1i ch\u00fang \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a \u0110\u00e2y l\u00e0 v\u00ed d\u1ee5 cho entry function: entry fun mint(ctx: &mut TxContext) { let object = HelloWorldObject { id: object::new(ctx), text: string::utf8(b\"Hello World!\") }; transfer::public_transfer(object, tx_context::sender(ctx)); } &mut TxContext ch\u00ednh l\u00e0 bi\u1ebfn tham chi\u1ebfu c\u00f3 th\u1ec3 thay \u0111\u1ed5i \u0111\u01b0\u1ee3c gi\u00fap cho vi\u1ec7c bi\u1ebft \u0111\u1ecba ch\u1ec9 sender l\u00e0 ai \u0111\u1ec3 mint \u0111\u01b0\u1ee3c contract n\u00e0y. Trong \u0111\u00f3 h\u00e0m transfer \u1edf cu\u1ed1i function kh\u00f4ng ph\u1ea3i tr\u1ea3 v\u1ec1 b\u1ea5t k\u00ec gi\u00e1 tr\u1ecb g\u00ec m\u00e0 gi\u00fap store object v\u00e0o \u0111\u1ecba ch\u1ec9 sender sau khi publish module. 4.1 S\u1ef1 kh\u00e1c bi\u1ec7t gi\u1eefa public v\u00e0 entry trong Sui Move Trong Sui Move, hai t\u1eeb kh\u00f3a public v\u00e0 entry \u0111\u1ec1u d\u00f9ng \u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a h\u00e0m c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c g\u1ecdi t\u1eeb b\u00ean ngo\u00e0i module. Nh\u01b0ng c\u00e1ch m\u00e0 ch\u00fang \u0111\u01b0\u1ee3c g\u1ecdi, v\u00e0 ai \u0111\u01b0\u1ee3c quy\u1ec1n g\u1ecdi l\u1ea1i kh\u00e1c nhau kh\u00e1 r\u00f5. Khi b\u1ea1n d\u00f9ng public fun , h\u00e0m \u0111\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c g\u1ecdi t\u1eeb b\u1ea5t k\u1ef3 \u0111\u00e2u: trong c\u00f9ng module, t\u1eeb module kh\u00e1c trong c\u00f9ng package, th\u1eadm ch\u00ed t\u1eeb module kh\u00e1c ho\u00e0n to\u00e0n n\u1ebfu b\u1ea1n import n\u00f3. \u0110\u00e2y l\u00e0 ki\u1ec3u vi\u1ebft ph\u1ed5 bi\u1ebfn nh\u1ea5t khi b\u1ea1n mu\u1ed1n chia s\u1ebb logic gi\u1eefa nhi\u1ec1u module. Nh\u01b0ng n\u00f3 c\u0169ng gi\u1ed1ng nh\u01b0 b\u1ea1n m\u1edf c\u1eeda nh\u00e0 v\u00e0 m\u1eddi m\u1ecdi ng\u01b0\u1eddi v\u00f4 :V. C\u00f2n C\u00f2n entry fun th\u00ec l\u00e0 m\u1ed9t ki\u1ec3u \u0111\u1eb7c bi\u1ec7t. H\u00e0m c\u00f3 entry ch\u1ec9 \u0111\u01b0\u1ee3c g\u1ecdi tr\u1ef1c ti\u1ebfp t\u1eeb transaction \u2014 t\u1ee9c l\u00e0 t\u1eeb m\u1ed9t Programmable Transaction Block (PTB). Frontend c\u00f3 th\u1ec3 g\u1ecdi, v\u00ed c\u00f3 th\u1ec3 g\u1ecdi. T\u1ea5t nhi\u00ean m\u1ed9t entry function v\u00e3n c\u00f3 th\u1ec3 g\u1ecdi b\u1edfi c\u00e1c Move functions kh\u00e1c trong c\u00f9ng module module a::m { entry fun foo(): u64 { 0 } fun calls_foo(): u64 { foo() } // valid! } module a::n { fun calls_m_foo(): u64 { a::m::foo() // ERROR! // ^^^^^^^^^^^ 'foo' is internal to 'a::m' } } Nh\u01b0ng trong module kh\u00e1c th\u00ec kh\u00f4ng \u0111\u01b0\u1ee3c ph\u00e9p wrap ho\u1eb7c g\u1ecdi l\u1ea1i h\u00e0m \u0111\u00f3. \u0110i\u1ec1u n\u00e0y c\u1ef1c k\u1ef3 quan tr\u1ecdng khi b\u1ea1n vi\u1ebft nh\u1eefng logic nh\u1ea1y c\u1ea3m nh\u01b0 randomness, mint NFT, ho\u1eb7c b\u1ea5t k\u1ef3 th\u1ee9 g\u00ec c\u00f3 th\u1ec3 b\u1ecb l\u1ee3i d\u1ee5ng n\u1ebfu ng\u01b0\u1eddi kh\u00e1c wrap l\u1ea1i h\u00e0m c\u1ee7a b\u1ea1n v\u00e0 th\u1eed ch\u1ea1y tr\u01b0\u1edbc. M\u1ed9t chi ti\u1ebft n\u1eefa l\u00e0 entry th\u01b0\u1eddng \u0111i chung v\u1edbi &mut TxContext Nh\u01b0ng entry kh\u00f4ng ph\u1ea3i kh\u00f4ng c\u00f3 gi\u1edbi h\u1ea1n. V\u00ec \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o an to\u00e0n cho h\u1ec7 th\u1ed1ng s\u1ebd c\u00f3 m\u1ed9t s\u1ed1 quy t\u1eafc sau. 4.2 Rule r\u00e0ng bu\u1ed9c ri\u00eang c\u1ee7a Sui \u0111\u1ed1i v\u1edbi entry Ch\u1ec9 \u0111\u01b0\u1ee3c return c\u00e1c ki\u1ec3u c\u00f3 drop ability (\u0111\u1ec3 Sui \u0111\u1ea3m b\u1ea3o kh\u00f4ng leak object ownership) Ngo\u00e0i ra, n\u1ebfu b\u1ea1n d\u00f9ng m\u1ed9t object n\u00e0o \u0111\u00f3 trong entry fun, b\u1ea1n kh\u00f4ng \u0111\u01b0\u1ee3c ph\u00e9p s\u1eed d\u1ee5ng l\u1ea1i object \u0111\u00f3 trong m\u1ed9t non-entry kh\u00e1c trong c\u00f9ng PTB. \u0110i\u1ec1u n\u00e0y gi\u00fap Sui tr\u00e1nh \u0111\u01b0\u1ee3c vi\u1ec7c c\u00f9ng m\u1ed9t object b\u1ecb x\u1eed l\u00fd trong hai context kh\u00e1c nhau. 4.3 No public entry, Only public or entry N\u1ebfu b\u1ea1n vi\u1ebft code nh\u01b0 th\u1ebf n\u00e0y: // \u274c Sai: d\u00f9ng `entry` kh\u00f4ng c\u1ea7n thi\u1ebft, v\u00ec kh\u00f4ng b\u1eaft bu\u1ed9c \u0111\u1ec3 g\u1ecdi h\u00e0m t\u1eeb transaction public entry fun do_something() { /* ... */ } // \u2705 \u0110\u00fang: d\u00f9ng `public` th\u00f4i l\u00e0 \u0111\u1ee7 \u2014 v\u1eeba g\u1ecdn, l\u1ea1i cho ph\u00e9p return gi\u00e1 tr\u1ecb public fun do_something_2(): T { /* ... */ }","title":"Advanced Smart Contract \u2013 Modules, Entry Functions &amp; Practice"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_3/#advanced-smart-contract-modules-entry-functions-practice","text":"link event:","title":"Advanced Smart Contract \u2013 Modules, Entry Functions &amp; Practice"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_3/#noi-dung-chinh","text":"\u200bHi\u1ec3u r\u00f5 vai tr\u00f2 v\u00e0 c\u1ea5u tr\u00fac c\u1ee7a Module trong Move \u200b* T\u00ecm hi\u1ec3u Entry Function \u2013 c\u00e1ch t\u01b0\u01a1ng t\u00e1c v\u1edbi contract th\u00f4ng qua call \u200b* T\u1ed5 ch\u1ee9c project chu\u1ea9n theo c\u1ea5u tr\u00fac Move.toml v\u00e0 sources/ \u200b* Vi\u1ebft th\u00eam c\u00e1c ch\u1ee9c n\u0103ng n\u00e2ng cao cho token v\u00e0 NFT \u0111\u00e3 h\u1ecdc","title":"N\u1ed9i dung ch\u00ednh:"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_3/#1-review-lai-noi-dung-hoc-tuan-truoc","text":"Slides xem l\u1ea1i bu\u1ed5i 2 nghe: https://x.tusky.io/Zoo9i","title":"1. Review l\u1ea1i n\u1ed9i dung h\u1ecdc tu\u1ea7n tr\u01b0\u1edbc"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_3/#2-vay-package-la-gi","text":"Theo \u0111\u1ecbnh ngh\u0129a t\u1eeb documentation: Packages are immutable. After you publish a package object on chain to a network, it lives there forever. You cannot directly change the code of an on-chain Ngh\u0129a l\u00e0 m\u1ed9t package l\u00e0 khi \u0111\u01b0\u1ee3c publish tr\u00ean Blockchain v\u00e0 \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh l\u00e0 m\u1ed9t address. Trong package c\u00f3 th\u1ec3 ch\u1ee9a m\u1ed9t ho\u1eb7c nhi\u1ec1u modules. Ri\u00eang ph\u1ea7n Package, m\u00ecnh s\u1ebd chia nh\u1ecf th\u00e0nh t\u1eebng ph\u1ea7n l\u00e0: Package Layout: C\u1ea5u tr\u00fac c\u1ee7a package Published Package: C\u00e1c package \u0111\u00e3 \u0111\u01b0\u1ee3c published b\u1ea1n c\u1ea7n l\u01b0u \u00fd Manifest Structure( Move.toml ): Config file trong sui move contract Artifact","title":"2. V\u1eady package l\u00e0 g\u00ec ?"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_3/#21-package-layout","text":"M\u1ed9t package s\u1ebd ch\u1ee9a nhi\u1ec1u Modules. Trong t\u1eebng modules \u0111\u00f3 bao g\u1ed3m functions, types... \u0110\u00e2y l\u00e0 v\u00ed d\u1ee5 minh ho\u1ea1 cho m\u1ed9t package layout: package HELLO_WORLD module a struct A1 fun hello_world() module b struct B1 fun hello_package() \u0110\u1ec3 t\u1ea1o package m\u1edbi, b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng l\u1ec7nh CLI Sui move new . M\u1ee5c \u0111\u00edch c\u1ee7a Move package system l\u00e0 \u0111\u1ec3 cho ph\u00e9p c\u00e1c developer c\u00f3 th\u1ec3 define d\u1ec5 d\u00e0ng n\u01a1i ch\u1ee9a c\u00e1c move code, b\u1ea1n c\u00f3 th\u1ec3 import v\u00e0 use packages \u1edf file move code kh\u00e1c.","title":"2.1 Package Layout"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_3/#22-manifest-structure-movetoml-config-file-trong-sui-move-contract","text":"M\u1ed9t th\u01b0 m\u1ee5c source move package s\u1ebd lu\u00f4n c\u00f3 Move.toml l\u00e0 package manifest file bao g\u1ed3m c\u00e1c metadata cho package \u0111\u00f3. File n\u00e0y v\u00f4 c\u00f9ng quan tr\u1ecdng v\u00ec n\u00f3 qu\u1ea3n l\u00fd c\u00e1c dependencies, \u0111\u1ea3m b\u1ea3o \u0111\u01b0\u1ee3c m\u00f4i tr\u01b0\u1eddng stable cho move project c\u1ee7a b\u1ea1n v\u00e0 \u0111\u1ec3 qu\u1ea3n l\u00fd project. \u0110\u00e2y l\u00e0 c\u1ea5u tr\u00fac c\u1ee7a m\u1ed9t package layout: Root c\u1ee7a project l\u00e0 t\u00ean folder move project c\u1ee7a b\u1ea1n. Trong folder s\u1ebd ch\u1ee9a c\u00e1c files \u0111\u1ec3 ch\u1ea1y move project. Tr\u00ean h\u00ecnh b\u1ea1n \u0111\u00e3 th\u1ea5y c\u00e1c components quan tr\u1ecdng Move.toml, Move.lock v\u00e0 th\u01b0 m\u1ee5c sources. \u0110\u1ed1i v\u1edbi Move.toml v\u00e0 Move.lock ch\u1ecbu tr\u00e1ch nghi\u1ec7m trong vi\u1ec7c qu\u1ea3n l\u00fd c\u00e1c dependencies. C\u00f2n trong th\u01b0 m\u1ee5c Source l\u00e0 n\u01a1i ta th\u1ea5y c\u00e1c file module.move. C\u00e1c file n\u00e0y ch\u00ednh l\u00e0 core logic c\u1ee7a move code. Ngo\u00e0i ra, c\u00f2n c\u00f3 th\u01b0 m\u1ee5c test. \u0110\u00e2y l\u00e0 n\u01a1i \u0111\u1ec3 b\u1ea1n c\u00f3 th\u1ec3 vi\u1ebft test case cho move code c\u1ee7a b\u1ea1n \u0111\u1ea3m b\u1ea3o d\u1ef1 \u00e1n ch\u1ea1y nh\u01b0 k\u00ec v\u1ecdng v\u00e0 maintain \u0111\u01b0\u1ee3c ch\u1ea5t l\u01b0\u1ee3ng codebase. C\u1ea5u tr\u00fac \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf gi\u00fap cho c\u00e1c developer c\u00f3 th\u1ec3 qu\u1ea3n l\u00fd code d\u1ec5 h\u01a1n. Tuy nhi\u00ean \u0111\u00e2y ch\u01b0a honaf to\u00e0n l\u00e0 c\u1ea5u tr\u00fac \u0111\u1ea7y \u0111\u1ee7. N\u00f3 c\u00f2n th\u00eam doc_templates v\u00e0 examples. Your_Move_Project \u251c\u2500\u2500 Move.toml (required) \u251c\u2500\u2500 Move.lock (generated) \u251c\u2500\u2500 sources (required) \u251c\u2500\u2500 doc_templates (optional) \u251c\u2500\u2500 examples (optional, test & dev mode) \u2514\u2500\u2500 tests (optional, test mode) Move.toml file: \u0110\u00e2y l\u00e0 package manifest (m\u00ecnh kh\u00f4ng bi\u1ebft d\u1ecbch ti\u1ebfng vi\u1ec7t sao n\u00ean hi\u1ec3u nh\u01b0 package.json nh\u00e9) ch\u1ee9a c\u00e1c metadata c\u1ea7n thi\u1ebft cho package. C\u00e1c th\u00f4ng tin trong package \u0111\u00f3 bao g\u1ed3m","title":"2.2 Manifest Structure( Move.toml ): Config file trong sui move contract"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_3/#3-modules-trong-sui-la-gi","text":"\u1ede Sui Move, khi khai b\u00e1o m\u1ed9t smart contract, ta s\u1ebd s\u1eed d\u1ee5ng t\u1eeb kho\u00e1 module, gi\u1ed1ng v\u1edbi \u1edf solidity ta s\u1ebd c\u00f3 t\u1eeb contract. \u0110\u00e2y l\u00e0 syntax khi khai b\u00e1o smart contract module <package_name>::<module_name> { //module code \u1edf \u0111\u00e2y } Nh\u01b0ng m\u1ecdi ng\u01b0\u1eddi c\u00f3 th\u1ec3 set up m\u1ed9t module th\u1ebf n\u00e0y c\u0169ng \u0111\u01b0\u1ee3c: module <package_name>::<module_name>; package_name l\u00e0 t\u00ean c\u1ee7a package m\u00e0 b\u1ea1n \u0111\u00e3 t\u1ea1o. V\u00ed d\u1ee5 trong l\u1ec7nh sui move new hello_world th\u00ec package name s\u1ebd l\u00e0 hello_world . C\u00f2n module_name s\u1ebd l\u00e0 c\u00e1i t\u00ean module m\u00e0 b\u1ea1n \u0111\u00e3 t\u1ea1o trong package. \u1ede \u0111\u00e2y b\u1ea1n c\u0169ng c\u00f3 th\u1ec3 xem nh\u01b0 module l\u00e0 th\u01b0 vi\u1ec7n con trong package. T\u00ednh ch\u1ea5t \u0111\u00f3ng g\u00f3i (encapsulation) c\u1ee7a module gi\u00fap cho vi\u1ec7c ph\u00e1t tri\u1ec3n smart contract tr\u1edf n\u00ean module h\u00f3a, c\u00f3 kh\u1ea3 n\u0103ng k\u1ebft h\u1ee3p linh ho\u1ea1t, \u0111\u1ed3ng th\u1eddi n\u00e2ng cao kh\u1ea3 n\u0103ng t\u00e1i s\u1eed d\u1ee5ng m\u00e3 ngu\u1ed3n v\u00e0 t\u00ednh b\u1ea3o m\u1eadt.","title":"3. Modules trong Sui l\u00e0 g\u00ec ?"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_3/#31-tu-khoa-use-cach-e-import-bat-ky-module","text":"Trong Sui move, use \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 import b\u1ea5t k\u00ec module. \u0110\u00e2y l\u00e0 c\u1ea5u tr\u00fac c\u1ee7a c\u00e1ch s\u1eed d\u1ee5ng use: use <Address/Alias>::<ModuleName>; Gi\u1ea3i th\u00edch v\u1ec1 <Address/Alias> v\u00e0 <ModuleName> : <Address/Alias> l\u00e0 nh\u1eefng \u0111\u1ecba ch\u1ec9 c\u1ee7a package c\u00f3 ch\u1ee9a nh\u1eefng module m\u00e0 ta mu\u1ed1n d\u00f9ng. Ch\u00fang ta th\u1ec3 s\u1eed d\u1ee5ng alias \u0111\u01b0\u1ee3c \u0111\u1eb7t trong Move.toml m\u00e0 \u0111\u00e3 vi\u1ebft \u1edf m\u1ee5c Package manifest. V\u00ed d\u1ee5: [addresses] sui = \"0x2\" # Tr\u01b0\u1edbc l\u00e0 suilend = \"0x0\" nh\u01b0ng gi\u1edd package \u0111\u00e3 published r\u1ed3i n\u00ean ta c\u00f3 th\u1ec3 thay th\u1ebf th\u00e0nh suilend = \"0xf95b06141ed4a174f239417323bde3f209b972f5930d8521ea38a52aff3a6ddf\" <ModuleName> \u0111\u01a1n gi\u1ea3n \u0111\u1ea1i di\u1ec7n cho t\u00ean c\u1ee7a module \u0111\u00f3. Sau \u0111\u00e2y l\u00e0 m\u1ed9t s\u1ed1 Sui modules m\u00e0 b\u1ea1n s\u1ebd th\u01b0\u1eddng s\u1eed d\u1ee5ng: # Module n\u00e0y gi\u00fap ch\u00fang ta x\u1eed l\u00fd li\u00ean quan \u0111\u1ebfn string use std::string; // https://github.com/MystenLabs/sui/blob/main/crates/sui-framework/packages/move-stdlib/sources/string.move # Module n\u00e0y s\u1ebd gi\u00fap khi ta c\u1ea7n c\u00e1c ch\u1ee9c n\u0103ng transfer object t\u1eeb m\u1ed9t account \u0111\u1ebfn account kh\u00e1c use sui::transfer; // https://github.com/MystenLabs/sui/blob/main/crates/sui-framework/packages/sui-framework/sources/transfer.move # d\u00f2ng d\u01b0\u1edbi \u0111\u00e2y gi\u00fap cho vi\u1ec7c t\u1ea1o object trong module. use sui::object; // https://github.com/MystenLabs/sui/blob/main/crates/sui-framework/packages/sui-framework/sources/object.move # \u0110\u00e2y l\u00e0 \u0111o\u1ea1n import t\u1eeb sui framework. Gi\u00fap ta trong vi\u1ec7c \u0111inh ngh\u0129a c\u00e1c th\u00f4ng tin c\u1ee7a transaction nh\u01b0 l\u00e0 \u0111\u1ecba ch\u1ec9 c\u1ee7a sender, \u0111\u1ecba ch\u1ec9 ng\u01b0\u1eddi k\u00fd ... use sui::tx_context; // https://github.com/MystenLabs/sui/blob/main/crates/sui-framework/packages/sui-framework/sources/tx_context.move B\u00ean c\u1ea1nh vi\u1ec7c import m\u1ed9t module, Move cho ph\u00e9p b\u1ea1n import c\u1ee5 th\u1ec3 \u0111\u1ed1i t\u01b0\u1ee3ng t\u1eeb module bao g\u1ed3m functions v\u00e0 types. \u0110i\u1ec1u n\u00e0y h\u1eefu \u00edch khi b\u1ea1n ch\u1ec9 mu\u1ed1n m\u1ed9t ch\u1ee9c n\u0103ng c\u1ee7a module, Gi\u1ea3m vi\u1ec7c kh\u00f4ng c\u1ea7n nh\u1eefng \u0111o\u1ea1n code kh\u00f4ng c\u1ea7n thi\u1ebft. V\u00ed d\u1ee5: // import function t\u1eeb m\u1ed9t module use sui_bootcamp::module_one::learn; // import t\u1eeb Learner Type use sui_bootcamp::module_one::Learner; Kh\u00f4ng ch\u1ec9 th\u1ebf Move cho ph\u00e9p ta import nhi\u1ec1u t\u1eeb module ho\u1eb7c package b\u1eb1ng c\u00e1ch d\u00f9ng d\u1ea5u {} : // import learn function v\u00e0 Learner type t\u1eeb module one use sui_bootcamp::module_one::{learn, Learner}; // import module v\u00e0 Learner type use sui_bootcamp::module_one::{Self, Learner}; L\u00e0m sao \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 tr\u00f9ng t\u00ean? (Name conflict) \ud83d\udc40 M\u00ecnh \u0111\u1ec3 c\u00e1c b\u1ea1n t\u00ecm c\u00e2u tr\u1ea3 l\u1eddi nh\u00e9 ho\u1eb7c th\u1ea3o lu\u1eadn trong nh\u00f3m First Movers","title":"3.1 T\u1eeb kho\u00e1 use - c\u00e1ch \u0111\u1ec3 import b\u1ea5t k\u1ef3 module"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_3/#4-tim-hieu-entry-function-cach-tuong-tac-voi-contract-thong-qua-call","text":"Tr\u01b0\u1edbc ti\u00ean b\u1ea1n c\u1ea7n hi\u1ec3u v\u1ec1 Visibility (ph\u1ea1m vi truy c\u1eadp) trong module . M\u1ed7i ph\u1ea7n t\u1eed (member) trong m\u1ed9t module \u0111\u1ec1u c\u00f3 visibility t\u1ee9c l\u00e0 m\u1ee9c \u0111\u1ed9 cho ph\u00e9p truy c\u1eadp t\u1eeb b\u00ean ngo\u00e0i hay kh\u00f4ng? Theo m\u1eb7c \u0111\u1ecbnh trong Sui move, t\u1ea5t c\u1ea3 c\u00e1c member \u0111\u1ec1u l\u00e0 private ngh\u0129a l\u00e0 anh em ch\u1ec9 \u0111\u01b0\u1ee3c d\u00f9ng trong ch\u00ednh module n\u01a1i ch\u00fang \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a \u0110\u00e2y l\u00e0 v\u00ed d\u1ee5 cho entry function: entry fun mint(ctx: &mut TxContext) { let object = HelloWorldObject { id: object::new(ctx), text: string::utf8(b\"Hello World!\") }; transfer::public_transfer(object, tx_context::sender(ctx)); } &mut TxContext ch\u00ednh l\u00e0 bi\u1ebfn tham chi\u1ebfu c\u00f3 th\u1ec3 thay \u0111\u1ed5i \u0111\u01b0\u1ee3c gi\u00fap cho vi\u1ec7c bi\u1ebft \u0111\u1ecba ch\u1ec9 sender l\u00e0 ai \u0111\u1ec3 mint \u0111\u01b0\u1ee3c contract n\u00e0y. Trong \u0111\u00f3 h\u00e0m transfer \u1edf cu\u1ed1i function kh\u00f4ng ph\u1ea3i tr\u1ea3 v\u1ec1 b\u1ea5t k\u00ec gi\u00e1 tr\u1ecb g\u00ec m\u00e0 gi\u00fap store object v\u00e0o \u0111\u1ecba ch\u1ec9 sender sau khi publish module.","title":"4. \u200bT\u00ecm hi\u1ec3u Entry Function \u2013 c\u00e1ch t\u01b0\u01a1ng t\u00e1c v\u1edbi contract th\u00f4ng qua call"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_3/#41-su-khac-biet-giua-public-va-entry-trong-sui-move","text":"Trong Sui Move, hai t\u1eeb kh\u00f3a public v\u00e0 entry \u0111\u1ec1u d\u00f9ng \u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a h\u00e0m c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c g\u1ecdi t\u1eeb b\u00ean ngo\u00e0i module. Nh\u01b0ng c\u00e1ch m\u00e0 ch\u00fang \u0111\u01b0\u1ee3c g\u1ecdi, v\u00e0 ai \u0111\u01b0\u1ee3c quy\u1ec1n g\u1ecdi l\u1ea1i kh\u00e1c nhau kh\u00e1 r\u00f5. Khi b\u1ea1n d\u00f9ng public fun , h\u00e0m \u0111\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c g\u1ecdi t\u1eeb b\u1ea5t k\u1ef3 \u0111\u00e2u: trong c\u00f9ng module, t\u1eeb module kh\u00e1c trong c\u00f9ng package, th\u1eadm ch\u00ed t\u1eeb module kh\u00e1c ho\u00e0n to\u00e0n n\u1ebfu b\u1ea1n import n\u00f3. \u0110\u00e2y l\u00e0 ki\u1ec3u vi\u1ebft ph\u1ed5 bi\u1ebfn nh\u1ea5t khi b\u1ea1n mu\u1ed1n chia s\u1ebb logic gi\u1eefa nhi\u1ec1u module. Nh\u01b0ng n\u00f3 c\u0169ng gi\u1ed1ng nh\u01b0 b\u1ea1n m\u1edf c\u1eeda nh\u00e0 v\u00e0 m\u1eddi m\u1ecdi ng\u01b0\u1eddi v\u00f4 :V. C\u00f2n C\u00f2n entry fun th\u00ec l\u00e0 m\u1ed9t ki\u1ec3u \u0111\u1eb7c bi\u1ec7t. H\u00e0m c\u00f3 entry ch\u1ec9 \u0111\u01b0\u1ee3c g\u1ecdi tr\u1ef1c ti\u1ebfp t\u1eeb transaction \u2014 t\u1ee9c l\u00e0 t\u1eeb m\u1ed9t Programmable Transaction Block (PTB). Frontend c\u00f3 th\u1ec3 g\u1ecdi, v\u00ed c\u00f3 th\u1ec3 g\u1ecdi. T\u1ea5t nhi\u00ean m\u1ed9t entry function v\u00e3n c\u00f3 th\u1ec3 g\u1ecdi b\u1edfi c\u00e1c Move functions kh\u00e1c trong c\u00f9ng module module a::m { entry fun foo(): u64 { 0 } fun calls_foo(): u64 { foo() } // valid! } module a::n { fun calls_m_foo(): u64 { a::m::foo() // ERROR! // ^^^^^^^^^^^ 'foo' is internal to 'a::m' } } Nh\u01b0ng trong module kh\u00e1c th\u00ec kh\u00f4ng \u0111\u01b0\u1ee3c ph\u00e9p wrap ho\u1eb7c g\u1ecdi l\u1ea1i h\u00e0m \u0111\u00f3. \u0110i\u1ec1u n\u00e0y c\u1ef1c k\u1ef3 quan tr\u1ecdng khi b\u1ea1n vi\u1ebft nh\u1eefng logic nh\u1ea1y c\u1ea3m nh\u01b0 randomness, mint NFT, ho\u1eb7c b\u1ea5t k\u1ef3 th\u1ee9 g\u00ec c\u00f3 th\u1ec3 b\u1ecb l\u1ee3i d\u1ee5ng n\u1ebfu ng\u01b0\u1eddi kh\u00e1c wrap l\u1ea1i h\u00e0m c\u1ee7a b\u1ea1n v\u00e0 th\u1eed ch\u1ea1y tr\u01b0\u1edbc. M\u1ed9t chi ti\u1ebft n\u1eefa l\u00e0 entry th\u01b0\u1eddng \u0111i chung v\u1edbi &mut TxContext Nh\u01b0ng entry kh\u00f4ng ph\u1ea3i kh\u00f4ng c\u00f3 gi\u1edbi h\u1ea1n. V\u00ec \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o an to\u00e0n cho h\u1ec7 th\u1ed1ng s\u1ebd c\u00f3 m\u1ed9t s\u1ed1 quy t\u1eafc sau.","title":"4.1 S\u1ef1 kh\u00e1c bi\u1ec7t gi\u1eefa public v\u00e0 entry trong Sui Move"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_3/#42-rule-rang-buoc-rieng-cua-sui-oi-voi-entry","text":"Ch\u1ec9 \u0111\u01b0\u1ee3c return c\u00e1c ki\u1ec3u c\u00f3 drop ability (\u0111\u1ec3 Sui \u0111\u1ea3m b\u1ea3o kh\u00f4ng leak object ownership) Ngo\u00e0i ra, n\u1ebfu b\u1ea1n d\u00f9ng m\u1ed9t object n\u00e0o \u0111\u00f3 trong entry fun, b\u1ea1n kh\u00f4ng \u0111\u01b0\u1ee3c ph\u00e9p s\u1eed d\u1ee5ng l\u1ea1i object \u0111\u00f3 trong m\u1ed9t non-entry kh\u00e1c trong c\u00f9ng PTB. \u0110i\u1ec1u n\u00e0y gi\u00fap Sui tr\u00e1nh \u0111\u01b0\u1ee3c vi\u1ec7c c\u00f9ng m\u1ed9t object b\u1ecb x\u1eed l\u00fd trong hai context kh\u00e1c nhau.","title":"4.2 Rule r\u00e0ng bu\u1ed9c ri\u00eang c\u1ee7a Sui \u0111\u1ed1i v\u1edbi entry"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20101/move_101_module_3/#43-no-public-entry-only-public-or-entry","text":"N\u1ebfu b\u1ea1n vi\u1ebft code nh\u01b0 th\u1ebf n\u00e0y: // \u274c Sai: d\u00f9ng `entry` kh\u00f4ng c\u1ea7n thi\u1ebft, v\u00ec kh\u00f4ng b\u1eaft bu\u1ed9c \u0111\u1ec3 g\u1ecdi h\u00e0m t\u1eeb transaction public entry fun do_something() { /* ... */ } // \u2705 \u0110\u00fang: d\u00f9ng `public` th\u00f4i l\u00e0 \u0111\u1ee7 \u2014 v\u1eeba g\u1ecdn, l\u1ea1i cho ph\u00e9p return gi\u00e1 tr\u1ecb public fun do_something_2(): T { /* ... */ }","title":"4.3 No public entry, Only public or entry"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20102/Sui%20Move%20standard%20library/Illustration%20of%20type%20name/","text":"Illustration of Sui Move standard library - type name (type_name) std::type_name provides functions such as obtaining type string names, parsing their composition information, and runtime reflection, which helps to construct more robust and secure contract codes by judging the types. Get type information : Convert Move type to string representation Determine the basic type : Check whether it is a basic data type Extract address : parse package address from type name Get module name : extract module identifier from type name String conversion : TypeNameconversion to and from strings Runtime reflection : supports dynamic type checking and processing Source code path: https://github.com/MystenLabs/sui/blob/main/crates/sui-framework/packages/move-stdlib/sources/type_name.move The method diagram: Code before upgrade module cookbook::bookself { use sui::event; use std::ascii::String; use std::type_name::{Self, TypeName}; public struct BookShelf has key { id: UID, } fun init(ctx: &mut TxContext) { transfer::share_object( Bookshelf{ id: object::new(ctx), } ); } public struct EventPrimitiveTypes has copy, drop { bool_type_name: String, u8_type_name: String, u256_type_name: String, address_type_name: String, vector_type_name: String, u8_is_primitive: bool, book_shelf_is_primitive: bool, } public struct EventInfo has copy, drop { type_name_address: String, type_name_module: String, } public entry fun emit_primitive_types() { event::emit(EventPrimitiveTypes{ bool_type_name: type_name::get<bool>().into_string(), u8_type_name: type_name::get<u8>().into_string(), u256_type_name: type_name::get<u256>().into_string(), address_type_name: type_name::get<address>().into_string(), vector_type_name: type_name::get<vector<u8>>().into_string(), u8_is_primitive: type_name::get<u8>().is_primitive(), book_shelf_is_primitive: type_name::get<Bookshelf>().is_primitive(), }) } public entry fun emit_get_info() { event::emit(EventInfo{ type_name_address: type_name::get<Bookshelf>().get_address(), type_name_module: type_name::get<Bookshelf>().get_module(), }) } } After deployment: export PACKAGE_ID=0xa2bf2b8207708d9d4e7c57e3d035537ca80e490240340369ed0837f40f231fe2 export UPGRADE_CAP=0x8655cc8ea0c7b79abac0f15157c81c25b0a72b66efcdec32d8c8aa914faea1aa sui client call --package $PACKAGE_ID --module bookself --function emit_primitive_types The output: \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 Transaction Block Events \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 EventID: 3Mkw7VBPCuyjGGWhxHd76Bog1Tb5pA183yMB2D9AwPYU:0 \u2502 \u2502 \u2502 PackageID: 0xa2bf2b8207708d9d4e7c57e3d035537ca80e490240340369ed0837f40f231fe2 \u2502 \u2502 \u2502 Transaction Module: bookself \u2502 \u2502 \u2502 Sender: 0x915c2d19ee5fde257693f25e6c2cabb04c25e7ae03932817d52e122258c88ddb \u2502 \u2502 \u2502 EventType: 0xa2bf2b8207708d9d4e7c57e3d035537ca80e490240340369ed0837f40f231fe2::bookself::EventPrimitiveTypes \u2502 \u2502 \u2502 ParsedJSON: \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u2502 address_type_name \u2502 address \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 book_shelf_is_primitive \u2502 false \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 bool_type_name \u2502 bool \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 u256_type_name \u2502 u256 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 u8_is_primitive \u2502 true \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 u8_type_name \u2502 u8 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 vector_type_name \u2502 vector<u8> \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Call the event interface of the throwing address and module name sui client call --package $PACKAGE_ID --module bookself --function emit_get_info \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 Transaction Block Events \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 EventID: CzjFhrgr4vHxbdp6tfr13LLM3EaXrDCbW2K275Sd8jeC:0 \u2502 \u2502 \u2502 PackageID: 0xa2bf2b8207708d9d4e7c57e3d035537ca80e490240340369ed0837f40f231fe2 \u2502 \u2502 \u2502 Transaction Module: bookself \u2502 \u2502 \u2502 Sender: 0x915c2d19ee5fde257693f25e6c2cabb04c25e7ae03932817d52e122258c88ddb \u2502 \u2502 \u2502 EventType: 0xa2bf2b8207708d9d4e7c57e3d035537ca80e490240340369ed0837f40f231fe2::bookself::EventInfo \u2502 \u2502 \u2502 ParsedJSON: \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u2502 type_name_address \u2502 a2bf2b8207708d9d4e7c57e3d035537ca80e490240340369ed0837f40f231fe2 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 type_name_module \u2502 bookself \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Upgraded code In order to show the difference get<T> between and get_with_original_ids<T> , the contract is upgraded first. The following upgraded contract code ignores some of the codes before the upgrade. module cookbook::bookshelf { use sui::event; use std::ascii::String; use std::type_name::{Self, TypeName}; /// The Bookshelf object public struct BookShelf has key { id: UID, } /// Book structure definition public struct Book has key { id: UID, /// Book title title: String, } .. /// Event structure to emit type name comparison public struct EventTypeName has copy, drop { defining_id_type: String, original_id_type: String, } /// Entry function to compare `get<T>()` and `get_with_original_ids<T>()` public entry fun compare_get_methods<T>() { let defining_id_type = type_name::get<T>(); let original_id_type = type_name::get_with_original_ids<T>(); event::emit(EventTypeName { defining_id_type: defining_id_type.into_string(), original_id_type: original_id_type.into_string(), }); } }","title":"Illustration of Sui Move standard library - type name (type_name)"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20102/Sui%20Move%20standard%20library/Illustration%20of%20type%20name/#illustration-of-sui-move-standard-library-type-name-type_name","text":"std::type_name provides functions such as obtaining type string names, parsing their composition information, and runtime reflection, which helps to construct more robust and secure contract codes by judging the types. Get type information : Convert Move type to string representation Determine the basic type : Check whether it is a basic data type Extract address : parse package address from type name Get module name : extract module identifier from type name String conversion : TypeNameconversion to and from strings Runtime reflection : supports dynamic type checking and processing Source code path: https://github.com/MystenLabs/sui/blob/main/crates/sui-framework/packages/move-stdlib/sources/type_name.move The method diagram:","title":"Illustration of Sui Move standard library - type name (type_name)"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20102/Sui%20Move%20standard%20library/Illustration%20of%20type%20name/#code-before-upgrade","text":"module cookbook::bookself { use sui::event; use std::ascii::String; use std::type_name::{Self, TypeName}; public struct BookShelf has key { id: UID, } fun init(ctx: &mut TxContext) { transfer::share_object( Bookshelf{ id: object::new(ctx), } ); } public struct EventPrimitiveTypes has copy, drop { bool_type_name: String, u8_type_name: String, u256_type_name: String, address_type_name: String, vector_type_name: String, u8_is_primitive: bool, book_shelf_is_primitive: bool, } public struct EventInfo has copy, drop { type_name_address: String, type_name_module: String, } public entry fun emit_primitive_types() { event::emit(EventPrimitiveTypes{ bool_type_name: type_name::get<bool>().into_string(), u8_type_name: type_name::get<u8>().into_string(), u256_type_name: type_name::get<u256>().into_string(), address_type_name: type_name::get<address>().into_string(), vector_type_name: type_name::get<vector<u8>>().into_string(), u8_is_primitive: type_name::get<u8>().is_primitive(), book_shelf_is_primitive: type_name::get<Bookshelf>().is_primitive(), }) } public entry fun emit_get_info() { event::emit(EventInfo{ type_name_address: type_name::get<Bookshelf>().get_address(), type_name_module: type_name::get<Bookshelf>().get_module(), }) } } After deployment: export PACKAGE_ID=0xa2bf2b8207708d9d4e7c57e3d035537ca80e490240340369ed0837f40f231fe2 export UPGRADE_CAP=0x8655cc8ea0c7b79abac0f15157c81c25b0a72b66efcdec32d8c8aa914faea1aa sui client call --package $PACKAGE_ID --module bookself --function emit_primitive_types The output: \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 Transaction Block Events \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 EventID: 3Mkw7VBPCuyjGGWhxHd76Bog1Tb5pA183yMB2D9AwPYU:0 \u2502 \u2502 \u2502 PackageID: 0xa2bf2b8207708d9d4e7c57e3d035537ca80e490240340369ed0837f40f231fe2 \u2502 \u2502 \u2502 Transaction Module: bookself \u2502 \u2502 \u2502 Sender: 0x915c2d19ee5fde257693f25e6c2cabb04c25e7ae03932817d52e122258c88ddb \u2502 \u2502 \u2502 EventType: 0xa2bf2b8207708d9d4e7c57e3d035537ca80e490240340369ed0837f40f231fe2::bookself::EventPrimitiveTypes \u2502 \u2502 \u2502 ParsedJSON: \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u2502 address_type_name \u2502 address \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 book_shelf_is_primitive \u2502 false \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 bool_type_name \u2502 bool \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 u256_type_name \u2502 u256 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 u8_is_primitive \u2502 true \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 u8_type_name \u2502 u8 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 vector_type_name \u2502 vector<u8> \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f Call the event interface of the throwing address and module name sui client call --package $PACKAGE_ID --module bookself --function emit_get_info \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 Transaction Block Events \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u250c\u2500\u2500 \u2502 \u2502 \u2502 EventID: CzjFhrgr4vHxbdp6tfr13LLM3EaXrDCbW2K275Sd8jeC:0 \u2502 \u2502 \u2502 PackageID: 0xa2bf2b8207708d9d4e7c57e3d035537ca80e490240340369ed0837f40f231fe2 \u2502 \u2502 \u2502 Transaction Module: bookself \u2502 \u2502 \u2502 Sender: 0x915c2d19ee5fde257693f25e6c2cabb04c25e7ae03932817d52e122258c88ddb \u2502 \u2502 \u2502 EventType: 0xa2bf2b8207708d9d4e7c57e3d035537ca80e490240340369ed0837f40f231fe2::bookself::EventInfo \u2502 \u2502 \u2502 ParsedJSON: \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u2502 type_name_address \u2502 a2bf2b8207708d9d4e7c57e3d035537ca80e490240340369ed0837f40f231fe2 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 type_name_module \u2502 bookself \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2514\u2500\u2500 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Code before upgrade"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20102/Sui%20Move%20standard%20library/Illustration%20of%20type%20name/#upgraded-code","text":"In order to show the difference get<T> between and get_with_original_ids<T> , the contract is upgraded first. The following upgraded contract code ignores some of the codes before the upgrade. module cookbook::bookshelf { use sui::event; use std::ascii::String; use std::type_name::{Self, TypeName}; /// The Bookshelf object public struct BookShelf has key { id: UID, } /// Book structure definition public struct Book has key { id: UID, /// Book title title: String, } .. /// Event structure to emit type name comparison public struct EventTypeName has copy, drop { defining_id_type: String, original_id_type: String, } /// Entry function to compare `get<T>()` and `get_with_original_ids<T>()` public entry fun compare_get_methods<T>() { let defining_id_type = type_name::get<T>(); let original_id_type = type_name::get_with_original_ids<T>(); event::emit(EventTypeName { defining_id_type: defining_id_type.into_string(), original_id_type: original_id_type.into_string(), }); } }","title":"Upgraded code"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20102/Sui%20Move%20standard%20library/Sui%20Move%20Standard%20Library%20-%20Core%20Token%20Package%20%28balance%2C%20coin%2C%20pay%29/","text":"Sui Move Standard Library - Core Token Package (balance, coin, pay) This article analyzes the three core components of Sui Move tokens: balance (value storage layer), coin (token operation layer), and pay (payment abstraction layer). Through principle diagrams and code examples, the design principles of the three-layer architecture are revealed. 1. Module Description Modules Tiers Function Scenario sui::balance Value storage layer (underlying storage) Manage the mapping relationship between addresses and token balances Balance query, token ownership verification sui::coin Token operation layer (basic operation) Focus on the life cycle management of the token itself , including: token creation, destruction and metadata management Custom token issuance and token metadata maintenance sui::pay Payment abstraction layer (high-level encapsulation) Provides compound operations for token payment , including: single or batch token splitting, merging, transfer, etc. Batch transfer, split account logic, airdrop etc. The balance.move: https://github.com/MystenLabs/sui/blob/main/crates/sui-framework/packages/sui-framework/sources/balance.move The Coin.move: https://github.com/MystenLabs/sui/blob/main/crates/sui-framework/packages/sui-framework/sources/coin.move The Pay.move: https://github.com/MystenLabs/sui/blob/main/crates/sui-framework/packages/sui-framework/sources/pay.move 2. Method Description 2.1 sui::balance Classification Function Name Parameter Functional Description Balance Operations zero No parameters Create a balance object with a quantity of zero value self: &Balance<T> Get the amount stored in the balance object join self: &mut Balance<T>, balance: Balance<T> Merge two balance objects split self: &mut Balance<T>, value: u64 Separate the specified number of sub-balance objects from the balance object withdraw_all self: &mut Balance<T> Withdraw all balances, remaining balance is 0 destroy_zero balance: Balance<T> Destroys the balance object with zero quantity Supply Operation create_supply _: T Create new supply for type T supply_value supply: &Supply<T> Get the value of supply increase_supply self: &mut Supply<T>, value: u64 Increases the supply and creates a corresponding amount of balance decrease_supply self: &mut Supply<T>, balance: Balance<T> Destroy balances and reduce supply destroy_supply self: Supply<T> Destroys supply, preventing further minting and burning 2.2 sui::coin Classification Function Name Parameter Functional Description Supply Operation total_supply cap: &TreasuryCap<T> Returns the total number of tokens in circulation treasury_into_supply treasury: TreasuryCap<T> Unpack TreasuryCap to obtain Supply (irreversible) supply_immut treasury: &TreasuryCap<T> Get an immutable reference to the treasury\u2019s Supply supply_mut treasury: &mut TreasuryCap<T> Get a mutable reference to the treasury\u2019s Supply Balance Operations value self: &Coin<T> Get the value of the coin balance coin: &Coin<T> Get an immutable reference to the coin\u2019s balance balance_mut coin: &mut Coin<T> Get a mutable reference to the coin\u2019s balance from_balance balance: Balance<T>, ctx: &mut TxContext Wrap the balance into transferable coins into_balance coin: Coin<T> Deconstruct coin wrapper and preserve balance take balance: &mut Balance<T>, value: u64, ctx: &mut TxContext Withdraw coins of specified value from balance put balance: &mut Balance<T>, coin: Coin<T> Add coins to balance Token Operations join self: &mut Coin<T>, c1: Coin<T> Merge two coins split self: &mut Coin<T>, split_amount: u64, ctx: &mut TxContext Split the coin into two parts divide_into_n self: &mut Coin<T>, n: u64, ctx: &mut TxContext Divide coin equally into n\u20131 coins zero ctx: &mut TxContext Create a coin with zero value destroy_zero c: Coin<T> Destroy coins with zero value mint cap: &mut TreasuryCap<T>, value: u64, ctx: &mut TxContext Mint coins of specified value mint_balance cap: &mut TreasuryCap<T>, value: u64 Mint a balance of specified value burn cap: &mut TreasuryCap<T>, c: Coin<T> Destroy coins and reduce total supply create_currency witness: T, decimals: u8, symbol: vector<u8>, name: vector<u8>, description: vector<u8>, icon_url: Option<u8>, ctx: &mut TxContext Create a new currency type mint_and_transfer c: &mut TreasuryCap<T>, amount: u64, recipient: address, ctx: &mut TxContext Mint coins and transfer to recipients Metadata Operations update_name t_treasury: &mut TreasuryCap<T>, metadata: &mut CoinMetadata<T>, name: string::String Update the name of the coin update_symbol t_treasury: &mut TreasuryCap<T>, metadata: &mut CoinMetadata<T>, symbol: ascii::String Update coin symbol update_description t_treasury: &mut TreasuryCap<T>, metadata: &mut CoinMetadata<T>, description: string::String Update coin description update_icon_url t_treasury: &mut TreasuryCap<T>, metadata: &mut CoinMetadata<T>, url: ascii::String Update the coin icon URL get_decimals metadata: &CoinMetadata<T> Get number of decimal places of the coin get_name metadata: &CoinMetadata<T> Get the name of the coin get_symbol metadata: &CoinMetadata<T> Get the coin symbol get_description metadata: &CoinMetadata<T> Get the description of the coin get_icon_url metadata: &CoinMetadata<T> Get the coin icon URL 2.3 sui::coin (Regulated currency & deny list functions) Classification Function Name Parameter Functional Description Create and Migrate create_regulated_currency_v2 witness: T, decimals: u8, symbol: vector<u8>, name: vector<u8>, description: vector<u8>, icon_url: Option<u8>, allow_global_pause: bool, ctx: &mut TxContext Creating a Currency with Regulatory Functions migrate_regulated_currency_to_v2 deny_list: &mut DenyList, cap: DenyCap<T>, allow_global_pause: bool, ctx: &mut TxContext Migrate regulated currency to v2 Blacklist Operation deny_list_v2_add deny_list: &mut DenyList, _deny_cap: &mut DenyCapV2<T>, addr: address, ctx: &mut TxContext Add an address to a deny list deny_list_v2_remove deny_list: &mut DenyList, _deny_cap: &mut DenyCapV2<T>, addr: address, ctx: &mut TxContext Remove an address from the deny list deny_list_v2_contains_current_epoch deny_list: &DenyList, addr: address, ctx: &TxContext Check if current epoch's deny list contains the address deny_list_v2_contains_next_epoch deny_list: &DenyList, addr: address Check if next epoch's deny list contains the address deny_list_v2_enable_global_pause deny_list: &mut DenyList, deny_cap: &mut DenyCapV2<T>, ctx: &mut TxContext Enable global pause deny_list_v2_disable_global_pause deny_list: &mut DenyList, deny_cap: &mut DenyCapV2<T>, ctx: &mut TxContext Disable global pause deny_list_v2_is_global_pause_enabled_current_epoch deny_list: &DenyList, ctx: &TxContext Check if global pause is enabled for the current epoch deny_list_v2_is_global_pause_enabled_next_epoch deny_list: &DenyList Check if global pause is enabled for the next epoch 2.4 sui::pay Classification Function Name Parameter Functional Description Transfer keep c: Coin<T>, ctx: &TxContext Transfer coins to the sender of the current transaction Segmentation split coin: &mut Coin<T>, split_amount: u64, ctx: &mut TxContext Split the coin into two parts, specify the split amount split_vec self: &mut Coin<T>, split_amounts: vector<u64>, ctx: &mut TxContext Split the coin into multiple coins, balances specified by a vector split_and_transfer c: &mut Coin<T>, amount: u64, recipient: address, ctx: &mut TxContext Split specified amount of coins and send them to the recipient divide_and_keep self: &mut Coin<T>, n: u64, ctx: &mut TxContext Divide the coin into n\u20131 coins equally, and keep the remainder Merge join self: &mut Coin<T>, coin: Coin<T> Merge two coins ( deprecated ) join_vec self: &mut Coin<T>, coins: vector<Coin<T>> Merge all coins in the vector into the main coin join_vec_and_transfer coins: vector<Coin<T>>, receiver: address Combine the coins in the vector and transfer them to the recipient 3. Example module cookbook::aig_token { use std::string::{Self, String}; use std::ascii; use sui::coin::{Self, TreasuryCap}; use sui::balance::{Self, Balance}; use sui::url::{Self, Url}; use sui::event; public struct EventMint has copy, drop { sender: address, amount: u64, coin_left: u64 } public struct EventAirdrop has copy, drop { method: String, sender: address, amount: u64 } public struct EventCoinMeta has copy, drop { decimals: u8, symbol: ascii::String, name: String, description: String, icon_url: Option<Url>, } public struct EventTotalSupply has copy, drop { total_supply: u64 } public struct Vault has key { id: UID, balance: Balance<AIG_TOKEN>, } public struct AIG_TOKEN has drop {} fun init( witness: AIG_TOKEN, ctx: &mut TxContext ) { let decimals = 3; let symbol = b\"AIG\"; let name = b\"AIG Token\"; let description = b\"AIG Token is a token that is used to incentivize the community to achieve the goals of the AI Goal.\"; let url = url::new_unsafe_from_bytes(b\"https://ai-goal.vercel.app/\"); let (treasury_cap, metadata) = coin::create_currency<AIG_TOKEN>( witness, decimals, symbol, name, description, option::some(url), ctx ); event::emit( EventCoinMeta { decimals: coin::get_decimals(&metadata), symbol: coin::get_symbol(&metadata), name: coin::get_name(&metadata), description: coin::get_description(&metadata), icon_url: option::some(url), } ); transfer::public_freeze_object(metadata); transfer::public_transfer(treasury_cap, ctx.sender()); transfer::share_object( Vault { id: object::new(ctx), balance: balance::zero(), } ); } public(package) fun airdrop( vault: &mut Vault, amount: u64, method: vector<u8>, ctx: &mut TxContext ) { let sender = ctx.sender(); let mut balance_drop = balance::split(&mut vault.balance, amount); let coin_drop = coin::take(&mut balance_drop, amount, ctx); transfer::public_transfer(coin_drop, sender); balance::destroy_zero(balance_drop); event::emit( EventAirdrop { method: string::utf8(method), sender, amount, } ); } public fun mint_balance( treasury_cap: &mut TreasuryCap<AIG_TOKEN>, vault: &mut Vault, amount: u64, ctx: &mut TxContext ) { let balance_minted = coin::mint_balance(treasury_cap, amount); balance::join(&mut vault.balance, balance_minted); event::emit( EventMint { sender: ctx.sender(), amount: amount, coin_left: balance::value(&vault.balance) } ); } #[allow(lint(self_transfer))] public fun mint_coin( treasury_cap: &mut TreasuryCap<AIG_TOKEN>, amount: u64, ctx: &mut TxContext ) { let coin_minted = coin::mint(treasury_cap, amount, ctx); transfer::public_transfer(coin_minted, ctx.sender()); coin::mint_and_transfer( treasury_cap, amount, ctx.sender(), ctx ); event::emit( EventTotalSupply { total_supply: coin::total_supply(treasury_cap) } ) } }","title":"Sui Move Standard Library - Core Token Package (balance, coin, pay)"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20102/Sui%20Move%20standard%20library/Sui%20Move%20Standard%20Library%20-%20Core%20Token%20Package%20%28balance%2C%20coin%2C%20pay%29/#sui-move-standard-library-core-token-package-balance-coin-pay","text":"This article analyzes the three core components of Sui Move tokens: balance (value storage layer), coin (token operation layer), and pay (payment abstraction layer). Through principle diagrams and code examples, the design principles of the three-layer architecture are revealed.","title":"Sui Move Standard Library - Core Token Package (balance, coin, pay)"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20102/Sui%20Move%20standard%20library/Sui%20Move%20Standard%20Library%20-%20Core%20Token%20Package%20%28balance%2C%20coin%2C%20pay%29/#1-module-description","text":"Modules Tiers Function Scenario sui::balance Value storage layer (underlying storage) Manage the mapping relationship between addresses and token balances Balance query, token ownership verification sui::coin Token operation layer (basic operation) Focus on the life cycle management of the token itself , including: token creation, destruction and metadata management Custom token issuance and token metadata maintenance sui::pay Payment abstraction layer (high-level encapsulation) Provides compound operations for token payment , including: single or batch token splitting, merging, transfer, etc. Batch transfer, split account logic, airdrop etc. The balance.move: https://github.com/MystenLabs/sui/blob/main/crates/sui-framework/packages/sui-framework/sources/balance.move The Coin.move: https://github.com/MystenLabs/sui/blob/main/crates/sui-framework/packages/sui-framework/sources/coin.move The Pay.move: https://github.com/MystenLabs/sui/blob/main/crates/sui-framework/packages/sui-framework/sources/pay.move","title":"1. Module Description"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20102/Sui%20Move%20standard%20library/Sui%20Move%20Standard%20Library%20-%20Core%20Token%20Package%20%28balance%2C%20coin%2C%20pay%29/#2-method-description","text":"","title":"2. Method Description"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20102/Sui%20Move%20standard%20library/Sui%20Move%20Standard%20Library%20-%20Core%20Token%20Package%20%28balance%2C%20coin%2C%20pay%29/#21-suibalance","text":"Classification Function Name Parameter Functional Description Balance Operations zero No parameters Create a balance object with a quantity of zero value self: &Balance<T> Get the amount stored in the balance object join self: &mut Balance<T>, balance: Balance<T> Merge two balance objects split self: &mut Balance<T>, value: u64 Separate the specified number of sub-balance objects from the balance object withdraw_all self: &mut Balance<T> Withdraw all balances, remaining balance is 0 destroy_zero balance: Balance<T> Destroys the balance object with zero quantity Supply Operation create_supply _: T Create new supply for type T supply_value supply: &Supply<T> Get the value of supply increase_supply self: &mut Supply<T>, value: u64 Increases the supply and creates a corresponding amount of balance decrease_supply self: &mut Supply<T>, balance: Balance<T> Destroy balances and reduce supply destroy_supply self: Supply<T> Destroys supply, preventing further minting and burning","title":"2.1 sui::balance"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20102/Sui%20Move%20standard%20library/Sui%20Move%20Standard%20Library%20-%20Core%20Token%20Package%20%28balance%2C%20coin%2C%20pay%29/#22-suicoin","text":"Classification Function Name Parameter Functional Description Supply Operation total_supply cap: &TreasuryCap<T> Returns the total number of tokens in circulation treasury_into_supply treasury: TreasuryCap<T> Unpack TreasuryCap to obtain Supply (irreversible) supply_immut treasury: &TreasuryCap<T> Get an immutable reference to the treasury\u2019s Supply supply_mut treasury: &mut TreasuryCap<T> Get a mutable reference to the treasury\u2019s Supply Balance Operations value self: &Coin<T> Get the value of the coin balance coin: &Coin<T> Get an immutable reference to the coin\u2019s balance balance_mut coin: &mut Coin<T> Get a mutable reference to the coin\u2019s balance from_balance balance: Balance<T>, ctx: &mut TxContext Wrap the balance into transferable coins into_balance coin: Coin<T> Deconstruct coin wrapper and preserve balance take balance: &mut Balance<T>, value: u64, ctx: &mut TxContext Withdraw coins of specified value from balance put balance: &mut Balance<T>, coin: Coin<T> Add coins to balance Token Operations join self: &mut Coin<T>, c1: Coin<T> Merge two coins split self: &mut Coin<T>, split_amount: u64, ctx: &mut TxContext Split the coin into two parts divide_into_n self: &mut Coin<T>, n: u64, ctx: &mut TxContext Divide coin equally into n\u20131 coins zero ctx: &mut TxContext Create a coin with zero value destroy_zero c: Coin<T> Destroy coins with zero value mint cap: &mut TreasuryCap<T>, value: u64, ctx: &mut TxContext Mint coins of specified value mint_balance cap: &mut TreasuryCap<T>, value: u64 Mint a balance of specified value burn cap: &mut TreasuryCap<T>, c: Coin<T> Destroy coins and reduce total supply create_currency witness: T, decimals: u8, symbol: vector<u8>, name: vector<u8>, description: vector<u8>, icon_url: Option<u8>, ctx: &mut TxContext Create a new currency type mint_and_transfer c: &mut TreasuryCap<T>, amount: u64, recipient: address, ctx: &mut TxContext Mint coins and transfer to recipients Metadata Operations update_name t_treasury: &mut TreasuryCap<T>, metadata: &mut CoinMetadata<T>, name: string::String Update the name of the coin update_symbol t_treasury: &mut TreasuryCap<T>, metadata: &mut CoinMetadata<T>, symbol: ascii::String Update coin symbol update_description t_treasury: &mut TreasuryCap<T>, metadata: &mut CoinMetadata<T>, description: string::String Update coin description update_icon_url t_treasury: &mut TreasuryCap<T>, metadata: &mut CoinMetadata<T>, url: ascii::String Update the coin icon URL get_decimals metadata: &CoinMetadata<T> Get number of decimal places of the coin get_name metadata: &CoinMetadata<T> Get the name of the coin get_symbol metadata: &CoinMetadata<T> Get the coin symbol get_description metadata: &CoinMetadata<T> Get the description of the coin get_icon_url metadata: &CoinMetadata<T> Get the coin icon URL","title":"2.2 sui::coin"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20102/Sui%20Move%20standard%20library/Sui%20Move%20Standard%20Library%20-%20Core%20Token%20Package%20%28balance%2C%20coin%2C%20pay%29/#23-suicoin-regulated-currency-deny-list-functions","text":"Classification Function Name Parameter Functional Description Create and Migrate create_regulated_currency_v2 witness: T, decimals: u8, symbol: vector<u8>, name: vector<u8>, description: vector<u8>, icon_url: Option<u8>, allow_global_pause: bool, ctx: &mut TxContext Creating a Currency with Regulatory Functions migrate_regulated_currency_to_v2 deny_list: &mut DenyList, cap: DenyCap<T>, allow_global_pause: bool, ctx: &mut TxContext Migrate regulated currency to v2 Blacklist Operation deny_list_v2_add deny_list: &mut DenyList, _deny_cap: &mut DenyCapV2<T>, addr: address, ctx: &mut TxContext Add an address to a deny list deny_list_v2_remove deny_list: &mut DenyList, _deny_cap: &mut DenyCapV2<T>, addr: address, ctx: &mut TxContext Remove an address from the deny list deny_list_v2_contains_current_epoch deny_list: &DenyList, addr: address, ctx: &TxContext Check if current epoch's deny list contains the address deny_list_v2_contains_next_epoch deny_list: &DenyList, addr: address Check if next epoch's deny list contains the address deny_list_v2_enable_global_pause deny_list: &mut DenyList, deny_cap: &mut DenyCapV2<T>, ctx: &mut TxContext Enable global pause deny_list_v2_disable_global_pause deny_list: &mut DenyList, deny_cap: &mut DenyCapV2<T>, ctx: &mut TxContext Disable global pause deny_list_v2_is_global_pause_enabled_current_epoch deny_list: &DenyList, ctx: &TxContext Check if global pause is enabled for the current epoch deny_list_v2_is_global_pause_enabled_next_epoch deny_list: &DenyList Check if global pause is enabled for the next epoch","title":"2.3 sui::coin (Regulated currency &amp; deny list functions)"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20102/Sui%20Move%20standard%20library/Sui%20Move%20Standard%20Library%20-%20Core%20Token%20Package%20%28balance%2C%20coin%2C%20pay%29/#24-suipay","text":"Classification Function Name Parameter Functional Description Transfer keep c: Coin<T>, ctx: &TxContext Transfer coins to the sender of the current transaction Segmentation split coin: &mut Coin<T>, split_amount: u64, ctx: &mut TxContext Split the coin into two parts, specify the split amount split_vec self: &mut Coin<T>, split_amounts: vector<u64>, ctx: &mut TxContext Split the coin into multiple coins, balances specified by a vector split_and_transfer c: &mut Coin<T>, amount: u64, recipient: address, ctx: &mut TxContext Split specified amount of coins and send them to the recipient divide_and_keep self: &mut Coin<T>, n: u64, ctx: &mut TxContext Divide the coin into n\u20131 coins equally, and keep the remainder Merge join self: &mut Coin<T>, coin: Coin<T> Merge two coins ( deprecated ) join_vec self: &mut Coin<T>, coins: vector<Coin<T>> Merge all coins in the vector into the main coin join_vec_and_transfer coins: vector<Coin<T>>, receiver: address Combine the coins in the vector and transfer them to the recipient","title":"2.4 sui::pay"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Move%20102/Sui%20Move%20standard%20library/Sui%20Move%20Standard%20Library%20-%20Core%20Token%20Package%20%28balance%2C%20coin%2C%20pay%29/#3-example","text":"module cookbook::aig_token { use std::string::{Self, String}; use std::ascii; use sui::coin::{Self, TreasuryCap}; use sui::balance::{Self, Balance}; use sui::url::{Self, Url}; use sui::event; public struct EventMint has copy, drop { sender: address, amount: u64, coin_left: u64 } public struct EventAirdrop has copy, drop { method: String, sender: address, amount: u64 } public struct EventCoinMeta has copy, drop { decimals: u8, symbol: ascii::String, name: String, description: String, icon_url: Option<Url>, } public struct EventTotalSupply has copy, drop { total_supply: u64 } public struct Vault has key { id: UID, balance: Balance<AIG_TOKEN>, } public struct AIG_TOKEN has drop {} fun init( witness: AIG_TOKEN, ctx: &mut TxContext ) { let decimals = 3; let symbol = b\"AIG\"; let name = b\"AIG Token\"; let description = b\"AIG Token is a token that is used to incentivize the community to achieve the goals of the AI Goal.\"; let url = url::new_unsafe_from_bytes(b\"https://ai-goal.vercel.app/\"); let (treasury_cap, metadata) = coin::create_currency<AIG_TOKEN>( witness, decimals, symbol, name, description, option::some(url), ctx ); event::emit( EventCoinMeta { decimals: coin::get_decimals(&metadata), symbol: coin::get_symbol(&metadata), name: coin::get_name(&metadata), description: coin::get_description(&metadata), icon_url: option::some(url), } ); transfer::public_freeze_object(metadata); transfer::public_transfer(treasury_cap, ctx.sender()); transfer::share_object( Vault { id: object::new(ctx), balance: balance::zero(), } ); } public(package) fun airdrop( vault: &mut Vault, amount: u64, method: vector<u8>, ctx: &mut TxContext ) { let sender = ctx.sender(); let mut balance_drop = balance::split(&mut vault.balance, amount); let coin_drop = coin::take(&mut balance_drop, amount, ctx); transfer::public_transfer(coin_drop, sender); balance::destroy_zero(balance_drop); event::emit( EventAirdrop { method: string::utf8(method), sender, amount, } ); } public fun mint_balance( treasury_cap: &mut TreasuryCap<AIG_TOKEN>, vault: &mut Vault, amount: u64, ctx: &mut TxContext ) { let balance_minted = coin::mint_balance(treasury_cap, amount); balance::join(&mut vault.balance, balance_minted); event::emit( EventMint { sender: ctx.sender(), amount: amount, coin_left: balance::value(&vault.balance) } ); } #[allow(lint(self_transfer))] public fun mint_coin( treasury_cap: &mut TreasuryCap<AIG_TOKEN>, amount: u64, ctx: &mut TxContext ) { let coin_minted = coin::mint(treasury_cap, amount, ctx); transfer::public_transfer(coin_minted, ctx.sender()); coin::mint_and_transfer( treasury_cap, amount, ctx.sender(), ctx ); event::emit( EventTotalSupply { total_supply: coin::total_supply(treasury_cap) } ) } }","title":"3. Example"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Deploy_walrus/","text":"How to deploy a walrus site? trying to deploy a walrus site? I think you might want to use the site-builder cli for this","title":"How to deploy a walrus site?"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Deploy_walrus/#how-to-deploy-a-walrus-site","text":"trying to deploy a walrus site? I think you might want to use the site-builder cli for this","title":"How to deploy a walrus site?"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Everything%20about%20Quilt/","text":"B\u00e0i vi\u1ebft n\u00e0y n\u00f3i v\u1ec1 Quilt - gi\u1ea3i ph\u00e1p l\u01b0u tr\u1eef file nh\u1ecf. B\u00e0i vi\u1ebft n\u00e0y vi\u1ebft v\u00e0o 2025-07-24 ngh\u0129a l\u00e0 sau 3 th\u00e1ng t\u1eeb khi walnet ra m\u1eaft mainnet. T\u00ednh th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i \u0111\u00e3 l\u01b0u tr\u1eef h\u01a1n 800 TB . Tuy nhi\u00ean, V\u1edbi Walrus th\u00ec kh\u1ea3 n\u0103ng x\u1eed l\u00fd file l\u00e0 r\u1ea5t t\u1ed1t v\u1ea5n \u0111\u1ec1 l\u00e0 v\u1edbi c\u00e1c file nh\u1ecf th\u00ec ph\u1ea3i t\u1ef1 bundle (g\u1ed9p file) th\u1ee7 c\u00f4ng \u2192 ph\u1ee9c t\u1ea1p & t\u1ed1n th\u1eddi gian c\u0169ng nh\u01b0 truy xu\u1ea5t ch\u1eadm & kh\u00f3 t\u1ed5 ch\u1ee9c metadata. V\u1eady n\u00ean Quilt ra \u0111\u1eddi \u0111\u1ec3 g\u1ed9p files nh\u1ecf th\u00e0nh 1 Quilt unit. V\u00e0 m\u00ecnh d\u1ef1a tr\u00ean b\u00e0i vi\u1ebft c\u1ee7a Walrus blog \u0111\u1ec3 vi\u1ebft phi\u00ean b\u1ea3n vi\u1ec7t version cho c\u00e1c b\u1ea1n. Let's compare the differences pre- and post-Quilt and see how Walrus stacks up against the competition.","title":"Everything about Quilt"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Everything%20about%20Quilt/#bai-viet-nay-noi-ve-quilt-giai-phap-luu-tru-file-nho","text":"B\u00e0i vi\u1ebft n\u00e0y vi\u1ebft v\u00e0o 2025-07-24 ngh\u0129a l\u00e0 sau 3 th\u00e1ng t\u1eeb khi walnet ra m\u1eaft mainnet. T\u00ednh th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i \u0111\u00e3 l\u01b0u tr\u1eef h\u01a1n 800 TB . Tuy nhi\u00ean, V\u1edbi Walrus th\u00ec kh\u1ea3 n\u0103ng x\u1eed l\u00fd file l\u00e0 r\u1ea5t t\u1ed1t v\u1ea5n \u0111\u1ec1 l\u00e0 v\u1edbi c\u00e1c file nh\u1ecf th\u00ec ph\u1ea3i t\u1ef1 bundle (g\u1ed9p file) th\u1ee7 c\u00f4ng \u2192 ph\u1ee9c t\u1ea1p & t\u1ed1n th\u1eddi gian c\u0169ng nh\u01b0 truy xu\u1ea5t ch\u1eadm & kh\u00f3 t\u1ed5 ch\u1ee9c metadata. V\u1eady n\u00ean Quilt ra \u0111\u1eddi \u0111\u1ec3 g\u1ed9p files nh\u1ecf th\u00e0nh 1 Quilt unit. V\u00e0 m\u00ecnh d\u1ef1a tr\u00ean b\u00e0i vi\u1ebft c\u1ee7a Walrus blog \u0111\u1ec3 vi\u1ebft phi\u00ean b\u1ea3n vi\u1ec7t version cho c\u00e1c b\u1ea1n.","title":"B\u00e0i vi\u1ebft n\u00e0y n\u00f3i v\u1ec1 Quilt - gi\u1ea3i ph\u00e1p l\u01b0u tr\u1eef file nh\u1ecf."},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Everything%20about%20Quilt/#lets-compare-the-differences-pre-and-post-quilt-and-see-how-walrus-stacks-up-against-the-competition","text":"","title":"Let's compare the differences pre- and post-Quilt and see how Walrus stacks up against the competition."},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Walrus%20in%20a%20nutshell/","text":"Walrus in a nutshell B\u00e0i vi\u1ebft n\u00e0y gi\u1ea3i th\u00edch v\u1ec1 Walrus: A Decentralized Storage Solution Walrus is a decentralized storage solution that provides cheap, out-of-the-box features for large blobs, long periods of storage, and flexible storage nodes, making it suitable for applications where decentralization matters and single points of failure are undesirable Gi\u1ea3i th\u00edch d\u1ec5 hi\u1ec3u th\u00ec Walrus l\u00e0 gi\u1ea3i ph\u00e1p \u0111\u1ec3 m\u00ecnh l\u01b0u tr\u1eef phi t\u1eadp trung v\u1edbi chi ph\u00ed th\u1ea5p cho c\u00e1c kh\u1ed1i d\u1eef li\u1ec7u l\u1edbn, th\u1eddi gian l\u01b0u tr\u1eef d\u00e0i, v\u00e0 c\u00e1c nodes l\u01b0u tr\u1eef flexible, ph\u00f9 h\u1ee3p cho c\u00e1c decentralization application. L\u01b0u tr\u1eef th\u00ec t\u1ea5t nhi\u00ean n\u00f3 r\u1ea5t quan tr\u1ecdng r\u1ed3i v\u00e0 d\u1eef li\u1ec7u th\u00ec ph\u1ea3i lu\u00f4n c\u00f3 t\u00ednh data availability. C\u00e1c \u1ee9ng d\u1ee5ng \u0111\u1ec1u lu\u00f4n c\u1ea7n l\u01b0u tr\u1eef data, \u0111\u00f3 c\u00f3 th\u1ec3 l\u00e0 data input, program hay result n\u00e0o \u0111\u00f3 . V\u00ec th\u1ebf m\u00e0 walrus c\u0169ng c\u00f3 nhi\u1ec1u use cases kh\u00e1c nhau. V\u1eady th\u00ec t\u1ea1i sao ta ph\u1ea3i n\u00f3i t\u1ea7m quan tr\u1ecdng c\u1ee7a Decentralization l\u00e0 data ownership v\u00e0 security. Walrus promotes decentralization to ensure users maintain ownership of their data, avoiding the pitfalls of centralized systems that can lead to censorship and data loss. Walrus th\u00fac \u0111\u1ea9y data ownership b\u1eb1ng c\u00e1ch trao l\u1ea1i quy\u1ec1n ki\u1ec3m so\u00e1t d\u1eef li\u1ec7u cho ch\u00ednh user kh\u00f4ng ai kh\u00e1c. Trong khi c\u00e1c m\u00f4 h\u00ecnh centralized service nh\u01b0 AWS hay Google Cloud th\u00ec ng\u01b0\u1ee3c l\u1ea1i. D\u1eef li\u1ec7u b\u1ea1n upload l\u00e0 d\u1eef li\u1ec7u b\u1ecb ki\u1ec3m so\u00e1t. B\u1ea1n l\u00e0 user, nh\u01b0ng \u0111\u00f4i khi l\u1ea1i th\u00e0nh s\u1ea3n ph\u1ea9m. \u201cIf you\u2019re not paying for the product, you are the product.\u201d Nh\u01b0ng v\u1edbi Walrus th\u00ec kh\u00e1c. V\u00ec n\u00f3 phi t\u1eadp trung n\u00ean: * Data lu\u00f4n thu\u1ed9c v\u1ec1 b\u1ea1n, kh\u00f4ng ai can thi\u1ec7p \u0111\u01b0\u1ee3c. * L\u01b0u tr\u1eef redundant, \u0111\u1ea3m b\u1ea3o data availability v\u00e0 integrity . * Ai c\u0169ng c\u00f3 th\u1ec3 tham gia h\u1ec7 th\u1ed1ng l\u01b0u tr\u1eef b\u1eb1ng c\u00e1ch fund th\u00f4ng qua protocol-level incentives v\u00ed d\u1ee5 nh\u01b0 stake token, ho\u1eb7c cung c\u1ea5p node. Decentralized storage isn\u2019t just about hosting files \u2014 it\u2019s about freedom, resilience, and long-term sustainability for your project. Tweet c\u1ee7a Adeniyi.sui khi n\u00f3i v\u1ec1 Walrus + Sui: https://x.com/EmanAbio/status/1848785669700915623 How Walrus Works: Breaking It Down Walrus kh\u00f4ng ch\u1ec9 l\u00e0 n\u01a1i l\u01b0u tr\u1eef d\u1eef li\u1ec7u, m\u00e0 c\u00f2n l\u00e0 m\u1ed9t l\u1edbp \u0111i\u1ec1u ph\u1ed1i d\u1eef li\u1ec7u phi t\u1eadp trung decentralized data coordination layer cho dev quy\u1ec1n set rule, g\u00e1n permission, v\u00e0 thi\u1ebft l\u1eadp c\u00e1c quy tr\u00ecnh t\u1ef1 \u0111\u1ed9ng xung quanh d\u1eef li\u1ec7u \u0111\u00f3. Walrus blobs: blob nh\u01b0 nh\u1eefng \u201ch\u1ed9p d\u1eef li\u1ec7u\u201dc\u00f3 th\u1ec3 l\u00e0 file \u1ea3nh, video, model AI, code\u2026. M\u1ed7i blob c\u00f3 ID ri\u00eang bi\u1ec7t, c\u00f3 th\u1ec3 chia nh\u1ecf th\u00e0nh c\u00e1c shard \u0111\u1ec3 l\u01b0u r\u1ea3i r\u00e1c tr\u00ean nhi\u1ec1u node, \u0111\u1ea3m b\u1ea3o redundancy (d\u1ef1 ph\u00f2ng) v\u00e0 resilience (b\u1ec1n v\u1eefng) . \ud83d\uddc4 Storage Nodes:. M\u1ed7i node ph\u1ea3i ch\u1ee9ng minh \u0111\u1ed9 tin c\u1eady b\u1eb1ng cryptographic proof, v\u00e0 \u0111\u1ec3 stake WAL token Aggregators: Aggregators kh\u00f4ng l\u01b0u tr\u1eef d\u1eef li\u1ec7u, nh\u01b0ng \u0111\u00f3ng vai tr\u00f2 r\u1ea5t quan tr\u1ecdng trong vi\u1ec7c t\u1ed1i \u01b0u ho\u00e1 vi\u1ec7c truy xu\u1ea5t v\u00e0 qu\u1ea3n l\u00fd metadata. H\u1ecd t\u1ea1o ra ch\u1ec9 m\u1ee5c (index) cho c\u00e1c blob, cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng t\u00ecm ki\u1ebfm v\u00e0 truy xu\u1ea5t d\u1eef li\u1ec7u nhanh h\u01a1n. Gi\u00fap \u0111i\u1ec1u ph\u1ed1i vi\u1ec7c ph\u00e2n ph\u1ed1i d\u1eef li\u1ec7u t\u1eeb nhi\u1ec1u storage node khi c\u00f3 truy v\u1ea5n \u0111\u1ebfn. C\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 qu\u1ea3n l\u00fd caching, load balancing v\u00e0 t\u1ed1i \u01b0u UX c\u1ee7a c\u00e1c \u1ee9ng d\u1ee5ng dApp x\u00e2y d\u1ef1ng tr\u00ean Walrus. Hosting a local Walrus Site portal https://www.youtube.com/watch?v=ktjvd8y7qY8 This guide is for Sui and Walrus mainnet *. Here is a video demo that follows this guide Introduction Create your own decentralized website by utilizing the power of the Sui blockchain, resilience of Walrus, and the seamless UX of SuiNS. In this tutorial you: Build a website Upload it to Walrus Point your SuiNS name to it Build a website In this section, create a basic Sui website to deploy to Walrus using the Sui Dapp starter kit . Install the template Run pnpm create @mysten/dapp in your terminal. Select react-client-dapp Name your project Build the site Run pnpm install to install dependencies Run pnpm build to build the site for deployment Upload it to Walrus After you have a build of your app, deploy it to Walrus using the Walrus site builder CLI tool. Install Dependencies Install Walrus CLI Install site-builder Deploy to Walrus Run the following command to deploy your site to Walrus: site-builder --config {PATH_TO_CONFIG} publish {PATH_TO_APP}/dist --site-name \"decentralized website test\" --epochs 200 After a successful deployment, you should receive a similar output: Storing resources on Walrus: batch 1 of 1 ... [Ok] Applying the Walrus Site object updates on Sui ... [Ok] Execution completed Resource operations performed: - created resource /assets/index-C8a3C9Y3.js with blob ID W6lLyahP4IgJh7t36vOO22m23ZTATzMyyRwrk733bgg - created resource /assets/index-scVC05-f.css with blob ID I22agaqaim_M3oRHwXjF4nbtAVba4SZDDQMXFAZns-Y - created resource /index.html with blob ID jQ6aA4VEElNJnC7PL7G2he48TeICY6e2jKD2QQHuyrQ The site routes were left unchanged Created new site: test-website New site object ID: 0xf98a54de897b50ed014d7c99d7ae5471ec3b5fd0f517d36f6ae5bc2e1083ce37 To browse the site, you have the following options: 1. Run a local portal, and browse the site through it: e.g. http://67wi4siou7p4kljjwmejdd98ofl7vnte8bhwu1flfua8r7mmgn.localhost:3000 (more info: https://docs.wal.app/walrus-sites/portal.html#running-the-portal-locally) 2. Use a third-party portal (e.g. wal.app), which will require a SuiNS name. First, buy a SuiNS name at suins.io (e.g. example-domain), then point it to the site object ID. Finally, browse it with: https://example-domain.wal.app This contains the ID of your Walrus site\u2019s Sui object ( 0xf98a54de897b50ed014d7c99d7ae5471ec3b5fd0f517d36f6ae5bc2e1083ce37 ). Point your SuiNS name to it Now that you have your deployed Walrus site, point a SuiNS name to it to be accessible by the wal.app portal. Buy a SuiNS name Navigate to SuiNS and buy a name. Link your SuiNs name Set your SuiNS name to the address of your Walrus site\u2019s Sui object (provided in the Walrus site deployment output above) Navigate to your site with your SuiNS name You can now navigate to https://{SuiNS name}.wal.app to view your finished decentralized site! https://x.com/_smbrian/status/1909468495676686837 Reference https://medium.com/@thaninsta/what-is-walrus-a-detailed-guide-163f3c236171 Building Your First Walrus Site on Sui Testnet (on Windows 11) Walrus ecosystem Map https://x.com/EmanAbio/status/1848785669700915623 https://www.youtube.com/watch?v=0T9X1gGoUtk https://www.youtube.com/watch?v=4_b8vfcSSa4","title":"Walrus in a nutshell"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Walrus%20in%20a%20nutshell/#walrus-in-a-nutshell","text":"B\u00e0i vi\u1ebft n\u00e0y gi\u1ea3i th\u00edch v\u1ec1 Walrus: A Decentralized Storage Solution Walrus is a decentralized storage solution that provides cheap, out-of-the-box features for large blobs, long periods of storage, and flexible storage nodes, making it suitable for applications where decentralization matters and single points of failure are undesirable Gi\u1ea3i th\u00edch d\u1ec5 hi\u1ec3u th\u00ec Walrus l\u00e0 gi\u1ea3i ph\u00e1p \u0111\u1ec3 m\u00ecnh l\u01b0u tr\u1eef phi t\u1eadp trung v\u1edbi chi ph\u00ed th\u1ea5p cho c\u00e1c kh\u1ed1i d\u1eef li\u1ec7u l\u1edbn, th\u1eddi gian l\u01b0u tr\u1eef d\u00e0i, v\u00e0 c\u00e1c nodes l\u01b0u tr\u1eef flexible, ph\u00f9 h\u1ee3p cho c\u00e1c decentralization application. L\u01b0u tr\u1eef th\u00ec t\u1ea5t nhi\u00ean n\u00f3 r\u1ea5t quan tr\u1ecdng r\u1ed3i v\u00e0 d\u1eef li\u1ec7u th\u00ec ph\u1ea3i lu\u00f4n c\u00f3 t\u00ednh data availability. C\u00e1c \u1ee9ng d\u1ee5ng \u0111\u1ec1u lu\u00f4n c\u1ea7n l\u01b0u tr\u1eef data, \u0111\u00f3 c\u00f3 th\u1ec3 l\u00e0 data input, program hay result n\u00e0o \u0111\u00f3 . V\u00ec th\u1ebf m\u00e0 walrus c\u0169ng c\u00f3 nhi\u1ec1u use cases kh\u00e1c nhau. V\u1eady th\u00ec t\u1ea1i sao ta ph\u1ea3i n\u00f3i t\u1ea7m quan tr\u1ecdng c\u1ee7a Decentralization l\u00e0 data ownership v\u00e0 security. Walrus promotes decentralization to ensure users maintain ownership of their data, avoiding the pitfalls of centralized systems that can lead to censorship and data loss. Walrus th\u00fac \u0111\u1ea9y data ownership b\u1eb1ng c\u00e1ch trao l\u1ea1i quy\u1ec1n ki\u1ec3m so\u00e1t d\u1eef li\u1ec7u cho ch\u00ednh user kh\u00f4ng ai kh\u00e1c. Trong khi c\u00e1c m\u00f4 h\u00ecnh centralized service nh\u01b0 AWS hay Google Cloud th\u00ec ng\u01b0\u1ee3c l\u1ea1i. D\u1eef li\u1ec7u b\u1ea1n upload l\u00e0 d\u1eef li\u1ec7u b\u1ecb ki\u1ec3m so\u00e1t. B\u1ea1n l\u00e0 user, nh\u01b0ng \u0111\u00f4i khi l\u1ea1i th\u00e0nh s\u1ea3n ph\u1ea9m. \u201cIf you\u2019re not paying for the product, you are the product.\u201d Nh\u01b0ng v\u1edbi Walrus th\u00ec kh\u00e1c. V\u00ec n\u00f3 phi t\u1eadp trung n\u00ean: * Data lu\u00f4n thu\u1ed9c v\u1ec1 b\u1ea1n, kh\u00f4ng ai can thi\u1ec7p \u0111\u01b0\u1ee3c. * L\u01b0u tr\u1eef redundant, \u0111\u1ea3m b\u1ea3o data availability v\u00e0 integrity . * Ai c\u0169ng c\u00f3 th\u1ec3 tham gia h\u1ec7 th\u1ed1ng l\u01b0u tr\u1eef b\u1eb1ng c\u00e1ch fund th\u00f4ng qua protocol-level incentives v\u00ed d\u1ee5 nh\u01b0 stake token, ho\u1eb7c cung c\u1ea5p node. Decentralized storage isn\u2019t just about hosting files \u2014 it\u2019s about freedom, resilience, and long-term sustainability for your project. Tweet c\u1ee7a Adeniyi.sui khi n\u00f3i v\u1ec1 Walrus + Sui: https://x.com/EmanAbio/status/1848785669700915623","title":"Walrus in a nutshell"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Walrus%20in%20a%20nutshell/#how-walrus-works-breaking-it-down","text":"Walrus kh\u00f4ng ch\u1ec9 l\u00e0 n\u01a1i l\u01b0u tr\u1eef d\u1eef li\u1ec7u, m\u00e0 c\u00f2n l\u00e0 m\u1ed9t l\u1edbp \u0111i\u1ec1u ph\u1ed1i d\u1eef li\u1ec7u phi t\u1eadp trung decentralized data coordination layer cho dev quy\u1ec1n set rule, g\u00e1n permission, v\u00e0 thi\u1ebft l\u1eadp c\u00e1c quy tr\u00ecnh t\u1ef1 \u0111\u1ed9ng xung quanh d\u1eef li\u1ec7u \u0111\u00f3. Walrus blobs: blob nh\u01b0 nh\u1eefng \u201ch\u1ed9p d\u1eef li\u1ec7u\u201dc\u00f3 th\u1ec3 l\u00e0 file \u1ea3nh, video, model AI, code\u2026. M\u1ed7i blob c\u00f3 ID ri\u00eang bi\u1ec7t, c\u00f3 th\u1ec3 chia nh\u1ecf th\u00e0nh c\u00e1c shard \u0111\u1ec3 l\u01b0u r\u1ea3i r\u00e1c tr\u00ean nhi\u1ec1u node, \u0111\u1ea3m b\u1ea3o redundancy (d\u1ef1 ph\u00f2ng) v\u00e0 resilience (b\u1ec1n v\u1eefng) . \ud83d\uddc4 Storage Nodes:. M\u1ed7i node ph\u1ea3i ch\u1ee9ng minh \u0111\u1ed9 tin c\u1eady b\u1eb1ng cryptographic proof, v\u00e0 \u0111\u1ec3 stake WAL token Aggregators: Aggregators kh\u00f4ng l\u01b0u tr\u1eef d\u1eef li\u1ec7u, nh\u01b0ng \u0111\u00f3ng vai tr\u00f2 r\u1ea5t quan tr\u1ecdng trong vi\u1ec7c t\u1ed1i \u01b0u ho\u00e1 vi\u1ec7c truy xu\u1ea5t v\u00e0 qu\u1ea3n l\u00fd metadata. H\u1ecd t\u1ea1o ra ch\u1ec9 m\u1ee5c (index) cho c\u00e1c blob, cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng t\u00ecm ki\u1ebfm v\u00e0 truy xu\u1ea5t d\u1eef li\u1ec7u nhanh h\u01a1n. Gi\u00fap \u0111i\u1ec1u ph\u1ed1i vi\u1ec7c ph\u00e2n ph\u1ed1i d\u1eef li\u1ec7u t\u1eeb nhi\u1ec1u storage node khi c\u00f3 truy v\u1ea5n \u0111\u1ebfn. C\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 qu\u1ea3n l\u00fd caching, load balancing v\u00e0 t\u1ed1i \u01b0u UX c\u1ee7a c\u00e1c \u1ee9ng d\u1ee5ng dApp x\u00e2y d\u1ef1ng tr\u00ean Walrus.","title":"How Walrus Works: Breaking It Down"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Walrus%20in%20a%20nutshell/#hosting-a-local-walrus-site-portal","text":"https://www.youtube.com/watch?v=ktjvd8y7qY8 This guide is for Sui and Walrus mainnet *. Here is a video demo that follows this guide","title":"Hosting a local Walrus Site portal"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Walrus%20in%20a%20nutshell/#introduction","text":"Create your own decentralized website by utilizing the power of the Sui blockchain, resilience of Walrus, and the seamless UX of SuiNS. In this tutorial you: Build a website Upload it to Walrus Point your SuiNS name to it","title":"Introduction"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Walrus%20in%20a%20nutshell/#build-a-website","text":"In this section, create a basic Sui website to deploy to Walrus using the Sui Dapp starter kit .","title":"Build a website"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Walrus%20in%20a%20nutshell/#install-the-template","text":"Run pnpm create @mysten/dapp in your terminal. Select react-client-dapp Name your project","title":"Install the template"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Walrus%20in%20a%20nutshell/#build-the-site","text":"Run pnpm install to install dependencies Run pnpm build to build the site for deployment","title":"Build the site"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Walrus%20in%20a%20nutshell/#upload-it-to-walrus","text":"After you have a build of your app, deploy it to Walrus using the Walrus site builder CLI tool.","title":"Upload it to Walrus"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Walrus%20in%20a%20nutshell/#install-dependencies","text":"Install Walrus CLI Install site-builder","title":"Install Dependencies"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Walrus%20in%20a%20nutshell/#deploy-to-walrus","text":"Run the following command to deploy your site to Walrus: site-builder --config {PATH_TO_CONFIG} publish {PATH_TO_APP}/dist --site-name \"decentralized website test\" --epochs 200 After a successful deployment, you should receive a similar output: Storing resources on Walrus: batch 1 of 1 ... [Ok] Applying the Walrus Site object updates on Sui ... [Ok] Execution completed Resource operations performed: - created resource /assets/index-C8a3C9Y3.js with blob ID W6lLyahP4IgJh7t36vOO22m23ZTATzMyyRwrk733bgg - created resource /assets/index-scVC05-f.css with blob ID I22agaqaim_M3oRHwXjF4nbtAVba4SZDDQMXFAZns-Y - created resource /index.html with blob ID jQ6aA4VEElNJnC7PL7G2he48TeICY6e2jKD2QQHuyrQ The site routes were left unchanged Created new site: test-website New site object ID: 0xf98a54de897b50ed014d7c99d7ae5471ec3b5fd0f517d36f6ae5bc2e1083ce37 To browse the site, you have the following options: 1. Run a local portal, and browse the site through it: e.g. http://67wi4siou7p4kljjwmejdd98ofl7vnte8bhwu1flfua8r7mmgn.localhost:3000 (more info: https://docs.wal.app/walrus-sites/portal.html#running-the-portal-locally) 2. Use a third-party portal (e.g. wal.app), which will require a SuiNS name. First, buy a SuiNS name at suins.io (e.g. example-domain), then point it to the site object ID. Finally, browse it with: https://example-domain.wal.app This contains the ID of your Walrus site\u2019s Sui object ( 0xf98a54de897b50ed014d7c99d7ae5471ec3b5fd0f517d36f6ae5bc2e1083ce37 ).","title":"Deploy to Walrus"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Walrus%20in%20a%20nutshell/#point-your-suins-name-to-it","text":"Now that you have your deployed Walrus site, point a SuiNS name to it to be accessible by the wal.app portal.","title":"Point your SuiNS name to it"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Walrus%20in%20a%20nutshell/#buy-a-suins-name","text":"Navigate to SuiNS and buy a name.","title":"Buy a SuiNS name"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Walrus%20in%20a%20nutshell/#link-your-suins-name","text":"Set your SuiNS name to the address of your Walrus site\u2019s Sui object (provided in the Walrus site deployment output above)","title":"Link your SuiNs name"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Walrus%20in%20a%20nutshell/#navigate-to-your-site-with-your-suins-name","text":"You can now navigate to https://{SuiNS name}.wal.app to view your finished decentralized site! https://x.com/_smbrian/status/1909468495676686837","title":"Navigate to your site with your SuiNS name"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Walrus%20in%20a%20nutshell/#reference","text":"https://medium.com/@thaninsta/what-is-walrus-a-detailed-guide-163f3c236171 Building Your First Walrus Site on Sui Testnet (on Windows 11) Walrus ecosystem Map","title":"Reference"},{"location":"Everything%20that%20Sui%20devs%20have%20to%20know/Walrus%20dev/Walrus%20in%20a%20nutshell/#_1","text":"https://x.com/EmanAbio/status/1848785669700915623 https://www.youtube.com/watch?v=0T9X1gGoUtk https://www.youtube.com/watch?v=4_b8vfcSSa4","title":""},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/00_Recap%20my%20first%20time%20share%20about%20Stylus/","text":"Trong qu\u00e1 tr\u00ecnh ph\u00e1t tri\u1ec3n \u1ee9ng d\u1ee5ng blockchain, \u0111\u1eb7c bi\u1ec7t l\u00e0 tr\u00ean Ethereum, nhi\u1ec1u dev \u0111\u00e3 ph\u1ea3i \u0111\u1ed1i m\u1eb7t v\u1edbi nh\u1eefng challenges kh\u00f4ng nh\u1ecf t\u1eeb t\u1eeb vi\u1ec7c \u0111\u1ecdc v\u00e0 ph\u00e2n t\u00edch bytecode tr\u00ean Etherscan cho \u0111\u1ebfn vi\u1ec7c tr\u00e1nh c\u00e1c l\u1ed7 h\u1ed5ng ti\u1ec1m \u1ea9n trong code Solidity. Trong khi \u0111a s\u1ed1 l\u1eadp tr\u00ecnh vi\u00ean quen thu\u1ed9c v\u1edbi c\u00e1c ng\u00f4n ng\u1eef nh\u01b0 Rust, C++ ho\u1eb7c Python.. th\u00ec vi\u1ec7c b\u1eaft \u0111\u1ea7u ti\u1ebfp c\u1eadn Solidity v\u00e0 m\u00f4i tr\u01b0\u1eddng EVM \u0111\u00f2i h\u1ecfi m\u1ed9t qu\u00e1 tr\u00ecnh h\u1ecdc t\u1eadp v\u00e0 l\u00e0m quen kh\u00f4ng h\u1ec1 d\u1ec5 d\u00e0ng. Motivation for Arbitrum Stylus Arbitrum Stylus \u0111\u01b0\u1ee3c sinh ra \u0111\u1ec3 gi\u1ea3i quy\u1ebft hai v\u1ea5n \u0111\u1ec1: Blockchain kh\u00f3 ti\u1ebfp c\u1eadn v\u1edbi dev truy\u1ec1n th\u1ed1ng Smart contract th\u00ec execute ch\u1eadm. Theo b\u00e1o c\u00e1o Developer Report c\u1ee7a Electric Capital , hi\u1ec7n t\u1ea1i ch\u1ec9 c\u00f3 kho\u1ea3ng 24,000 dev ho\u1ea1t \u0111\u1ed9ng h\u00e0ng th\u00e1ng trong m\u1ea3ng blockchain t\u00ednh t\u1eeb th\u1eddi \u0111i\u1ec3m m\u00ecnh vi\u1ebft b\u00e0i n\u00e0y. Nghe th\u00ec c\u00f3 v\u1ebb \u1ed5n, nh\u01b0ng n\u1ebfu so v\u1edbi h\u00e0ng tri\u1ec7u (th\u1eadm ch\u00ed ch\u1ee5c tri\u1ec7u) dev \u0111ang d\u00f9ng c\u00e1c ng\u00f4n ng\u1eef nh\u01b0 Rust hay C++ ngo\u00e0i kia th\u00ec\u2026 v\u1eabn c\u00f2n c\u00e1ch bi\u1ec7t qu\u00e1 l\u1edbn. Khi Web3 c\u00e0ng m\u1edf r\u1ed9ng, nhu c\u1ea7u onboard h\u00e0ng tri\u1ec7u dev m\u1edbi v\u00e0o web3 developer \u0111ang tr\u1edf th\u00e0nh b\u00e0i to\u00e1n cho Devrel nh\u01b0 t\u1ee5i m\u00ecnh \ud83e\udd72. V\u00e0 c\u00e1ch hi\u1ec7u qu\u1ea3 nh\u1ea5t \u0111\u1ec3 k\u00e9o dev truy\u1ec1n th\u1ed1ng v\u00e0o blockchain ch\u00ednh l\u00e0 cho h\u1ecd d\u00f9ng l\u1ea1i nh\u1eefng ng\u00f4n ng\u1eef h\u1ecd \u0111\u00e3 quen thu\u1ed9c nh\u01b0 Rust ho\u1eb7c C++. Nhi\u1ec1u h\u1ec7 sinh th\u00e1i non-EVM nh\u01b0 Solana, Cosmos \u0111\u00e3 \u0111i theo h\u01b0\u1edbng n\u00e0y, v\u1edbi Rust g\u1ea7n nh\u01b0 tr\u1edf th\u00e0nh \"ti\u00eau chu\u1ea9n\" \u0111\u1ec3 vi\u1ebft smart contract. C\u00f2n b\u00ean EVM, tr\u01b0\u1edbc gi\u1edd v\u1eabn ph\u1ea3i x\u00e0i Solidity. Nh\u01b0ng gi\u1edd th\u00ec kh\u00e1c r\u1ed3i, v\u00ec Arbitrum Stylus cho ph\u00e9p dev vi\u1ebft smart contract b\u1eb1ng Rust ho\u1eb7c C++ v\u00e0 deploy th\u1eb3ng l\u00ean chain EVM-compatible nh\u01b0 th\u01b0\u1eddng. M\u1ed9t step cho ph\u00e9p \u0111\u1ec3 x\u00f3a b\u1ecf r\u00e0o c\u1ea3n ng\u00f4n ng\u1eef v\u00e0 m\u1edf c\u1eeda cho dev web2. L\u00e0m sao \u0111\u1ec3 \"Smart Contract Execution\" c\u00f3 th\u1ec3 hi\u1ec7u qu\u1ea3 h\u01a1n ? Khi c\u00e1c \u1ee9ng d\u1ee5ng phi t\u1eadp trung (dApps) b\u1eaft \u0111\u1ea7u scale, nhu c\u1ea7u x\u1eed l\u00fd on-chain c\u0169ng t\u0103ng theo \u0111\u1eb7c bi\u1ec7t l\u00e0 tr\u00ean Ethereum . Nh\u01b0ng c\u0169ng ch\u00ednh nh\u1edd \u00e1p l\u1ef1c n\u00e0y m\u00e0 nhi\u1ec1u l\u00e0n s\u00f3ng s\u00e1ng t\u1ea1o \u0111\u1ec3 scale blockchain \u0111\u00e3 n\u1ed5 ra v\u00e0 Arbitrum l\u00e0 m\u1ed9t trong nh\u1eefng c\u00e1i t\u00ean n\u1ed5i b\u1eadt v\u1edbi lo\u1ea1t solutions nh\u01b0 Arbitrum One (Layer2 chain) v\u00e0 c\u00f4ng ngh\u1ec7 Arbitrum Nitro . N\u1ebfu nh\u01b0 c\u00e1c gi\u1ea3i ph\u00e1p tr\u01b0\u1edbc ch\u1ee7 y\u1ebfu t\u1ed1i \u01b0u theo ki\u1ec3u g\u1ed9p nhi\u1ec1u transaction l\u1ea1i (inter-transactional optimization), th\u00ec Stylus s\u1ebd t\u1ed1i \u01b0u t\u1eebng transaction \u0111\u01b0\u1ee3c x\u1eed l\u00fd t\u1eeb b\u00ean trong (intra-transactional). C\u1ee5 th\u1ec3 h\u01a1n, Stylus cho ph\u00e9p smart contract ch\u1ea1y b\u1eb1ng WebAssembly (WASM) . V\u1edbi k\u1ebft qu\u1ea3 n\u00e0y th\u00ec Contract Stylus s\u1ebd c\u00f3 th\u1ec3 ch\u1ea1y nhanh h\u01a1n nhi\u1ec1u l\u1ea7n, gi\u00fap gi\u1ea3m gas v\u00e0 kh\u1ea3 n\u0103ng s\u1eed d\u1ee5ng memory Stylus: C\u1ea7u n\u1ed1i gi\u1eefa WASM v\u00e0 EVM \u0110\u1ec3 hi\u1ec3u v\u00ec sao Stylus m\u1ed9t ph\u1ea7n c\u1ee7a h\u1ec7 sinh th\u00e1i Arbitrum l\u1ea1i hi\u1ec7u qu\u1ea3 v\u00e0 d\u1ec5 m\u1edf r\u1ed9ng (composable) h\u01a1n so v\u1edbi c\u00e1c engine EVM truy\u1ec1n th\u1ed1ng, ta c\u1ea7n b\u1eaft \u0111\u1ea7u t\u1eeb n\u1ec1n t\u1ea3ng c\u00f4ng ngh\u1ec7 m\u00e0 Stylus s\u1eed d\u1ee5ng: WebAssembly (WASM) . WebAssembly , hay WASM, l\u00e0 m\u1ed9t d\u1ea1ng ng\u00f4n ng\u1eef d\u1ea1ng assembly \u2013 t\u1ee9c l\u00e0 ng\u00f4n ng\u1eef \u1edf m\u1ee9c th\u1ea5p, g\u1ea7n v\u1edbi m\u00e1y, d\u1ea1ng m\u00e3 nh\u1ecb ph\u00e2n (binary) c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c thi tr\u1ef1c ti\u1ebfp b\u1edfi tr\u00ecnh duy\u1ec7t ho\u1eb7c m\u00e1y \u1ea3o. Kh\u00e1c v\u1edbi c\u00e1c ng\u00f4n ng\u1eef c\u1ea5p cao nh\u01b0 Rust, C++, hay Go v\u1ed1n h\u01b0\u1edbng \u0111\u1ebfn con ng\u01b0\u1eddi \u0111\u1ecdc hi\u1ec3u, nh\u1eefng ng\u00f4n ng\u1eef n\u00e0y c\u1ea7n ph\u1ea3i bi\u00ean d\u1ecbch (compile) xu\u1ed1ng WASM tr\u01b0\u1edbc khi c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c thi. Ch\u00ednh v\u00ec t\u00ednh ch\u1ea5t portable (di \u0111\u1ed9ng), modular (m\u00f4-\u0111un h\u00f3a) v\u00e0 hi\u1ec7u su\u1ea5t cao , WASM ng\u00e0y c\u00e0ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\u00e3i ngo\u00e0i m\u00f4i tr\u01b0\u1eddng web, bao g\u1ed3m c\u1ea3 trong blockchain v\u00e0 c\u00e1c VM (Virtual Machines) hi\u1ec7n \u0111\u1ea1i. V\u1edbi n\u00e2ng c\u1ea5p Arbitrum Nitro (\u0110\u1ecdc th\u00eam \u1edf Arbitrum_intro.md ), m\u1ecdi tranh ch\u1ea5p (dispute) trong h\u1ec7 th\u1ed1ng \u0111\u1ec1u \u0111\u01b0\u1ee3c x\u1eed l\u00fd b\u1eb1ng c\u00e1ch th\u1ef1c thi l\u1ea1i ch\u01b0\u01a1ng tr\u00ecnh th\u00f4ng qua WASM-based fraud proofs . \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 b\u1ea5t k\u1ef3 \u0111o\u1ea1n m\u00e3 n\u00e0o \u0111\u01b0\u1ee3c bi\u00ean d\u1ecbch xu\u1ed1ng WASM \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c x\u1eed l\u00fd trong h\u1ec7 th\u1ed1ng b\u1eb1ng c\u00e1ch ch\u1ee9ng minh gian l\u1eadn (fraud proof) m\u1ed9t c\u00e1ch x\u00e1c minh \u0111\u01b0\u1ee3c on-chain. D\u1ef1a tr\u00ean n\u1ec1n t\u1ea3ng \u0111\u00f3, Arbitrum Stylus \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng nh\u1eb1m m\u1edf r\u1ed9ng kh\u1ea3 n\u0103ng th\u1ef1c thi contract b\u1eb1ng c\u00e1ch t\u00edch h\u1ee3p m\u1ed9t WASM execution engine v\u00e0o h\u1ec7 th\u1ed1ng hi\u1ec7n c\u00f3. Engine n\u00e0y \u0111\u01b0\u1ee3c tri\u1ec3n khai tr\u00ean n\u1ec1n t\u1ea3ng Wasmer , m\u1ed9t trong nh\u1eefng tr\u00ecnh th\u1ef1c thi WASM hi\u1ec7u su\u1ea5t cao h\u00e0ng \u0111\u1ea7u hi\u1ec7n nay. So v\u1edbi m\u00e1y \u1ea3o Ethereum (EVM) s\u1eed d\u1ee5ng Geth, Wasmer c\u00f3 kh\u1ea3 n\u0103ng th\u1ef1c thi nhanh h\u01a1n \u0111\u00e1ng k\u1ec3. V\u1edbi vi\u1ec7c k\u1ebft h\u1ee3p c\u1ea3 engine th\u1ef1c thi (Wasmer) v\u00e0 engine x\u00e1c minh (fraud prover t\u1eeb Nitro), Stylus cho ph\u00e9p c\u00e1c smart contract: * \u0110\u01b0\u1ee3c vi\u1ebft b\u1eb1ng ng\u00f4n ng\u1eef ph\u1ed5 th\u00f4ng nh\u01b0 Rust ho\u1eb7c C++ * \u0110\u01b0\u1ee3c compiple sang WASM * v\u00e0 \u0111\u01b0\u1ee3c th\u1ef1c thi trong m\u00f4i tr\u01b0\u1eddng trustless. Thay v\u00ec gi\u1edbi h\u1ea1n trong ph\u1ea1m vi Solidity v\u00e0 EVM bytecode, anh em dev c\u00f3 th\u1ec3 t\u1eadn d\u1ee5ng c\u00e1c ng\u00f4n ng\u1eef truy\u1ec1n th\u1ed1ng v\u0111\u1ec3 tri\u1ec3n khai c\u00e1c \u1ee9ng d\u1ee5ng Web3 hi\u1ec7u su\u1ea5t cao tr\u00ean Arbitrum. T\u00ednh nh\u1ea5t qu\u00e1n trong EVM+ Engine c\u1ee7a Stylus \u0110\u1ecdc \u0111\u1ebfn \u0111\u00e2y, b\u1ea1n c\u00f3 th\u1ec3 th\u1eafc m\u1eafc l\u00e0 l\u00e0m sao n\u00f3 qu\u1ea3n l\u00fd \u0111\u01b0\u1ee3c hai m\u00e1y \u1ea3o kh\u00e1c nhau? Stylus l\u00e0m sao bi\u1ebft contract n\u00e0o ch\u1ea1y b\u1eb1ng EVM? Contract n\u00e0o ch\u1ea1y b\u1eb1ng WASM? V\u00e0 l\u00e0m sao \u0111\u1ec3 hai b\u00ean t\u01b0\u01a1ng t\u00e1c kh\u00f4ng b\u1ecb l\u1ec7ch tr\u1ea1ng th\u00e1i? T\u1eeb h\u00ecnh minh ho\u1ea1 tr\u00ean, th\u00ec m\u1ecdi ng\u01b0\u1eddi c\u00f3 th\u1ec3 hi\u1ec3u Stylus \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf v\u1edbi hai m\u00f4i tr\u01b0\u1eddng th\u1ef1c thi song song: EVM Engine , s\u1eed d\u1ee5ng Geth \u0111\u1ec3 ch\u1ea1y c\u00e1c contract vi\u1ebft b\u1eb1ng Solidity (ho\u1eb7c c\u00e1c ng\u00f4n ng\u1eef compile sang EVM bytecode). WASM Engine : s\u1eed d\u1ee5ng Wasmer \u0111\u1ec3 ch\u1ea1y c\u00e1c contract vi\u1ebft b\u1eb1ng Rust ho\u1eb7c c\u00e1c ng\u00f4n ng\u1eef WASM-compatible. \u0110\u1ec3 c\u1ea3 hai engine n\u00e0y ho\u1ea1t \u0111\u1ed9ng \u0111\u1ed3ng th\u1eddi m\u00e0 kh\u00f4ng g\u00e2y xung \u0111\u1ed9t, h\u1ec7 th\u1ed1ng c\u1ea7n \u0111\u1ea3m b\u1ea3o t\u00ednh nh\u1ea5t qu\u00e1n (coherence) trong c\u00e1ch truy c\u1eadp v\u00e0 c\u1eadp nh\u1eadt tr\u1ea1ng th\u00e1i on-chain. Khi vi\u1ebft smart contract b\u1eb1ng Solidity, n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c compile ra EVM bytecode nh\u01b0 b\u00ecnh th\u01b0\u1eddng. Khi d\u00f9ng Rust ho\u1eb7c ng\u00f4n ng\u1eef WASM-compatible, contract c\u1ee7a b\u1ea1n s\u1ebd \u0111\u01b0\u1ee3c compile ra WASM bytecode , nh\u01b0ng c\u00f3 g\u1eafn th\u00eam m\u1ed9t ph\u1ea7n g\u1ecdi l\u00e0 \u201cheader\u201d \u1edf \u0111\u1ea7u ngh\u0129a l\u00e0 gi\u1ed1ng nh\u01b0 nh\u00e3n \u0111\u1ec3 Stylus bi\u1ebft \u201ccontract n\u00e0y l\u00e0 WASM\u201d. Thi\u1ebft k\u1ebf n\u00e0y gi\u00fap Stylus t\u1ef1 \u0111\u1ed9ng \u0111i\u1ec1u h\u01b0\u1edbng ch\u00ednh x\u00e1c gi\u1eefa hai m\u00f4i tr\u01b0\u1eddng th\u1ef1c thi m\u00e0 kh\u00f4ng c\u1ea7n dev ph\u1ea3i can thi\u1ec7p th\u1ee7 c\u00f4ng. Kh\u00f4ng ch\u1ec9 v\u1eady, n\u00f3 c\u00f2n m\u1edf ra kh\u1ea3 n\u0103ng interop (t\u01b0\u01a1ng t\u00e1c) cao: Contract vi\u1ebft b\u1eb1ng WASM c\u00f3 th\u1ec3 g\u1ecdi contract Solidity. Contract Solidity c\u0169ng c\u00f3 th\u1ec3 g\u1ecdi ng\u01b0\u1ee3c l\u1ea1i contract WASM. \u0110\u00e2y l\u00e0 \u0111i\u1ec3m kh\u00e1c bi\u1ec7t l\u1edbn gi\u1eefa Stylus v\u00e0 c\u00e1c chain WASM kh\u00e1c. Stylus kh\u00f4ng ch\u1ec9 th\u00eam m\u1ed9t engine m\u1edbi, m\u00e0 c\u00f2n \u0111\u1ea3m b\u1ea3o s\u1ef1 h\u1ee3p nh\u1ea5t li\u1ec1n m\u1ea1ch v\u1edbi h\u1ec7 EVM hi\u1ec7n c\u00f3 , gi\u00fap gi\u1eef nguy\u00ean kh\u1ea3 n\u0103ng t\u01b0\u01a1ng th\u00edch ng\u01b0\u1ee3c (backward compatibility) v\u00e0 gi\u00fap c\u00e1c contract WASM t\u1eadn d\u1ee5ng \u0111\u01b0\u1ee3c thanh kho\u1ea3n c\u1ee7a h\u1ec7 sinh th\u00e1i EVM (DeFi, NFT, token\u2026) . C\u00f3 th\u1ec3 h\u00ecnh dung blockchain nh\u01b0 m\u1ed9t \u201cworld state machine\u201d n\u01a1i m\u1ecdi giao d\u1ecbch, g\u1ecdi contract \u0111\u1ec1u l\u00e0m thay \u0111\u1ed5i tr\u1ea1ng th\u00e1i global. Tr\u00ean Ethereum v\u00e0 Arbitrum, tr\u1ea1ng th\u00e1i n\u00e0y \u0111\u01b0\u1ee3c l\u01b0u d\u01b0\u1edbi d\u1ea1ng Trie structure l\u00e0 m\u1ed9t d\u1ea1ng c\u00e2y d\u1eef li\u1ec7u d\u00f9ng \u0111\u1ec3 l\u01b0u tr\u1eef, truy xu\u1ea5t d\u1eef li\u1ec7u hi\u1ec7u qu\u1ea3 v\u00e0 d\u1ec5 x\u00e1c minh. Trong Stylus, c\u1ea3 EVM engine v\u00e0 WASM engine \u0111\u1ec1u d\u00f9ng chung Trie n\u00e0y \u0111\u1ec3 \u0111\u1ecdc v\u00e0 ghi d\u1eef li\u1ec7u. \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a b\u1ea5t k\u1ec3 khi g\u1ecdi contract Solidity hay Rust, k\u1ebft qu\u1ea3 cu\u1ed1i c\u00f9ng \u0111\u1ec1u c\u1eadp nh\u1eadt v\u00e0o c\u00f9ng m\u1ed9t tr\u1ea1ng th\u00e1i blockchain. Stylus save ph\u1ea7n cost nh\u01b0 th\u1ebf n\u00e0o ? M\u00ecnh bi\u1ebft l\u00e0 Stylus c\u00f3 hai engine ch\u1ea1y song song l\u00e0 EVM v\u00e0 WASM. Gi\u1edd ta s\u1ebd \u0111i s\u00e2u v\u00e0o l\u00fd do t\u1ea1i sao WASM l\u1ea1i ti\u1ebft ki\u1ec7m gas \u0111\u1ebfn v\u1eady . \u0110\u1ec3 hi\u1ec3u r\u00f5 \u0111i\u1ec1u n\u00e0y, h\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng m\u00ecnh c\u1ea7n th\u1ef1c hi\u1ec7n ph\u00e9p t\u00ednh \u0111\u01a1n gi\u1ea3n: 2 + 3. N\u1ebfu d\u00f9ng EVM, chu\u1ed7i thao t\u00e1c \u0111\u1ec3 ho\u00e0n th\u00e0nh ph\u00e9p c\u1ed9ng n\u00e0y kh\u00f4ng ch\u1ec9 l\u00e0 c\u1ed9ng hai s\u1ed1 m\u00e0 ph\u1ea3i tr\u1ea3 gas cho r\u1ea5t nhi\u1ec1u b\u01b0\u1edbc h\u1ec7 th\u1ed1ng nh\u01b0 truy xu\u1ea5t b\u1ea3ng nh\u1edb, pop s\u1ed1 ra kh\u1ecfi stack, x\u1eed l\u00fd ph\u00e9p c\u1ed9ng, r\u1ed3i push k\u1ebft qu\u1ea3 tr\u1edf l\u1ea1i stack . T\u1ee9c l\u00e0 d\u00f9 b\u1ea1n ch\u1ec9 c\u1ea7n c\u1ed9ng hai con s\u1ed1, b\u1ea1n v\u1eabn ph\u1ea3i tr\u1ea3 gas cho c\u1ea3 \u0111\u1ed1ng b\u01b0\u1edbc ph\u1ee5 t\u1ed1n k\u00e9m, m\u00e0 ch\u1ec9 c\u00f3 \u0111\u00fang m\u1ed9t b\u01b0\u1edbc th\u1ef1c s\u1ef1 l\u00e0m c\u00f4ng vi\u1ec7c c\u1ed9ng. Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu b\u1ea1n th\u1ef1c hi\u1ec7n c\u00f9ng ph\u00e9p t\u00ednh \u0111\u00f3 b\u1eb1ng WASM trong Stylus, n\u00f3 ch\u1ec9 c\u1ea7n m\u1ed9t l\u1ec7nh m\u00e1y duy nh\u1ea5t \u2013 g\u1ecdi th\u1eb3ng t\u1edbi l\u1ec7nh ADD c\u1ee7a CPU nh\u01b0 x86 hay ARM. Kh\u00f4ng c\u1ea7n stack, kh\u00f4ng c\u1ea7n x\u1eed l\u00fd ph\u1ee5. K\u1ebft qu\u1ea3 l\u00e0 thao t\u00e1c c\u1ed9ng n\u00e0y r\u1ebb h\u01a1n g\u1ea5p 150 l\u1ea7n so v\u1edbi ch\u1ea1y b\u1eb1ng EVM. V\u00e0 v\u00ec WASM qu\u00e1 r\u1ebb, Stylus c\u00f2n t\u1ea1o ra m\u1ed9t \u0111\u01a1n v\u1ecb \u0111o gas ri\u00eang g\u1ecdi l\u00e0 ink , n\u01a1i 1 ink ch\u1ec9 b\u1eb1ng 1 ph\u1ea7n 10.000 gas , \u0111\u1ec3 \u0111o nh\u1eefng ph\u00e9p t\u00ednh si\u00eau nh\u1ecf m\u1ed9t c\u00e1ch ch\u00ednh x\u00e1c h\u01a1n. B\u1ea1n th\u1eadm ch\u00ed c\u00f3 th\u1ec3 c\u1ea5u h\u00ecnh \u0111\u01a1n v\u1ecb n\u00e0y n\u1ebfu b\u1ea1n \u0111ang ch\u1ea1y m\u1ed9t chain ri\u00eang. Tuy nhi\u00ean, \u0111\u1ec3 kh\u1edfi ch\u1ea1y m\u00f4i tr\u01b0\u1eddng WASM c\u1ee7a Stylus, b\u1ea1n c\u1ea7n tr\u1ea3 m\u1ed9t chi ph\u00ed c\u1ed1 \u0111\u1ecbnh ban \u0111\u1ea7u l\u00e0 114 tri\u1ec7u gas . Ngo\u00e0i ra, m\u1ed7i l\u1ea7n g\u1ecdi contract Stylus c\u0169ng t\u1ed1n th\u00eam t\u1eeb 128 \u0111\u1ebfn 2048 gas. N\u00ean n\u1ebfu b\u1ea1n ch\u1ec9 mu\u1ed1n d\u00f9ng Stylus \u0111\u1ec3 c\u1ed9ng 2 s\u1ed1, th\u00ec kh\u00f4ng \u0111\u00e1ng. Nh\u01b0ng n\u1ebfu \u0111ang x\u00e2y nh\u1eefng \u1ee9ng d\u1ee5ng c\u1ea7n x\u1eed l\u00fd nhi\u1ec1u d\u1eef li\u1ec7u, d\u00f9ng nhi\u1ec1u RAM, hay t\u00ednh to\u00e1n ph\u1ee9c t\u1ea1p nh\u01b0 AI ho\u1eb7c crypto-heavy apps , th\u00ec Stylus l\u00e0 gi\u1ea3i ph\u00e1p t\u1ed1t. V\u00ed d\u1ee5, vi\u1ec7c c\u1ea5p ph\u00e1t 3.8MB b\u1ed9 nh\u1edb trong EVM s\u1ebd t\u1ed1n t\u1edbi 32 tri\u1ec7u gas, nh\u01b0ng trong Stylus ch\u1ec9 t\u1ed1n kho\u1ea3ng 64 ngh\u00ecn gas t\u1ee9c l\u00e0 ti\u1ebft ki\u1ec7m g\u1ea5p 500 l\u1ea7n . \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 nh\u1eefng \u1ee9ng d\u1ee5ng memory-heavy m\u00e0 EVM tr\u01b0\u1edbc gi\u1edd kh\u00f4ng th\u1ec3 x\u1eed l\u00fd \u0111\u01b0\u1ee3c th\u00ec v\u1edbi Stylus, kh\u00f4ng nh\u1eefng x\u1eed l\u00fd \u0111\u01b0\u1ee3c m\u00e0 c\u00f2n c\u1ef1c k\u1ef3 r\u1ebb. Github assignments I have prepared the basic challenges for builders participating in the Arbitrum workshop: https://github.com/vbi-academy/stylus-workshop-basic Reference: [1]: A gentle introduction: Stylus [2]: ETH State Trie Explained [3] gas metering","title":"00 Recap my first time share about Stylus"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/00_Recap%20my%20first%20time%20share%20about%20Stylus/#motivation-for-arbitrum-stylus","text":"Arbitrum Stylus \u0111\u01b0\u1ee3c sinh ra \u0111\u1ec3 gi\u1ea3i quy\u1ebft hai v\u1ea5n \u0111\u1ec1: Blockchain kh\u00f3 ti\u1ebfp c\u1eadn v\u1edbi dev truy\u1ec1n th\u1ed1ng Smart contract th\u00ec execute ch\u1eadm. Theo b\u00e1o c\u00e1o Developer Report c\u1ee7a Electric Capital , hi\u1ec7n t\u1ea1i ch\u1ec9 c\u00f3 kho\u1ea3ng 24,000 dev ho\u1ea1t \u0111\u1ed9ng h\u00e0ng th\u00e1ng trong m\u1ea3ng blockchain t\u00ednh t\u1eeb th\u1eddi \u0111i\u1ec3m m\u00ecnh vi\u1ebft b\u00e0i n\u00e0y. Nghe th\u00ec c\u00f3 v\u1ebb \u1ed5n, nh\u01b0ng n\u1ebfu so v\u1edbi h\u00e0ng tri\u1ec7u (th\u1eadm ch\u00ed ch\u1ee5c tri\u1ec7u) dev \u0111ang d\u00f9ng c\u00e1c ng\u00f4n ng\u1eef nh\u01b0 Rust hay C++ ngo\u00e0i kia th\u00ec\u2026 v\u1eabn c\u00f2n c\u00e1ch bi\u1ec7t qu\u00e1 l\u1edbn. Khi Web3 c\u00e0ng m\u1edf r\u1ed9ng, nhu c\u1ea7u onboard h\u00e0ng tri\u1ec7u dev m\u1edbi v\u00e0o web3 developer \u0111ang tr\u1edf th\u00e0nh b\u00e0i to\u00e1n cho Devrel nh\u01b0 t\u1ee5i m\u00ecnh \ud83e\udd72. V\u00e0 c\u00e1ch hi\u1ec7u qu\u1ea3 nh\u1ea5t \u0111\u1ec3 k\u00e9o dev truy\u1ec1n th\u1ed1ng v\u00e0o blockchain ch\u00ednh l\u00e0 cho h\u1ecd d\u00f9ng l\u1ea1i nh\u1eefng ng\u00f4n ng\u1eef h\u1ecd \u0111\u00e3 quen thu\u1ed9c nh\u01b0 Rust ho\u1eb7c C++. Nhi\u1ec1u h\u1ec7 sinh th\u00e1i non-EVM nh\u01b0 Solana, Cosmos \u0111\u00e3 \u0111i theo h\u01b0\u1edbng n\u00e0y, v\u1edbi Rust g\u1ea7n nh\u01b0 tr\u1edf th\u00e0nh \"ti\u00eau chu\u1ea9n\" \u0111\u1ec3 vi\u1ebft smart contract. C\u00f2n b\u00ean EVM, tr\u01b0\u1edbc gi\u1edd v\u1eabn ph\u1ea3i x\u00e0i Solidity. Nh\u01b0ng gi\u1edd th\u00ec kh\u00e1c r\u1ed3i, v\u00ec Arbitrum Stylus cho ph\u00e9p dev vi\u1ebft smart contract b\u1eb1ng Rust ho\u1eb7c C++ v\u00e0 deploy th\u1eb3ng l\u00ean chain EVM-compatible nh\u01b0 th\u01b0\u1eddng. M\u1ed9t step cho ph\u00e9p \u0111\u1ec3 x\u00f3a b\u1ecf r\u00e0o c\u1ea3n ng\u00f4n ng\u1eef v\u00e0 m\u1edf c\u1eeda cho dev web2.","title":"Motivation for Arbitrum Stylus"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/00_Recap%20my%20first%20time%20share%20about%20Stylus/#lam-sao-e-smart-contract-execution-co-the-hieu-qua-hon","text":"Khi c\u00e1c \u1ee9ng d\u1ee5ng phi t\u1eadp trung (dApps) b\u1eaft \u0111\u1ea7u scale, nhu c\u1ea7u x\u1eed l\u00fd on-chain c\u0169ng t\u0103ng theo \u0111\u1eb7c bi\u1ec7t l\u00e0 tr\u00ean Ethereum . Nh\u01b0ng c\u0169ng ch\u00ednh nh\u1edd \u00e1p l\u1ef1c n\u00e0y m\u00e0 nhi\u1ec1u l\u00e0n s\u00f3ng s\u00e1ng t\u1ea1o \u0111\u1ec3 scale blockchain \u0111\u00e3 n\u1ed5 ra v\u00e0 Arbitrum l\u00e0 m\u1ed9t trong nh\u1eefng c\u00e1i t\u00ean n\u1ed5i b\u1eadt v\u1edbi lo\u1ea1t solutions nh\u01b0 Arbitrum One (Layer2 chain) v\u00e0 c\u00f4ng ngh\u1ec7 Arbitrum Nitro . N\u1ebfu nh\u01b0 c\u00e1c gi\u1ea3i ph\u00e1p tr\u01b0\u1edbc ch\u1ee7 y\u1ebfu t\u1ed1i \u01b0u theo ki\u1ec3u g\u1ed9p nhi\u1ec1u transaction l\u1ea1i (inter-transactional optimization), th\u00ec Stylus s\u1ebd t\u1ed1i \u01b0u t\u1eebng transaction \u0111\u01b0\u1ee3c x\u1eed l\u00fd t\u1eeb b\u00ean trong (intra-transactional). C\u1ee5 th\u1ec3 h\u01a1n, Stylus cho ph\u00e9p smart contract ch\u1ea1y b\u1eb1ng WebAssembly (WASM) . V\u1edbi k\u1ebft qu\u1ea3 n\u00e0y th\u00ec Contract Stylus s\u1ebd c\u00f3 th\u1ec3 ch\u1ea1y nhanh h\u01a1n nhi\u1ec1u l\u1ea7n, gi\u00fap gi\u1ea3m gas v\u00e0 kh\u1ea3 n\u0103ng s\u1eed d\u1ee5ng memory","title":"L\u00e0m sao \u0111\u1ec3 \"Smart Contract Execution\" c\u00f3 th\u1ec3 hi\u1ec7u qu\u1ea3 h\u01a1n ?"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/00_Recap%20my%20first%20time%20share%20about%20Stylus/#stylus-cau-noi-giua-wasm-va-evm","text":"\u0110\u1ec3 hi\u1ec3u v\u00ec sao Stylus m\u1ed9t ph\u1ea7n c\u1ee7a h\u1ec7 sinh th\u00e1i Arbitrum l\u1ea1i hi\u1ec7u qu\u1ea3 v\u00e0 d\u1ec5 m\u1edf r\u1ed9ng (composable) h\u01a1n so v\u1edbi c\u00e1c engine EVM truy\u1ec1n th\u1ed1ng, ta c\u1ea7n b\u1eaft \u0111\u1ea7u t\u1eeb n\u1ec1n t\u1ea3ng c\u00f4ng ngh\u1ec7 m\u00e0 Stylus s\u1eed d\u1ee5ng: WebAssembly (WASM) . WebAssembly , hay WASM, l\u00e0 m\u1ed9t d\u1ea1ng ng\u00f4n ng\u1eef d\u1ea1ng assembly \u2013 t\u1ee9c l\u00e0 ng\u00f4n ng\u1eef \u1edf m\u1ee9c th\u1ea5p, g\u1ea7n v\u1edbi m\u00e1y, d\u1ea1ng m\u00e3 nh\u1ecb ph\u00e2n (binary) c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c thi tr\u1ef1c ti\u1ebfp b\u1edfi tr\u00ecnh duy\u1ec7t ho\u1eb7c m\u00e1y \u1ea3o. Kh\u00e1c v\u1edbi c\u00e1c ng\u00f4n ng\u1eef c\u1ea5p cao nh\u01b0 Rust, C++, hay Go v\u1ed1n h\u01b0\u1edbng \u0111\u1ebfn con ng\u01b0\u1eddi \u0111\u1ecdc hi\u1ec3u, nh\u1eefng ng\u00f4n ng\u1eef n\u00e0y c\u1ea7n ph\u1ea3i bi\u00ean d\u1ecbch (compile) xu\u1ed1ng WASM tr\u01b0\u1edbc khi c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c thi. Ch\u00ednh v\u00ec t\u00ednh ch\u1ea5t portable (di \u0111\u1ed9ng), modular (m\u00f4-\u0111un h\u00f3a) v\u00e0 hi\u1ec7u su\u1ea5t cao , WASM ng\u00e0y c\u00e0ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\u00e3i ngo\u00e0i m\u00f4i tr\u01b0\u1eddng web, bao g\u1ed3m c\u1ea3 trong blockchain v\u00e0 c\u00e1c VM (Virtual Machines) hi\u1ec7n \u0111\u1ea1i. V\u1edbi n\u00e2ng c\u1ea5p Arbitrum Nitro (\u0110\u1ecdc th\u00eam \u1edf Arbitrum_intro.md ), m\u1ecdi tranh ch\u1ea5p (dispute) trong h\u1ec7 th\u1ed1ng \u0111\u1ec1u \u0111\u01b0\u1ee3c x\u1eed l\u00fd b\u1eb1ng c\u00e1ch th\u1ef1c thi l\u1ea1i ch\u01b0\u01a1ng tr\u00ecnh th\u00f4ng qua WASM-based fraud proofs . \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 b\u1ea5t k\u1ef3 \u0111o\u1ea1n m\u00e3 n\u00e0o \u0111\u01b0\u1ee3c bi\u00ean d\u1ecbch xu\u1ed1ng WASM \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c x\u1eed l\u00fd trong h\u1ec7 th\u1ed1ng b\u1eb1ng c\u00e1ch ch\u1ee9ng minh gian l\u1eadn (fraud proof) m\u1ed9t c\u00e1ch x\u00e1c minh \u0111\u01b0\u1ee3c on-chain. D\u1ef1a tr\u00ean n\u1ec1n t\u1ea3ng \u0111\u00f3, Arbitrum Stylus \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng nh\u1eb1m m\u1edf r\u1ed9ng kh\u1ea3 n\u0103ng th\u1ef1c thi contract b\u1eb1ng c\u00e1ch t\u00edch h\u1ee3p m\u1ed9t WASM execution engine v\u00e0o h\u1ec7 th\u1ed1ng hi\u1ec7n c\u00f3. Engine n\u00e0y \u0111\u01b0\u1ee3c tri\u1ec3n khai tr\u00ean n\u1ec1n t\u1ea3ng Wasmer , m\u1ed9t trong nh\u1eefng tr\u00ecnh th\u1ef1c thi WASM hi\u1ec7u su\u1ea5t cao h\u00e0ng \u0111\u1ea7u hi\u1ec7n nay. So v\u1edbi m\u00e1y \u1ea3o Ethereum (EVM) s\u1eed d\u1ee5ng Geth, Wasmer c\u00f3 kh\u1ea3 n\u0103ng th\u1ef1c thi nhanh h\u01a1n \u0111\u00e1ng k\u1ec3. V\u1edbi vi\u1ec7c k\u1ebft h\u1ee3p c\u1ea3 engine th\u1ef1c thi (Wasmer) v\u00e0 engine x\u00e1c minh (fraud prover t\u1eeb Nitro), Stylus cho ph\u00e9p c\u00e1c smart contract: * \u0110\u01b0\u1ee3c vi\u1ebft b\u1eb1ng ng\u00f4n ng\u1eef ph\u1ed5 th\u00f4ng nh\u01b0 Rust ho\u1eb7c C++ * \u0110\u01b0\u1ee3c compiple sang WASM * v\u00e0 \u0111\u01b0\u1ee3c th\u1ef1c thi trong m\u00f4i tr\u01b0\u1eddng trustless. Thay v\u00ec gi\u1edbi h\u1ea1n trong ph\u1ea1m vi Solidity v\u00e0 EVM bytecode, anh em dev c\u00f3 th\u1ec3 t\u1eadn d\u1ee5ng c\u00e1c ng\u00f4n ng\u1eef truy\u1ec1n th\u1ed1ng v\u0111\u1ec3 tri\u1ec3n khai c\u00e1c \u1ee9ng d\u1ee5ng Web3 hi\u1ec7u su\u1ea5t cao tr\u00ean Arbitrum.","title":"Stylus: C\u1ea7u n\u1ed1i gi\u1eefa WASM v\u00e0 EVM"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/00_Recap%20my%20first%20time%20share%20about%20Stylus/#tinh-nhat-quan-trong-evm-engine-cua-stylus","text":"\u0110\u1ecdc \u0111\u1ebfn \u0111\u00e2y, b\u1ea1n c\u00f3 th\u1ec3 th\u1eafc m\u1eafc l\u00e0 l\u00e0m sao n\u00f3 qu\u1ea3n l\u00fd \u0111\u01b0\u1ee3c hai m\u00e1y \u1ea3o kh\u00e1c nhau? Stylus l\u00e0m sao bi\u1ebft contract n\u00e0o ch\u1ea1y b\u1eb1ng EVM? Contract n\u00e0o ch\u1ea1y b\u1eb1ng WASM? V\u00e0 l\u00e0m sao \u0111\u1ec3 hai b\u00ean t\u01b0\u01a1ng t\u00e1c kh\u00f4ng b\u1ecb l\u1ec7ch tr\u1ea1ng th\u00e1i? T\u1eeb h\u00ecnh minh ho\u1ea1 tr\u00ean, th\u00ec m\u1ecdi ng\u01b0\u1eddi c\u00f3 th\u1ec3 hi\u1ec3u Stylus \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf v\u1edbi hai m\u00f4i tr\u01b0\u1eddng th\u1ef1c thi song song: EVM Engine , s\u1eed d\u1ee5ng Geth \u0111\u1ec3 ch\u1ea1y c\u00e1c contract vi\u1ebft b\u1eb1ng Solidity (ho\u1eb7c c\u00e1c ng\u00f4n ng\u1eef compile sang EVM bytecode). WASM Engine : s\u1eed d\u1ee5ng Wasmer \u0111\u1ec3 ch\u1ea1y c\u00e1c contract vi\u1ebft b\u1eb1ng Rust ho\u1eb7c c\u00e1c ng\u00f4n ng\u1eef WASM-compatible. \u0110\u1ec3 c\u1ea3 hai engine n\u00e0y ho\u1ea1t \u0111\u1ed9ng \u0111\u1ed3ng th\u1eddi m\u00e0 kh\u00f4ng g\u00e2y xung \u0111\u1ed9t, h\u1ec7 th\u1ed1ng c\u1ea7n \u0111\u1ea3m b\u1ea3o t\u00ednh nh\u1ea5t qu\u00e1n (coherence) trong c\u00e1ch truy c\u1eadp v\u00e0 c\u1eadp nh\u1eadt tr\u1ea1ng th\u00e1i on-chain. Khi vi\u1ebft smart contract b\u1eb1ng Solidity, n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c compile ra EVM bytecode nh\u01b0 b\u00ecnh th\u01b0\u1eddng. Khi d\u00f9ng Rust ho\u1eb7c ng\u00f4n ng\u1eef WASM-compatible, contract c\u1ee7a b\u1ea1n s\u1ebd \u0111\u01b0\u1ee3c compile ra WASM bytecode , nh\u01b0ng c\u00f3 g\u1eafn th\u00eam m\u1ed9t ph\u1ea7n g\u1ecdi l\u00e0 \u201cheader\u201d \u1edf \u0111\u1ea7u ngh\u0129a l\u00e0 gi\u1ed1ng nh\u01b0 nh\u00e3n \u0111\u1ec3 Stylus bi\u1ebft \u201ccontract n\u00e0y l\u00e0 WASM\u201d. Thi\u1ebft k\u1ebf n\u00e0y gi\u00fap Stylus t\u1ef1 \u0111\u1ed9ng \u0111i\u1ec1u h\u01b0\u1edbng ch\u00ednh x\u00e1c gi\u1eefa hai m\u00f4i tr\u01b0\u1eddng th\u1ef1c thi m\u00e0 kh\u00f4ng c\u1ea7n dev ph\u1ea3i can thi\u1ec7p th\u1ee7 c\u00f4ng. Kh\u00f4ng ch\u1ec9 v\u1eady, n\u00f3 c\u00f2n m\u1edf ra kh\u1ea3 n\u0103ng interop (t\u01b0\u01a1ng t\u00e1c) cao: Contract vi\u1ebft b\u1eb1ng WASM c\u00f3 th\u1ec3 g\u1ecdi contract Solidity. Contract Solidity c\u0169ng c\u00f3 th\u1ec3 g\u1ecdi ng\u01b0\u1ee3c l\u1ea1i contract WASM. \u0110\u00e2y l\u00e0 \u0111i\u1ec3m kh\u00e1c bi\u1ec7t l\u1edbn gi\u1eefa Stylus v\u00e0 c\u00e1c chain WASM kh\u00e1c. Stylus kh\u00f4ng ch\u1ec9 th\u00eam m\u1ed9t engine m\u1edbi, m\u00e0 c\u00f2n \u0111\u1ea3m b\u1ea3o s\u1ef1 h\u1ee3p nh\u1ea5t li\u1ec1n m\u1ea1ch v\u1edbi h\u1ec7 EVM hi\u1ec7n c\u00f3 , gi\u00fap gi\u1eef nguy\u00ean kh\u1ea3 n\u0103ng t\u01b0\u01a1ng th\u00edch ng\u01b0\u1ee3c (backward compatibility) v\u00e0 gi\u00fap c\u00e1c contract WASM t\u1eadn d\u1ee5ng \u0111\u01b0\u1ee3c thanh kho\u1ea3n c\u1ee7a h\u1ec7 sinh th\u00e1i EVM (DeFi, NFT, token\u2026) . C\u00f3 th\u1ec3 h\u00ecnh dung blockchain nh\u01b0 m\u1ed9t \u201cworld state machine\u201d n\u01a1i m\u1ecdi giao d\u1ecbch, g\u1ecdi contract \u0111\u1ec1u l\u00e0m thay \u0111\u1ed5i tr\u1ea1ng th\u00e1i global. Tr\u00ean Ethereum v\u00e0 Arbitrum, tr\u1ea1ng th\u00e1i n\u00e0y \u0111\u01b0\u1ee3c l\u01b0u d\u01b0\u1edbi d\u1ea1ng Trie structure l\u00e0 m\u1ed9t d\u1ea1ng c\u00e2y d\u1eef li\u1ec7u d\u00f9ng \u0111\u1ec3 l\u01b0u tr\u1eef, truy xu\u1ea5t d\u1eef li\u1ec7u hi\u1ec7u qu\u1ea3 v\u00e0 d\u1ec5 x\u00e1c minh. Trong Stylus, c\u1ea3 EVM engine v\u00e0 WASM engine \u0111\u1ec1u d\u00f9ng chung Trie n\u00e0y \u0111\u1ec3 \u0111\u1ecdc v\u00e0 ghi d\u1eef li\u1ec7u. \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a b\u1ea5t k\u1ec3 khi g\u1ecdi contract Solidity hay Rust, k\u1ebft qu\u1ea3 cu\u1ed1i c\u00f9ng \u0111\u1ec1u c\u1eadp nh\u1eadt v\u00e0o c\u00f9ng m\u1ed9t tr\u1ea1ng th\u00e1i blockchain.","title":"T\u00ednh nh\u1ea5t qu\u00e1n trong EVM+ Engine c\u1ee7a Stylus"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/00_Recap%20my%20first%20time%20share%20about%20Stylus/#stylus-save-phan-cost-nhu-the-nao","text":"M\u00ecnh bi\u1ebft l\u00e0 Stylus c\u00f3 hai engine ch\u1ea1y song song l\u00e0 EVM v\u00e0 WASM. Gi\u1edd ta s\u1ebd \u0111i s\u00e2u v\u00e0o l\u00fd do t\u1ea1i sao WASM l\u1ea1i ti\u1ebft ki\u1ec7m gas \u0111\u1ebfn v\u1eady . \u0110\u1ec3 hi\u1ec3u r\u00f5 \u0111i\u1ec1u n\u00e0y, h\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng m\u00ecnh c\u1ea7n th\u1ef1c hi\u1ec7n ph\u00e9p t\u00ednh \u0111\u01a1n gi\u1ea3n: 2 + 3. N\u1ebfu d\u00f9ng EVM, chu\u1ed7i thao t\u00e1c \u0111\u1ec3 ho\u00e0n th\u00e0nh ph\u00e9p c\u1ed9ng n\u00e0y kh\u00f4ng ch\u1ec9 l\u00e0 c\u1ed9ng hai s\u1ed1 m\u00e0 ph\u1ea3i tr\u1ea3 gas cho r\u1ea5t nhi\u1ec1u b\u01b0\u1edbc h\u1ec7 th\u1ed1ng nh\u01b0 truy xu\u1ea5t b\u1ea3ng nh\u1edb, pop s\u1ed1 ra kh\u1ecfi stack, x\u1eed l\u00fd ph\u00e9p c\u1ed9ng, r\u1ed3i push k\u1ebft qu\u1ea3 tr\u1edf l\u1ea1i stack . T\u1ee9c l\u00e0 d\u00f9 b\u1ea1n ch\u1ec9 c\u1ea7n c\u1ed9ng hai con s\u1ed1, b\u1ea1n v\u1eabn ph\u1ea3i tr\u1ea3 gas cho c\u1ea3 \u0111\u1ed1ng b\u01b0\u1edbc ph\u1ee5 t\u1ed1n k\u00e9m, m\u00e0 ch\u1ec9 c\u00f3 \u0111\u00fang m\u1ed9t b\u01b0\u1edbc th\u1ef1c s\u1ef1 l\u00e0m c\u00f4ng vi\u1ec7c c\u1ed9ng. Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu b\u1ea1n th\u1ef1c hi\u1ec7n c\u00f9ng ph\u00e9p t\u00ednh \u0111\u00f3 b\u1eb1ng WASM trong Stylus, n\u00f3 ch\u1ec9 c\u1ea7n m\u1ed9t l\u1ec7nh m\u00e1y duy nh\u1ea5t \u2013 g\u1ecdi th\u1eb3ng t\u1edbi l\u1ec7nh ADD c\u1ee7a CPU nh\u01b0 x86 hay ARM. Kh\u00f4ng c\u1ea7n stack, kh\u00f4ng c\u1ea7n x\u1eed l\u00fd ph\u1ee5. K\u1ebft qu\u1ea3 l\u00e0 thao t\u00e1c c\u1ed9ng n\u00e0y r\u1ebb h\u01a1n g\u1ea5p 150 l\u1ea7n so v\u1edbi ch\u1ea1y b\u1eb1ng EVM. V\u00e0 v\u00ec WASM qu\u00e1 r\u1ebb, Stylus c\u00f2n t\u1ea1o ra m\u1ed9t \u0111\u01a1n v\u1ecb \u0111o gas ri\u00eang g\u1ecdi l\u00e0 ink , n\u01a1i 1 ink ch\u1ec9 b\u1eb1ng 1 ph\u1ea7n 10.000 gas , \u0111\u1ec3 \u0111o nh\u1eefng ph\u00e9p t\u00ednh si\u00eau nh\u1ecf m\u1ed9t c\u00e1ch ch\u00ednh x\u00e1c h\u01a1n. B\u1ea1n th\u1eadm ch\u00ed c\u00f3 th\u1ec3 c\u1ea5u h\u00ecnh \u0111\u01a1n v\u1ecb n\u00e0y n\u1ebfu b\u1ea1n \u0111ang ch\u1ea1y m\u1ed9t chain ri\u00eang. Tuy nhi\u00ean, \u0111\u1ec3 kh\u1edfi ch\u1ea1y m\u00f4i tr\u01b0\u1eddng WASM c\u1ee7a Stylus, b\u1ea1n c\u1ea7n tr\u1ea3 m\u1ed9t chi ph\u00ed c\u1ed1 \u0111\u1ecbnh ban \u0111\u1ea7u l\u00e0 114 tri\u1ec7u gas . Ngo\u00e0i ra, m\u1ed7i l\u1ea7n g\u1ecdi contract Stylus c\u0169ng t\u1ed1n th\u00eam t\u1eeb 128 \u0111\u1ebfn 2048 gas. N\u00ean n\u1ebfu b\u1ea1n ch\u1ec9 mu\u1ed1n d\u00f9ng Stylus \u0111\u1ec3 c\u1ed9ng 2 s\u1ed1, th\u00ec kh\u00f4ng \u0111\u00e1ng. Nh\u01b0ng n\u1ebfu \u0111ang x\u00e2y nh\u1eefng \u1ee9ng d\u1ee5ng c\u1ea7n x\u1eed l\u00fd nhi\u1ec1u d\u1eef li\u1ec7u, d\u00f9ng nhi\u1ec1u RAM, hay t\u00ednh to\u00e1n ph\u1ee9c t\u1ea1p nh\u01b0 AI ho\u1eb7c crypto-heavy apps , th\u00ec Stylus l\u00e0 gi\u1ea3i ph\u00e1p t\u1ed1t. V\u00ed d\u1ee5, vi\u1ec7c c\u1ea5p ph\u00e1t 3.8MB b\u1ed9 nh\u1edb trong EVM s\u1ebd t\u1ed1n t\u1edbi 32 tri\u1ec7u gas, nh\u01b0ng trong Stylus ch\u1ec9 t\u1ed1n kho\u1ea3ng 64 ngh\u00ecn gas t\u1ee9c l\u00e0 ti\u1ebft ki\u1ec7m g\u1ea5p 500 l\u1ea7n . \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 nh\u1eefng \u1ee9ng d\u1ee5ng memory-heavy m\u00e0 EVM tr\u01b0\u1edbc gi\u1edd kh\u00f4ng th\u1ec3 x\u1eed l\u00fd \u0111\u01b0\u1ee3c th\u00ec v\u1edbi Stylus, kh\u00f4ng nh\u1eefng x\u1eed l\u00fd \u0111\u01b0\u1ee3c m\u00e0 c\u00f2n c\u1ef1c k\u1ef3 r\u1ebb.","title":"Stylus save ph\u1ea7n cost nh\u01b0 th\u1ebf n\u00e0o ?"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/00_Recap%20my%20first%20time%20share%20about%20Stylus/#github-assignments","text":"I have prepared the basic challenges for builders participating in the Arbitrum workshop: https://github.com/vbi-academy/stylus-workshop-basic","title":"Github assignments"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/00_Recap%20my%20first%20time%20share%20about%20Stylus/#reference","text":"[1]: A gentle introduction: Stylus [2]: ETH State Trie Explained [3] gas metering","title":"Reference:"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/ArbOS/","text":"ArbOS l\u00e0 g\u00ec? ArbOS l\u00e0 h\u1ec7 \u0111i\u1ec1u h\u00e0nh ch\u1ea1y tr\u00ean chu\u1ed7i Layer 2 c\u1ee7a Arbitrum, \u0111\u00f3ng vai tr\u00f2 \u0111i\u1ec1u ph\u1ed1i c\u00e1c ho\u1ea1t \u0111\u1ed9ng c\u1ed1t l\u00f5i c\u1ee7a m\u1ea1ng l\u01b0\u1edbi. ArbOS qu\u1ea3n l\u00fd qu\u00e1 tr\u00ecnh v\u1eadn h\u00e0nh c\u1ee7a chain, Lifecycle c\u1ee7a c\u00e1c smart contract, c\u01a1 ch\u1ebf b\u1ea3o m\u1eadt, c\u0169ng nh\u01b0 nhi\u1ec1u ch\u1ee9c n\u0103ng n\u1ec1n t\u1ea3ng kh\u00e1c gi\u00fap duy tr\u00ec s\u1ef1 \u1ed5n \u0111\u1ecbnh v\u00e0 hi\u1ec7u qu\u1ea3 c\u1ee7a h\u1ec7 th\u1ed1ng. To\u00e0n b\u1ed9 m\u00e3 ngu\u1ed3n \u0111\u00e3 \u0111\u01b0\u1ee3c vi\u1ebft l\u1ea1i b\u1eb1ng ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh Go, thay v\u00ec c\u00e1c phi\u00ean b\u1ea3n tr\u01b0\u1edbc \u0111\u00f3 s\u1eed d\u1ee5ng m\u1ed9t ph\u1ea7n l\u1edbn m\u00e3 Assembly. Vi\u1ec7c vi\u1ebft l\u1ea1i n\u00e0y kh\u00f4ng ch\u1ec9 gi\u00fap h\u1ec7 \u0111i\u1ec1u h\u00e0nh tr\u1edf n\u00ean d\u1ec5 b\u1ea3o tr\u00ec v\u00e0 m\u1edf r\u1ed9ng h\u01a1n m\u00e0 c\u00f2n t\u1ea1o \u0111i\u1ec1u ki\u1ec7n \u0111\u1ec3 c\u1ea3i thi\u1ec7n kh\u1ea3 n\u0103ng t\u01b0\u01a1ng t\u00e1c gi\u1eefa Layer 2 (Arbitrum) v\u00e0 Layer 1 (Ethereum). Nh\u1edd b\u1ea3n n\u00e2ng c\u1ea5p n\u00e0y, Arbitrum c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n c\u00e1c t\u00e1c v\u1ee5 cross-chain hi\u1ec7u qu\u1ea3 h\u01a1n, ch\u1eb3ng h\u1ea1n nh\u01b0 truy\u1ec1n d\u1eef li\u1ec7u gi\u1eefa c\u00e1c layer, k\u00edch ho\u1ea1t event tr\u00ean Ethereum t\u1eeb Arbitrum, ho\u1eb7c ng\u01b0\u1ee3c l\u1ea1i \u2013 t\u1ea5t c\u1ea3 \u0111\u1ec1u nhanh h\u01a1n, b\u1ea3o m\u1eadt h\u01a1n v\u00e0 \u00edt t\u1ed1n gas h\u01a1n.","title":"ArbOS l\u00e0 g\u00ec?"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/ArbOS/#arbos-la-gi","text":"ArbOS l\u00e0 h\u1ec7 \u0111i\u1ec1u h\u00e0nh ch\u1ea1y tr\u00ean chu\u1ed7i Layer 2 c\u1ee7a Arbitrum, \u0111\u00f3ng vai tr\u00f2 \u0111i\u1ec1u ph\u1ed1i c\u00e1c ho\u1ea1t \u0111\u1ed9ng c\u1ed1t l\u00f5i c\u1ee7a m\u1ea1ng l\u01b0\u1edbi. ArbOS qu\u1ea3n l\u00fd qu\u00e1 tr\u00ecnh v\u1eadn h\u00e0nh c\u1ee7a chain, Lifecycle c\u1ee7a c\u00e1c smart contract, c\u01a1 ch\u1ebf b\u1ea3o m\u1eadt, c\u0169ng nh\u01b0 nhi\u1ec1u ch\u1ee9c n\u0103ng n\u1ec1n t\u1ea3ng kh\u00e1c gi\u00fap duy tr\u00ec s\u1ef1 \u1ed5n \u0111\u1ecbnh v\u00e0 hi\u1ec7u qu\u1ea3 c\u1ee7a h\u1ec7 th\u1ed1ng. To\u00e0n b\u1ed9 m\u00e3 ngu\u1ed3n \u0111\u00e3 \u0111\u01b0\u1ee3c vi\u1ebft l\u1ea1i b\u1eb1ng ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh Go, thay v\u00ec c\u00e1c phi\u00ean b\u1ea3n tr\u01b0\u1edbc \u0111\u00f3 s\u1eed d\u1ee5ng m\u1ed9t ph\u1ea7n l\u1edbn m\u00e3 Assembly. Vi\u1ec7c vi\u1ebft l\u1ea1i n\u00e0y kh\u00f4ng ch\u1ec9 gi\u00fap h\u1ec7 \u0111i\u1ec1u h\u00e0nh tr\u1edf n\u00ean d\u1ec5 b\u1ea3o tr\u00ec v\u00e0 m\u1edf r\u1ed9ng h\u01a1n m\u00e0 c\u00f2n t\u1ea1o \u0111i\u1ec1u ki\u1ec7n \u0111\u1ec3 c\u1ea3i thi\u1ec7n kh\u1ea3 n\u0103ng t\u01b0\u01a1ng t\u00e1c gi\u1eefa Layer 2 (Arbitrum) v\u00e0 Layer 1 (Ethereum). Nh\u1edd b\u1ea3n n\u00e2ng c\u1ea5p n\u00e0y, Arbitrum c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n c\u00e1c t\u00e1c v\u1ee5 cross-chain hi\u1ec7u qu\u1ea3 h\u01a1n, ch\u1eb3ng h\u1ea1n nh\u01b0 truy\u1ec1n d\u1eef li\u1ec7u gi\u1eefa c\u00e1c layer, k\u00edch ho\u1ea1t event tr\u00ean Ethereum t\u1eeb Arbitrum, ho\u1eb7c ng\u01b0\u1ee3c l\u1ea1i \u2013 t\u1ea5t c\u1ea3 \u0111\u1ec1u nhanh h\u01a1n, b\u1ea3o m\u1eadt h\u01a1n v\u00e0 \u00edt t\u1ed1n gas h\u01a1n.","title":"ArbOS l\u00e0 g\u00ec?"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Simple-NFT/","text":"Simple NFT Example Objective: Build and deploy smart contracts to create, manage, and interact with NFTs. Use a React-based frontend to enable users to mint NFTs, assign them to specific addresses, check token ownership, and burn tokens directly","title":"Simple NFT Example"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Simple-NFT/#simple-nft-example","text":"Objective: Build and deploy smart contracts to create, manage, and interact with NFTs. Use a React-based frontend to enable users to mint NFTs, assign them to specific addresses, check token ownership, and burn tokens directly","title":"Simple NFT Example"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Arbitrum%20Classic/AVM/","text":"AVM: Arbitrum Virtual Machine AVM vi\u1ebft t\u1eaft c\u1ee7a Arbitrum Virtual Machine l\u00e0 m\u1ed9t m\u00e1y \u1ea3o \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf ri\u00eang cho chu\u1ed7i Arbitrum Classic nh\u1eb1m ph\u1ee5c v\u1ee5 vi\u1ec7c th\u1ef1c thi c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh (smart contract) v\u00e0 qu\u1ea3n l\u00fd tr\u1ea1ng th\u00e1i c\u1ee7a blockchain. Trong l\u0129nh v\u1ef1c blockchain, virtual machine (VM) ( b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam trong blockchain 101 course module 3 c\u1ee7a m\u00ecnh ) l\u00e0 m\u1ed9t l\u1edbp ph\u1ea7n m\u1ec1m ho\u1ea1t \u0111\u1ed9ng nh\u01b0 m\u00f4i tr\u01b0\u1eddng th\u1ef1c thi c\u00e1c h\u1ee3p \u0111\u1ed3ng th\u00f4ng minh. N\u00f3 m\u00f4 ph\u1ecfng m\u1ed9t \u201cm\u00e1y t\u00ednh \u1ea3o\u201d, cho ph\u00e9p ch\u1ea1y c\u00e1c \u0111o\u1ea1n m\u00e3 \u0111\u1ed9c l\u1eadp v\u1edbi ph\u1ea7n c\u1ee9ng th\u1ef1c t\u1ebf. VM ch\u00ednh l\u00e0 n\u01a1i m\u00e0 logic c\u1ee7a c\u00e1c smart contract \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n, quy\u1ebft \u0111\u1ecbnh c\u00e1ch d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c x\u1eed l\u00fd v\u00e0 tr\u1ea1ng th\u00e1i c\u1ee7a chu\u1ed7i \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt. Arbitrum Channels work nh\u01b0 th\u1ebf n\u00e0o ? Thi\u1ebft k\u1ebf c\u1ee7a Arbitrum \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng d\u1ef1a tr\u00ean ba th\u00e0nh ph\u1ea7n c\u1ed1t l\u00f5i: Compiler, EthBridge, v\u00e0 Validator s. Ba th\u00e0nh ph\u1ea7n n\u00e0y ph\u1ed1i h\u1ee3p ch\u1eb7t ch\u1ebd v\u1edbi nhau \u0111\u1ec3 mang l\u1ea1i m\u1ed9t Layer 2 nhanh, t\u01b0\u01a1ng th\u00edch v\u1edbi Ethereum, \u0111\u1ed3ng th\u1eddi b\u1ea3o \u0111\u1ea3m AnyTrust Guarantee t\u1ee9c l\u00e0 m\u1ed9t Arbitrum Virtual Machine s\u1ebd th\u1ef1c thi \u0111\u00fang n\u1ebfu ch\u1ec9 c\u1ea7n m\u1ed9t validator ho\u1ea1t \u0111\u1ed9ng trung th\u1ef1c. Trong \u0111\u00f3, Arbitrum Compiler l\u00e0 c\u00f4ng c\u1ee5 chuy\u00ean bi\u1ec7t d\u00f9ng \u0111\u1ec3 bi\u00ean d\u1ecbch m\u1ed9t nh\u00f3m smart contract (vi\u1ebft b\u1eb1ng Solidity) th\u00e0nh m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh th\u1ef1c thi duy nh\u1ea5t, c\u00f3 th\u1ec3 ch\u1ea1y tr\u00ean Arbitrum Virtual Machine (AVM). T\u1ea1i sao Arbitrum t\u1ea1o ri\u00eang AVM thay v\u00ec d\u00f9ng EVM? B\u1edfi v\u00ec thi\u1ebft k\u1ebf m\u00e1y \u1ea3o ri\u00eang gi\u00fap gi\u1ea3m footprint (kh\u1ed1i l\u01b0\u1ee3ng d\u1eef li\u1ec7u) c\u1ea7n ghi l\u00ean chu\u1ed7i Ethereum, t\u1eeb \u0111\u00f3 t\u1ed1i \u01b0u t\u1ed1c \u0111\u1ed9 v\u00e0 gi\u1ea3m chi ph\u00ed. Trong th\u1ef1c t\u1ebf, nhi\u1ec1u dApp kh\u00f4ng ch\u1ec9 c\u00f3 m\u1ed9t smart contract m\u00e0 l\u00e0 m\u1ed9t nh\u00f3m contract t\u01b0\u01a1ng t\u00e1c v\u1edbi nhau. Arbitrum Compiler cho ph\u00e9p g\u1ed9p t\u1ea5t c\u1ea3 c\u00e1c contract \u0111\u00f3 th\u00e0nh m\u1ed9t \u201ckh\u1ed1i ch\u01b0\u01a1ng tr\u00ecnh duy nh\u1ea5t c\u00f3 th\u1ec3 tri\u1ec3n khai\" (G\u1ecdi l\u00e0 single deployable unit nh\u01b0ng ch\u01b0a bi\u1ebft d\u1ecbch sao), v\u00e0 khi ch\u01b0\u01a1ng tr\u00ecnh n\u00e0y \u0111\u01b0\u1ee3c tri\u1ec3n khai v\u00e0 ch\u1ea1y, n\u00f3 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Virtual Machine (VM). EthBridge l\u00e0 m\u1ed9t smart contract \u0111\u1eb7c bi\u1ec7t ch\u1ea1y tr\u00ean Ethereum, do Offchain Labs x\u00e2y d\u1ef1ng, \u0111\u00f3ng vai tr\u00f2 l\u00e0 c\u1ea7u n\u1ed1i gi\u1eefa Layer 1 (Ethereum) v\u00e0 Layer 2 (Arbitrum) . Ch\u1ee9c n\u0103ng ch\u00ednh c\u1ee7a EthBridge: * Kh\u1edfi ch\u1ea1y m\u1ed9t Arbitrum VM t\u1eeb Ethereum. * G\u1eedi giao d\u1ecbch t\u1eeb Ethereum xu\u1ed1ng Arbitrum ho\u1eb7c ng\u01b0\u1ee3c l\u1ea1i. * Chuy\u1ec3n ether ho\u1eb7c token t\u1eeb L1 sang L2 v\u00e0 ng\u01b0\u1ee3c l\u1ea1i. * Cung c\u1ea5p API \u0111\u1ecdc d\u1eef li\u1ec7u tr\u1ea1ng th\u00e1i Arbitrum (kh\u00f4ng mutate, t\u1ed1n 0 gas). Ngo\u00e0i ra, EthBridge c\u00f2n c\u00f3 vai tr\u00f2 tr\u1ecdng t\u00e0i n\u1ebfu x\u1ea3y ra tranh ch\u1ea5p gi\u1eefa c\u00e1c validators. Arbitrum s\u1eed d\u1ee5ng c\u01a1 ch\u1ebf Optimistic Rollup k\u1ebft h\u1ee3p v\u1edbi interactive fraud proof , n\u00ean m\u1ecdi tranh ch\u1ea5p \u0111\u1ec1u \u0111\u01b0\u1ee3c gi\u1ea3i quy\u1ebft m\u1ed9t c\u00e1ch nhanh. Validators l\u00e0 nh\u1eefng ng\u01b0\u1eddi ho\u1eb7c node theo d\u00f5i v\u00e0 v\u1eadn h\u00e0nh tr\u1ea1ng th\u00e1i c\u1ee7a m\u1ed9t VM. H\u1ecd l\u00e0 ph\u1ea7n quan tr\u1ecdng c\u1ee7a Arbitrum, nh\u01b0ng ho\u1ea1t \u0111\u1ed9ng g\u1ea7n nh\u01b0 ho\u00e0n to\u00e0n off-chain. M\u1ed7i VM c\u00f3 m\u1ed9t nh\u00f3m validators ri\u00eang do nh\u00e0 ph\u00e1t tri\u1ec3n dApp ch\u1ec9 \u0111\u1ecbnh. C\u00e1c validators m\u00f4 ph\u1ecfng to\u00e0n b\u1ed9 logic c\u1ee7a smart contract, c\u1eadp nh\u1eadt tr\u1ea1ng th\u00e1i li\u00ean t\u1ee5c theo c\u00e1c instruction trong ch\u01b0\u01a1ng tr\u00ecnh \u0111\u00e3 bi\u00ean d\u1ecbch. Tr\u1ea1ng th\u00e1i \u0111\u1ea7y \u0111\u1ee7 c\u1ee7a VM kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u01b0a l\u00ean Ethereum, thay v\u00e0o \u0111\u00f3 ch\u1ec9 c\u00f3 m\u1ed9t hash cryptographic \u0111\u1ea1i di\u1ec7n cho tr\u1ea1ng th\u00e1i \u0111\u00f3, \u0111\u01b0\u1ee3c l\u01b0u b\u1edfi EthBridge. \u0110i\u1ec1u l\u00e0m Arbitrum tr\u1edf n\u00ean \u0111\u1eb7c bi\u1ec7t l\u00e0 cam k\u1ebft AnyTrust ch\u1ec9 c\u1ea7n m\u1ed9t validator trung th\u1ef1c v\u1eabn ho\u1ea1t \u0111\u1ed9ng, to\u00e0n b\u1ed9 ch\u01b0\u01a1ng tr\u00ecnh s\u1ebd ch\u1ea1y ch\u00ednh x\u00e1c, b\u1ea3o to\u00e0n t\u00ednh to\u00e0n v\u1eb9n v\u00e0 an to\u00e0n cho ng\u01b0\u1eddi d\u00f9ng.","title":"AVM: Arbitrum Virtual Machine"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Arbitrum%20Classic/AVM/#avm-arbitrum-virtual-machine","text":"AVM vi\u1ebft t\u1eaft c\u1ee7a Arbitrum Virtual Machine l\u00e0 m\u1ed9t m\u00e1y \u1ea3o \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf ri\u00eang cho chu\u1ed7i Arbitrum Classic nh\u1eb1m ph\u1ee5c v\u1ee5 vi\u1ec7c th\u1ef1c thi c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh (smart contract) v\u00e0 qu\u1ea3n l\u00fd tr\u1ea1ng th\u00e1i c\u1ee7a blockchain. Trong l\u0129nh v\u1ef1c blockchain, virtual machine (VM) ( b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam trong blockchain 101 course module 3 c\u1ee7a m\u00ecnh ) l\u00e0 m\u1ed9t l\u1edbp ph\u1ea7n m\u1ec1m ho\u1ea1t \u0111\u1ed9ng nh\u01b0 m\u00f4i tr\u01b0\u1eddng th\u1ef1c thi c\u00e1c h\u1ee3p \u0111\u1ed3ng th\u00f4ng minh. N\u00f3 m\u00f4 ph\u1ecfng m\u1ed9t \u201cm\u00e1y t\u00ednh \u1ea3o\u201d, cho ph\u00e9p ch\u1ea1y c\u00e1c \u0111o\u1ea1n m\u00e3 \u0111\u1ed9c l\u1eadp v\u1edbi ph\u1ea7n c\u1ee9ng th\u1ef1c t\u1ebf. VM ch\u00ednh l\u00e0 n\u01a1i m\u00e0 logic c\u1ee7a c\u00e1c smart contract \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n, quy\u1ebft \u0111\u1ecbnh c\u00e1ch d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c x\u1eed l\u00fd v\u00e0 tr\u1ea1ng th\u00e1i c\u1ee7a chu\u1ed7i \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt.","title":"AVM: Arbitrum Virtual Machine"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Arbitrum%20Classic/AVM/#arbitrum-channels-work-nhu-the-nao","text":"Thi\u1ebft k\u1ebf c\u1ee7a Arbitrum \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng d\u1ef1a tr\u00ean ba th\u00e0nh ph\u1ea7n c\u1ed1t l\u00f5i: Compiler, EthBridge, v\u00e0 Validator s. Ba th\u00e0nh ph\u1ea7n n\u00e0y ph\u1ed1i h\u1ee3p ch\u1eb7t ch\u1ebd v\u1edbi nhau \u0111\u1ec3 mang l\u1ea1i m\u1ed9t Layer 2 nhanh, t\u01b0\u01a1ng th\u00edch v\u1edbi Ethereum, \u0111\u1ed3ng th\u1eddi b\u1ea3o \u0111\u1ea3m AnyTrust Guarantee t\u1ee9c l\u00e0 m\u1ed9t Arbitrum Virtual Machine s\u1ebd th\u1ef1c thi \u0111\u00fang n\u1ebfu ch\u1ec9 c\u1ea7n m\u1ed9t validator ho\u1ea1t \u0111\u1ed9ng trung th\u1ef1c. Trong \u0111\u00f3, Arbitrum Compiler l\u00e0 c\u00f4ng c\u1ee5 chuy\u00ean bi\u1ec7t d\u00f9ng \u0111\u1ec3 bi\u00ean d\u1ecbch m\u1ed9t nh\u00f3m smart contract (vi\u1ebft b\u1eb1ng Solidity) th\u00e0nh m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh th\u1ef1c thi duy nh\u1ea5t, c\u00f3 th\u1ec3 ch\u1ea1y tr\u00ean Arbitrum Virtual Machine (AVM). T\u1ea1i sao Arbitrum t\u1ea1o ri\u00eang AVM thay v\u00ec d\u00f9ng EVM? B\u1edfi v\u00ec thi\u1ebft k\u1ebf m\u00e1y \u1ea3o ri\u00eang gi\u00fap gi\u1ea3m footprint (kh\u1ed1i l\u01b0\u1ee3ng d\u1eef li\u1ec7u) c\u1ea7n ghi l\u00ean chu\u1ed7i Ethereum, t\u1eeb \u0111\u00f3 t\u1ed1i \u01b0u t\u1ed1c \u0111\u1ed9 v\u00e0 gi\u1ea3m chi ph\u00ed. Trong th\u1ef1c t\u1ebf, nhi\u1ec1u dApp kh\u00f4ng ch\u1ec9 c\u00f3 m\u1ed9t smart contract m\u00e0 l\u00e0 m\u1ed9t nh\u00f3m contract t\u01b0\u01a1ng t\u00e1c v\u1edbi nhau. Arbitrum Compiler cho ph\u00e9p g\u1ed9p t\u1ea5t c\u1ea3 c\u00e1c contract \u0111\u00f3 th\u00e0nh m\u1ed9t \u201ckh\u1ed1i ch\u01b0\u01a1ng tr\u00ecnh duy nh\u1ea5t c\u00f3 th\u1ec3 tri\u1ec3n khai\" (G\u1ecdi l\u00e0 single deployable unit nh\u01b0ng ch\u01b0a bi\u1ebft d\u1ecbch sao), v\u00e0 khi ch\u01b0\u01a1ng tr\u00ecnh n\u00e0y \u0111\u01b0\u1ee3c tri\u1ec3n khai v\u00e0 ch\u1ea1y, n\u00f3 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Virtual Machine (VM). EthBridge l\u00e0 m\u1ed9t smart contract \u0111\u1eb7c bi\u1ec7t ch\u1ea1y tr\u00ean Ethereum, do Offchain Labs x\u00e2y d\u1ef1ng, \u0111\u00f3ng vai tr\u00f2 l\u00e0 c\u1ea7u n\u1ed1i gi\u1eefa Layer 1 (Ethereum) v\u00e0 Layer 2 (Arbitrum) . Ch\u1ee9c n\u0103ng ch\u00ednh c\u1ee7a EthBridge: * Kh\u1edfi ch\u1ea1y m\u1ed9t Arbitrum VM t\u1eeb Ethereum. * G\u1eedi giao d\u1ecbch t\u1eeb Ethereum xu\u1ed1ng Arbitrum ho\u1eb7c ng\u01b0\u1ee3c l\u1ea1i. * Chuy\u1ec3n ether ho\u1eb7c token t\u1eeb L1 sang L2 v\u00e0 ng\u01b0\u1ee3c l\u1ea1i. * Cung c\u1ea5p API \u0111\u1ecdc d\u1eef li\u1ec7u tr\u1ea1ng th\u00e1i Arbitrum (kh\u00f4ng mutate, t\u1ed1n 0 gas). Ngo\u00e0i ra, EthBridge c\u00f2n c\u00f3 vai tr\u00f2 tr\u1ecdng t\u00e0i n\u1ebfu x\u1ea3y ra tranh ch\u1ea5p gi\u1eefa c\u00e1c validators. Arbitrum s\u1eed d\u1ee5ng c\u01a1 ch\u1ebf Optimistic Rollup k\u1ebft h\u1ee3p v\u1edbi interactive fraud proof , n\u00ean m\u1ecdi tranh ch\u1ea5p \u0111\u1ec1u \u0111\u01b0\u1ee3c gi\u1ea3i quy\u1ebft m\u1ed9t c\u00e1ch nhanh. Validators l\u00e0 nh\u1eefng ng\u01b0\u1eddi ho\u1eb7c node theo d\u00f5i v\u00e0 v\u1eadn h\u00e0nh tr\u1ea1ng th\u00e1i c\u1ee7a m\u1ed9t VM. H\u1ecd l\u00e0 ph\u1ea7n quan tr\u1ecdng c\u1ee7a Arbitrum, nh\u01b0ng ho\u1ea1t \u0111\u1ed9ng g\u1ea7n nh\u01b0 ho\u00e0n to\u00e0n off-chain. M\u1ed7i VM c\u00f3 m\u1ed9t nh\u00f3m validators ri\u00eang do nh\u00e0 ph\u00e1t tri\u1ec3n dApp ch\u1ec9 \u0111\u1ecbnh. C\u00e1c validators m\u00f4 ph\u1ecfng to\u00e0n b\u1ed9 logic c\u1ee7a smart contract, c\u1eadp nh\u1eadt tr\u1ea1ng th\u00e1i li\u00ean t\u1ee5c theo c\u00e1c instruction trong ch\u01b0\u01a1ng tr\u00ecnh \u0111\u00e3 bi\u00ean d\u1ecbch. Tr\u1ea1ng th\u00e1i \u0111\u1ea7y \u0111\u1ee7 c\u1ee7a VM kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u01b0a l\u00ean Ethereum, thay v\u00e0o \u0111\u00f3 ch\u1ec9 c\u00f3 m\u1ed9t hash cryptographic \u0111\u1ea1i di\u1ec7n cho tr\u1ea1ng th\u00e1i \u0111\u00f3, \u0111\u01b0\u1ee3c l\u01b0u b\u1edfi EthBridge. \u0110i\u1ec1u l\u00e0m Arbitrum tr\u1edf n\u00ean \u0111\u1eb7c bi\u1ec7t l\u00e0 cam k\u1ebft AnyTrust ch\u1ec9 c\u1ea7n m\u1ed9t validator trung th\u1ef1c v\u1eabn ho\u1ea1t \u0111\u1ed9ng, to\u00e0n b\u1ed9 ch\u01b0\u01a1ng tr\u00ecnh s\u1ebd ch\u1ea1y ch\u00ednh x\u00e1c, b\u1ea3o to\u00e0n t\u00ednh to\u00e0n v\u1eb9n v\u00e0 an to\u00e0n cho ng\u01b0\u1eddi d\u00f9ng.","title":"Arbitrum Channels work nh\u01b0 th\u1ebf n\u00e0o ?"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Arbitrum%20Classic/intro-Arbitrum-Classic/","text":"Arbitrum Classic l\u00e0 g\u00ec? Arbitrum Classic l\u00e0 chu\u1ed7i rollup \u0111\u1ea7u ti\u00ean trong h\u1ec7 sinh th\u00e1i Arbitrum, \u0111\u00f3ng vai tr\u00f2 nh\u01b0 Layer 2, \u0111\u1eb7t n\u1ec1n m\u00f3ng cho c\u00e1c gi\u1ea3i ph\u00e1p m\u1edf r\u1ed9ng quy m\u00f4 sau n\u00e0y. Ngay t\u1eeb khi ra m\u1eaft, Arbitrum Classic \u0111\u00e3 tr\u1edf th\u00e0nh gi\u1ea3i ph\u00e1p Layer 2 ph\u1ed5 bi\u1ebfn nh\u1ea5t, \u0111\u01b0\u1ee3c \u1ee9ng d\u1ee5ng r\u1ed9ng r\u00e3i nh\u1edd kh\u1ea3 n\u0103ng c\u1ea3i thi\u1ec7n hi\u1ec7u su\u1ea5t giao d\u1ecbch v\u00e0 gi\u1ea3m thi\u1ec3u chi ph\u00ed m\u1ed9t c\u00e1ch r\u00f5 r\u1ec7t so v\u1edbi Ethereum. Th\u00f4ng qua c\u00f4ng ngh\u1ec7 Optimistic Rollups , Arbitrum Classic c\u00f3 th\u1ec3 x\u1eed l\u00fd nhi\u1ec1u giao d\u1ecbch h\u01a1n m\u1ed7i gi\u00e2y (higher throughput) v\u00e0 gi\u1ea3m gas fee xu\u1ed1ng m\u1ee9c d\u1ec5 ch\u1ecbu h\u01a1n cho ng\u01b0\u1eddi d\u00f9ng. V\u1ec1 b\u1ea3n ch\u1ea5t, ng\u01b0\u1eddi d\u00f9ng v\u1eabn \u0111ang t\u01b0\u01a1ng t\u00e1c v\u1edbi Ethereum, nh\u01b0ng r\u1ebb h\u01a1n. H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng Elon s\u1ed1ng trong m\u1ed9t th\u00e0nh ph\u1ed1 c\u00f3 tr\u1ee5c \u0111\u01b0\u1eddng ch\u00ednh si\u00eau \u0111\u00f4ng \u0111\u00fac \u0111\u00e2y l\u00e0 Ethereum mainnet . Khi th\u00e0nh ph\u1ed1 ph\u00e1t tri\u1ec3n, l\u01b0\u1ee3ng xe v\u00e0 ng\u01b0\u1eddi l\u01b0u th\u00f4ng ng\u00e0y c\u00e0ng nhi\u1ec1u, khi\u1ebfn giao th\u00f4ng tr\u1edf n\u00ean t\u1eafc ngh\u1ebdn li\u00ean t\u1ee5c. Th\u1ebf l\u00e0 Elon quy\u1ebft \u0111\u1ecbnh \u0111\u1ea7u t\u01b0 v\u00e0o m\u1ed9t h\u1ec7 th\u1ed1ng t\u00e0u \u0111i\u1ec7n ng\u1ea7m m\u1edbi t\u01b0\u01a1ng t\u1ef1 nh\u01b0 Arbitrum Classic . H\u1ec7 th\u1ed1ng n\u00e0y ho\u1ea1t \u0111\u1ed9ng m\u01b0\u1ee3t m\u00e0, gi\u00e1 r\u1ebb, ho\u00e0n to\u00e0n t\u01b0\u01a1ng th\u00edch v\u1edbi c\u01a1 s\u1edf h\u1ea1 t\u1ea7ng c\u0169 v\u00e0 cho ph\u00e9p ng\u01b0\u1eddi d\u00e2n di chuy\u1ec3n nhanh h\u01a1n, kh\u00f4ng c\u00f2n ph\u1ea3i ch\u00f4n ch\u00e2n gi\u1eefa \u0111\u00e1m \u0111\u00f4ng n\u1eefa. Arbitrum Classic ch\u1ee7 y\u1ebfu ph\u1ee5c v\u1ee5 c\u00e1c d\u1ef1 \u00e1n trong m\u1ea3ng DeFi v\u00e0 NFT hai tr\u1ee5 c\u1ed9t quan tr\u1ecdng c\u1ee7a Web3.","title":"Arbitrum Classic l\u00e0 g\u00ec?"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Arbitrum%20Classic/intro-Arbitrum-Classic/#arbitrum-classic-la-gi","text":"Arbitrum Classic l\u00e0 chu\u1ed7i rollup \u0111\u1ea7u ti\u00ean trong h\u1ec7 sinh th\u00e1i Arbitrum, \u0111\u00f3ng vai tr\u00f2 nh\u01b0 Layer 2, \u0111\u1eb7t n\u1ec1n m\u00f3ng cho c\u00e1c gi\u1ea3i ph\u00e1p m\u1edf r\u1ed9ng quy m\u00f4 sau n\u00e0y. Ngay t\u1eeb khi ra m\u1eaft, Arbitrum Classic \u0111\u00e3 tr\u1edf th\u00e0nh gi\u1ea3i ph\u00e1p Layer 2 ph\u1ed5 bi\u1ebfn nh\u1ea5t, \u0111\u01b0\u1ee3c \u1ee9ng d\u1ee5ng r\u1ed9ng r\u00e3i nh\u1edd kh\u1ea3 n\u0103ng c\u1ea3i thi\u1ec7n hi\u1ec7u su\u1ea5t giao d\u1ecbch v\u00e0 gi\u1ea3m thi\u1ec3u chi ph\u00ed m\u1ed9t c\u00e1ch r\u00f5 r\u1ec7t so v\u1edbi Ethereum. Th\u00f4ng qua c\u00f4ng ngh\u1ec7 Optimistic Rollups , Arbitrum Classic c\u00f3 th\u1ec3 x\u1eed l\u00fd nhi\u1ec1u giao d\u1ecbch h\u01a1n m\u1ed7i gi\u00e2y (higher throughput) v\u00e0 gi\u1ea3m gas fee xu\u1ed1ng m\u1ee9c d\u1ec5 ch\u1ecbu h\u01a1n cho ng\u01b0\u1eddi d\u00f9ng. V\u1ec1 b\u1ea3n ch\u1ea5t, ng\u01b0\u1eddi d\u00f9ng v\u1eabn \u0111ang t\u01b0\u01a1ng t\u00e1c v\u1edbi Ethereum, nh\u01b0ng r\u1ebb h\u01a1n. H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng Elon s\u1ed1ng trong m\u1ed9t th\u00e0nh ph\u1ed1 c\u00f3 tr\u1ee5c \u0111\u01b0\u1eddng ch\u00ednh si\u00eau \u0111\u00f4ng \u0111\u00fac \u0111\u00e2y l\u00e0 Ethereum mainnet . Khi th\u00e0nh ph\u1ed1 ph\u00e1t tri\u1ec3n, l\u01b0\u1ee3ng xe v\u00e0 ng\u01b0\u1eddi l\u01b0u th\u00f4ng ng\u00e0y c\u00e0ng nhi\u1ec1u, khi\u1ebfn giao th\u00f4ng tr\u1edf n\u00ean t\u1eafc ngh\u1ebdn li\u00ean t\u1ee5c.","title":"Arbitrum Classic l\u00e0 g\u00ec?"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Arbitrum%20Classic/intro-Arbitrum-Classic/#the-la-elon-quyet-inh-au-tu-vao-mot-he-thong-tau-ien-ngam-moi-tuong-tu-nhu-arbitrum-classic-he-thong-nay-hoat-ong-muot-ma-gia-re-hoan-toan-tuong-thich-voi-co-so-ha-tang-cu-va-cho-phep-nguoi-dan-di-chuyen-nhanh-hon-khong-con-phai-chon-chan-giua-am-ong-nua","text":"Arbitrum Classic ch\u1ee7 y\u1ebfu ph\u1ee5c v\u1ee5 c\u00e1c d\u1ef1 \u00e1n trong m\u1ea3ng DeFi v\u00e0 NFT hai tr\u1ee5 c\u1ed9t quan tr\u1ecdng c\u1ee7a Web3.","title":"Th\u1ebf l\u00e0 Elon quy\u1ebft \u0111\u1ecbnh \u0111\u1ea7u t\u01b0 v\u00e0o m\u1ed9t h\u1ec7 th\u1ed1ng t\u00e0u \u0111i\u1ec7n ng\u1ea7m m\u1edbi t\u01b0\u01a1ng t\u1ef1 nh\u01b0 Arbitrum Classic. H\u1ec7 th\u1ed1ng n\u00e0y ho\u1ea1t \u0111\u1ed9ng m\u01b0\u1ee3t m\u00e0, gi\u00e1 r\u1ebb, ho\u00e0n to\u00e0n t\u01b0\u01a1ng th\u00edch v\u1edbi c\u01a1 s\u1edf h\u1ea1 t\u1ea7ng c\u0169 v\u00e0 cho ph\u00e9p ng\u01b0\u1eddi d\u00e2n di chuy\u1ec3n nhanh h\u01a1n, kh\u00f4ng c\u00f2n ph\u1ea3i ch\u00f4n ch\u00e2n gi\u1eefa \u0111\u00e1m \u0111\u00f4ng n\u1eefa."},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Arbitrum%20Nitro/Arbitrum_intro/","text":"Arbitrum Nitro: A \u0111\u1ecdc l\u00e0 arbitrum, A c\u0169ng l\u00e0 th\u00e1ng 8 (autumn) \ud83e\udd23 C\u0169ng r\u1ea3nh n\u00ean ng\u1ed3i \u0111\u1ecdc whitepaper \u1edf \u0111\u00e2y: https://github.com/OffchainLabs/nitro/blob/master/docs/Nitro-whitepaper.pdf 1. Giao th\u1ee9c Layer 2 t\u01b0\u01a1ng th\u00edch Ethereum c\u1ee7a Arbitrum Nitro l\u00e0 h\u1ec7 th\u1ed1ng th\u1ef1c thi smart contract \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf nh\u01b0 m\u1ed9t Layer 2 ch\u1ea1y ph\u00eda tr\u00ean blockchain Ethereum. M\u1eb7c d\u00f9 hi\u1ec7n t\u1ea1i Nitro \u0111\u01b0\u1ee3c tri\u1ec3n khai tr\u00ean Ethereum, v\u1ec1 m\u1eb7t nguy\u00ean l\u00fd, n\u00f3 ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u00edch h\u1ee3p tr\u00ean b\u1ea5t k\u1ef3 blockchain n\u00e0o c\u00f3 h\u1ed7 tr\u1ee3 ch\u1ee9c n\u0103ng smart contracts. Giao th\u1ee9c Nitro \u0111\u1ea3m b\u1ea3o: * T\u00ednh an to\u00e0n (safety): N\u1ebfu kh\u00f4ng c\u00f3 gian l\u1eadn, m\u1ecdi th\u1ee9 ch\u1ea1y \u0111\u00fang. * T\u00ednh ti\u1ebfn tr\u00ecnh (liveness): C\u00e1c giao d\u1ecbch v\u1eabn ti\u1ebfp t\u1ee5c \u0111\u01b0\u1ee3c x\u1eed l\u00fd, kh\u00f4ng b\u1ecb k\u1eb9t. Nh\u01b0ng \u0111\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c hai \u0111i\u1ec1u n\u00e0y, Nitro gi\u1ea3 \u0111\u1ecbnh hai \u0111i\u1ec1u: * Ethereum \u2013 chu\u1ed7i Layer 1 ph\u00eda d\u01b0\u1edbi \u2013 v\u1eabn \u0111ang ho\u1ea1t \u0111\u1ed9ng b\u00ecnh th\u01b0\u1eddng (an to\u00e0n v\u00e0 live). * C\u00f3 \u00edt nh\u1ea5t m\u1ed9t ng\u01b0\u1eddi d\u00f9ng trong m\u1ea1ng Nitro h\u00e0nh x\u1eed trung th\u1ef1c (v\u00ed d\u1ee5 nh\u01b0 challenge n\u1ebfu ph\u00e1t hi\u1ec7n gian l\u1eadn). Nitro thu\u1ed9c lo\u1ea1i optimistic rollup, ngh\u0129a l\u00e0 m\u1eb7c \u0111\u1ecbnh m\u1ecdi giao d\u1ecbch \u0111\u1ec1u \u0111\u01b0\u1ee3c coi l\u00e0 h\u1ee3p l\u1ec7 (optimistic = l\u1ea1c quan). Ch\u1ec9 khi ai \u0111\u00f3 ph\u00e1t hi\u1ec7n c\u00f3 gian l\u1eadn, h\u1ecd m\u1edbi c\u1ea7n th\u1ef1c hi\u1ec7n fraud proof \u0111\u1ec3 ch\u1ee9ng minh sai ph\u1ea1m. \u0110i\u1ec1u n\u00e0y gi\u00fap Nitro ho\u1ea1t \u0111\u1ed9ng nhanh h\u01a1n v\u00e0 ti\u1ebft ki\u1ec7m t\u00e0i nguy\u00ean, v\u00ec kh\u00f4ng ph\u1ea3i m\u1ecdi giao d\u1ecbch \u0111\u1ec1u \u0111\u01b0\u1ee3c ki\u1ec3m tra l\u1ea1i. 1.1 Anytrust l\u00e0 g\u00ec? AnyTrust l\u00e0 m\u1ed9t phi\u00ean b\u1ea3n bi\u1ebfn th\u1ec3 c\u1ee7a Nitro. N\u00f3 gi\u00fap gi\u1ea3m chi ph\u00ed h\u01a1n n\u1eefa, nh\u01b0ng \u0111\u1ed5i l\u1ea1i b\u1ea1n ph\u1ea3i tin r\u1eb1ng c\u00f3 \u00edt nh\u1ea5t m\u1ed9t node \u0111\u00e1ng tin trong nh\u00f3m x\u00e1c th\u1ef1c. Chi ti\u1ebft kh\u00e1c bi\u1ec7t gi\u1eefa Nitro v\u00e0 AnyTrust s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp ri\u00eang \u1edf ph\u1ea7n d\u01b0\u1edbi ( d\u1ef1a theo paper) 2. Thi\u1ebft k\u1ebf c\u1ee7a Nitro c\u00f3 4 \u0111i\u1ec3m kh\u00e1c bi\u1ec7t Ki\u1ebfn tr\u00fac c\u1ee7a Nitro \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng d\u1ef1a tr\u00ean 4 \u0111\u1eb7c tr\u01b0ng ch\u00ednh \u2013 c\u0169ng ch\u00ednh l\u00e0 4 \u0111i\u1ec3m gi\u00fap Nitro tr\u1edf th\u00e0nh m\u1ed9t trong nh\u1eefng Layer 2 m\u1ea1nh m\u1ebd nh\u1ea5t hi\u1ec7n nay: Sequencing r\u1ed3i m\u1edbi execution ngh\u0129a l\u00e0 c\u1ea7n ph\u1ea3i x\u1eed l\u00fd theo th\u1ee9 t\u1ef1 \u0111\u1ecbnh tr\u01b0\u1edbc. Nitro chia qu\u00e1 tr\u00ecnh x\u1eed l\u00fd giao d\u1ecbch th\u00e0nh hai giai \u0111o\u1ea1n r\u00f5 r\u00e0ng: Sequencing : S\u1eafp x\u1ebfp c\u00e1c giao d\u1ecbch theo th\u1ee9 t\u1ef1 c\u1ee5 th\u1ec3 v\u00e0 cam k\u1ebft v\u1edbi chu\u1ed7i \u0111\u00f3 (gi\u1ed1ng nh\u01b0 \u201cx\u1ebfp h\u00e0ng\u201d). Deterministic execution \u2013 Th\u1ef1c hi\u1ec7n t\u1eebng giao d\u1ecbch theo \u0111\u00fang th\u1ee9 t\u1ef1 \u0111\u00f3, d\u1ef1a tr\u00ean m\u1ed9t h\u00e0m chuy\u1ec3n tr\u1ea1ng th\u00e1i \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a s\u1eb5n \u0110i\u1ec1u n\u00e0y \u0111\u1ea3m b\u1ea3o m\u1ecdi node \u0111\u1ec1u ch\u1ea1y c\u00f9ng m\u1ed9t logic, d\u1eabn \u0111\u1ebfn k\u1ebft qu\u1ea3 tr\u1ea1ng th\u00e1i th\u1ed1ng nh\u1ea5t.","title":"Arbitrum Nitro: A \u0111\u1ecdc l\u00e0 arbitrum, A c\u0169ng l\u00e0 th\u00e1ng 8 (autumn) \ud83e\udd23"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Arbitrum%20Nitro/Arbitrum_intro/#arbitrum-nitro-a-oc-la-arbitrum-a-cung-la-thang-8-autumn","text":"C\u0169ng r\u1ea3nh n\u00ean ng\u1ed3i \u0111\u1ecdc whitepaper \u1edf \u0111\u00e2y: https://github.com/OffchainLabs/nitro/blob/master/docs/Nitro-whitepaper.pdf","title":"Arbitrum Nitro: A \u0111\u1ecdc l\u00e0 arbitrum, A c\u0169ng l\u00e0 th\u00e1ng 8 (autumn) \ud83e\udd23"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Arbitrum%20Nitro/Arbitrum_intro/#1-giao-thuc-layer-2-tuong-thich-ethereum-cua-arbitrum","text":"Nitro l\u00e0 h\u1ec7 th\u1ed1ng th\u1ef1c thi smart contract \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf nh\u01b0 m\u1ed9t Layer 2 ch\u1ea1y ph\u00eda tr\u00ean blockchain Ethereum. M\u1eb7c d\u00f9 hi\u1ec7n t\u1ea1i Nitro \u0111\u01b0\u1ee3c tri\u1ec3n khai tr\u00ean Ethereum, v\u1ec1 m\u1eb7t nguy\u00ean l\u00fd, n\u00f3 ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u00edch h\u1ee3p tr\u00ean b\u1ea5t k\u1ef3 blockchain n\u00e0o c\u00f3 h\u1ed7 tr\u1ee3 ch\u1ee9c n\u0103ng smart contracts. Giao th\u1ee9c Nitro \u0111\u1ea3m b\u1ea3o: * T\u00ednh an to\u00e0n (safety): N\u1ebfu kh\u00f4ng c\u00f3 gian l\u1eadn, m\u1ecdi th\u1ee9 ch\u1ea1y \u0111\u00fang. * T\u00ednh ti\u1ebfn tr\u00ecnh (liveness): C\u00e1c giao d\u1ecbch v\u1eabn ti\u1ebfp t\u1ee5c \u0111\u01b0\u1ee3c x\u1eed l\u00fd, kh\u00f4ng b\u1ecb k\u1eb9t. Nh\u01b0ng \u0111\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c hai \u0111i\u1ec1u n\u00e0y, Nitro gi\u1ea3 \u0111\u1ecbnh hai \u0111i\u1ec1u: * Ethereum \u2013 chu\u1ed7i Layer 1 ph\u00eda d\u01b0\u1edbi \u2013 v\u1eabn \u0111ang ho\u1ea1t \u0111\u1ed9ng b\u00ecnh th\u01b0\u1eddng (an to\u00e0n v\u00e0 live). * C\u00f3 \u00edt nh\u1ea5t m\u1ed9t ng\u01b0\u1eddi d\u00f9ng trong m\u1ea1ng Nitro h\u00e0nh x\u1eed trung th\u1ef1c (v\u00ed d\u1ee5 nh\u01b0 challenge n\u1ebfu ph\u00e1t hi\u1ec7n gian l\u1eadn). Nitro thu\u1ed9c lo\u1ea1i optimistic rollup, ngh\u0129a l\u00e0 m\u1eb7c \u0111\u1ecbnh m\u1ecdi giao d\u1ecbch \u0111\u1ec1u \u0111\u01b0\u1ee3c coi l\u00e0 h\u1ee3p l\u1ec7 (optimistic = l\u1ea1c quan). Ch\u1ec9 khi ai \u0111\u00f3 ph\u00e1t hi\u1ec7n c\u00f3 gian l\u1eadn, h\u1ecd m\u1edbi c\u1ea7n th\u1ef1c hi\u1ec7n fraud proof \u0111\u1ec3 ch\u1ee9ng minh sai ph\u1ea1m. \u0110i\u1ec1u n\u00e0y gi\u00fap Nitro ho\u1ea1t \u0111\u1ed9ng nhanh h\u01a1n v\u00e0 ti\u1ebft ki\u1ec7m t\u00e0i nguy\u00ean, v\u00ec kh\u00f4ng ph\u1ea3i m\u1ecdi giao d\u1ecbch \u0111\u1ec1u \u0111\u01b0\u1ee3c ki\u1ec3m tra l\u1ea1i.","title":"1. Giao th\u1ee9c Layer 2 t\u01b0\u01a1ng th\u00edch Ethereum c\u1ee7a Arbitrum"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Arbitrum%20Nitro/Arbitrum_intro/#11-anytrust-la-gi","text":"AnyTrust l\u00e0 m\u1ed9t phi\u00ean b\u1ea3n bi\u1ebfn th\u1ec3 c\u1ee7a Nitro. N\u00f3 gi\u00fap gi\u1ea3m chi ph\u00ed h\u01a1n n\u1eefa, nh\u01b0ng \u0111\u1ed5i l\u1ea1i b\u1ea1n ph\u1ea3i tin r\u1eb1ng c\u00f3 \u00edt nh\u1ea5t m\u1ed9t node \u0111\u00e1ng tin trong nh\u00f3m x\u00e1c th\u1ef1c. Chi ti\u1ebft kh\u00e1c bi\u1ec7t gi\u1eefa Nitro v\u00e0 AnyTrust s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp ri\u00eang \u1edf ph\u1ea7n d\u01b0\u1edbi ( d\u1ef1a theo paper)","title":"1.1 Anytrust l\u00e0 g\u00ec?"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Arbitrum%20Nitro/Arbitrum_intro/#2-thiet-ke-cua-nitro-co-4-iem-khac-biet","text":"Ki\u1ebfn tr\u00fac c\u1ee7a Nitro \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng d\u1ef1a tr\u00ean 4 \u0111\u1eb7c tr\u01b0ng ch\u00ednh \u2013 c\u0169ng ch\u00ednh l\u00e0 4 \u0111i\u1ec3m gi\u00fap Nitro tr\u1edf th\u00e0nh m\u1ed9t trong nh\u1eefng Layer 2 m\u1ea1nh m\u1ebd nh\u1ea5t hi\u1ec7n nay: Sequencing r\u1ed3i m\u1edbi execution ngh\u0129a l\u00e0 c\u1ea7n ph\u1ea3i x\u1eed l\u00fd theo th\u1ee9 t\u1ef1 \u0111\u1ecbnh tr\u01b0\u1edbc. Nitro chia qu\u00e1 tr\u00ecnh x\u1eed l\u00fd giao d\u1ecbch th\u00e0nh hai giai \u0111o\u1ea1n r\u00f5 r\u00e0ng: Sequencing : S\u1eafp x\u1ebfp c\u00e1c giao d\u1ecbch theo th\u1ee9 t\u1ef1 c\u1ee5 th\u1ec3 v\u00e0 cam k\u1ebft v\u1edbi chu\u1ed7i \u0111\u00f3 (gi\u1ed1ng nh\u01b0 \u201cx\u1ebfp h\u00e0ng\u201d). Deterministic execution \u2013 Th\u1ef1c hi\u1ec7n t\u1eebng giao d\u1ecbch theo \u0111\u00fang th\u1ee9 t\u1ef1 \u0111\u00f3, d\u1ef1a tr\u00ean m\u1ed9t h\u00e0m chuy\u1ec3n tr\u1ea1ng th\u00e1i \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a s\u1eb5n \u0110i\u1ec1u n\u00e0y \u0111\u1ea3m b\u1ea3o m\u1ecdi node \u0111\u1ec1u ch\u1ea1y c\u00f9ng m\u1ed9t logic, d\u1eabn \u0111\u1ebfn k\u1ebft qu\u1ea3 tr\u1ea1ng th\u00e1i th\u1ed1ng nh\u1ea5t.","title":"2. Thi\u1ebft k\u1ebf c\u1ee7a Nitro c\u00f3 4 \u0111i\u1ec3m kh\u00e1c bi\u1ec7t"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Arbitrum%20Nitro/How-Arbitrum-Nitro-Works/","text":"How Arbitrum Nitro works ? Link: https://chainstack.com/arbitrum-nitro-an-overview/ Arbitrum Nitro l\u00e0 phi\u00ean b\u1ea3n n\u00e2ng c\u1ea5p to\u00e0n di\u1ec7n c\u1ee7a Arbitrum, \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf l\u1ea1i \u0111\u1ec3 c\u1ea3i thi\u1ec7n hi\u1ec7u su\u1ea5t, t\u00ednh t\u01b0\u01a1ng th\u00edch v\u00e0 tr\u1ea3i nghi\u1ec7m nh\u00e0 ph\u00e1t tri\u1ec3n. Kh\u00f4ng gi\u1ed1ng nh\u01b0 ki\u1ebfn tr\u00fac AVM (Arbitrum Virtual Machine) t\u00f9y ch\u1ec9nh trong phi\u00ean b\u1ea3n Arbitrum Classic , Nitro bi\u00ean d\u1ecbch to\u00e0n b\u1ed9 h\u1ec7 th\u1ed1ng sang WebAssembly (WASM). \u0110i\u1ec1u n\u00e0y cho ph\u00e9p thay th\u1ebf ng\u00f4n ng\u1eef v\u00e0 tr\u00ecnh bi\u00ean d\u1ecbch \u0111\u1eb7c th\u00f9 tr\u01b0\u1edbc \u0111\u00e2y b\u1eb1ng c\u00e1c c\u00f4ng c\u1ee5 ti\u00eau chu\u1ea9n ph\u1ed5 bi\u1ebfn, gi\u00fap vi\u1ec7c ph\u00e1t tri\u1ec3n v\u00e0 b\u1ea3o tr\u00ec tr\u1edf n\u00ean d\u1ec5 d\u00e0ng h\u01a1n. \u0110\u1ec3 t\u0103ng hi\u1ec7u qu\u1ea3 giao ti\u1ebfp cross-chain v\u00e0 gi\u1ea3m chi ph\u00ed tr\u00ean Layer 1, Offchain Labs c\u0169ng \u0111\u00e3 vi\u1ebft l\u1ea1i nhi\u1ec1u th\u00e0nh ph\u1ea7n c\u1ee7a ArbOS b\u1eb1ng ng\u00f4n ng\u1eef Go . Ngo\u00e0i ra, h\u1ecd c\u00f2n gi\u1edbi thi\u1ec7u m\u1ed9t c\u01a1 ch\u1ebf batching v\u00e0 compression m\u1edbi, \u0111\u01b0\u1ee3c t\u1ed1i \u01b0u h\u00f3a \u0111\u1ec3 \u0111\u00f3ng g\u00f3i v\u00e0 n\u00e9n d\u1eef li\u1ec7u g\u1eedi v\u1ec1 Ethereum m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3 h\u01a1n, t\u1eeb \u0111\u00f3 gi\u1ea3m gas fee \u0111\u00e1ng k\u1ec3. Theo t\u00e0i li\u1ec7u ch\u00ednh th\u1ee9c, l\u00f5i c\u1ee7a Nitro v\u00e0 nh\u1eefng c\u1ea3i ti\u1ebfn then ch\u1ed1t xoay quanh b\u1ed1n kh\u00e1i ni\u1ec7m ch\u00ednh: Sequencing (Tr\u00ecnh t\u1ef1 giao d\u1ecbch) : Nitro \u00e1p d\u1ee5ng hai b\u01b0\u1edbc ch\u00ednh \u0111\u1ec3 x\u1eed l\u00fd giao d\u1ecbch. Tr\u01b0\u1edbc ti\u00ean, t\u1ea5t c\u1ea3 c\u00e1c giao d\u1ecbch \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp th\u00e0nh m\u1ed9t chu\u1ed7i c\u00f3 th\u1ee9 t\u1ef1 duy nh\u1ea5t, v\u00e0 h\u1ec7 th\u1ed1ng cam k\u1ebft v\u1edbi chu\u1ed7i \u0111\u00f3. Sau \u0111\u00f3, m\u1ed9t h\u00e0m chuy\u1ec3n tr\u1ea1ng th\u00e1i x\u00e1c \u0111\u1ecbnh s\u1ebd x\u1eed l\u00fd c\u00e1c giao d\u1ecbch theo \u0111\u00fang th\u1ee9 t\u1ef1 n\u00e0y, \u0111\u1ea3m b\u1ea3o t\u00ednh nh\u1ea5t qu\u00e1n v\u00e0 kh\u1ea3 n\u0103ng x\u00e1c minh. Geth Integration (T\u00edch h\u1ee3p Geth): Nitro t\u00edch h\u1ee3p tr\u1ef1c ti\u1ebfp l\u00f5i m\u00e3 ngu\u1ed3n c\u1ee7a go-Ethereum (Geth), gi\u00fap n\u00f3 h\u1ed7 tr\u1ee3 \u0111\u1ea7y \u0111\u1ee7 c\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u, \u0111\u1ecbnh d\u1ea1ng v\u00e0 m\u00e1y \u1ea3o c\u1ee7a Ethereum. Vi\u1ec7c s\u1eed d\u1ee5ng Geth nh\u01b0 m\u1ed9t th\u01b0 vi\u1ec7n n\u1ec1n t\u1ea3ng \u0111\u1ea3m b\u1ea3o m\u1ee9c \u0111\u1ed9 t\u01b0\u01a1ng th\u00edch r\u1ea5t cao gi\u1eefa Arbitrum v\u00e0 Ethereum Separate Proving from Execution (T\u00e1ch bi\u1ec7t b\u1eb1ng ch\u1ee9ng v\u00e0 th\u1ef1c thi): M\u1ed9t \u0111i\u1ec3m \u0111\u1eb7c bi\u1ec7t trong Nitro l\u00e0 vi\u1ec7c bi\u00ean d\u1ecbch m\u00e3 ngu\u1ed3n th\u00e0nh hai phi\u00ean b\u1ea3n ri\u00eang bi\u1ec7t. M\u1ed9t b\u1ea3n native code \u0111\u01b0\u1ee3c d\u00f9ng cho qu\u00e1 tr\u00ecnh ch\u1ee9ng minh (proving). M\u1ed9t b\u1ea3n WASM \u0111\u01b0\u1ee3c t\u1ed1i \u01b0u h\u00f3a cho hi\u1ec7u su\u1ea5t, d\u00f9ng \u0111\u1ec3 th\u1ef1c thi tr\u1ef1c ti\u1ebfp tr\u00ean c\u00e1c node Nitro. Optimistic Rollup: Nitro ti\u1ebfp t\u1ee5c s\u1eed d\u1ee5ng giao th\u1ee9c Optimistic Rollup v\u1edbi c\u00e1c c\u01a1 ch\u1ebf ch\u1ee9ng minh gian l\u1eadn (fraud proofs) c\u1ee7a Arbitrum. C\u00e1c giao d\u1ecbch \u0111\u01b0\u1ee3c x\u1eed l\u00fd off-chain \u1edf Layer 2 v\u00e0 sau \u0111\u00f3 \u0111\u01b0\u1ee3c ghi nh\u1eadn v\u00e0 b\u1ea3o m\u1eadt \u1edf Layer 1 Ethereum, \u0111\u1ea3m b\u1ea3o \u0111\u1ed9 tin c\u1eady cao m\u00e0 kh\u00f4ng hy sinh hi\u1ec7u su\u1ea5t.","title":"How Arbitrum Nitro works ?"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Arbitrum%20Nitro/How-Arbitrum-Nitro-Works/#how-arbitrum-nitro-works","text":"Link: https://chainstack.com/arbitrum-nitro-an-overview/ Arbitrum Nitro l\u00e0 phi\u00ean b\u1ea3n n\u00e2ng c\u1ea5p to\u00e0n di\u1ec7n c\u1ee7a Arbitrum, \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf l\u1ea1i \u0111\u1ec3 c\u1ea3i thi\u1ec7n hi\u1ec7u su\u1ea5t, t\u00ednh t\u01b0\u01a1ng th\u00edch v\u00e0 tr\u1ea3i nghi\u1ec7m nh\u00e0 ph\u00e1t tri\u1ec3n. Kh\u00f4ng gi\u1ed1ng nh\u01b0 ki\u1ebfn tr\u00fac AVM (Arbitrum Virtual Machine) t\u00f9y ch\u1ec9nh trong phi\u00ean b\u1ea3n Arbitrum Classic , Nitro bi\u00ean d\u1ecbch to\u00e0n b\u1ed9 h\u1ec7 th\u1ed1ng sang WebAssembly (WASM). \u0110i\u1ec1u n\u00e0y cho ph\u00e9p thay th\u1ebf ng\u00f4n ng\u1eef v\u00e0 tr\u00ecnh bi\u00ean d\u1ecbch \u0111\u1eb7c th\u00f9 tr\u01b0\u1edbc \u0111\u00e2y b\u1eb1ng c\u00e1c c\u00f4ng c\u1ee5 ti\u00eau chu\u1ea9n ph\u1ed5 bi\u1ebfn, gi\u00fap vi\u1ec7c ph\u00e1t tri\u1ec3n v\u00e0 b\u1ea3o tr\u00ec tr\u1edf n\u00ean d\u1ec5 d\u00e0ng h\u01a1n. \u0110\u1ec3 t\u0103ng hi\u1ec7u qu\u1ea3 giao ti\u1ebfp cross-chain v\u00e0 gi\u1ea3m chi ph\u00ed tr\u00ean Layer 1, Offchain Labs c\u0169ng \u0111\u00e3 vi\u1ebft l\u1ea1i nhi\u1ec1u th\u00e0nh ph\u1ea7n c\u1ee7a ArbOS b\u1eb1ng ng\u00f4n ng\u1eef Go . Ngo\u00e0i ra, h\u1ecd c\u00f2n gi\u1edbi thi\u1ec7u m\u1ed9t c\u01a1 ch\u1ebf batching v\u00e0 compression m\u1edbi, \u0111\u01b0\u1ee3c t\u1ed1i \u01b0u h\u00f3a \u0111\u1ec3 \u0111\u00f3ng g\u00f3i v\u00e0 n\u00e9n d\u1eef li\u1ec7u g\u1eedi v\u1ec1 Ethereum m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3 h\u01a1n, t\u1eeb \u0111\u00f3 gi\u1ea3m gas fee \u0111\u00e1ng k\u1ec3. Theo t\u00e0i li\u1ec7u ch\u00ednh th\u1ee9c, l\u00f5i c\u1ee7a Nitro v\u00e0 nh\u1eefng c\u1ea3i ti\u1ebfn then ch\u1ed1t xoay quanh b\u1ed1n kh\u00e1i ni\u1ec7m ch\u00ednh: Sequencing (Tr\u00ecnh t\u1ef1 giao d\u1ecbch) : Nitro \u00e1p d\u1ee5ng hai b\u01b0\u1edbc ch\u00ednh \u0111\u1ec3 x\u1eed l\u00fd giao d\u1ecbch. Tr\u01b0\u1edbc ti\u00ean, t\u1ea5t c\u1ea3 c\u00e1c giao d\u1ecbch \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp th\u00e0nh m\u1ed9t chu\u1ed7i c\u00f3 th\u1ee9 t\u1ef1 duy nh\u1ea5t, v\u00e0 h\u1ec7 th\u1ed1ng cam k\u1ebft v\u1edbi chu\u1ed7i \u0111\u00f3. Sau \u0111\u00f3, m\u1ed9t h\u00e0m chuy\u1ec3n tr\u1ea1ng th\u00e1i x\u00e1c \u0111\u1ecbnh s\u1ebd x\u1eed l\u00fd c\u00e1c giao d\u1ecbch theo \u0111\u00fang th\u1ee9 t\u1ef1 n\u00e0y, \u0111\u1ea3m b\u1ea3o t\u00ednh nh\u1ea5t qu\u00e1n v\u00e0 kh\u1ea3 n\u0103ng x\u00e1c minh. Geth Integration (T\u00edch h\u1ee3p Geth): Nitro t\u00edch h\u1ee3p tr\u1ef1c ti\u1ebfp l\u00f5i m\u00e3 ngu\u1ed3n c\u1ee7a go-Ethereum (Geth), gi\u00fap n\u00f3 h\u1ed7 tr\u1ee3 \u0111\u1ea7y \u0111\u1ee7 c\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u, \u0111\u1ecbnh d\u1ea1ng v\u00e0 m\u00e1y \u1ea3o c\u1ee7a Ethereum. Vi\u1ec7c s\u1eed d\u1ee5ng Geth nh\u01b0 m\u1ed9t th\u01b0 vi\u1ec7n n\u1ec1n t\u1ea3ng \u0111\u1ea3m b\u1ea3o m\u1ee9c \u0111\u1ed9 t\u01b0\u01a1ng th\u00edch r\u1ea5t cao gi\u1eefa Arbitrum v\u00e0 Ethereum Separate Proving from Execution (T\u00e1ch bi\u1ec7t b\u1eb1ng ch\u1ee9ng v\u00e0 th\u1ef1c thi): M\u1ed9t \u0111i\u1ec3m \u0111\u1eb7c bi\u1ec7t trong Nitro l\u00e0 vi\u1ec7c bi\u00ean d\u1ecbch m\u00e3 ngu\u1ed3n th\u00e0nh hai phi\u00ean b\u1ea3n ri\u00eang bi\u1ec7t. M\u1ed9t b\u1ea3n native code \u0111\u01b0\u1ee3c d\u00f9ng cho qu\u00e1 tr\u00ecnh ch\u1ee9ng minh (proving). M\u1ed9t b\u1ea3n WASM \u0111\u01b0\u1ee3c t\u1ed1i \u01b0u h\u00f3a cho hi\u1ec7u su\u1ea5t, d\u00f9ng \u0111\u1ec3 th\u1ef1c thi tr\u1ef1c ti\u1ebfp tr\u00ean c\u00e1c node Nitro. Optimistic Rollup: Nitro ti\u1ebfp t\u1ee5c s\u1eed d\u1ee5ng giao th\u1ee9c Optimistic Rollup v\u1edbi c\u00e1c c\u01a1 ch\u1ebf ch\u1ee9ng minh gian l\u1eadn (fraud proofs) c\u1ee7a Arbitrum. C\u00e1c giao d\u1ecbch \u0111\u01b0\u1ee3c x\u1eed l\u00fd off-chain \u1edf Layer 2 v\u00e0 sau \u0111\u00f3 \u0111\u01b0\u1ee3c ghi nh\u1eadn v\u00e0 b\u1ea3o m\u1eadt \u1edf Layer 1 Ethereum, \u0111\u1ea3m b\u1ea3o \u0111\u1ed9 tin c\u1eady cao m\u00e0 kh\u00f4ng hy sinh hi\u1ec7u su\u1ea5t.","title":"How Arbitrum Nitro works ?"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Arbitrum%20Orbit/Arbitrum-orbit/","text":"What is Arbitrum Orbit? Arbitrum Orbit l\u00e0 framework cho ph\u00e9p b\u1ea1n t\u1ef1 x\u00e2y d\u1ef1ng c\u00e1c blockchain l\u1edbp 2 (L2) ho\u1eb7c l\u1edbp 3 (L3) t\u00f9y ch\u1ec9nh , d\u1ef1a tr\u00ean n\u1ec1n t\u1ea3ng ki\u1ebfn tr\u00fac Arbitrum Nitro . Orbit \u0111\u1eb7c bi\u1ec7t ph\u00f9 h\u1ee3p v\u1edbi c\u00e1c builder mu\u1ed1n to\u00e0n quy\u1ec1n ki\u1ec3m so\u00e1t m\u1ea1ng l\u01b0\u1edbi c\u1ee7a m\u00ecnh, khi cung c\u1ea5p nh\u1eefng t\u00ednh n\u0103ng nh\u01b0 Sovereign governance, Custom gas token, Modular data availability Orbit chains c\u00f3 th\u1ec3 v\u1eadn h\u00e0nh \u1edf 2 ch\u1ebf \u0111\u1ed9 kh\u00e1c nhau: Rollup mode: d\u1eef li\u1ec7u v\u00e0 giao d\u1ecbch \u0111\u01b0\u1ee3c g\u1eedi v\u00e0 b\u1ea3o m\u1eadt th\u00f4ng qua Ethereum, \u0111\u1ea3m b\u1ea3o trustless security. AnyTrust mode: s\u1eed d\u1ee5ng DA committee (\u1ee7y ban d\u1eef li\u1ec7u) \u0111\u1ec3 x\u00e1c nh\u1eadn d\u1eef li\u1ec7u, gi\u00fap gi\u1ea3m chi ph\u00ed ho\u1ea1t \u0111\u1ed9ng, ph\u00f9 h\u1ee3p v\u1edbi c\u00e1c \u1ee9ng d\u1ee5ng c\u1ea7n t\u1ed1i \u01b0u gas fee \u0110i\u1ec3m c\u1ed9ng l\u1edbn: D\u00f9 ch\u1ea1y \u1edf ch\u1ebf \u0111\u1ed9 n\u00e0o, c\u00e1c Orbit chain \u0111\u1ec1u th\u1eeba h\u01b0\u1edfng to\u00e0n b\u1ed9 s\u1ee9c m\u1ea1nh c\u1ee7a Nitro, bao g\u1ed3m t\u1ed1c \u0111\u1ed9 cao, chi ph\u00ed th\u1ea5p v\u00e0 kh\u1ea3 n\u0103ng t\u01b0\u01a1ng th\u00edch EVM. What are the components of Arbitrum Orbit? \u0110\u1ec3 so s\u00e1nh \u0111\u00fang b\u1ea3n ch\u1ea5t v\u1edbi c\u00e1c m\u00f4 h\u00ecnh nh\u01b0 OP Stack , ta c\u1ea7n ph\u00e2n t\u00edch Orbit theo t\u1eebng t\u1ea7ng trong ki\u1ebfn tr\u00fac blockchain hi\u1ec7n \u0111\u1ea1i. Data Availability Layer (L\u1edbp d\u1eef li\u1ec7u s\u1eb5n c\u00f3) Orbit h\u1ed7 tr\u1ee3 nhi\u1ec1u t\u00f9y ch\u1ecdn DA (Data Availability): Rollup mode: D\u1eef li\u1ec7u giao d\u1ecbch \u0111\u01b0\u1ee3c publish tr\u1ef1c ti\u1ebfp l\u00ean Ethereum th\u00f4ng qua calldata ho\u1eb7c EIP-4844 blobs, \u0111\u1ea3m b\u1ea3o t\u00ednh trustless v\u00e0 b\u1ea3o m\u1eadt. AnyTrust mode: S\u1eed d\u1ee5ng Data Availability Committee (DAC) \u0111\u1ec3 t\u1ea1o ch\u1ee9ng ch\u1ec9 (certificates) v\u00e0 ch\u1ec9 \u0111\u0103ng th\u00f4ng tin c\u1ea7n thi\u1ebft l\u00ean chain \u2192 gi\u00fap gi\u1ea3m \u0111\u00e1ng k\u1ec3 chi ph\u00ed. Third-party DA: Orbit m\u1edf c\u1ed5ng t\u00edch h\u1ee3p v\u1edbi c\u00e1c gi\u1ea3i ph\u00e1p DA b\u00ean th\u1ee9 ba nh\u01b0 Celestia, Avail, NEAR,\u2026 th\u00f4ng qua giao di\u1ec7n pluggable DA.","title":"What is Arbitrum Orbit?"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Arbitrum%20Orbit/Arbitrum-orbit/#what-is-arbitrum-orbit","text":"Arbitrum Orbit l\u00e0 framework cho ph\u00e9p b\u1ea1n t\u1ef1 x\u00e2y d\u1ef1ng c\u00e1c blockchain l\u1edbp 2 (L2) ho\u1eb7c l\u1edbp 3 (L3) t\u00f9y ch\u1ec9nh , d\u1ef1a tr\u00ean n\u1ec1n t\u1ea3ng ki\u1ebfn tr\u00fac Arbitrum Nitro . Orbit \u0111\u1eb7c bi\u1ec7t ph\u00f9 h\u1ee3p v\u1edbi c\u00e1c builder mu\u1ed1n to\u00e0n quy\u1ec1n ki\u1ec3m so\u00e1t m\u1ea1ng l\u01b0\u1edbi c\u1ee7a m\u00ecnh, khi cung c\u1ea5p nh\u1eefng t\u00ednh n\u0103ng nh\u01b0 Sovereign governance, Custom gas token, Modular data availability Orbit chains c\u00f3 th\u1ec3 v\u1eadn h\u00e0nh \u1edf 2 ch\u1ebf \u0111\u1ed9 kh\u00e1c nhau: Rollup mode: d\u1eef li\u1ec7u v\u00e0 giao d\u1ecbch \u0111\u01b0\u1ee3c g\u1eedi v\u00e0 b\u1ea3o m\u1eadt th\u00f4ng qua Ethereum, \u0111\u1ea3m b\u1ea3o trustless security. AnyTrust mode: s\u1eed d\u1ee5ng DA committee (\u1ee7y ban d\u1eef li\u1ec7u) \u0111\u1ec3 x\u00e1c nh\u1eadn d\u1eef li\u1ec7u, gi\u00fap gi\u1ea3m chi ph\u00ed ho\u1ea1t \u0111\u1ed9ng, ph\u00f9 h\u1ee3p v\u1edbi c\u00e1c \u1ee9ng d\u1ee5ng c\u1ea7n t\u1ed1i \u01b0u gas fee \u0110i\u1ec3m c\u1ed9ng l\u1edbn: D\u00f9 ch\u1ea1y \u1edf ch\u1ebf \u0111\u1ed9 n\u00e0o, c\u00e1c Orbit chain \u0111\u1ec1u th\u1eeba h\u01b0\u1edfng to\u00e0n b\u1ed9 s\u1ee9c m\u1ea1nh c\u1ee7a Nitro, bao g\u1ed3m t\u1ed1c \u0111\u1ed9 cao, chi ph\u00ed th\u1ea5p v\u00e0 kh\u1ea3 n\u0103ng t\u01b0\u01a1ng th\u00edch EVM.","title":"What is Arbitrum Orbit?"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Arbitrum%20Orbit/Arbitrum-orbit/#what-are-the-components-of-arbitrum-orbit","text":"\u0110\u1ec3 so s\u00e1nh \u0111\u00fang b\u1ea3n ch\u1ea5t v\u1edbi c\u00e1c m\u00f4 h\u00ecnh nh\u01b0 OP Stack , ta c\u1ea7n ph\u00e2n t\u00edch Orbit theo t\u1eebng t\u1ea7ng trong ki\u1ebfn tr\u00fac blockchain hi\u1ec7n \u0111\u1ea1i.","title":"What are the components of Arbitrum Orbit?"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Arbitrum%20Orbit/Arbitrum-orbit/#data-availability-layer-lop-du-lieu-san-co","text":"Orbit h\u1ed7 tr\u1ee3 nhi\u1ec1u t\u00f9y ch\u1ecdn DA (Data Availability): Rollup mode: D\u1eef li\u1ec7u giao d\u1ecbch \u0111\u01b0\u1ee3c publish tr\u1ef1c ti\u1ebfp l\u00ean Ethereum th\u00f4ng qua calldata ho\u1eb7c EIP-4844 blobs, \u0111\u1ea3m b\u1ea3o t\u00ednh trustless v\u00e0 b\u1ea3o m\u1eadt. AnyTrust mode: S\u1eed d\u1ee5ng Data Availability Committee (DAC) \u0111\u1ec3 t\u1ea1o ch\u1ee9ng ch\u1ec9 (certificates) v\u00e0 ch\u1ec9 \u0111\u0103ng th\u00f4ng tin c\u1ea7n thi\u1ebft l\u00ean chain \u2192 gi\u00fap gi\u1ea3m \u0111\u00e1ng k\u1ec3 chi ph\u00ed. Third-party DA: Orbit m\u1edf c\u1ed5ng t\u00edch h\u1ee3p v\u1edbi c\u00e1c gi\u1ea3i ph\u00e1p DA b\u00ean th\u1ee9 ba nh\u01b0 Celestia, Avail, NEAR,\u2026 th\u00f4ng qua giao di\u1ec7n pluggable DA.","title":"Data Availability Layer (L\u1edbp d\u1eef li\u1ec7u s\u1eb5n c\u00f3)"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Build%20with%20Stylus/resources/","text":"RESOURCES TO GET YOU STARTED WITH ARBITRUM STYLUS Stylus Official docs The Arbitrum stylus devs Awesome Stylus Repo Speechrun Stylus Stylus Saturdays Newsletter Build with Stylus Series Blogs https://thelearningpill.substack.com/","title":"RESOURCES TO GET YOU STARTED WITH ARBITRUM STYLUS"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Build%20with%20Stylus/resources/#resources-to-get-you-started-with-arbitrum-stylus","text":"Stylus Official docs The Arbitrum stylus devs Awesome Stylus Repo Speechrun Stylus Stylus Saturdays Newsletter Build with Stylus Series","title":"RESOURCES TO GET YOU STARTED WITH ARBITRUM STYLUS"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Build%20with%20Stylus/resources/#blogs","text":"https://thelearningpill.substack.com/","title":"Blogs"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Welcome/Introduce_arbitrum/","text":"Arbitrum: T\u0103ng t\u1ed1c Ethereum v\u1edbi c\u00f4ng ngh\u1ec7 Optimistic Rollups Gi\u1edbi thi\u1ec7u v\u1ec1 Arbitrum Video Arbitrum l\u00e0 m\u1ed9t trong nh\u1eefng gi\u1ea3i ph\u00e1p m\u1edf r\u1ed9ng quy m\u00f4 (scaling solution)uc\u1ee7a Ethereum, nh\u01b0ng \u00edt ai bi\u1ebft r\u1eb1ng n\u00f3 \u0111\u01b0\u1ee3c kh\u1edfi ngu\u1ed3n t\u1eeb m\u00f4i tr\u01b0\u1eddng h\u1ecdc thu\u1eadt. D\u1ef1 \u00e1n \u0111\u01b0\u1ee3c h\u00ecnh th\u00e0nh t\u1ea1i \u0110\u1ea1i h\u1ecdc Princeton (M\u1ef9), n\u01a1i Gi\u00e1o s\u01b0 Ed Felten \u0111\u00e3 kh\u1edfi x\u01b0\u1edbng \u00fd t\u01b0\u1edfng c\u00f9ng v\u1edbi hai nghi\u00ean c\u1ee9u sinh ti\u1ebfn s\u0129 c\u1ee7a m\u00ecnh l\u00e0 Steven Goldfeder v\u00e0 Harry Kalodner. T\u1eeb nh\u1eefng th\u1ea3o lu\u1eadn h\u1ecdc thu\u1eadt ban \u0111\u1ea7u v\u00e0o n\u0103m 2015, \u0111\u1ebfn n\u0103m 2018, nh\u00f3m nghi\u00ean c\u1ee9u \u0111\u00e3 ch\u00ednh th\u1ee9c c\u00f4ng b\u1ed1 m\u1ed9t b\u00e0i nghi\u00ean c\u1ee9u chi ti\u1ebft v\u1ec1 gi\u1ea3i ph\u00e1p m\u1edf r\u1ed9ng Ethereum, \u0111\u1ed3ng th\u1eddi xin c\u1ea5p ph\u00e9p th\u01b0\u01a1ng m\u1ea1i ho\u00e1 c\u00f4ng ngh\u1ec7 t\u1eeb \u0110\u1ea1i h\u1ecdc Princeton. T\u1eeb \u0111\u00e2y, Arbitrum ch\u00ednh th\u1ee9c ra \u0111\u1eddi v\u00e0 ti\u1ebfp t\u1ee5c ph\u00e1t tri\u1ec3n m\u1ea1nh m\u1ebd d\u01b0\u1edbi s\u1ef1 \u0111i\u1ec1u h\u00e0nh c\u1ee7a c\u00f4ng ty Offchain Labs \u2013 n\u01a1i c\u1ea3 ba ng\u01b0\u1eddi s\u00e1ng l\u1eadp c\u00f9ng tham gia. V\u00e0o th\u00e1ng 8 n\u0103m 2021, Arbitrum \u0111\u00e3 huy \u0111\u1ed9ng th\u00e0nh c\u00f4ng 120 tri\u1ec7u USD trong v\u00f2ng g\u1ecdi v\u1ed1n Series B, \u0111\u1ea1t m\u1ee9c \u0111\u1ecbnh gi\u00e1 1,2 t\u1ef7 USD , ch\u00ednh th\u1ee9c tr\u1edf th\u00e0nh m\u1ed9t k\u1ef3 l\u00e2n (unicorn) trong ng\u00e0nh blockchain. M\u1ee5c ti\u00eau tr\u1ecdng t\u00e2m c\u1ee7a Arbitrum l\u00e0 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 t\u1eafc ngh\u1ebdn v\u00e0 chi ph\u00ed cao c\u1ee7a Ethereum , \u0111\u1ed3ng th\u1eddi v\u1eabn duy tr\u00ec \u0111\u01b0\u1ee3c c\u00e1c y\u1ebfu t\u1ed1 c\u1ed1t l\u00f5i nh\u01b0 t\u00ednh b\u1ea3o m\u1eadt, t\u00ednh phi t\u1eadp trung, v\u00e0 kh\u1ea3 n\u0103ng t\u01b0\u01a1ng th\u00edch v\u1edbi EVM. \u0110\u1ec3 hi\u1ec7n th\u1ef1c h\u00f3a \u0111i\u1ec1u n\u00e0y, Arbitrum s\u1eed d\u1ee5ng m\u1ed9t gi\u1ea3i ph\u00e1p c\u00f3 t\u00ean g\u1ecdi Optimistic Rollup \u2013 c\u01a1 ch\u1ebf gi\u00fap g\u1ed9p nhi\u1ec1u giao d\u1ecbch th\u00e0nh m\u1ed9t c\u1ee5m v\u00e0 x\u1eed l\u00fd ngo\u00e0i chu\u1ed7i ch\u00ednh (off-chain), sau \u0111\u00f3 ghi l\u1ea1i k\u1ebft qu\u1ea3 l\u00ean Ethereum. C\u00e1ch l\u00e0m n\u00e0y gi\u00fap gi\u1ea3m t\u1ea3i cho m\u1ea1ng l\u01b0\u1edbi Ethereum. Hi\u1ec7n t\u1ea1i, h\u1ec7 sinh th\u00e1i Arbitrum bao g\u1ed3m nhi\u1ec1u s\u1ea3n ph\u1ea9m ph\u1ee5c v\u1ee5 c\u00e1c nhu c\u1ea7u kh\u00e1c nhau trong Web3: Arbitrum One: m\u1ea1ng Layer 2 ch\u00ednh d\u00e0nh cho h\u1ea7u h\u1ebft c\u00e1c \u1ee9ng d\u1ee5ng DeFi v\u00e0 dApps th\u00f4ng th\u01b0\u1eddng. Arbitrum Nitro: ki\u1ebfn tr\u00fac n\u00e2ng c\u1ea5p gi\u00fap c\u1ea3i thi\u1ec7n hi\u1ec7u su\u1ea5t c\u1ee7a Arbitrum One, gi\u1ea3m chi ph\u00ed v\u00e0 t\u0103ng th\u00f4ng l\u01b0\u1ee3ng. Arbitrum Nova: m\u1ea1ng chuy\u00ean bi\u1ec7t cho c\u00e1c \u1ee9ng d\u1ee5ng c\u00f3 t\u1ea7n su\u1ea5t giao d\u1ecbch cao nh\u01b0 gaming v\u00e0 m\u1ea1ng x\u00e3 h\u1ed9i. Arbitrum Orbit: framework cho ph\u00e9p c\u00e1c developer t\u1ea1o Layer 3 chain tu\u1ef3 ch\u1ec9nh, x\u00e2y d\u1ef1ng h\u1ec7 sinh th\u00e1i ri\u00eang tr\u00ean n\u1ec1n t\u1ea3ng Arbitrum. Arbitrum Stylus: m\u00f4i tr\u01b0\u1eddng l\u1eadp tr\u00ecnh m\u1edbi cho ph\u00e9p vi\u1ebft smart contract b\u1eb1ng Rust, C v\u00e0 C++, m\u1edf r\u1ed9ng kh\u1ea3 n\u0103ng ph\u00e1t tri\u1ec3n ra ngo\u00e0i ph\u1ea1m vi c\u1ee7a Solidity. \u01afu \u0111i\u1ec3m n\u1ed5i b\u1eadt c\u1ee7a Arbitrum 1. B\u1ea3o m\u1eadt phi t\u1eadp trung (Trustless Security) H\u1ec7 th\u1ed1ng b\u1ea3o m\u1eadt c\u1ee7a Arbitrum \u0111\u01b0\u1ee3c k\u1ebf th\u1eeba tr\u1ef1c ti\u1ebfp t\u1eeb Ethereum. Nh\u1edd \u0111\u00f3, ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 t\u1ef1 x\u00e1c minh k\u1ebft qu\u1ea3 th\u1ef1c thi tr\u00ean Layer 2 m\u00e0 kh\u00f4ng c\u1ea7n tin c\u1eady v\u00e0o b\u1ea5t k\u1ef3 b\u00ean trung gian n\u00e0o. \u0110\u00e2y l\u00e0 y\u1ebfu t\u1ed1 quan tr\u1ecdng \u0111\u1ea3m b\u1ea3o t\u00ednh phi t\u1eadp trung v\u00e0 minh b\u1ea1ch c\u1ee7a m\u1ea1ng l\u01b0\u1edbi. 2. T\u01b0\u01a1ng th\u00edch ho\u00e0n to\u00e0n v\u1edbi Ethereum (Ethereum Compatibility) Arbitrum h\u1ed7 tr\u1ee3 to\u00e0n b\u1ed9 c\u00e1c ti\u00eau chu\u1ea9n c\u1ee7a EVM (Ethereum Virtual Machine), bao g\u1ed3m c\u1ea3 smart contract v\u00e0 c\u00e1c giao d\u1ecbch th\u00f4ng th\u01b0\u1eddng. \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0: C\u00e1c contract vi\u1ebft b\u1eb1ng Solidity c\u00f3 th\u1ec3 tri\u1ec3n khai l\u1ea1i tr\u00ean Arbitrum m\u00e0 kh\u00f4ng c\u1ea7n ch\u1ec9nh s\u1eeda. C\u00e1c c\u00f4ng c\u1ee5 ph\u00e1t tri\u1ec3n nh\u01b0 Hardhat, Foundry hay Remix \u0111\u1ec1u c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng v\u1edbi Arbitrum. T\u00ednh t\u01b0\u01a1ng th\u00edch n\u00e0y gi\u00fap gi\u1ea3m th\u1eddi gian h\u1ecdc t\u1eadp v\u00e0 chuy\u1ec3n \u0111\u1ed5i c\u1ee7a nh\u00e0 ph\u00e1t tri\u1ec3n, \u0111\u1ed3ng th\u1eddi t\u1eadn d\u1ee5ng l\u1ea1i to\u00e0n b\u1ed9 h\u1ec7 sinh th\u00e1i c\u00f4ng c\u1ee5 s\u1eb5n c\u00f3 t\u1eeb Ethereum. 3. Kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng (Scalability) Arbitrum s\u1eed d\u1ee5ng c\u01a1 ch\u1ebf Optimistic Rollup \u0111\u1ec3 di chuy\u1ec3n ph\u1ea7n l\u1edbn ho\u1ea1t \u0111\u1ed9ng t\u00ednh to\u00e1n v\u00e0 l\u01b0u tr\u1eef ra kh\u1ecfi chu\u1ed7i ch\u00ednh (off-chain), ch\u1ec9 ghi l\u1ea1i d\u1eef li\u1ec7u t\u1ed5ng h\u1ee3p l\u00ean Ethereum. Nh\u1edd \u0111\u00f3: T\u0103ng \u0111\u00e1ng k\u1ec3 th\u00f4ng l\u01b0\u1ee3ng x\u1eed l\u00fd giao d\u1ecbch (throughput) \u2022 Gi\u1ea3m t\u1eafc ngh\u1ebdn m\u1ea1ng \u2022 T\u1ed1i \u01b0u tr\u1ea3i nghi\u1ec7m ng\u01b0\u1eddi d\u00f9ng, \u0111\u1eb7c bi\u1ec7t trong c\u00e1c dApp c\u00f3 l\u01b0u l\u01b0\u1ee3ng truy c\u1eadp l\u1edbn 4. Chi ph\u00ed th\u1ea5p (Low Cost) Arbitrum \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 gi\u1ea3m thi\u1ec3u l\u01b0\u1ee3ng ph\u00ed gas c\u1ea7n tr\u1ea3 tr\u00ean Ethereum Layer 1, t\u1eeb \u0111\u00f3 h\u1ea1 th\u1ea5p chi ph\u00ed tr\u00ean m\u1ed7i giao d\u1ecbch. \u0110\u00e2y l\u00e0 m\u1ed9t trong nh\u1eefng l\u00fd do khi\u1ebfn Arbitrum tr\u1edf th\u00e0nh l\u1ef1a ch\u1ecdn h\u00e0ng \u0111\u1ea7u trong c\u00e1c \u1ee9ng d\u1ee5ng DeFi, gaming v\u00e0 m\u1ea1ng x\u00e3 h\u1ed9i phi t\u1eadp trung. Insights tr\u00ean Arbiscan Arbiscan l\u00e0 block explorer ch\u00ednh th\u1ee9c \u0111\u1ea7u ti\u00ean, d\u00f9ng \u0111\u1ec3 ki\u1ec3m tra c\u00e1c giao d\u1ecbch (transactions) v\u00e0 smart contracts \u0111\u00e3 \u0111\u01b0\u1ee3c tri\u1ec3n khai (deployed) ho\u1eb7c th\u1ef1c thi tr\u00ean m\u1ea1ng l\u01b0\u1edbi. N\u1ebfu b\u1ea1n \u0111ang l\u00e0m vi\u1ec7c v\u1edbi testnet Nitro (c\u1ee5 th\u1ec3 l\u00e0 Goerli), th\u00ec c\u00f4ng c\u1ee5 b\u1ea1n c\u1ea7n l\u00e0 Goerli Arbiscan phi\u00ean b\u1ea3n d\u00e0nh ri\u00eang cho test. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 m\u1ed9t v\u00e0i d\u1eef li\u1ec7u minh h\u1ecda cho t\u1ed1c \u0111\u1ed9 ph\u00e1t tri\u1ec3n nhanh ch\u00f3ng v\u00e0 quy m\u00f4 \u1ea5n t\u01b0\u1ee3ng c\u1ee7a Arbitrum: Trung b\u00ecnh m\u1ed7i ng\u00e0y c\u00f3 t\u1edbi 576,012 giao d\u1ecbch \u0111\u01b0\u1ee3c ch\u1ea5p nh\u1eadn (accepted transactions) con s\u1ed1 n\u00e0y cho th\u1ea5y m\u1ea1ng l\u01b0\u1edbi \u0111ang ho\u1ea1t \u0111\u1ed9ng r\u1ea5t s\u00f4i \u0111\u1ed9ng. T\u1ed5ng c\u1ed9ng g\u1ea7n 3 tri\u1ec7u \u0111\u1ecba ch\u1ec9 v\u00ed duy nh\u1ea5t (unique addresses) \u0111\u00e3 t\u01b0\u01a1ng t\u00e1c tr\u00ean Arbitrum ch\u1ee9ng minh l\u01b0\u1ee3ng ng\u01b0\u1eddi d\u00f9ng \u0111ang t\u0103ng tr\u01b0\u1edfng \u0111\u1ec1u \u0111\u1eb7n. M\u1ed7i ng\u00e0y c\u00f3 t\u1eeb 100 \u0111\u1ebfn 300 smart contracts m\u1edbi \u0111\u01b0\u1ee3c tri\u1ec3n khai.","title":"Arbitrum: T\u0103ng t\u1ed1c Ethereum v\u1edbi c\u00f4ng ngh\u1ec7 Optimistic Rollups"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Welcome/Introduce_arbitrum/#arbitrum-tang-toc-ethereum-voi-cong-nghe-optimistic-rollups","text":"","title":"Arbitrum: T\u0103ng t\u1ed1c Ethereum v\u1edbi c\u00f4ng ngh\u1ec7 Optimistic Rollups"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Welcome/Introduce_arbitrum/#gioi-thieu-ve-arbitrum","text":"Video Arbitrum l\u00e0 m\u1ed9t trong nh\u1eefng gi\u1ea3i ph\u00e1p m\u1edf r\u1ed9ng quy m\u00f4 (scaling solution)uc\u1ee7a Ethereum, nh\u01b0ng \u00edt ai bi\u1ebft r\u1eb1ng n\u00f3 \u0111\u01b0\u1ee3c kh\u1edfi ngu\u1ed3n t\u1eeb m\u00f4i tr\u01b0\u1eddng h\u1ecdc thu\u1eadt. D\u1ef1 \u00e1n \u0111\u01b0\u1ee3c h\u00ecnh th\u00e0nh t\u1ea1i \u0110\u1ea1i h\u1ecdc Princeton (M\u1ef9), n\u01a1i Gi\u00e1o s\u01b0 Ed Felten \u0111\u00e3 kh\u1edfi x\u01b0\u1edbng \u00fd t\u01b0\u1edfng c\u00f9ng v\u1edbi hai nghi\u00ean c\u1ee9u sinh ti\u1ebfn s\u0129 c\u1ee7a m\u00ecnh l\u00e0 Steven Goldfeder v\u00e0 Harry Kalodner. T\u1eeb nh\u1eefng th\u1ea3o lu\u1eadn h\u1ecdc thu\u1eadt ban \u0111\u1ea7u v\u00e0o n\u0103m 2015, \u0111\u1ebfn n\u0103m 2018, nh\u00f3m nghi\u00ean c\u1ee9u \u0111\u00e3 ch\u00ednh th\u1ee9c c\u00f4ng b\u1ed1 m\u1ed9t b\u00e0i nghi\u00ean c\u1ee9u chi ti\u1ebft v\u1ec1 gi\u1ea3i ph\u00e1p m\u1edf r\u1ed9ng Ethereum, \u0111\u1ed3ng th\u1eddi xin c\u1ea5p ph\u00e9p th\u01b0\u01a1ng m\u1ea1i ho\u00e1 c\u00f4ng ngh\u1ec7 t\u1eeb \u0110\u1ea1i h\u1ecdc Princeton. T\u1eeb \u0111\u00e2y, Arbitrum ch\u00ednh th\u1ee9c ra \u0111\u1eddi v\u00e0 ti\u1ebfp t\u1ee5c ph\u00e1t tri\u1ec3n m\u1ea1nh m\u1ebd d\u01b0\u1edbi s\u1ef1 \u0111i\u1ec1u h\u00e0nh c\u1ee7a c\u00f4ng ty Offchain Labs \u2013 n\u01a1i c\u1ea3 ba ng\u01b0\u1eddi s\u00e1ng l\u1eadp c\u00f9ng tham gia. V\u00e0o th\u00e1ng 8 n\u0103m 2021, Arbitrum \u0111\u00e3 huy \u0111\u1ed9ng th\u00e0nh c\u00f4ng 120 tri\u1ec7u USD trong v\u00f2ng g\u1ecdi v\u1ed1n Series B, \u0111\u1ea1t m\u1ee9c \u0111\u1ecbnh gi\u00e1 1,2 t\u1ef7 USD , ch\u00ednh th\u1ee9c tr\u1edf th\u00e0nh m\u1ed9t k\u1ef3 l\u00e2n (unicorn) trong ng\u00e0nh blockchain. M\u1ee5c ti\u00eau tr\u1ecdng t\u00e2m c\u1ee7a Arbitrum l\u00e0 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 t\u1eafc ngh\u1ebdn v\u00e0 chi ph\u00ed cao c\u1ee7a Ethereum , \u0111\u1ed3ng th\u1eddi v\u1eabn duy tr\u00ec \u0111\u01b0\u1ee3c c\u00e1c y\u1ebfu t\u1ed1 c\u1ed1t l\u00f5i nh\u01b0 t\u00ednh b\u1ea3o m\u1eadt, t\u00ednh phi t\u1eadp trung, v\u00e0 kh\u1ea3 n\u0103ng t\u01b0\u01a1ng th\u00edch v\u1edbi EVM. \u0110\u1ec3 hi\u1ec7n th\u1ef1c h\u00f3a \u0111i\u1ec1u n\u00e0y, Arbitrum s\u1eed d\u1ee5ng m\u1ed9t gi\u1ea3i ph\u00e1p c\u00f3 t\u00ean g\u1ecdi Optimistic Rollup \u2013 c\u01a1 ch\u1ebf gi\u00fap g\u1ed9p nhi\u1ec1u giao d\u1ecbch th\u00e0nh m\u1ed9t c\u1ee5m v\u00e0 x\u1eed l\u00fd ngo\u00e0i chu\u1ed7i ch\u00ednh (off-chain), sau \u0111\u00f3 ghi l\u1ea1i k\u1ebft qu\u1ea3 l\u00ean Ethereum. C\u00e1ch l\u00e0m n\u00e0y gi\u00fap gi\u1ea3m t\u1ea3i cho m\u1ea1ng l\u01b0\u1edbi Ethereum. Hi\u1ec7n t\u1ea1i, h\u1ec7 sinh th\u00e1i Arbitrum bao g\u1ed3m nhi\u1ec1u s\u1ea3n ph\u1ea9m ph\u1ee5c v\u1ee5 c\u00e1c nhu c\u1ea7u kh\u00e1c nhau trong Web3: Arbitrum One: m\u1ea1ng Layer 2 ch\u00ednh d\u00e0nh cho h\u1ea7u h\u1ebft c\u00e1c \u1ee9ng d\u1ee5ng DeFi v\u00e0 dApps th\u00f4ng th\u01b0\u1eddng. Arbitrum Nitro: ki\u1ebfn tr\u00fac n\u00e2ng c\u1ea5p gi\u00fap c\u1ea3i thi\u1ec7n hi\u1ec7u su\u1ea5t c\u1ee7a Arbitrum One, gi\u1ea3m chi ph\u00ed v\u00e0 t\u0103ng th\u00f4ng l\u01b0\u1ee3ng. Arbitrum Nova: m\u1ea1ng chuy\u00ean bi\u1ec7t cho c\u00e1c \u1ee9ng d\u1ee5ng c\u00f3 t\u1ea7n su\u1ea5t giao d\u1ecbch cao nh\u01b0 gaming v\u00e0 m\u1ea1ng x\u00e3 h\u1ed9i. Arbitrum Orbit: framework cho ph\u00e9p c\u00e1c developer t\u1ea1o Layer 3 chain tu\u1ef3 ch\u1ec9nh, x\u00e2y d\u1ef1ng h\u1ec7 sinh th\u00e1i ri\u00eang tr\u00ean n\u1ec1n t\u1ea3ng Arbitrum. Arbitrum Stylus: m\u00f4i tr\u01b0\u1eddng l\u1eadp tr\u00ecnh m\u1edbi cho ph\u00e9p vi\u1ebft smart contract b\u1eb1ng Rust, C v\u00e0 C++, m\u1edf r\u1ed9ng kh\u1ea3 n\u0103ng ph\u00e1t tri\u1ec3n ra ngo\u00e0i ph\u1ea1m vi c\u1ee7a Solidity.","title":"Gi\u1edbi thi\u1ec7u v\u1ec1 Arbitrum"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Welcome/Introduce_arbitrum/#uu-iem-noi-bat-cua-arbitrum","text":"","title":"\u01afu \u0111i\u1ec3m n\u1ed5i b\u1eadt c\u1ee7a Arbitrum"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Welcome/Introduce_arbitrum/#1-bao-mat-phi-tap-trung-trustless-security","text":"H\u1ec7 th\u1ed1ng b\u1ea3o m\u1eadt c\u1ee7a Arbitrum \u0111\u01b0\u1ee3c k\u1ebf th\u1eeba tr\u1ef1c ti\u1ebfp t\u1eeb Ethereum. Nh\u1edd \u0111\u00f3, ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 t\u1ef1 x\u00e1c minh k\u1ebft qu\u1ea3 th\u1ef1c thi tr\u00ean Layer 2 m\u00e0 kh\u00f4ng c\u1ea7n tin c\u1eady v\u00e0o b\u1ea5t k\u1ef3 b\u00ean trung gian n\u00e0o. \u0110\u00e2y l\u00e0 y\u1ebfu t\u1ed1 quan tr\u1ecdng \u0111\u1ea3m b\u1ea3o t\u00ednh phi t\u1eadp trung v\u00e0 minh b\u1ea1ch c\u1ee7a m\u1ea1ng l\u01b0\u1edbi.","title":"1. B\u1ea3o m\u1eadt phi t\u1eadp trung (Trustless Security)"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Welcome/Introduce_arbitrum/#2-tuong-thich-hoan-toan-voi-ethereum-ethereum-compatibility","text":"Arbitrum h\u1ed7 tr\u1ee3 to\u00e0n b\u1ed9 c\u00e1c ti\u00eau chu\u1ea9n c\u1ee7a EVM (Ethereum Virtual Machine), bao g\u1ed3m c\u1ea3 smart contract v\u00e0 c\u00e1c giao d\u1ecbch th\u00f4ng th\u01b0\u1eddng. \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0: C\u00e1c contract vi\u1ebft b\u1eb1ng Solidity c\u00f3 th\u1ec3 tri\u1ec3n khai l\u1ea1i tr\u00ean Arbitrum m\u00e0 kh\u00f4ng c\u1ea7n ch\u1ec9nh s\u1eeda. C\u00e1c c\u00f4ng c\u1ee5 ph\u00e1t tri\u1ec3n nh\u01b0 Hardhat, Foundry hay Remix \u0111\u1ec1u c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng v\u1edbi Arbitrum. T\u00ednh t\u01b0\u01a1ng th\u00edch n\u00e0y gi\u00fap gi\u1ea3m th\u1eddi gian h\u1ecdc t\u1eadp v\u00e0 chuy\u1ec3n \u0111\u1ed5i c\u1ee7a nh\u00e0 ph\u00e1t tri\u1ec3n, \u0111\u1ed3ng th\u1eddi t\u1eadn d\u1ee5ng l\u1ea1i to\u00e0n b\u1ed9 h\u1ec7 sinh th\u00e1i c\u00f4ng c\u1ee5 s\u1eb5n c\u00f3 t\u1eeb Ethereum.","title":"2. T\u01b0\u01a1ng th\u00edch ho\u00e0n to\u00e0n v\u1edbi Ethereum (Ethereum Compatibility)"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Welcome/Introduce_arbitrum/#3-kha-nang-mo-rong-scalability","text":"Arbitrum s\u1eed d\u1ee5ng c\u01a1 ch\u1ebf Optimistic Rollup \u0111\u1ec3 di chuy\u1ec3n ph\u1ea7n l\u1edbn ho\u1ea1t \u0111\u1ed9ng t\u00ednh to\u00e1n v\u00e0 l\u01b0u tr\u1eef ra kh\u1ecfi chu\u1ed7i ch\u00ednh (off-chain), ch\u1ec9 ghi l\u1ea1i d\u1eef li\u1ec7u t\u1ed5ng h\u1ee3p l\u00ean Ethereum. Nh\u1edd \u0111\u00f3: T\u0103ng \u0111\u00e1ng k\u1ec3 th\u00f4ng l\u01b0\u1ee3ng x\u1eed l\u00fd giao d\u1ecbch (throughput) \u2022 Gi\u1ea3m t\u1eafc ngh\u1ebdn m\u1ea1ng \u2022 T\u1ed1i \u01b0u tr\u1ea3i nghi\u1ec7m ng\u01b0\u1eddi d\u00f9ng, \u0111\u1eb7c bi\u1ec7t trong c\u00e1c dApp c\u00f3 l\u01b0u l\u01b0\u1ee3ng truy c\u1eadp l\u1edbn","title":"3. Kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng (Scalability)"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Welcome/Introduce_arbitrum/#4-chi-phi-thap-low-cost","text":"Arbitrum \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 gi\u1ea3m thi\u1ec3u l\u01b0\u1ee3ng ph\u00ed gas c\u1ea7n tr\u1ea3 tr\u00ean Ethereum Layer 1, t\u1eeb \u0111\u00f3 h\u1ea1 th\u1ea5p chi ph\u00ed tr\u00ean m\u1ed7i giao d\u1ecbch. \u0110\u00e2y l\u00e0 m\u1ed9t trong nh\u1eefng l\u00fd do khi\u1ebfn Arbitrum tr\u1edf th\u00e0nh l\u1ef1a ch\u1ecdn h\u00e0ng \u0111\u1ea7u trong c\u00e1c \u1ee9ng d\u1ee5ng DeFi, gaming v\u00e0 m\u1ea1ng x\u00e3 h\u1ed9i phi t\u1eadp trung.","title":"4. Chi ph\u00ed th\u1ea5p (Low Cost)"},{"location":"What_I_learned_from_VBI_Academy/Arbitrum_learning/Welcome/Introduce_arbitrum/#insights-tren-arbiscan","text":"Arbiscan l\u00e0 block explorer ch\u00ednh th\u1ee9c \u0111\u1ea7u ti\u00ean, d\u00f9ng \u0111\u1ec3 ki\u1ec3m tra c\u00e1c giao d\u1ecbch (transactions) v\u00e0 smart contracts \u0111\u00e3 \u0111\u01b0\u1ee3c tri\u1ec3n khai (deployed) ho\u1eb7c th\u1ef1c thi tr\u00ean m\u1ea1ng l\u01b0\u1edbi. N\u1ebfu b\u1ea1n \u0111ang l\u00e0m vi\u1ec7c v\u1edbi testnet Nitro (c\u1ee5 th\u1ec3 l\u00e0 Goerli), th\u00ec c\u00f4ng c\u1ee5 b\u1ea1n c\u1ea7n l\u00e0 Goerli Arbiscan phi\u00ean b\u1ea3n d\u00e0nh ri\u00eang cho test. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 m\u1ed9t v\u00e0i d\u1eef li\u1ec7u minh h\u1ecda cho t\u1ed1c \u0111\u1ed9 ph\u00e1t tri\u1ec3n nhanh ch\u00f3ng v\u00e0 quy m\u00f4 \u1ea5n t\u01b0\u1ee3ng c\u1ee7a Arbitrum: Trung b\u00ecnh m\u1ed7i ng\u00e0y c\u00f3 t\u1edbi 576,012 giao d\u1ecbch \u0111\u01b0\u1ee3c ch\u1ea5p nh\u1eadn (accepted transactions) con s\u1ed1 n\u00e0y cho th\u1ea5y m\u1ea1ng l\u01b0\u1edbi \u0111ang ho\u1ea1t \u0111\u1ed9ng r\u1ea5t s\u00f4i \u0111\u1ed9ng. T\u1ed5ng c\u1ed9ng g\u1ea7n 3 tri\u1ec7u \u0111\u1ecba ch\u1ec9 v\u00ed duy nh\u1ea5t (unique addresses) \u0111\u00e3 t\u01b0\u01a1ng t\u00e1c tr\u00ean Arbitrum ch\u1ee9ng minh l\u01b0\u1ee3ng ng\u01b0\u1eddi d\u00f9ng \u0111ang t\u0103ng tr\u01b0\u1edfng \u0111\u1ec1u \u0111\u1eb7n. M\u1ed7i ng\u00e0y c\u00f3 t\u1eeb 100 \u0111\u1ebfn 300 smart contracts m\u1edbi \u0111\u01b0\u1ee3c tri\u1ec3n khai.","title":"Insights tr\u00ean Arbiscan"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/What%20is%20a%20blockchain%20transaction/","text":"Action Units trong web3 Khi b\u1ea1n nh\u1ea5n \u201cSend\u201d \u0111\u1ec3 chuy\u1ec3n coin trong v\u00ed, hay b\u1ea5m \u201cSwap\u201d tr\u00ean m\u1ed9t s\u00e0n DEX nh\u01b0 Uniswap hay PancakeSwap , c\u00f3 m\u1ed9t \u0111i\u1ec1u quan tr\u1ecdng x\u1ea3y ra ph\u00eda sau m\u00e0 b\u1ea1n c\u00f3 th\u1ec3 kh\u00f4ng \u0111\u1ec3 \u00fd m\u1ed9t giao d\u1ecbch on-chain (on-chain transaction) \u0111\u01b0\u1ee3c t\u1ea1o v\u00e0 g\u1eedi l\u00ean blockchain. Trong Blockchain, transaction (giao d\u1ecbch) ch\u00ednh l\u00e0 \u0111\u01a1n v\u1ecb c\u01a1 b\u1ea3n v\u00e0 kh\u00f4ng th\u1ec3 t\u00e1ch r\u1eddi g\u1ecdi l\u00e0 \u201catomic unit\u201d . D\u00f9 b\u1ea1n \u0111ang l\u00e0m g\u00ec tr\u00ean n\u1ec1n t\u1ea3ng phi t\u1eadp trung t\u1ea5t c\u1ea3 \u0111\u1ec1u \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n d\u01b0\u1edbi d\u1ea1ng m\u1ed9t giao d\u1ecbch on-chain. Transaction l\u00e0 g\u00ec? Transaction (giao d\u1ecbch) l\u00e0 m\u1ed9t y\u00eau c\u1ea7u th\u1ef1c thi h\u00e0nh \u0111\u1ed9ng (operation request) do ng\u01b0\u1eddi d\u00f9ng g\u1eedi l\u00ean m\u1ea1ng l\u01b0\u1edbi blockchain, nh\u1eb1m thay \u0111\u1ed5i tr\u1ea1ng th\u00e1i c\u1ee7a chu\u1ed7i (state of the chain). C\u1ee5 th\u1ec3, m\u1ed7i transaction \u0111\u1ec1u c\u1ea7n tr\u1ea3i qua ba b\u01b0\u1edbc: K\u00fd s\u1ed1 (signing) Ng\u01b0\u1eddi d\u00f9ng s\u1eed d\u1ee5ng private key (kh\u00f3a ri\u00eang) \u0111\u1ec3 k\u00fd v\u00e0o transaction, nh\u1eb1m ch\u1ee9ng minh r\u1eb1ng m\u00ecnh l\u00e0 ch\u1ee7 s\u1edf h\u1eefu h\u1ee3p l\u1ec7 c\u1ee7a h\u00e0nh \u0111\u1ed9ng \u0111\u00f3. X\u00e1c minh (verification): M\u1ea1ng l\u01b0\u1edbi c\u00e1c node s\u1ebd ki\u1ec3m tra t\u00ednh h\u1ee3p l\u1ec7 c\u1ee7a ch\u1eef k\u00fd v\u00e0 n\u1ed9i dung transaction. Ghi v\u00e0o block (inclusion): Transaction h\u1ee3p l\u1ec7 s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o m\u1ed9t block m\u1edbi, v\u00e0 khi block \u0111\u00f3 \u0111\u01b0\u1ee3c x\u00e1c nh\u1eadn (finalized), tr\u1ea1ng th\u00e1i c\u1ee7a blockchain m\u1edbi ch\u00ednh th\u1ee9c thay \u0111\u1ed5i. C\u00e1c th\u00e0nh ph\u1ea7n c\u1ee7a m\u1ed9t Ethereum transaction Tr\u01b0\u1eddng (Field Name) \u00dd ngh\u0129a (Meaning) from \u0110\u1ecba ch\u1ec9 ng\u01b0\u1eddi g\u1eedi (EOA \u2013 Externally Owned Account) to \u0110\u1ecba ch\u1ec9 ng\u01b0\u1eddi nh\u1eadn (c\u00f3 th\u1ec3 l\u00e0 EOA ho\u1eb7c smart contract) value S\u1ed1 l\u01b0\u1ee3ng t\u00e0i s\u1ea3n \u0111\u01b0\u1ee3c g\u1eedi (v\u00ed d\u1ee5: 1 ETH) data D\u1eef li\u1ec7u b\u1ed5 sung (th\u01b0\u1eddng l\u00e0 th\u00f4ng tin g\u1ecdi h\u00e0m trong smart contract) nonce S\u1ed1 th\u1ee9 t\u1ef1 transaction c\u1ee7a \u0111\u1ecba ch\u1ec9 g\u1eedi, d\u00f9ng \u0111\u1ec3 ch\u1ed1ng replay attack gasLimit Gi\u1edbi h\u1ea1n t\u1ed1i \u0111a l\u01b0\u1ee3ng gas \u0111\u01b0\u1ee3c ph\u00e9p ti\u00eau t\u1ed1n cho transaction gasPrice M\u1ee9c ph\u00ed gas b\u1ea1n ch\u1ea5p nh\u1eadn tr\u1ea3 cho m\u1ed7i \u0111\u01a1n v\u1ecb gas signature Ch\u1eef k\u00fd \u0111i\u1ec7n t\u1eed (t\u1ea1o ra t\u1eeb private key \u0111\u1ec3 x\u00e1c th\u1ef1c giao d\u1ecbch)","title":"Action Units trong web3"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/What%20is%20a%20blockchain%20transaction/#action-units-trong-web3","text":"Khi b\u1ea1n nh\u1ea5n \u201cSend\u201d \u0111\u1ec3 chuy\u1ec3n coin trong v\u00ed, hay b\u1ea5m \u201cSwap\u201d tr\u00ean m\u1ed9t s\u00e0n DEX nh\u01b0 Uniswap hay PancakeSwap , c\u00f3 m\u1ed9t \u0111i\u1ec1u quan tr\u1ecdng x\u1ea3y ra ph\u00eda sau m\u00e0 b\u1ea1n c\u00f3 th\u1ec3 kh\u00f4ng \u0111\u1ec3 \u00fd m\u1ed9t giao d\u1ecbch on-chain (on-chain transaction) \u0111\u01b0\u1ee3c t\u1ea1o v\u00e0 g\u1eedi l\u00ean blockchain. Trong Blockchain, transaction (giao d\u1ecbch) ch\u00ednh l\u00e0 \u0111\u01a1n v\u1ecb c\u01a1 b\u1ea3n v\u00e0 kh\u00f4ng th\u1ec3 t\u00e1ch r\u1eddi g\u1ecdi l\u00e0 \u201catomic unit\u201d . D\u00f9 b\u1ea1n \u0111ang l\u00e0m g\u00ec tr\u00ean n\u1ec1n t\u1ea3ng phi t\u1eadp trung t\u1ea5t c\u1ea3 \u0111\u1ec1u \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n d\u01b0\u1edbi d\u1ea1ng m\u1ed9t giao d\u1ecbch on-chain.","title":"Action Units trong web3"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/What%20is%20a%20blockchain%20transaction/#transaction-la-gi","text":"Transaction (giao d\u1ecbch) l\u00e0 m\u1ed9t y\u00eau c\u1ea7u th\u1ef1c thi h\u00e0nh \u0111\u1ed9ng (operation request) do ng\u01b0\u1eddi d\u00f9ng g\u1eedi l\u00ean m\u1ea1ng l\u01b0\u1edbi blockchain, nh\u1eb1m thay \u0111\u1ed5i tr\u1ea1ng th\u00e1i c\u1ee7a chu\u1ed7i (state of the chain). C\u1ee5 th\u1ec3, m\u1ed7i transaction \u0111\u1ec1u c\u1ea7n tr\u1ea3i qua ba b\u01b0\u1edbc: K\u00fd s\u1ed1 (signing) Ng\u01b0\u1eddi d\u00f9ng s\u1eed d\u1ee5ng private key (kh\u00f3a ri\u00eang) \u0111\u1ec3 k\u00fd v\u00e0o transaction, nh\u1eb1m ch\u1ee9ng minh r\u1eb1ng m\u00ecnh l\u00e0 ch\u1ee7 s\u1edf h\u1eefu h\u1ee3p l\u1ec7 c\u1ee7a h\u00e0nh \u0111\u1ed9ng \u0111\u00f3. X\u00e1c minh (verification): M\u1ea1ng l\u01b0\u1edbi c\u00e1c node s\u1ebd ki\u1ec3m tra t\u00ednh h\u1ee3p l\u1ec7 c\u1ee7a ch\u1eef k\u00fd v\u00e0 n\u1ed9i dung transaction. Ghi v\u00e0o block (inclusion): Transaction h\u1ee3p l\u1ec7 s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o m\u1ed9t block m\u1edbi, v\u00e0 khi block \u0111\u00f3 \u0111\u01b0\u1ee3c x\u00e1c nh\u1eadn (finalized), tr\u1ea1ng th\u00e1i c\u1ee7a blockchain m\u1edbi ch\u00ednh th\u1ee9c thay \u0111\u1ed5i.","title":"Transaction l\u00e0 g\u00ec?"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/What%20is%20a%20blockchain%20transaction/#cac-thanh-phan-cua-mot-ethereum-transaction","text":"Tr\u01b0\u1eddng (Field Name) \u00dd ngh\u0129a (Meaning) from \u0110\u1ecba ch\u1ec9 ng\u01b0\u1eddi g\u1eedi (EOA \u2013 Externally Owned Account) to \u0110\u1ecba ch\u1ec9 ng\u01b0\u1eddi nh\u1eadn (c\u00f3 th\u1ec3 l\u00e0 EOA ho\u1eb7c smart contract) value S\u1ed1 l\u01b0\u1ee3ng t\u00e0i s\u1ea3n \u0111\u01b0\u1ee3c g\u1eedi (v\u00ed d\u1ee5: 1 ETH) data D\u1eef li\u1ec7u b\u1ed5 sung (th\u01b0\u1eddng l\u00e0 th\u00f4ng tin g\u1ecdi h\u00e0m trong smart contract) nonce S\u1ed1 th\u1ee9 t\u1ef1 transaction c\u1ee7a \u0111\u1ecba ch\u1ec9 g\u1eedi, d\u00f9ng \u0111\u1ec3 ch\u1ed1ng replay attack gasLimit Gi\u1edbi h\u1ea1n t\u1ed1i \u0111a l\u01b0\u1ee3ng gas \u0111\u01b0\u1ee3c ph\u00e9p ti\u00eau t\u1ed1n cho transaction gasPrice M\u1ee9c ph\u00ed gas b\u1ea1n ch\u1ea5p nh\u1eadn tr\u1ea3 cho m\u1ed7i \u0111\u01a1n v\u1ecb gas signature Ch\u1eef k\u00fd \u0111i\u1ec7n t\u1eed (t\u1ea1o ra t\u1eeb private key \u0111\u1ec3 x\u00e1c th\u1ef1c giao d\u1ecbch)","title":"C\u00e1c th\u00e0nh ph\u1ea7n c\u1ee7a m\u1ed9t Ethereum transaction"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/intro/","text":"Intro this course from VBI Academy If you're curious about how to build and send transactions, write smart contracts, and learn blockchain systems, you're in the right place. I dive deep into what\u2019s happening under the hood and share everything I learn for free. Im digging the vibe","title":"Intro this course from VBI Academy"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/intro/#intro-this-course-from-vbi-academy","text":"If you're curious about how to build and send transactions, write smart contracts, and learn blockchain systems, you're in the right place. I dive deep into what\u2019s happening under the hood and share everything I learn for free. Im digging the vibe","title":"Intro this course from VBI Academy"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/00_00_The_Anatomy_of_Web3/","text":"A article on the anatomy of Web3 B\u00e0i vi\u1ebft n\u00e0y vi\u1ebft to\u00e0n c\u1ea3nh v\u1ec1 h\u1ec7 sinh th\u00e1i c\u1ee7a Web3 Blockchain (my POV). Web3 \u0111\u1ebfn nay \u0111\u00e3 ph\u00e1t tri\u1ec3n t\u01b0\u01a1ng \u0111\u1ed1i \u0111\u1ea7y \u0111\u1ee7, h\u1ec7 sinh th\u00e1i c\u0169ng d\u1ea7n \u0111\u1ecbnh h\u00ecnh r\u00f5 r\u00e0ng. N\u1ebfu nh\u00ecn \u1edf g\u00f3c \u0111\u1ed9 ki\u1ebfn tr\u00fac t\u1ed5ng th\u1ec3 hi\u1ec7n t\u1ea1i th\u00ec ta c\u00f3 th\u1ec3 chia th\u00e0nh c\u00e1c layers l\u00e0 blockchain network layer, middleware layer, application layer, v\u00e0 access layer... Trong ph\u1ea7n n\u00e0y s\u1ebd nh\u1eafc \u0111\u1ebfn kh\u00e1 nhi\u1ec1u c\u00e1i t\u00ean d\u1ef1 \u00e1n, nh\u01b0ng v\u00ec dung l\u01b0\u1ee3ng ki\u1ebfn th\u1ee9c m\u00ecnh c\u00f3 h\u1ea1n n\u00ean m\u00ecnh s\u1ebd kh\u00f4ng \u0111i s\u00e2u v\u00e0o t\u1eebng c\u00e1i m\u00e0 ch\u1ec9 overall. 1. Blockchain network layer \u1ede t\u1ea7ng th\u1ea5p nh\u1ea5t trong ki\u1ebfn tr\u00fac Web3 l\u00e0 l\u1edbp m\u1ea1ng l\u01b0\u1edbi blockchain (blockchain network layer) hay c\u00f2n g\u1ecdi l\u00e0 l\u1edbp n\u1ec1n t\u1ea3ng (foundation layer). \u0110\u00e2y ch\u00ednh l\u00e0 \u201cc\u00e1i m\u00f3ng nh\u00e0\u201d c\u1ee7a to\u00e0n b\u1ed9 h\u1ec7 sinh th\u00e1i Web3, n\u01a1i t\u1eadp h\u1ee3p c\u00e1c blockchain kh\u00e1c nhau v\u1eadn h\u00e0nh \u0111\u1ed9c l\u1eadp ho\u1eb7c t\u01b0\u01a1ng t\u00e1c v\u1edbi nhau. Hi\u1ec7n c\u00f3 r\u1ea5t nhi\u1ec1u blockchain n\u1eb1m trong l\u1edbp n\u00e0y, c\u00f3 th\u1ec3 k\u1ec3 \u0111\u1ebfn nh\u01b0: Bitcoin, Ethereum, BNB Chain (BSC), Polygon, Arbitrum, Polkadot, Cosmos, Celestia, Avalanche, Aptos, Sui v\u00e0 c\u00f2n h\u00e0ng t\u00e1 c\u00e1i t\u00ean kh\u00e1c n\u1eefa. 1.1 Ph\u00e2n t\u1ea7ng ki\u1ebfn tr\u00fac: Layer 0 / Layer 1 / Layer 2 Layer 0 (L0): Layer 0 l\u00e0 l\u1edbp tr\u1eebu t\u01b0\u1ee3ng h\u01a1n, th\u01b0\u1eddng \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 l\u1edbp h\u1ea1 t\u1ea7ng blockchain (infrastructure layer) \u2013 n\u01a1i cung c\u1ea5p c\u00e1c d\u1ecbch v\u1ee5 c\u01a1 b\u1ea3n gi\u00fap nhi\u1ec1u blockchain c\u00f3 th\u1ec3 t\u01b0\u01a1ng t\u00e1c ho\u1eb7c chia s\u1ebb t\u00e0i nguy\u00ean. V\u00ed d\u1ee5: Cosmos, Polkadot, Layer 1 (L1): C\u00e1c Layer 1 c\u0169ng ch\u00ednh l\u00e0 v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh cho \u201ctam gi\u00e1c b\u1ea5t kh\u1ea3 thi\u201d c\u1ee7a blockchain kh\u00f3 \u0111\u1ec3 m\u1ed9t blockchain \u0111\u1ed3ng th\u1eddi \u0111\u1ea3m b\u1ea3o c\u1ea3 3 y\u1ebfu t\u1ed1: m\u1edf r\u1ed9ng (scalability), b\u1ea3o m\u1eadt (security), v\u00e0 phi t\u1eadp trung (decentralization). Layer 2 (L2): Layer 2 ra \u0111\u1eddi \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n \u201cTPS th\u1ea5p\u201d c\u1ee7a Layer 1, nh\u1ea5t l\u00e0 Ethereum. Layer 2 l\u00e0 c\u00e1c chu\u1ed7i ph\u1ee5 (subchain) n\u1eb1m ph\u00eda tr\u00ean Layer 1, c\u00f3 nhi\u1ec7m v\u1ee5 x\u1eed l\u00fd giao d\u1ecbch nhanh v\u00e0 r\u1ebb h\u01a1n, sau \u0111\u00f3 g\u1eedi k\u1ebft qu\u1ea3 v\u1ec1 Layer 1 \u0111\u1ec3 l\u01b0u tr\u1eef. Layer 2 gi\u00fap Layer 1 tr\u1edf th\u00e0nh settlement layer (l\u1edbp thanh to\u00e1n), c\u00f2n m\u00ecnh th\u00ec lo ph\u1ea7n execution layer (l\u1edbp th\u1ef1c thi). M\u1ed9t s\u1ed1 Layer 2 n\u1ed5i b\u1eadt c\u1ee7a Ethereum g\u1ed3m: Arbitrum, Optimism, zkSync, StarkNet, Polygon. Bitcoin c\u0169ng c\u00f3 Layer 2 nh\u01b0: Lightning Network , Stacks , RSK , nh\u01b0ng hi\u1ec7n t\u1ea1i v\u1eabn ch\u01b0a ph\u1ed5 bi\u1ebfn b\u1eb1ng Ethereum. 1.2 M\u00f4i tr\u01b0\u1eddng ch\u1ea1y smart contract S\u1ef1 ph\u00e1t tri\u1ec3n c\u1ee7a Web3 ch\u1ee7 y\u1ebfu nh\u1edd v\u00e0o smart contract, v\u00e0 c\u00e1c smart contract c\u1ea7n c\u00f3 m\u00f4i tr\u01b0\u1eddng \u0111\u1ec3 ch\u1ea1y \u2013 g\u1ecdi l\u00e0 virtual machine (m\u00e1y \u1ea3o). T\u01b0\u01a1ng t\u1ef1 nh\u01b0 Java c\u1ea7n JVM v\u1eady. Sau khi hi\u1ec3u c\u1ea5u tr\u00fac ph\u00e2n t\u1ea7ng, ta ti\u1ebfp t\u1ee5c ph\u00e2n lo\u1ea1i blockchain theo g\u00f3c nh\u00ecn EVM compatibility hay n\u00f3i c\u00e1ch kh\u00e1c, blockchain \u0111\u00f3 c\u00f3 ch\u1ea1y \u0111\u01b0\u1ee3c smart contract vi\u1ebft b\u1eb1ng Solidity v\u00e0 t\u01b0\u01a1ng th\u00edch v\u1edbi m\u00e1y \u1ea3o Ethereum hay kh\u00f4ng. V\u1ec1 c\u01a1 b\u1ea3n, c\u00f3 th\u1ec3 chia th\u00e0nh hai nh\u00f3m: EVM chains v\u00e0 Non-EVM chains . Hi\u1ec7n nay, EVM chains v\u1eabn l\u00e0 d\u00f2ng ch\u1ee7 \u0111\u1ea1o. Nh\u1eefng blockchain n\u00e0y thu h\u00fat l\u01b0\u1ee3ng l\u1edbn DApp v\u00e0 ng\u01b0\u1eddi d\u00f9ng Web3, nh\u1edd v\u00e0o c\u1ed9ng \u0111\u1ed3ng ph\u00e1t tri\u1ec3n r\u1ed9ng v\u00e0 h\u1ec7 sinh th\u00e1i c\u00f4ng c\u1ee5 phong ph\u00fa. M\u1ed9t s\u1ed1 blockchain t\u01b0\u01a1ng th\u00edch v\u1edbi EVM t\u1eeb \u0111\u1ea7u nh\u01b0 BSC, Heco, Arbitrum, Optimism, v.v. M\u1ed9t s\u1ed1 kh\u00e1c th\u00ec ph\u00e1t tri\u1ec3n sau n\u00e0y \u0111\u1ec3 t\u01b0\u01a1ng th\u00edch, v\u00ed d\u1ee5 nh\u01b0 zkSync: phi\u00ean b\u1ea3n 1.0 kh\u00f4ng h\u1ed7 tr\u1ee3 EVM, nh\u01b0ng t\u1eeb 2.0 tr\u1edf \u0111i th\u00ec \u0111\u00e3 embrace EVM ho\u00e0n to\u00e0n. T\u00ednh \u0111\u1ebfn hi\u1ec7n t\u1ea1i, ph\u1ea7n l\u1edbn c\u00e1c blockchain l\u1edbn \u0111\u1ec1u \u0111\u00e3 ho\u1eb7c \u0111ang h\u1ed7 tr\u1ee3 EVM. Tuy nhi\u00ean, v\u1eabn c\u00f2n m\u1ed9t s\u1ed1 chu\u1ed7i n\u1ed5i b\u1eadt n\u1eb1m ngo\u00e0i h\u1ec7 EVM, nh\u01b0 Solana, Terra, NEAR, Aptos, v\u00e0 Sui. C\u00e1c blockchain n\u00e0y th\u01b0\u1eddng ch\u1ecdn h\u01b0\u1edbng \u0111i kh\u00e1c bi\u1ec7t, c\u1ea3 v\u1ec1 ki\u1ebfn tr\u00fac l\u1eabn ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh smart contract: n\u1ebfu EVM chains d\u00f9ng Solidity, th\u00ec c\u00e1c Non-EVM chains th\u01b0\u1eddng d\u00f9ng Rust ho\u1eb7c Move T\u00f3m l\u1ea1i EVM chains : L\u00e0 nh\u1eefng blockchain t\u01b0\u01a1ng th\u00edch v\u1edbi Ethereum Virtual Machine, c\u00f3 th\u1ec3 ch\u1ea1y c\u00e1c smart contract \u0111\u01b0\u1ee3c vi\u1ebft b\u1eb1ng Solidity. V\u00ed d\u1ee5: Ethereum, BNB Chain, Polygon, Avalanche C-Chain\u2026 Non-EVM chains : Kh\u00f4ng t\u01b0\u01a1ng th\u00edch v\u1edbi EVM, s\u1eed d\u1ee5ng m\u00e1y \u1ea3o ri\u00eang v\u00e0 th\u01b0\u1eddng c\u00f3 ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh ri\u00eang, nh\u01b0: Solana (Rust/C/C++), Aptos & Sui (Move), Near protocol/ Cosmos d\u00f9ng rust, Cardano d\u00f9ng Haskell/Plutus.. 1.3 C\u00e1c vai tr\u00f2 trong to\u00e0n h\u1ec7 sinh th\u00e1i nh\u01b0 T\u00ednh to\u00e1n hay L\u01b0u tr\u1eef Ta c\u0169ng c\u00f3 th\u1ec3 chia blockchain theo m\u1ee5c ti\u00eau s\u1eed d\u1ee5ng: * Compute Chains: T\u1eadp trung v\u00e0o x\u1eed l\u00fd logic v\u00e0 ch\u1ea1y smart contract. * Storage Chains: T\u1eadp trung v\u00e0o l\u01b0u tr\u1eef d\u1eef li\u1ec7u phi t\u1eadp trung \u2013 v\u00ed d\u1ee5: Filecoin, Arweave, Walrus.. 1.4 Cross-chain bridges M\u1edf r\u1ed9ng h\u01a1n l\u00e0 c\u00e1c giao th\u1ee9c giao ti\u1ebfp gi\u1eefa nhi\u1ec1u blockchain. Kh\u00e1 kh\u00f3 \u0111\u1ec3 th\u1ed1ng k\u00ea ra s\u1ed1 l\u01b0\u1ee3ng bao nhi\u00eau cross-chain \u0111\u01b0\u1ee3c tri\u1ec3n khai nh\u01b0ng ta c\u00f3 nh\u1eefng t\u00ean d\u1eabn \u0111\u1ea7u cho ph\u00e9p chuy\u1ec3n t\u00e0i s\u1ea3n gi\u1eefa layer 2 v\u00e0 Ethereum m\u1ed9t c\u00e1ch m\u01b0\u1ee3c m\u00e0 nh\u01b0 Polygon , Arbitrum v\u00e0 Optimism . X\u1ebfp sau l\u00e0 Multichain (tr\u01b0\u1edbc \u0111\u00e2y l\u00e0 Anyswap) - tuy nhi\u00ean, tr\u1ea3i qua kho\u1ea3ng th\u1eddi gian kh\u1eafc nghi\u1ec7t c\u1ee7a th\u1ecb tr\u01b0\u1eddng, c\u00e1i t\u00ean Multichain \u0111\u00e3 d\u1ea7n phai m\u1edd trong tr\u00ed nh\u1edb c\u1ee7a nhi\u1ec1u ng\u01b0\u1eddi. T\u1ea1m th\u1eddi, \u0111\u00f3 l\u00e0 b\u1ee9c tranh t\u1ed5ng quan v\u1ec1 c\u00e1c \u201cth\u00e0nh vi\u00ean\u201d \u0111ang t\u1ea1o n\u00ean l\u1edbp m\u1ea1ng l\u01b0\u1edbi c\u1ee7a blockchain. T\u1ea5t nhi\u00ean, danh s\u00e1ch n\u00e0y s\u1ebd c\u00f2n ti\u1ebfp t\u1ee5c thay \u0111\u1ed5i s\u1ebd c\u00f3 nh\u1eefng c\u00e1i t\u00ean m\u1edbi gia nh\u1eadp, v\u00e0 c\u0169ng s\u1ebd c\u00f3 nh\u1eefng h\u1ec7 sinh th\u00e1i t\u1eebng r\u1ea7m r\u1ed9 r\u1ed3i d\u1ea7n b\u1ecb l\u00e3ng qu\u00ean \u1edf m\u1ed9t g\u00f3c c\u1ee7a l\u1ecbch s\u1eed Web3. 2. Middleware layer Ngay ph\u00eda tr\u00ean l\u1edbp m\u1ea1ng blockchain, m\u00ecnh g\u1ecdi \u0111\u00e2y l\u00e0 \"middleware layer\" chuy\u00ean cung c\u1ea5p c\u00e1c d\u1ecbch v\u1ee5 v\u00e0 ch\u1ee9c n\u0103ng n\u1ec1n t\u1ea3ng cho c\u00e1c \u1ee9ng d\u1ee5ng Security audits, oracles, index query services, API services, data analysis, data storage, basic financial services, digital identities, DAO governance.. C\u00e1c th\u00e0nh ph\u1ea7n trong l\u1edbp middleware n\u00e0y c\u00f3 th\u1ec3 l\u00e0: On-chain protocol (ch\u1ea1y tr\u1ef1c ti\u1ebfp tr\u00ean blockchain), Off-chain platform (ch\u1ea1y ngo\u00e0i blockchain), Ho\u1eb7c c\u00e1c t\u1ed5 ch\u1ee9c centralized enterprise. Tr\u01b0\u1edbc ti\u00ean l\u00e0 v\u1ec1 ki\u1ec3m to\u00e1n b\u1ea3o m\u1eadt ( Security Auditing ). \u0110\u00e2y l\u00e0 m\u1ed9t lo\u1ea1i middleware c\u1ed1t l\u00f5i. V\u00ec ph\u1ea7n l\u1edbn c\u00e1c blockchain v\u00e0 \u1ee9ng d\u1ee5ng Web3 \u0111\u1ec1u m\u00e3 ngu\u1ed3n m\u1edf (open-source), v\u00e0 nhi\u1ec1u \u1ee9ng d\u1ee5ng li\u00ean quan tr\u1ef1c ti\u1ebfp t\u1edbi t\u00e0i ch\u00ednh, n\u00ean v\u1ea5n \u0111\u1ec1 b\u1ea3o m\u1eadt tr\u1edf th\u00e0nh \u01b0u ti\u00ean h\u00e0ng \u0111\u1ea7u, v\u00e0 ki\u1ec3m to\u00e1n b\u1ea3o m\u1eadt \u0111\u01b0\u01a1ng nhi\u00ean tr\u1edf th\u00e0nh m\u1ed9t nhu c\u1ea7u b\u1eaft bu\u1ed9c. C\u00e1c c\u00f4ng ty n\u1ed5i ti\u1ebfng trong l\u0129nh v\u1ef1c n\u00e0y g\u1ed3m: CertiK , OpenZeppelin , ConsenSys , Hacken , Quantstamp ; \u1edf Trung Qu\u1ed1c c\u00f3 SlowMist , ChainSec , v\u00e0 Paidun . Ngo\u00e0i ra c\u00f2n c\u00f3 nhi\u1ec1u c\u00f4ng ty/team nhi\u1ec1u h\u01a1n th\u1ebf n\u1eefa... B\u00ean c\u1ea1nh \u0111\u00f3, kh\u00f4ng th\u1ec3 kh\u00f4ng k\u1ec3 t\u1edbi c\u00e1c Bug Bounty platform nh\u01b0 Immunefi , Hacker proof ... Ti\u1ebfp theo l\u00e0 Oracle , th\u00e0nh ph\u1ea7n \u0111\u00f3ng vai tr\u00f2 r\u1ea5t quan tr\u1ecdng trong h\u1ec7 sinh th\u00e1i Web3. Oracle l\u00e0 c\u1ea7u n\u1ed1i gi\u1eefa h\u1ec7 th\u1ed1ng blockchain v\u00e0 ngu\u1ed3n d\u1eef li\u1ec7u b\u00ean ngo\u00e0i, gi\u00fap th\u1ef1c hi\u1ec7n vi\u1ec7c giao ti\u1ebfp d\u1eef li\u1ec7u gi\u1eefa smart contract v\u00e0 th\u1ebf gi\u1edbi th\u1ef1c. V\u00ec b\u1ea3n th\u00e2n m\u1ea1ng l\u01b0\u1edbi blockchain b\u1ecb gi\u1edbi h\u1ea1n b\u1edfi t\u00ednh nh\u1ea5t qu\u00e1n tr\u1ea1ng th\u00e1i ( state consistency ), n\u00ean \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o r\u1eb1ng m\u1ed7i node \u0111\u1ec1u cho ra c\u00f9ng m\u1ed9t k\u1ebft qu\u1ea3 khi nh\u1eadn c\u00f9ng m\u1ed9t input, blockchain \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf nh\u01b0 m\u1ed9t h\u1ec7 th\u1ed1ng \u0111\u00f3ng, ch\u1ec9 c\u00f3 th\u1ec3 l\u1ea5y d\u1eef li\u1ec7u n\u1ed9i b\u1ed9 (on-chain), kh\u00f4ng th\u1ec3 ch\u1ee7 \u0111\u1ed9ng l\u1ea5y d\u1eef li\u1ec7u t\u1eeb b\u00ean ngo\u00e0i (off-chain). Tuy nhi\u00ean, trong nhi\u1ec1u t\u00ecnh hu\u1ed1ng \u1ee9ng d\u1ee5ng, d\u1eef li\u1ec7u b\u00ean ngo\u00e0i l\u00e0 b\u1eaft bu\u1ed9c v\u00e0 ch\u00fang \u0111\u01b0\u1ee3c cung c\u1ea5p th\u00f4ng qua oracle . \u0110\u00e2y c\u0169ng l\u00e0 c\u00e1ch duy nh\u1ea5t \u0111\u1ec3 blockchain c\u00f3 th\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi d\u1eef li\u1ec7u ngo\u00e0i chu\u1ed7i. C\u00e1c lo\u1ea1i oracle hi\u1ec7n nay c\u00f3 th\u1ec3 chia th\u00e0nh: oracle cho DeFi, NFT, SocialFi, oracle cross-chain, oracle b\u1ea3o m\u1eadt ri\u00eang t\u01b0, oracle t\u00edn d\u1ee5ng, v\u00e0 m\u1ea1ng l\u01b0\u1edbi oracle phi t\u1eadp trung. M\u1ed9t s\u1ed1 d\u1ef1 \u00e1n oracle ti\u00eau bi\u1ec3u g\u1ed3m: CreDA, Privy, UMA, Banksea, DOS, NEST, Chainlink, v.v. Trong \u0111\u00f3, Chainlink l\u00e0 d\u1ef1 \u00e1n d\u1eabn \u0111\u1ea7u m\u1ea3ng oracle, \u0111\u01b0\u1ee3c \u0111\u1ecbnh v\u1ecb l\u00e0 m\u1ed9t m\u1ea1ng l\u01b0\u1edbi oracle phi t\u1eadp trung, cung c\u1ea5p nhi\u1ec1u s\u1ea3n ph\u1ea9m nh\u01b0: Data Feeds, VRF, Keepers, Proof of Reserve, CCIP,\u2026 Ti\u1ebfp theo l\u00e0 truy v\u1ea5n d\u1eef li\u1ec7u ( Index Query ), m\u1ed9t middleware quan tr\u1ecdng gi\u00fap gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n truy v\u1ea5n d\u1eef li\u1ec7u on-chain ph\u1ee9c t\u1ea1p. V\u00ed d\u1ee5, n\u1ebfu mu\u1ed1n truy v\u1ea5n t\u1ed5ng kh\u1ed1i l\u01b0\u1ee3ng giao d\u1ecbch tr\u00ean Uniswap trong m\u1ed9t ng\u00e0y c\u1ee5 th\u1ec3, th\u00ec vi\u1ec7c truy v\u1ea5n tr\u1ef1c ti\u1ebfp t\u1eeb blockchain l\u00e0 r\u1ea5t kh\u00f3 kh\u0103n. Do \u0111\u00f3, c\u1ea7n c\u00f3 c\u00e1c d\u1ecbch v\u1ee5 truy v\u1ea5n ch\u1ec9 m\u1ee5c, v\u1edbi nh\u1eefng \u0111\u1ea1i di\u1ec7n ch\u00ednh l\u00e0 The Graph v\u00e0 Covalent. The Graph ho\u1ea1t \u0111\u1ed9ng b\u1eb1ng c\u00e1ch gi\u00e1m s\u00e1t d\u1eef li\u1ec7u on-chain v\u00e0 chuy\u1ec3n h\u00f3a ch\u00fang th\u00e0nh d\u1eef li\u1ec7u t\u00f9y ch\u1ec9nh \u0111\u1ec3 l\u01b0u tr\u1eef v\u00e0 truy v\u1ea5n. Trong khi \u0111\u00f3, Covalent \u0111\u00f3ng g\u00f3i c\u00e1c d\u1eef li\u1ec7u ph\u1ed5 bi\u1ebfn v\u00e0 th\u01b0\u1eddng d\u00f9ng th\u00e0nh c\u00e1c API th\u1ed1ng nh\u1ea5t \u0111\u1ec3 ng\u01b0\u1eddi d\u00f9ng d\u1ec5 truy v\u1ea5n. Khi n\u00f3i \u0111\u1ebfn d\u1ecbch v\u1ee5 API, ngo\u00e0i Covalent, c\u00f2n c\u00f3 nhi\u1ec1u nh\u00e0 cung c\u1ea5p API ph\u1ee5c v\u1ee5 c\u00e1c m\u1ee5c \u0111\u00edch kh\u00e1c nhau, v\u00ed d\u1ee5: * NFTScan: chuy\u00ean cung c\u1ea5p d\u1eef li\u1ec7u API v\u1ec1 NFT, * Infura v\u00e0 Alchemy: cung c\u1ea5p d\u1ecbch v\u1ee5 node cho blockchain. Data analytics c\u0169ng l\u00e0 m\u1ed9t th\u00e0nh ph\u1ea7n middleware li\u00ean quan t\u1edbi d\u1eef li\u1ec7u. B\u1ea1n c\u00f3 th\u1ec3 t\u1eebng nghe nh\u01b0 Dune Analytics , Flipside Crypto , DeBank , Chainalysis . Ti\u1ebfp theo l\u00e0 middleware cung c\u1ea5p c\u00e1c defi service . C\u00e1c giao th\u1ee9c ti\u00eau bi\u1ec3u g\u1ed3m: Uniswap , Curve , Compound , Aave , v.v. \u2022 Uniswap v\u00e0 Curve l\u00e0 c\u00e1c giao th\u1ee9c giao d\u1ecbch (DEX), \u2022 Compound v\u00e0 Aave l\u00e0 c\u00e1c giao th\u1ee9c cho vay (lending). V\u1ec1 b\u1ea3n ch\u1ea5t, \u0111\u00e2y l\u00e0 c\u00e1c giao th\u1ee9c \u1edf l\u1edbp \u1ee9ng d\u1ee5ng (application layer), nh\u01b0ng v\u00ec ng\u00e0y c\u00e0ng c\u00f3 nhi\u1ec1u \u1ee9ng d\u1ee5ng kh\u00e1c d\u1ef1a v\u00e0o ch\u00fang nh\u01b0 m\u1ed9t th\u00e0nh ph\u1ea7n c\u01a1 b\u1ea3n \u0111\u1ec3 x\u00e2y d\u1ef1ng, n\u00ean ch\u00fang tr\u1edf th\u00e0nh c\u00e1c giao th\u1ee9c d\u00f9ng chung, t\u01b0\u01a1ng t\u1ef1 nh\u01b0 c\u00e1c kh\u1ed1i Lego t\u1eeb \u0111\u00f3 \u0111\u1ea3m nh\u1eadn vai tr\u00f2 c\u1ee7a middleware. \u2e3b Tr\u00ean th\u1ef1c t\u1ebf, b\u1ea5t k\u1ef3 th\u00e0nh ph\u1ea7n c\u00f3 th\u1ec3 t\u00e1i s\u1eed d\u1ee5ng (composable) n\u00e0o d\u00f9 l\u00e0 giao th\u1ee9c on-chain, d\u1ecbch v\u1ee5 off-chain do th\u1ef1c th\u1ec3 t\u1eadp trung cung c\u1ea5p, ho\u1eb7c t\u1ed5 ch\u1ee9c DAO \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ph\u00e2n lo\u1ea1i v\u00e0o \u201cl\u1edbp middleware\u201d, mi\u1ec5n l\u00e0 d\u1ecbch v\u1ee5 m\u00e0 n\u00f3 cung c\u1ea5p \u0111\u01b0\u1ee3c \u0111a s\u1ed1 \u1ee9ng d\u1ee5ng kh\u00e1c c\u1ea7n s\u1eed d\u1ee5ng. 3. Application Layer \u0110\u00e2y l\u00e0 t\u1ea7ng s\u00f4i \u0111\u1ed9ng v\u00e0 phong ph\u00fa nh\u1ea5t trong h\u1ec7 sinh th\u00e1i Web3. T\u1ea1i \u0111\u00e2y, h\u00e0ng lo\u1ea1t dApp (decentralized applications) \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n, m\u1ed7i \u1ee9ng d\u1ee5ng \u0111\u1ea1i di\u1ec7n cho m\u1ed9t h\u01b0\u1edbng \u0111i ri\u00eang. M\u00ecnh d\u00f9ng t\u1eeb \"B\u00e1ch hoa \u0111ua n\u1edf, b\u00e1ch gia tranh minh\" trong web3 hi\u1ec7n t\u1ea1i \ud83e\udd23. Trong ph\u1ea7n n\u00e0y, m\u00ecnh s\u1ebd \u0111i qua domain ti\u00eau bi\u1ec3u v\u00e0 \u0111ang ph\u00e1t tri\u1ec3n m\u1ea1nh trong Application Layer 3.1 NFT (Non-Fungible Token) NFT l\u00e0 vi\u1ebft t\u1eaft c\u1ee7a Non-Fungible Token \u2014 t\u1ee9c token kh\u00f4ng th\u1ec3 thay th\u1ebf. Ch\u00fang ta th\u01b0\u1eddng g\u1ecdi NFT l\u00e0 c\u00e1c t\u00e0i s\u1ea3n k\u1ef9 thu\u1eadt s\u1ed1. NFT \u0111\u1ea1i di\u1ec7n cho t\u00e0i s\u1ea3n s\u1ed1 \u0111\u1ed9c nh\u1ea5t, ch\u1eb3ng h\u1ea1n nh\u01b0 t\u00e1c ph\u1ea9m ngh\u1ec7 thu\u1eadt, nh\u00e2n v\u1eadt game, hay v\u1eadt ph\u1ea9m s\u01b0u t\u1ea7m. D\u1ef1 \u00e1n NFT th\u1ef1c s\u1ef1 \u0111\u1ea7u ti\u00ean l\u00e0 CryptoPunks , ra m\u1eaft v\u00e0o th\u00e1ng 6 n\u0103m 2017. B\u1ed9 s\u01b0u t\u1eadp n\u00e0y g\u1ed3m 10.000 h\u00ecnh \u0111\u1ea1i di\u1ec7n pixel k\u00edch th\u01b0\u1edbc 24x24 , \u0111\u01b0\u1ee3c t\u1ea1o ra b\u1eb1ng thu\u1eadt to\u00e1n, m\u1ed7i h\u00ecnh l\u00e0 m\u1ed9t c\u00e1 th\u1ec3 \u0111\u1ed9c l\u1eadp, kh\u00f4ng tr\u00f9ng l\u1eb7p. H\u00ecnh d\u01b0\u1edbi \u0111\u00e2y l\u00e0 v\u00ed d\u1ee5 m\u1ed9t s\u1ed1 avatar hi\u1ec3n th\u1ecb tr\u00ean trang web ch\u00ednh th\u1ee9c c\u1ee7a CryptoPunks: B\u1ea1n c\u0169ng c\u00f3 th\u1ec3 v\u00e0o OpenSea \u0111\u1ec3 xem chi ti\u1ebft nh\u00e9. \u1ede th\u1eddi \u0111i\u1ec3m m\u00ecnh vi\u1ebft b\u00e0i n\u00e0y th\u00ec g\u00eda s\u00e0n(floor price) l\u00e0 49.99 ETH (t\u01b0\u01a1ng \u0111\u01b0\u01a1ng 185,000 USD t\u00ednh theo gi\u00e1 hi\u1ec7n t\u1ea1i). Giao d\u1ecbch \u0111\u1eaft nh\u1ea5t t\u1eebng \u0111\u01b0\u1ee3c ghi nh\u1eadn l\u00e0 8,000 ETH v\u00e0o ng\u00e0y 12/02/2022. B\u1ea1n s\u1ebd th\u1eafc m\u1eafc l\u00e0 v\u00ec sao m\u1ed9t h\u00ecnh \u0111\u1ea1i di\u1ec7n pixel c\u00f3 th\u1ec3 \u0111\u1eaft nh\u01b0 v\u1eady? M\u1ed9t trong nh\u1eefng l\u00fd do ch\u00ednh l\u00e0 t\u00ednh ti\u00ean phong. CryptoPunks l\u00e0 d\u1ef1 \u00e1n NFT \u0111\u1ea7u ti\u00ean tr\u00ean Ethereum, t\u01b0\u01a1ng t\u1ef1 nh\u01b0 c\u00e1ch Bitcoin l\u00e0 blockchain \u0111\u1ea7u ti\u00ean, \u0111i\u1ec1u n\u00e0y mang l\u1ea1i gi\u00e1 tr\u1ecb bi\u1ec3u t\u01b0\u1ee3ng v\u00e0 s\u01b0u t\u1ea7m l\u1edbn. L\u1ea5y c\u1ea3m h\u1ee9ng t\u1eeb CryptoPunks , studio Axiom Zen (sau n\u00e0y l\u00e0 Dapper Labs) ra m\u1eaft CryptoKitties v\u00e0o cu\u1ed1i n\u0103m 2017. D\u1ef1 \u00e1n nhanh ch\u00f3ng g\u00e2y s\u1ed1t, \u0111\u1ebfn m\u1ee9c l\u00e0m t\u1eafc ngh\u1ebdn m\u1ea1ng Ethereum t\u1eeb \u0111\u00f3 b\u1ed9c l\u1ed9 r\u00f5 c\u00e1c v\u1ea5n \u0111\u1ec1 hi\u1ec7u n\u0103ng. Ngay tr\u01b0\u1edbc khi ph\u00e1t h\u00e0nh, Dieter Shirley , CTO c\u1ee7a Axiom Zen, \u0111\u00e3 \u0111\u1ec1 xu\u1ea5t chu\u1ea9n ERC-721 l\u00e0 chu\u1ea9n k\u1ef9 thu\u1eadt gi\u00fap chu\u1ea9n h\u00f3a c\u00e1c token kh\u00f4ng th\u1ec3 thay th\u1ebf (NFT). S\u1ef1 th\u00e0nh c\u00f4ng c\u1ee7a CryptoKitties \u0111\u00e3 \u0111\u1ea9y nhanh vi\u1ec7c ph\u1ed5 bi\u1ebfn c\u1ee7a chu\u1ea9n n\u00e0y, v\u00e0 ng\u00e0y nay ERC-721 \u0111\u00e3 tr\u1edf th\u00e0nh ti\u00eau chu\u1ea9n c\u01a1 b\u1ea3n c\u1ee7a NFT tr\u00ean EVM. C\u00e1c l\u0129nh v\u1ef1c \u1ee9ng d\u1ee5ng ch\u00ednh c\u1ee7a NFT NFT \u0111\u00e3 m\u1edf r\u1ed9ng ra nhi\u1ec1u l\u0129nh v\u1ef1c trong th\u1ebf gi\u1edbi s\u1ed1. N\u1ebfu ph\u00e2n lo\u1ea1i theo \u1ee9ng d\u1ee5ng, c\u00f3 th\u1ec3 chia ra c\u00e1c nh\u00f3m ti\u00eau bi\u1ec3u sau: S\u01b0u t\u1ea7m (Collectibles): S\u01b0u t\u1ea7m l\u00e0 l\u0129nh v\u1ef1c NFT ph\u00e1t tri\u1ec3n \u0111\u1ea7u ti\u00ean, v\u1edbi \u0111\u1eb7c \u0111i\u1ec3m c\u1ed1t l\u00f5i l\u00e0 t\u00ednh khan hi\u1ebfm. V\u00ed d\u1ee5, trong 10,000 CryptoPunks th\u00ec \u201cAlien\u201d c\u1ef1c hi\u1ebfm \u2192 gi\u00e1 cao c\u00f2n \u201cMale\u201d ph\u1ed5 bi\u1ebfn h\u01a1n \u2192 gi\u00e1 th\u1ea5p h\u01a1n Ngh\u1ec7 thu\u1eadt(artworks): NFT gi\u00fap ngh\u1ec7 s\u0129 b\u1ea3o v\u1ec7 b\u1ea3n quy\u1ec1n v\u00e0 s\u1edf h\u1eefu t\u00e1c ph\u1ea9m. Music: NFT gi\u00fap nh\u1ea1c s\u0129 ki\u1ec3m so\u00e1t b\u1ea3n quy\u1ec1n v\u00e0 doanh thu: film: Nhi\u1ec1u th\u01b0\u01a1ng hi\u1ec7u phim l\u1edbn ph\u00e1t h\u00e0nh NFT nh\u01b0 Game of Thrones, Matrix, Batman, Lord of the Rings, The Walking Dead Gaming: NFT \u0111\u00f3ng vai tr\u00f2 l\u00e0 t\u00e0i s\u1ea3n trong game \u2014 gi\u00fap ng\u01b0\u1eddi ch\u01a1i th\u1ef1c s\u1ef1 s\u1edf h\u1eefu v\u1eadt ph\u1ea9m v\u00e0 c\u00f3 th\u1ec3 giao d\u1ecbch b\u00ean ngo\u00e0i Virtual Land: \u0110\u1ea5t \u1ea3o l\u00e0 th\u00e0nh ph\u1ea7n quan tr\u1ecdng trong metavers v\u1edbi c\u00e1c d\u1ef1 \u00e1n l\u1edbn: Decentraland, The Sandbox, Otherside, Axie Land, Roblox... NFT x DeFi: NFT c\u00f3 th\u1ec3 b\u1ecb ph\u00e2n m\u1ea3nh tr\u1edf th\u00e0nh token c\u00f3 th\u1ec3 giao d\u1ecbch, staking, lending\u2026 Brand: NFT nh\u01b0 m\u1ed9t h\u00ecnh th\u1ee9c marketing v\u00e0 k\u00edch th\u00edch cho c\u1ed9ng \u0111\u1ed3ng. C\u00e1c th\u01b0\u01a1ng hi\u1ec7u l\u1edbn \u0111\u00e3 tham gia nh\u01b0 Gucci, LV, Hermes, Starbucks, Taco Bell, Coca-Cola, Pizza Hut DID: DID l\u00e0 h\u1ea1 t\u1ea7ng cho danh t\u00ednh Web3. V\u00ed d\u1ee5 ENS (Ethereum Name Service) gi\u1ed1ng nh\u01b0 \u201cDNS\u201d cho Web3 \u1ee8ng d\u1ee5ng c\u1ee7a NFT th\u00ec nhi\u1ec1u v\u00f4 k\u1ec3, m\u1ea5y nh\u00f3m tr\u00ean ch\u1ec9 l\u00e0 ph\u1ea7n n\u1ed5i c\u1ee7a t\u1ea3ng b\u0103ng . V\u00ec NFT mang t\u00ednh \u0111\u1ea1i di\u1ec7n cho quy\u1ec1n s\u1edf h\u1eefu, n\u00ean g\u1ea7n nh\u01b0 b\u1ea5t c\u1ee9 th\u1ee9 g\u00ec \"c\u00f3 owner\" \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a th\u00e0nh NFT. V\u1eady n\u00ean trong c\u1ed9ng \u0111\u1ed3ng m\u1edbi c\u00f3 c\u00e2u: everything can be NFT ngh\u0129a l\u00e0 c\u00e1i g\u00ec c\u0169ng c\u00f3 th\u1ec3 NFT h\u00f3a \u0111\u01b0\u1ee3c h\u1ebft \u00e1! 3.2 DeFi DeFi vi\u1ebft t\u1eaft c\u1ee7a Decentralized Finance (t\u00e0i ch\u00ednh phi t\u1eadp trung) ch\u00ednh th\u1ee9c b\u00f9ng n\u1ed5 v\u00e0o m\u00f9a h\u00e8 n\u0103m 2020, t\u1edbi m\u1ee9c ng\u01b0\u1eddi ta \u0111\u1eb7t h\u1eb3n c\u00e1i t\u00ean ri\u00eang cho giai \u0111o\u1ea1n n\u00e0y l\u00e0 \u201cDeFi Summer\u201d \ud83c\udf1e. Theo s\u1ed1 li\u1ec7u t\u1eeb TradingView, khi m\u1edbi xu\u1ea5t hi\u1ec7n, t\u1ed5ng gi\u00e1 tr\u1ecb th\u1ecb tr\u01b0\u1eddng c\u1ee7a DeFi ch\u1ec9 kho\u1ea3ng 5 t\u1ef7 USD, nh\u01b0ng sau \u0111\u00f3 th\u00ec leo d\u1ed1c kh\u00f4ng phanh, ch\u1ea1m \u0111\u1ec9nh v\u00e0o cu\u1ed1i n\u0103m 2021 v\u1edbi g\u1ea7n 180 t\u1ef7 USD B\u1ea3n th\u00e2n Defi l\u00e0 m\u1ed9t h\u1ec7 sinh th\u00e1i l\u1edbn v\u1edbi nhi\u1ec1u \u201csub-sector\u201d kh\u00e1c nhau nh\u01b0: stablecoins, DEX, derivatives, lending, aggregators, insurance, prediction markets, index\u2026 3.2.1 Stablecoin Stablecoin l\u00e0 \u201c\u0111\u1ed3ng ti\u1ec1n \u1ed5n \u0111\u1ecbnh\u201d v\u00ed d\u1ee5 USD tr\u00ean Web3. C\u00f3 th\u1ec3 chia l\u00e0m 3 lo\u1ea1i ch\u00ednh: Centralized Stablecoins: do t\u1ed5 ch\u1ee9c t\u1eadp trung ph\u00e1t h\u00e0nh, backing b\u1eb1ng fiat th\u1eadt, ki\u1ec3u 1 USDT = 1 USD. Ti\u00eau bi\u1ec3u c\u00f3 USDT (Tether), USDC (Circle), v\u00e0 BUSD (Binance + Paxos) . Tuy t\u1eadp trung, nh\u01b0ng hi\u1ec7n v\u1eabn l\u00e0 d\u00f2ng stablecoin thanh kho\u1ea3n cao nh\u1ea5t th\u1ecb tr\u01b0\u1eddng. Overcollateralized Stablecoins: lo\u1ea1i n\u00e0y \u0111\u01b0\u1ee3c \u0111\u00fac b\u1eb1ng c\u00e1ch th\u1ebf ch\u1ea5p crypto kh\u00e1c, th\u01b0\u1eddng d\u00f9ng smart contract v\u00e0 oracle \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o peg 1:1. \u0110\u1ea1i di\u1ec7n ti\u00eau bi\u1ec3u l\u00e0 DAI t\u1eeb MakerDAO c\u00f3 decentralization cao, nh\u01b0ng ph\u1ea3i th\u1ebf ch\u1ea5p nhi\u1ec1u h\u01a1n gi\u00e1 tr\u1ecb c\u1ea7n mint. Algorithmic Stablecoins: kh\u00f4ng c\u1ea7n th\u1ebf ch\u1ea5p m\u00e0 d\u00f9ng thu\u1eadt to\u00e1n \u0111\u1ec3 c\u00e2n b\u1eb1ng cung \u2013 c\u1ea7u. C\u00f3 h\u00e0ng lo\u1ea1t t\u00ean tu\u1ed5i t\u1eebng th\u1eed nh\u01b0 UST, FEI, FRAX, CUSD, USDD\u2026 3.2.2 DEX (Decentralized Exchange) DEX (Decentralized Exchange) ch\u00ednh l\u00e0 n\u01a1i giao d\u1ecbch t\u00e0i s\u1ea3n crypto kh\u00f4ng c\u1ea7n trung gian. \u0110\u00e2y l\u00e0 sector c\u00f3 market cap to nh\u1ea5t trong DeFi, v\u00e0 c\u0169ng l\u00e0 c\u00e1i n\u00f4i cho \u0111\u1ee7 ki\u1ec3u m\u00f4 h\u00ecnh giao d\u1ecbch nh\u01b0: Spot DEX vs Derivatives DEX Orderbook mode vs AMM mode V\u1ec1 Orderbook DEX th\u00ec gi\u1ed1ng s\u00e0n ch\u1ee9ng kho\u00e1n truy\u1ec1n th\u1ed1ng. Ng\u01b0\u1eddi d\u00f9ng \u0111\u1eb7t l\u1ec7nh mua/b\u00e1n. C\u00f3 3 ki\u1ec3u tri\u1ec3n khai: On-chain Orderbook: nh\u01b0 EtherDelta, c\u1ef1c phi t\u1eadp trung nh\u01b0ng ch\u1eadm & ph\u00ed cao. Off-chain match, on-chain settle: nh\u01b0 0x protocol, ti\u1ebft ki\u1ec7m gas h\u01a1n nh\u01b0ng v\u1eabn ph\u1ea3i settle t\u1eebng giao d\u1ecbch Layer2 Orderbook: nh\u01b0 dYdX d\u00f9ng StarkEx \u2013 trade m\u01b0\u1ee3t nh\u01b0 CEX nh\u01b0ng v\u1eabn gi\u1eef t\u00ednh phi t\u1eadp trung \u1edf m\u1ee9c v\u1eeba ph\u1ea3i. V\u1ec1 AMM DEX , AMM (Automated Market Maker) l\u00e0 c\u00fa b\u00f9ng n\u1ed5 th\u1eadt s\u1ef1 c\u1ee7a DEX. Kh\u1edfi ngu\u1ed3n t\u1eeb Uniswap , r\u1ed3i lan ra SushiSwap, Curve, Balancer, GMX\u2026 . M\u00f4 h\u00ecnh n\u00e0y d\u1ef1a tr\u00ean liquidity pool, ng\u01b0\u1eddi d\u00f9ng b\u01a1m t\u00e0i s\u1ea3n v\u00e0o pool \u0111\u1ec3 tr\u1edf th\u00e0nh LP, \u0111\u1ed5i l\u1ea1i nh\u1eadn fee t\u1eeb ng\u01b0\u1eddi trade. T\u1ee9c l\u00e0 b\u1ea1n v\u1eeba l\u00e0m trader, v\u1eeba l\u00e0m ng\u00e2n h\u00e0ng lu\u00f4n. V\u1ec1 Derivatives, l\u00e0 \u0111\u00f2n b\u1ea9y th\u00ec trong DeFi g\u1ed3m 4 nh\u00f3m ch\u00ednh: Perpetual contracts: gi\u1ed1ng futures, c\u00f3 leverage. D\u1eabn \u0111\u1ea7u l\u00e0 dYdX, apeX, GMX, Perpetual Protocol. Options: ph\u1ee9c t\u1ea1p h\u01a1n future, \u00edt ph\u1ed5 bi\u1ebfn. C\u00f3 Hegic, Opyn, Charm, Primitive\u2026 Synthetic Assets: t\u1ea1o t\u00e0i s\u1ea3n m\u00f4 ph\u1ecfng nh\u01b0 v\u00e0ng, c\u1ed5 phi\u1ebfu\u2026 Ti\u00eau bi\u1ec3u l\u00e0 Synthetix, UMA, Mirror, Duet. Interest Rate Derivatives: nh\u01b0 BarnBridge, Swivel, cho ph\u00e9p user \u201c\u0111\u1eb7t c\u01b0\u1ee3c\u201d v\u00e0o l\u00e3i su\u1ea5t crypto. V\u1ec1 Lendind , cho vay l\u00e0 n\u1ec1n t\u1ea3ng th\u1ee9 hai b\u00ean c\u1ea1nh DEX. C\u00e1c \u00f4ng l\u1edbn g\u1ed3m Compound, Aave, Maker, Cream, Liquity, Venus, Euler, Fuse\u2026 Ch\u1ee7 y\u1ebfu d\u00f9ng m\u00f4 h\u00ecnh over-collateralized : mu\u1ed1n vay $80 th\u00ec ph\u1ea3i b\u1ea1n c\u1eafm \u00edt nh\u1ea5t $100 t\u00e0i s\u1ea3n \u0111i\u1ec1u n\u00e0y nh\u1eb1m b\u1ea3o v\u1ec7 c\u1ea3 borrower l\u1eabn protocol. Ngo\u00e0i ra c\u00f2n c\u00f3: Interest-free loan : nh\u01b0 Liquity, vay kh\u00f4ng l\u00e3i, ch\u1ec9 tr\u1ea3 1 l\u1ea7n ph\u00ed upfront. Asset isolation pools : t\u00e1ch c\u00e1c pool ra Cross-chain lending : v\u1edbi c\u00e1c t\u00ean nh\u01b0 Flux, Aave, Compound m\u1edf r\u1ed9ng sang nhi\u1ec1u chain. Credit-based loan : nh\u01b0 Wing Finance, nh\u01b0ng v\u1eabn thi\u1ebfu h\u1ec7 th\u1ed1ng on-chain credit chu\u1ea9n ch\u1ec9nh. V\u1ec1 Aggregator, b\u1ea1n s\u1ebd th\u1eafc m\u1eafc n\u1ebfu c\u00f3 r\u1ea5t nhi\u1ec1u protocol th\u00ec l\u00e0m sao \u0111\u1ec3 ta c\u00f3 th\u1ec3 qu\u1ea3n l\u00fd th\u00ec Aggregator l\u00e0 c\u00f4ng c\u1ee5 gom t\u1ee5 m\u1ecdi th\u1ee9 l\u1ea1i: DEX Aggregator : t\u00ecm gi\u00e1 t\u1ed1t nh\u1ea5t t\u1eeb nhi\u1ec1u DEX \u2192 1inch, Matcha, ParaSwap, MetaMask Swap. Yield Aggregator : t\u1ef1 \u0111\u1ed9ng yield farming \u2192 Yearn Finance, Alpha Finance, Harvest, Convex Asset Management : qu\u1ea3n l\u00fd danh m\u1ee5c & portfolio \u2192 Zapper, Zerion. Data Aggregator : nh\u01b0 CoinMarketCap, DeFi Pulse, DeBank \u2013 d\u00f9 l\u00e0 centralized nh\u01b0ng v\u1eabn c\u1ef1c quan tr\u1ecdng. V\u1ec1 Insurance , m\u1ed9t s\u1ed1 c\u00e1i t\u00ean ti\u00ean phong g\u1ed3m: Nexus Mutual, Cover, Unslashed, Opium\u2026 V\u1ec1 Prediction Markets , d\u1ef1 \u0111o\u00e1n k\u1ebft qu\u1ea3 b\u1ea7u c\u1eed, gi\u00e1 crypto, hay b\u1ea5t c\u1ee9 s\u1ef1 ki\u1ec7n n\u00e0o,d\u1ef1 \u0111o\u00e1n l\u00e0 playground cho ai mu\u1ed1n predict b\u1eb1ng d\u1eef li\u1ec7u. Ngo\u00e0i ra ta c\u00f2n c\u00f3 ETF phi\u00ean b\u1ea3n web3, ngh\u0129a l\u00e0 thay v\u00ec pick m\u1ed9t token th\u00ec b\u1ea1n c\u00f3 th\u1ec3 hold nhi\u1ec1u token. M\u1ed9t s\u1ed1 ch\u1ec9 s\u1ed1 n\u1ed5i b\u1eadt ta n\u00ean bi\u1ebft nh\u01b0 DPI, sDEFI, PIPT, DEFI++, BCP... DeFi l\u00e0 n\u01a1i rebuild l\u1ea1i t\u1eeb \u0111\u1ea7u, b\u1eb1ng smart contract, phi t\u1eadp trung, permissionless. M\u1ed7i m\u1ea3nh gh\u00e9p m\u00e0 m\u00ecnh k\u1ec3 tr\u00ean \u0111\u1ec1u \u0111\u00f3ng vai tr\u00f2 ri\u00eang v\u00e0 khi x\u00e2u chu\u1ed7i l\u1ea1i, n\u00f3 t\u1ea1o n\u00ean h\u1ec7 sinh th\u00e1i l\u1edbn. 3.3 GameFi GameFi l\u00e0 vi\u1ebft t\u1eaft c\u1ee7a Game Finance t\u1ee9c l\u00e0 game + t\u00e0i ch\u00ednh. N\u00f3i c\u00e1ch kh\u00e1c, \u0111\u00e2y ch\u00ednh l\u00e0 thu\u1eadt ng\u1eef cool ng\u1ea7u h\u01a1n c\u1ee7a Web3 games. Tr\u01b0\u1edbc khi c\u00e1i t\u00ean GameFi xu\u1ea5t hi\u1ec7n, ng\u01b0\u1eddi ta th\u01b0\u1eddng g\u1ecdi m\u1ea5y tr\u00f2 n\u00e0y l\u00e0 blockchain games hay chain games. Nh\u01b0 \u0111\u1ec1 c\u1eadp trong n\u1ed9i dung NFT, D\u1ef1 \u00e1n ti\u00ean phong ph\u1ea3i k\u1ec3 \u0111\u1ebfn l\u00e0 CryptoKitties l\u00e0 tr\u00f2 nu\u00f4i m\u00e8o \u1ea3o t\u1eebng l\u00e0m t\u1eafc ngh\u1ebdn c\u1ea3 m\u1ea1ng Ethereum h\u1ed3i 2017. M\u1ed7i ch\u00fa m\u00e8o l\u00e0 m\u1ed9t NFT \u0111\u1ed9c l\u1eadp, c\u00f3 gen, c\u00f3 ngo\u1ea1i h\u00ecnh ri\u00eang. Ng\u01b0\u1eddi ch\u01a1i mua m\u00e8o, r\u1ed3i \u201cph\u1ed1i gi\u1ed1ng\u201d \u0111\u1ec3 \u0111\u1ebb ra m\u00e8o con c\u0169ng l\u00e0 NFT m\u1edbi. M\u00e8o n\u00e0o gen hi\u1ebfm th\u00ec gi\u00e1 c\u00e0ng ch\u00e1t. T\u00ednh \u0111\u1ebfn cu\u1ed1i th\u00e1ng 1/2023, \u0111\u00e3 c\u00f3 h\u01a1n 2 tri\u1ec7u m\u00e8o \u0111\u01b0\u1ee3c \u201cmint\u201d, v\u1edbi h\u01a1n 136,000 v\u00ed \u0111ang gi\u1eef m\u00e8o. Sau CryptoKitties l\u00e0 lo\u1ea1t clone sinh s\u1ea3n nh\u01b0 CryptoRabbit, CryptoFrog, CryptoDongle \u2026 Ho\u1eb7c m\u1ed9t game x\u1ed5 s\u1ed1 t\u00ean Fomo3D d\u00f9ng ETH. C\u1ee9 mua Key l\u00e0 nh\u1eadn \u0111\u01b0\u1ee3c c\u1ed5 t\u1ee9c. Ai l\u00e0 ng\u01b0\u1eddi cu\u1ed1i c\u00f9ng mua Key tr\u01b0\u1edbc khi countdown k\u1ebft th\u00fac (24h) th\u00ec s\u1ebd jackpot. Nh\u01b0ng m\u1ed7i l\u1ea7n ai \u0111\u00f3 mua Key m\u1edbi, th\u1eddi gian s\u1ebd c\u1ed9ng th\u00eam 30s. N\u00f3i \u0111\u1ebfn gamefi, m\u00ecnh kh\u00f4ng th\u1ec3 n\u00e0o kh\u00f4ng k\u1ec3 \u0111\u1ebfn l\u00e0 Axie Infinity . Ra m\u1eaft t\u1eeb 2018, nh\u01b0ng ph\u1ea3i \u0111\u1ebfn 2021 m\u1edbi \u201cn\u1ed5 tung\u201d v\u1edbi m\u00f4 h\u00ecnh Play-to-Earn (P2E). Trong game, b\u1ea1n s\u1eafm v\u00e0i con Axie (ki\u1ec3u Pok\u00e9mon NFT), sau \u0111\u00f3 \u0111em \u0111i \u0111\u00e1nh nhau, breed (ph\u1ed1i gi\u1ed1ng), trade tr\u00ean marketplace. Chi\u1ebfn th\u1eafng s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c SLP token, d\u00f9ng SLP + AXS \u0111\u1ec3 \u0111\u00fac Axie m\u1edbi \u2192 b\u00e1n l\u1ea5y l\u1eddi \u2192 quy \u0111\u1ed5i th\u00e0nh ETH ho\u1eb7c stablecoin, r\u1ed3i r\u00fat v\u1ec1 v\u00ed. Axie Infinity t\u1ea1o ra m\u1ed9t l\u00e0n s\u00f3ng l\u1edbn gi\u00fap gamefi b\u00f9ng n\u1ed5 \u1edf th\u1eddi \u0111i\u1ec3m 2021. Sau Axie, m\u00f4 h\u00ecnh ch\u01a1i \u0111\u1ec3 ki\u1ebfm (P2E) g\u1ea7n nh\u01b0 tr\u1edf th\u00e0nh ti\u00eau chu\u1ea9n cho Web3 games. \u201ctokenomics\u201d, \u201cearn model\u201d, \u201cNFT assets\u201d s\u1ebd l\u00e0 ti\u00eau chu\u1ea9n \u0111\u1ec3 m\u1ecdi ng\u01b0\u1eddi \u0111\u00e1nh gi\u00e1. 3.4 SocialFi SocialFi l\u00e0 vi\u1ebft t\u1eaft c\u1ee7a Social + Finance. Hi\u1ec3u \u0111\u01a1n gi\u1ea3n l\u00e0 m\u1ea1ng x\u00e3 h\u1ed9i phi\u00ean b\u1ea3n Web3 phi t\u1eadp trung, t\u00edch h\u1ee3p t\u00e0i ch\u00ednh, v\u00e0 cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng ki\u1ebfm ti\u1ec1n t\u1eeb t\u01b0\u01a1ng t\u00e1c x\u00e3 h\u1ed9i. Kh\u00e1i ni\u1ec7m n\u00e0y ch\u1ec9 th\u1ef1c s\u1ef1 hot trong 1\u20132 n\u0103m tr\u1edf l\u1ea1i \u0111\u00e2y. H\u1ea7u h\u1ebft c\u00e1c n\u1ec1n t\u1ea3ng SocialFi ng\u00e0y nay \u0111\u1ec1u v\u1eadn h\u00e0nh theo m\u00f4 h\u00ecnh qu\u1ea3n tr\u1ecb DAO (Decentralized Autonomous Organization) t\u1ee9c c\u1ed9ng \u0111\u1ed3ng l\u00e0 ng\u01b0\u1eddi \u0111\u01b0a ra quy\u1ebft \u0111\u1ecbnh. Kh\u00e1c v\u1edbi memecoin, th\u00ec socialfi s\u1ebd c\u00f3 t\u00ednh th\u1ef1c t\u1ebf h\u01a1n v\u00e0 c\u00f3 th\u1ec3 scale \u0111\u01b0\u1ee3c. Tuy nhi\u00ean \u0111\u1ec3 build m\u1ed9t dapp Socialfi th\u00ec technical c\u00f3 r\u1ea5t nhi\u1ec1u th\u1eed th\u00e1ch v\u00e0 builder ph\u1ea3i c\u00f3 t\u00ecm nh\u1eefng c\u00e2u tr\u1ea3 l\u1eddi ph\u00f9 h\u1ee3p. B\u1edfi v\u00ec kh\u00e1c v\u1edbi vi\u1ec7c x\u1eed l\u00fd data \u1edf web2 nh\u01b0 Facebook, X khi m\u00e0 m\u1ed7i ng\u00e0y generate h\u00e0ng t\u1ef7 interactions th\u00ec li\u1ec7u m\u1ed7i post/comment tr\u00ean socialfi c\u00f3 th\u1ec3 l\u00e0 on chain transaction \u0111\u01b0\u1ee3c ko? Th\u1ee9 2 l\u00e0 Ng\u01b0\u1eddi d\u00f9ng Web2 \u0111\u00e3 quen v\u1edbi m\u00f4 h\u00ecnh nh\u01b0 subcription (Patreon, Substack), Donate cho creator (Ko-fi, BuyMeACoffee)... SocialFi mu\u1ed1n b\u1eaft ch\u01b0\u1edbc m\u00f4 h\u00ecnh n\u00e0y th\u00ec ph\u1ea3i build tools \u0111\u1ee7 \u0111\u01a1n gi\u1ea3n, nh\u01b0ng v\u1eabn an to\u00e0n \u0111\u1ec3 ng\u01b0\u1eddi d\u00f9ng setup . 4. Access Layer \u0110\u00e2y l\u00e0 t\u1ea7ng tr\u00ean c\u00f9ng c\u1ee7a ki\u1ebfn tr\u00fac Web3 n\u01a1i user nh\u01b0 b\u1ea1n v\u00e0 m\u00ecnh th\u1ef1c s\u1ef1 t\u01b0\u01a1ng t\u00e1c blockchain. C\u00e1c access layer ch\u00ednh l\u00e0: wallets, browsers, aggregators, v\u00e0 c\u1ea3\u2026 Twitter n\u1eefa . \u0110\u1ea7u ti\u00ean l\u00e0 Wallet : \u0110\u00e2y l\u00e0 entry point quan tr\u1ecdng nh\u1ea5t. Kh\u00f4ng c\u00f3 v\u00ed b\u1ea1n s\u1ebd kh\u00f4ng th\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi Blockchain. Hi\u1ec7n t\u1ea1i c\u00f3 c\u00e1c lo\u1ea1i v\u00ed nh\u01b0: * Browser Wallets: Metamask, Coinbase Wallet, WalletConnect... * Mobile Wallets: V\u00ed n\u1ed5i b\u1ead MetaMask Mobile, Coinbase Wallet, TokenPocket, Rainbow, BitKeep, Crypto.com, imToken\u2026 V\u00e0 c\u0169ng c\u00f3 nhi\u1ec1u v\u00ed h\u1ed7 tr\u1ee3 \u0111a chain nh\u01b0 BTC, ETH, BNB Chain, Polygon, Solana, Aptos, Cosmos\u2026 * Hardware Wallets: L\u01b0u private key ri\u00eang trong thi\u1ebft b\u1ecb v\u1eadt l\u00fd offline. N\u1ed5i b\u1eadt nh\u01b0 Ledger (Nano X, Nano S Plus, Ledger Stax), Trezor (Model One, Model T) * Multi-Signature Wallet: d\u00e0nh cho v\u00ed c\u1ea7n nhi\u1ec1u ng\u01b0\u1eddi k\u00fd d\u00f9ng set c\u1ea5u h\u00ecnh 2/3 ng\u01b0\u1eddi k\u00fd th\u00ec m\u1edbi th\u1ef1c hi\u1ec7n giao d\u1ecbch. D\u00f9ng nhi\u1ec1u trong DAO ho\u1eb7c team \u0111\u1ec3 tr\u00e1nh m\u1ea5t ti\u1ec1n oan. * MPC Wallet: MPC = Multi-Party Computation. V\u00ed chia nh\u1ecf private key th\u00e0nh nhi\u1ec1u m\u1ea3nh, m\u1ed7i b\u00ean gi\u1eef m\u1ed9t ph\u1ea7n. khi k\u00fd, m\u1edbi \u201cgh\u00e9p l\u1ea1i\u201d \u0111\u1ee7 m\u1ea3nh \u0111\u1ec3 unlock. G\u1ea7n gi\u1ed1ng multi-sig nh\u01b0ng ch\u1ea1y off-chain, kh\u00f4ng c\u1ea7n smart contract. * Smart Contract Wallet + Account Abstraction C\u00e1c browsers: H\u1ea7u h\u1ebft c\u00e1c DApp hi\u1ec7n v\u1eabn l\u00e0 web app, n\u00ean tr\u00ecnh duy\u1ec7t \u0111\u00f3ng vai tr\u00f2 quan tr\u1ecdng trong vi\u1ec7c render UI v\u00e0 k\u1ebft n\u1ed1i v\u1edbi v\u00ed. Chrome l\u00e0 browser ph\u1ed5 bi\u1ebfn nh\u1ea5t v\u00ec m\u1ecdi browser extension wallet \u0111\u1ec1u support. Ti\u1ebfp \u0111\u1ebfn ta c\u00f3 nh\u01b0 Brave ( c\u00f3 s\u1eb5n Brave wallet) Nhi\u1ec1u n\u1ec1n t\u1ea3ng nh\u01b0 Twitter (X), Reddit\u2026 l\u00e0 n\u01a1i m\u00e0 crypto culture di\u1ec5n ra v\u1edbi c\u00e1c C\u1ed9ng \u0111\u1ed3ng NFT, DAO, memecoin...","title":"A article on the anatomy of Web3"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/00_00_The_Anatomy_of_Web3/#a-article-on-the-anatomy-of-web3","text":"B\u00e0i vi\u1ebft n\u00e0y vi\u1ebft to\u00e0n c\u1ea3nh v\u1ec1 h\u1ec7 sinh th\u00e1i c\u1ee7a Web3 Blockchain (my POV). Web3 \u0111\u1ebfn nay \u0111\u00e3 ph\u00e1t tri\u1ec3n t\u01b0\u01a1ng \u0111\u1ed1i \u0111\u1ea7y \u0111\u1ee7, h\u1ec7 sinh th\u00e1i c\u0169ng d\u1ea7n \u0111\u1ecbnh h\u00ecnh r\u00f5 r\u00e0ng. N\u1ebfu nh\u00ecn \u1edf g\u00f3c \u0111\u1ed9 ki\u1ebfn tr\u00fac t\u1ed5ng th\u1ec3 hi\u1ec7n t\u1ea1i th\u00ec ta c\u00f3 th\u1ec3 chia th\u00e0nh c\u00e1c layers l\u00e0 blockchain network layer, middleware layer, application layer, v\u00e0 access layer... Trong ph\u1ea7n n\u00e0y s\u1ebd nh\u1eafc \u0111\u1ebfn kh\u00e1 nhi\u1ec1u c\u00e1i t\u00ean d\u1ef1 \u00e1n, nh\u01b0ng v\u00ec dung l\u01b0\u1ee3ng ki\u1ebfn th\u1ee9c m\u00ecnh c\u00f3 h\u1ea1n n\u00ean m\u00ecnh s\u1ebd kh\u00f4ng \u0111i s\u00e2u v\u00e0o t\u1eebng c\u00e1i m\u00e0 ch\u1ec9 overall.","title":"A article on the anatomy of Web3"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/00_00_The_Anatomy_of_Web3/#1-blockchain-network-layer","text":"\u1ede t\u1ea7ng th\u1ea5p nh\u1ea5t trong ki\u1ebfn tr\u00fac Web3 l\u00e0 l\u1edbp m\u1ea1ng l\u01b0\u1edbi blockchain (blockchain network layer) hay c\u00f2n g\u1ecdi l\u00e0 l\u1edbp n\u1ec1n t\u1ea3ng (foundation layer). \u0110\u00e2y ch\u00ednh l\u00e0 \u201cc\u00e1i m\u00f3ng nh\u00e0\u201d c\u1ee7a to\u00e0n b\u1ed9 h\u1ec7 sinh th\u00e1i Web3, n\u01a1i t\u1eadp h\u1ee3p c\u00e1c blockchain kh\u00e1c nhau v\u1eadn h\u00e0nh \u0111\u1ed9c l\u1eadp ho\u1eb7c t\u01b0\u01a1ng t\u00e1c v\u1edbi nhau. Hi\u1ec7n c\u00f3 r\u1ea5t nhi\u1ec1u blockchain n\u1eb1m trong l\u1edbp n\u00e0y, c\u00f3 th\u1ec3 k\u1ec3 \u0111\u1ebfn nh\u01b0: Bitcoin, Ethereum, BNB Chain (BSC), Polygon, Arbitrum, Polkadot, Cosmos, Celestia, Avalanche, Aptos, Sui v\u00e0 c\u00f2n h\u00e0ng t\u00e1 c\u00e1i t\u00ean kh\u00e1c n\u1eefa.","title":"1. Blockchain network layer"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/00_00_The_Anatomy_of_Web3/#11-phan-tang-kien-truc-layer-0-layer-1-layer-2","text":"Layer 0 (L0): Layer 0 l\u00e0 l\u1edbp tr\u1eebu t\u01b0\u1ee3ng h\u01a1n, th\u01b0\u1eddng \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 l\u1edbp h\u1ea1 t\u1ea7ng blockchain (infrastructure layer) \u2013 n\u01a1i cung c\u1ea5p c\u00e1c d\u1ecbch v\u1ee5 c\u01a1 b\u1ea3n gi\u00fap nhi\u1ec1u blockchain c\u00f3 th\u1ec3 t\u01b0\u01a1ng t\u00e1c ho\u1eb7c chia s\u1ebb t\u00e0i nguy\u00ean. V\u00ed d\u1ee5: Cosmos, Polkadot, Layer 1 (L1): C\u00e1c Layer 1 c\u0169ng ch\u00ednh l\u00e0 v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh cho \u201ctam gi\u00e1c b\u1ea5t kh\u1ea3 thi\u201d c\u1ee7a blockchain kh\u00f3 \u0111\u1ec3 m\u1ed9t blockchain \u0111\u1ed3ng th\u1eddi \u0111\u1ea3m b\u1ea3o c\u1ea3 3 y\u1ebfu t\u1ed1: m\u1edf r\u1ed9ng (scalability), b\u1ea3o m\u1eadt (security), v\u00e0 phi t\u1eadp trung (decentralization). Layer 2 (L2): Layer 2 ra \u0111\u1eddi \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n \u201cTPS th\u1ea5p\u201d c\u1ee7a Layer 1, nh\u1ea5t l\u00e0 Ethereum. Layer 2 l\u00e0 c\u00e1c chu\u1ed7i ph\u1ee5 (subchain) n\u1eb1m ph\u00eda tr\u00ean Layer 1, c\u00f3 nhi\u1ec7m v\u1ee5 x\u1eed l\u00fd giao d\u1ecbch nhanh v\u00e0 r\u1ebb h\u01a1n, sau \u0111\u00f3 g\u1eedi k\u1ebft qu\u1ea3 v\u1ec1 Layer 1 \u0111\u1ec3 l\u01b0u tr\u1eef. Layer 2 gi\u00fap Layer 1 tr\u1edf th\u00e0nh settlement layer (l\u1edbp thanh to\u00e1n), c\u00f2n m\u00ecnh th\u00ec lo ph\u1ea7n execution layer (l\u1edbp th\u1ef1c thi). M\u1ed9t s\u1ed1 Layer 2 n\u1ed5i b\u1eadt c\u1ee7a Ethereum g\u1ed3m: Arbitrum, Optimism, zkSync, StarkNet, Polygon. Bitcoin c\u0169ng c\u00f3 Layer 2 nh\u01b0: Lightning Network , Stacks , RSK , nh\u01b0ng hi\u1ec7n t\u1ea1i v\u1eabn ch\u01b0a ph\u1ed5 bi\u1ebfn b\u1eb1ng Ethereum.","title":"1.1 Ph\u00e2n t\u1ea7ng ki\u1ebfn tr\u00fac: Layer 0 / Layer 1 / Layer 2"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/00_00_The_Anatomy_of_Web3/#12-moi-truong-chay-smart-contract","text":"S\u1ef1 ph\u00e1t tri\u1ec3n c\u1ee7a Web3 ch\u1ee7 y\u1ebfu nh\u1edd v\u00e0o smart contract, v\u00e0 c\u00e1c smart contract c\u1ea7n c\u00f3 m\u00f4i tr\u01b0\u1eddng \u0111\u1ec3 ch\u1ea1y \u2013 g\u1ecdi l\u00e0 virtual machine (m\u00e1y \u1ea3o). T\u01b0\u01a1ng t\u1ef1 nh\u01b0 Java c\u1ea7n JVM v\u1eady. Sau khi hi\u1ec3u c\u1ea5u tr\u00fac ph\u00e2n t\u1ea7ng, ta ti\u1ebfp t\u1ee5c ph\u00e2n lo\u1ea1i blockchain theo g\u00f3c nh\u00ecn EVM compatibility hay n\u00f3i c\u00e1ch kh\u00e1c, blockchain \u0111\u00f3 c\u00f3 ch\u1ea1y \u0111\u01b0\u1ee3c smart contract vi\u1ebft b\u1eb1ng Solidity v\u00e0 t\u01b0\u01a1ng th\u00edch v\u1edbi m\u00e1y \u1ea3o Ethereum hay kh\u00f4ng. V\u1ec1 c\u01a1 b\u1ea3n, c\u00f3 th\u1ec3 chia th\u00e0nh hai nh\u00f3m: EVM chains v\u00e0 Non-EVM chains . Hi\u1ec7n nay, EVM chains v\u1eabn l\u00e0 d\u00f2ng ch\u1ee7 \u0111\u1ea1o. Nh\u1eefng blockchain n\u00e0y thu h\u00fat l\u01b0\u1ee3ng l\u1edbn DApp v\u00e0 ng\u01b0\u1eddi d\u00f9ng Web3, nh\u1edd v\u00e0o c\u1ed9ng \u0111\u1ed3ng ph\u00e1t tri\u1ec3n r\u1ed9ng v\u00e0 h\u1ec7 sinh th\u00e1i c\u00f4ng c\u1ee5 phong ph\u00fa. M\u1ed9t s\u1ed1 blockchain t\u01b0\u01a1ng th\u00edch v\u1edbi EVM t\u1eeb \u0111\u1ea7u nh\u01b0 BSC, Heco, Arbitrum, Optimism, v.v. M\u1ed9t s\u1ed1 kh\u00e1c th\u00ec ph\u00e1t tri\u1ec3n sau n\u00e0y \u0111\u1ec3 t\u01b0\u01a1ng th\u00edch, v\u00ed d\u1ee5 nh\u01b0 zkSync: phi\u00ean b\u1ea3n 1.0 kh\u00f4ng h\u1ed7 tr\u1ee3 EVM, nh\u01b0ng t\u1eeb 2.0 tr\u1edf \u0111i th\u00ec \u0111\u00e3 embrace EVM ho\u00e0n to\u00e0n. T\u00ednh \u0111\u1ebfn hi\u1ec7n t\u1ea1i, ph\u1ea7n l\u1edbn c\u00e1c blockchain l\u1edbn \u0111\u1ec1u \u0111\u00e3 ho\u1eb7c \u0111ang h\u1ed7 tr\u1ee3 EVM. Tuy nhi\u00ean, v\u1eabn c\u00f2n m\u1ed9t s\u1ed1 chu\u1ed7i n\u1ed5i b\u1eadt n\u1eb1m ngo\u00e0i h\u1ec7 EVM, nh\u01b0 Solana, Terra, NEAR, Aptos, v\u00e0 Sui. C\u00e1c blockchain n\u00e0y th\u01b0\u1eddng ch\u1ecdn h\u01b0\u1edbng \u0111i kh\u00e1c bi\u1ec7t, c\u1ea3 v\u1ec1 ki\u1ebfn tr\u00fac l\u1eabn ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh smart contract: n\u1ebfu EVM chains d\u00f9ng Solidity, th\u00ec c\u00e1c Non-EVM chains th\u01b0\u1eddng d\u00f9ng Rust ho\u1eb7c Move T\u00f3m l\u1ea1i EVM chains : L\u00e0 nh\u1eefng blockchain t\u01b0\u01a1ng th\u00edch v\u1edbi Ethereum Virtual Machine, c\u00f3 th\u1ec3 ch\u1ea1y c\u00e1c smart contract \u0111\u01b0\u1ee3c vi\u1ebft b\u1eb1ng Solidity. V\u00ed d\u1ee5: Ethereum, BNB Chain, Polygon, Avalanche C-Chain\u2026 Non-EVM chains : Kh\u00f4ng t\u01b0\u01a1ng th\u00edch v\u1edbi EVM, s\u1eed d\u1ee5ng m\u00e1y \u1ea3o ri\u00eang v\u00e0 th\u01b0\u1eddng c\u00f3 ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh ri\u00eang, nh\u01b0: Solana (Rust/C/C++), Aptos & Sui (Move), Near protocol/ Cosmos d\u00f9ng rust, Cardano d\u00f9ng Haskell/Plutus..","title":"1.2 M\u00f4i tr\u01b0\u1eddng ch\u1ea1y smart contract"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/00_00_The_Anatomy_of_Web3/#13-cac-vai-tro-trong-toan-he-sinh-thai-nhu-tinh-toan-hay-luu-tru","text":"Ta c\u0169ng c\u00f3 th\u1ec3 chia blockchain theo m\u1ee5c ti\u00eau s\u1eed d\u1ee5ng: * Compute Chains: T\u1eadp trung v\u00e0o x\u1eed l\u00fd logic v\u00e0 ch\u1ea1y smart contract. * Storage Chains: T\u1eadp trung v\u00e0o l\u01b0u tr\u1eef d\u1eef li\u1ec7u phi t\u1eadp trung \u2013 v\u00ed d\u1ee5: Filecoin, Arweave, Walrus..","title":"1.3 C\u00e1c vai tr\u00f2 trong to\u00e0n h\u1ec7 sinh th\u00e1i nh\u01b0 T\u00ednh to\u00e1n hay L\u01b0u tr\u1eef"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/00_00_The_Anatomy_of_Web3/#14-cross-chain-bridges","text":"M\u1edf r\u1ed9ng h\u01a1n l\u00e0 c\u00e1c giao th\u1ee9c giao ti\u1ebfp gi\u1eefa nhi\u1ec1u blockchain. Kh\u00e1 kh\u00f3 \u0111\u1ec3 th\u1ed1ng k\u00ea ra s\u1ed1 l\u01b0\u1ee3ng bao nhi\u00eau cross-chain \u0111\u01b0\u1ee3c tri\u1ec3n khai nh\u01b0ng ta c\u00f3 nh\u1eefng t\u00ean d\u1eabn \u0111\u1ea7u cho ph\u00e9p chuy\u1ec3n t\u00e0i s\u1ea3n gi\u1eefa layer 2 v\u00e0 Ethereum m\u1ed9t c\u00e1ch m\u01b0\u1ee3c m\u00e0 nh\u01b0 Polygon , Arbitrum v\u00e0 Optimism . X\u1ebfp sau l\u00e0 Multichain (tr\u01b0\u1edbc \u0111\u00e2y l\u00e0 Anyswap) - tuy nhi\u00ean, tr\u1ea3i qua kho\u1ea3ng th\u1eddi gian kh\u1eafc nghi\u1ec7t c\u1ee7a th\u1ecb tr\u01b0\u1eddng, c\u00e1i t\u00ean Multichain \u0111\u00e3 d\u1ea7n phai m\u1edd trong tr\u00ed nh\u1edb c\u1ee7a nhi\u1ec1u ng\u01b0\u1eddi. T\u1ea1m th\u1eddi, \u0111\u00f3 l\u00e0 b\u1ee9c tranh t\u1ed5ng quan v\u1ec1 c\u00e1c \u201cth\u00e0nh vi\u00ean\u201d \u0111ang t\u1ea1o n\u00ean l\u1edbp m\u1ea1ng l\u01b0\u1edbi c\u1ee7a blockchain. T\u1ea5t nhi\u00ean, danh s\u00e1ch n\u00e0y s\u1ebd c\u00f2n ti\u1ebfp t\u1ee5c thay \u0111\u1ed5i s\u1ebd c\u00f3 nh\u1eefng c\u00e1i t\u00ean m\u1edbi gia nh\u1eadp, v\u00e0 c\u0169ng s\u1ebd c\u00f3 nh\u1eefng h\u1ec7 sinh th\u00e1i t\u1eebng r\u1ea7m r\u1ed9 r\u1ed3i d\u1ea7n b\u1ecb l\u00e3ng qu\u00ean \u1edf m\u1ed9t g\u00f3c c\u1ee7a l\u1ecbch s\u1eed Web3.","title":"1.4 Cross-chain bridges"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/00_00_The_Anatomy_of_Web3/#2-middleware-layer","text":"Ngay ph\u00eda tr\u00ean l\u1edbp m\u1ea1ng blockchain, m\u00ecnh g\u1ecdi \u0111\u00e2y l\u00e0 \"middleware layer\" chuy\u00ean cung c\u1ea5p c\u00e1c d\u1ecbch v\u1ee5 v\u00e0 ch\u1ee9c n\u0103ng n\u1ec1n t\u1ea3ng cho c\u00e1c \u1ee9ng d\u1ee5ng Security audits, oracles, index query services, API services, data analysis, data storage, basic financial services, digital identities, DAO governance.. C\u00e1c th\u00e0nh ph\u1ea7n trong l\u1edbp middleware n\u00e0y c\u00f3 th\u1ec3 l\u00e0: On-chain protocol (ch\u1ea1y tr\u1ef1c ti\u1ebfp tr\u00ean blockchain), Off-chain platform (ch\u1ea1y ngo\u00e0i blockchain), Ho\u1eb7c c\u00e1c t\u1ed5 ch\u1ee9c centralized enterprise. Tr\u01b0\u1edbc ti\u00ean l\u00e0 v\u1ec1 ki\u1ec3m to\u00e1n b\u1ea3o m\u1eadt ( Security Auditing ). \u0110\u00e2y l\u00e0 m\u1ed9t lo\u1ea1i middleware c\u1ed1t l\u00f5i. V\u00ec ph\u1ea7n l\u1edbn c\u00e1c blockchain v\u00e0 \u1ee9ng d\u1ee5ng Web3 \u0111\u1ec1u m\u00e3 ngu\u1ed3n m\u1edf (open-source), v\u00e0 nhi\u1ec1u \u1ee9ng d\u1ee5ng li\u00ean quan tr\u1ef1c ti\u1ebfp t\u1edbi t\u00e0i ch\u00ednh, n\u00ean v\u1ea5n \u0111\u1ec1 b\u1ea3o m\u1eadt tr\u1edf th\u00e0nh \u01b0u ti\u00ean h\u00e0ng \u0111\u1ea7u, v\u00e0 ki\u1ec3m to\u00e1n b\u1ea3o m\u1eadt \u0111\u01b0\u01a1ng nhi\u00ean tr\u1edf th\u00e0nh m\u1ed9t nhu c\u1ea7u b\u1eaft bu\u1ed9c. C\u00e1c c\u00f4ng ty n\u1ed5i ti\u1ebfng trong l\u0129nh v\u1ef1c n\u00e0y g\u1ed3m: CertiK , OpenZeppelin , ConsenSys , Hacken , Quantstamp ; \u1edf Trung Qu\u1ed1c c\u00f3 SlowMist , ChainSec , v\u00e0 Paidun . Ngo\u00e0i ra c\u00f2n c\u00f3 nhi\u1ec1u c\u00f4ng ty/team nhi\u1ec1u h\u01a1n th\u1ebf n\u1eefa... B\u00ean c\u1ea1nh \u0111\u00f3, kh\u00f4ng th\u1ec3 kh\u00f4ng k\u1ec3 t\u1edbi c\u00e1c Bug Bounty platform nh\u01b0 Immunefi , Hacker proof ... Ti\u1ebfp theo l\u00e0 Oracle , th\u00e0nh ph\u1ea7n \u0111\u00f3ng vai tr\u00f2 r\u1ea5t quan tr\u1ecdng trong h\u1ec7 sinh th\u00e1i Web3. Oracle l\u00e0 c\u1ea7u n\u1ed1i gi\u1eefa h\u1ec7 th\u1ed1ng blockchain v\u00e0 ngu\u1ed3n d\u1eef li\u1ec7u b\u00ean ngo\u00e0i, gi\u00fap th\u1ef1c hi\u1ec7n vi\u1ec7c giao ti\u1ebfp d\u1eef li\u1ec7u gi\u1eefa smart contract v\u00e0 th\u1ebf gi\u1edbi th\u1ef1c. V\u00ec b\u1ea3n th\u00e2n m\u1ea1ng l\u01b0\u1edbi blockchain b\u1ecb gi\u1edbi h\u1ea1n b\u1edfi t\u00ednh nh\u1ea5t qu\u00e1n tr\u1ea1ng th\u00e1i ( state consistency ), n\u00ean \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o r\u1eb1ng m\u1ed7i node \u0111\u1ec1u cho ra c\u00f9ng m\u1ed9t k\u1ebft qu\u1ea3 khi nh\u1eadn c\u00f9ng m\u1ed9t input, blockchain \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf nh\u01b0 m\u1ed9t h\u1ec7 th\u1ed1ng \u0111\u00f3ng, ch\u1ec9 c\u00f3 th\u1ec3 l\u1ea5y d\u1eef li\u1ec7u n\u1ed9i b\u1ed9 (on-chain), kh\u00f4ng th\u1ec3 ch\u1ee7 \u0111\u1ed9ng l\u1ea5y d\u1eef li\u1ec7u t\u1eeb b\u00ean ngo\u00e0i (off-chain). Tuy nhi\u00ean, trong nhi\u1ec1u t\u00ecnh hu\u1ed1ng \u1ee9ng d\u1ee5ng, d\u1eef li\u1ec7u b\u00ean ngo\u00e0i l\u00e0 b\u1eaft bu\u1ed9c v\u00e0 ch\u00fang \u0111\u01b0\u1ee3c cung c\u1ea5p th\u00f4ng qua oracle . \u0110\u00e2y c\u0169ng l\u00e0 c\u00e1ch duy nh\u1ea5t \u0111\u1ec3 blockchain c\u00f3 th\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi d\u1eef li\u1ec7u ngo\u00e0i chu\u1ed7i. C\u00e1c lo\u1ea1i oracle hi\u1ec7n nay c\u00f3 th\u1ec3 chia th\u00e0nh: oracle cho DeFi, NFT, SocialFi, oracle cross-chain, oracle b\u1ea3o m\u1eadt ri\u00eang t\u01b0, oracle t\u00edn d\u1ee5ng, v\u00e0 m\u1ea1ng l\u01b0\u1edbi oracle phi t\u1eadp trung. M\u1ed9t s\u1ed1 d\u1ef1 \u00e1n oracle ti\u00eau bi\u1ec3u g\u1ed3m: CreDA, Privy, UMA, Banksea, DOS, NEST, Chainlink, v.v. Trong \u0111\u00f3, Chainlink l\u00e0 d\u1ef1 \u00e1n d\u1eabn \u0111\u1ea7u m\u1ea3ng oracle, \u0111\u01b0\u1ee3c \u0111\u1ecbnh v\u1ecb l\u00e0 m\u1ed9t m\u1ea1ng l\u01b0\u1edbi oracle phi t\u1eadp trung, cung c\u1ea5p nhi\u1ec1u s\u1ea3n ph\u1ea9m nh\u01b0: Data Feeds, VRF, Keepers, Proof of Reserve, CCIP,\u2026 Ti\u1ebfp theo l\u00e0 truy v\u1ea5n d\u1eef li\u1ec7u ( Index Query ), m\u1ed9t middleware quan tr\u1ecdng gi\u00fap gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n truy v\u1ea5n d\u1eef li\u1ec7u on-chain ph\u1ee9c t\u1ea1p. V\u00ed d\u1ee5, n\u1ebfu mu\u1ed1n truy v\u1ea5n t\u1ed5ng kh\u1ed1i l\u01b0\u1ee3ng giao d\u1ecbch tr\u00ean Uniswap trong m\u1ed9t ng\u00e0y c\u1ee5 th\u1ec3, th\u00ec vi\u1ec7c truy v\u1ea5n tr\u1ef1c ti\u1ebfp t\u1eeb blockchain l\u00e0 r\u1ea5t kh\u00f3 kh\u0103n. Do \u0111\u00f3, c\u1ea7n c\u00f3 c\u00e1c d\u1ecbch v\u1ee5 truy v\u1ea5n ch\u1ec9 m\u1ee5c, v\u1edbi nh\u1eefng \u0111\u1ea1i di\u1ec7n ch\u00ednh l\u00e0 The Graph v\u00e0 Covalent. The Graph ho\u1ea1t \u0111\u1ed9ng b\u1eb1ng c\u00e1ch gi\u00e1m s\u00e1t d\u1eef li\u1ec7u on-chain v\u00e0 chuy\u1ec3n h\u00f3a ch\u00fang th\u00e0nh d\u1eef li\u1ec7u t\u00f9y ch\u1ec9nh \u0111\u1ec3 l\u01b0u tr\u1eef v\u00e0 truy v\u1ea5n. Trong khi \u0111\u00f3, Covalent \u0111\u00f3ng g\u00f3i c\u00e1c d\u1eef li\u1ec7u ph\u1ed5 bi\u1ebfn v\u00e0 th\u01b0\u1eddng d\u00f9ng th\u00e0nh c\u00e1c API th\u1ed1ng nh\u1ea5t \u0111\u1ec3 ng\u01b0\u1eddi d\u00f9ng d\u1ec5 truy v\u1ea5n. Khi n\u00f3i \u0111\u1ebfn d\u1ecbch v\u1ee5 API, ngo\u00e0i Covalent, c\u00f2n c\u00f3 nhi\u1ec1u nh\u00e0 cung c\u1ea5p API ph\u1ee5c v\u1ee5 c\u00e1c m\u1ee5c \u0111\u00edch kh\u00e1c nhau, v\u00ed d\u1ee5: * NFTScan: chuy\u00ean cung c\u1ea5p d\u1eef li\u1ec7u API v\u1ec1 NFT, * Infura v\u00e0 Alchemy: cung c\u1ea5p d\u1ecbch v\u1ee5 node cho blockchain. Data analytics c\u0169ng l\u00e0 m\u1ed9t th\u00e0nh ph\u1ea7n middleware li\u00ean quan t\u1edbi d\u1eef li\u1ec7u. B\u1ea1n c\u00f3 th\u1ec3 t\u1eebng nghe nh\u01b0 Dune Analytics , Flipside Crypto , DeBank , Chainalysis . Ti\u1ebfp theo l\u00e0 middleware cung c\u1ea5p c\u00e1c defi service . C\u00e1c giao th\u1ee9c ti\u00eau bi\u1ec3u g\u1ed3m: Uniswap , Curve , Compound , Aave , v.v. \u2022 Uniswap v\u00e0 Curve l\u00e0 c\u00e1c giao th\u1ee9c giao d\u1ecbch (DEX), \u2022 Compound v\u00e0 Aave l\u00e0 c\u00e1c giao th\u1ee9c cho vay (lending). V\u1ec1 b\u1ea3n ch\u1ea5t, \u0111\u00e2y l\u00e0 c\u00e1c giao th\u1ee9c \u1edf l\u1edbp \u1ee9ng d\u1ee5ng (application layer), nh\u01b0ng v\u00ec ng\u00e0y c\u00e0ng c\u00f3 nhi\u1ec1u \u1ee9ng d\u1ee5ng kh\u00e1c d\u1ef1a v\u00e0o ch\u00fang nh\u01b0 m\u1ed9t th\u00e0nh ph\u1ea7n c\u01a1 b\u1ea3n \u0111\u1ec3 x\u00e2y d\u1ef1ng, n\u00ean ch\u00fang tr\u1edf th\u00e0nh c\u00e1c giao th\u1ee9c d\u00f9ng chung, t\u01b0\u01a1ng t\u1ef1 nh\u01b0 c\u00e1c kh\u1ed1i Lego t\u1eeb \u0111\u00f3 \u0111\u1ea3m nh\u1eadn vai tr\u00f2 c\u1ee7a middleware. \u2e3b Tr\u00ean th\u1ef1c t\u1ebf, b\u1ea5t k\u1ef3 th\u00e0nh ph\u1ea7n c\u00f3 th\u1ec3 t\u00e1i s\u1eed d\u1ee5ng (composable) n\u00e0o d\u00f9 l\u00e0 giao th\u1ee9c on-chain, d\u1ecbch v\u1ee5 off-chain do th\u1ef1c th\u1ec3 t\u1eadp trung cung c\u1ea5p, ho\u1eb7c t\u1ed5 ch\u1ee9c DAO \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ph\u00e2n lo\u1ea1i v\u00e0o \u201cl\u1edbp middleware\u201d, mi\u1ec5n l\u00e0 d\u1ecbch v\u1ee5 m\u00e0 n\u00f3 cung c\u1ea5p \u0111\u01b0\u1ee3c \u0111a s\u1ed1 \u1ee9ng d\u1ee5ng kh\u00e1c c\u1ea7n s\u1eed d\u1ee5ng.","title":"2. Middleware layer"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/00_00_The_Anatomy_of_Web3/#3-application-layer","text":"\u0110\u00e2y l\u00e0 t\u1ea7ng s\u00f4i \u0111\u1ed9ng v\u00e0 phong ph\u00fa nh\u1ea5t trong h\u1ec7 sinh th\u00e1i Web3. T\u1ea1i \u0111\u00e2y, h\u00e0ng lo\u1ea1t dApp (decentralized applications) \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n, m\u1ed7i \u1ee9ng d\u1ee5ng \u0111\u1ea1i di\u1ec7n cho m\u1ed9t h\u01b0\u1edbng \u0111i ri\u00eang. M\u00ecnh d\u00f9ng t\u1eeb \"B\u00e1ch hoa \u0111ua n\u1edf, b\u00e1ch gia tranh minh\" trong web3 hi\u1ec7n t\u1ea1i \ud83e\udd23. Trong ph\u1ea7n n\u00e0y, m\u00ecnh s\u1ebd \u0111i qua domain ti\u00eau bi\u1ec3u v\u00e0 \u0111ang ph\u00e1t tri\u1ec3n m\u1ea1nh trong Application Layer","title":"3. Application Layer"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/00_00_The_Anatomy_of_Web3/#31-nft-non-fungible-token","text":"NFT l\u00e0 vi\u1ebft t\u1eaft c\u1ee7a Non-Fungible Token \u2014 t\u1ee9c token kh\u00f4ng th\u1ec3 thay th\u1ebf. Ch\u00fang ta th\u01b0\u1eddng g\u1ecdi NFT l\u00e0 c\u00e1c t\u00e0i s\u1ea3n k\u1ef9 thu\u1eadt s\u1ed1. NFT \u0111\u1ea1i di\u1ec7n cho t\u00e0i s\u1ea3n s\u1ed1 \u0111\u1ed9c nh\u1ea5t, ch\u1eb3ng h\u1ea1n nh\u01b0 t\u00e1c ph\u1ea9m ngh\u1ec7 thu\u1eadt, nh\u00e2n v\u1eadt game, hay v\u1eadt ph\u1ea9m s\u01b0u t\u1ea7m. D\u1ef1 \u00e1n NFT th\u1ef1c s\u1ef1 \u0111\u1ea7u ti\u00ean l\u00e0 CryptoPunks , ra m\u1eaft v\u00e0o th\u00e1ng 6 n\u0103m 2017. B\u1ed9 s\u01b0u t\u1eadp n\u00e0y g\u1ed3m 10.000 h\u00ecnh \u0111\u1ea1i di\u1ec7n pixel k\u00edch th\u01b0\u1edbc 24x24 , \u0111\u01b0\u1ee3c t\u1ea1o ra b\u1eb1ng thu\u1eadt to\u00e1n, m\u1ed7i h\u00ecnh l\u00e0 m\u1ed9t c\u00e1 th\u1ec3 \u0111\u1ed9c l\u1eadp, kh\u00f4ng tr\u00f9ng l\u1eb7p. H\u00ecnh d\u01b0\u1edbi \u0111\u00e2y l\u00e0 v\u00ed d\u1ee5 m\u1ed9t s\u1ed1 avatar hi\u1ec3n th\u1ecb tr\u00ean trang web ch\u00ednh th\u1ee9c c\u1ee7a CryptoPunks: B\u1ea1n c\u0169ng c\u00f3 th\u1ec3 v\u00e0o OpenSea \u0111\u1ec3 xem chi ti\u1ebft nh\u00e9. \u1ede th\u1eddi \u0111i\u1ec3m m\u00ecnh vi\u1ebft b\u00e0i n\u00e0y th\u00ec g\u00eda s\u00e0n(floor price) l\u00e0 49.99 ETH (t\u01b0\u01a1ng \u0111\u01b0\u01a1ng 185,000 USD t\u00ednh theo gi\u00e1 hi\u1ec7n t\u1ea1i). Giao d\u1ecbch \u0111\u1eaft nh\u1ea5t t\u1eebng \u0111\u01b0\u1ee3c ghi nh\u1eadn l\u00e0 8,000 ETH v\u00e0o ng\u00e0y 12/02/2022. B\u1ea1n s\u1ebd th\u1eafc m\u1eafc l\u00e0 v\u00ec sao m\u1ed9t h\u00ecnh \u0111\u1ea1i di\u1ec7n pixel c\u00f3 th\u1ec3 \u0111\u1eaft nh\u01b0 v\u1eady? M\u1ed9t trong nh\u1eefng l\u00fd do ch\u00ednh l\u00e0 t\u00ednh ti\u00ean phong. CryptoPunks l\u00e0 d\u1ef1 \u00e1n NFT \u0111\u1ea7u ti\u00ean tr\u00ean Ethereum, t\u01b0\u01a1ng t\u1ef1 nh\u01b0 c\u00e1ch Bitcoin l\u00e0 blockchain \u0111\u1ea7u ti\u00ean, \u0111i\u1ec1u n\u00e0y mang l\u1ea1i gi\u00e1 tr\u1ecb bi\u1ec3u t\u01b0\u1ee3ng v\u00e0 s\u01b0u t\u1ea7m l\u1edbn. L\u1ea5y c\u1ea3m h\u1ee9ng t\u1eeb CryptoPunks , studio Axiom Zen (sau n\u00e0y l\u00e0 Dapper Labs) ra m\u1eaft CryptoKitties v\u00e0o cu\u1ed1i n\u0103m 2017. D\u1ef1 \u00e1n nhanh ch\u00f3ng g\u00e2y s\u1ed1t, \u0111\u1ebfn m\u1ee9c l\u00e0m t\u1eafc ngh\u1ebdn m\u1ea1ng Ethereum t\u1eeb \u0111\u00f3 b\u1ed9c l\u1ed9 r\u00f5 c\u00e1c v\u1ea5n \u0111\u1ec1 hi\u1ec7u n\u0103ng. Ngay tr\u01b0\u1edbc khi ph\u00e1t h\u00e0nh, Dieter Shirley , CTO c\u1ee7a Axiom Zen, \u0111\u00e3 \u0111\u1ec1 xu\u1ea5t chu\u1ea9n ERC-721 l\u00e0 chu\u1ea9n k\u1ef9 thu\u1eadt gi\u00fap chu\u1ea9n h\u00f3a c\u00e1c token kh\u00f4ng th\u1ec3 thay th\u1ebf (NFT). S\u1ef1 th\u00e0nh c\u00f4ng c\u1ee7a CryptoKitties \u0111\u00e3 \u0111\u1ea9y nhanh vi\u1ec7c ph\u1ed5 bi\u1ebfn c\u1ee7a chu\u1ea9n n\u00e0y, v\u00e0 ng\u00e0y nay ERC-721 \u0111\u00e3 tr\u1edf th\u00e0nh ti\u00eau chu\u1ea9n c\u01a1 b\u1ea3n c\u1ee7a NFT tr\u00ean EVM.","title":"3.1 NFT (Non-Fungible Token)"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/00_00_The_Anatomy_of_Web3/#cac-linh-vuc-ung-dung-chinh-cua-nft","text":"NFT \u0111\u00e3 m\u1edf r\u1ed9ng ra nhi\u1ec1u l\u0129nh v\u1ef1c trong th\u1ebf gi\u1edbi s\u1ed1. N\u1ebfu ph\u00e2n lo\u1ea1i theo \u1ee9ng d\u1ee5ng, c\u00f3 th\u1ec3 chia ra c\u00e1c nh\u00f3m ti\u00eau bi\u1ec3u sau: S\u01b0u t\u1ea7m (Collectibles): S\u01b0u t\u1ea7m l\u00e0 l\u0129nh v\u1ef1c NFT ph\u00e1t tri\u1ec3n \u0111\u1ea7u ti\u00ean, v\u1edbi \u0111\u1eb7c \u0111i\u1ec3m c\u1ed1t l\u00f5i l\u00e0 t\u00ednh khan hi\u1ebfm. V\u00ed d\u1ee5, trong 10,000 CryptoPunks th\u00ec \u201cAlien\u201d c\u1ef1c hi\u1ebfm \u2192 gi\u00e1 cao c\u00f2n \u201cMale\u201d ph\u1ed5 bi\u1ebfn h\u01a1n \u2192 gi\u00e1 th\u1ea5p h\u01a1n Ngh\u1ec7 thu\u1eadt(artworks): NFT gi\u00fap ngh\u1ec7 s\u0129 b\u1ea3o v\u1ec7 b\u1ea3n quy\u1ec1n v\u00e0 s\u1edf h\u1eefu t\u00e1c ph\u1ea9m. Music: NFT gi\u00fap nh\u1ea1c s\u0129 ki\u1ec3m so\u00e1t b\u1ea3n quy\u1ec1n v\u00e0 doanh thu: film: Nhi\u1ec1u th\u01b0\u01a1ng hi\u1ec7u phim l\u1edbn ph\u00e1t h\u00e0nh NFT nh\u01b0 Game of Thrones, Matrix, Batman, Lord of the Rings, The Walking Dead Gaming: NFT \u0111\u00f3ng vai tr\u00f2 l\u00e0 t\u00e0i s\u1ea3n trong game \u2014 gi\u00fap ng\u01b0\u1eddi ch\u01a1i th\u1ef1c s\u1ef1 s\u1edf h\u1eefu v\u1eadt ph\u1ea9m v\u00e0 c\u00f3 th\u1ec3 giao d\u1ecbch b\u00ean ngo\u00e0i Virtual Land: \u0110\u1ea5t \u1ea3o l\u00e0 th\u00e0nh ph\u1ea7n quan tr\u1ecdng trong metavers v\u1edbi c\u00e1c d\u1ef1 \u00e1n l\u1edbn: Decentraland, The Sandbox, Otherside, Axie Land, Roblox... NFT x DeFi: NFT c\u00f3 th\u1ec3 b\u1ecb ph\u00e2n m\u1ea3nh tr\u1edf th\u00e0nh token c\u00f3 th\u1ec3 giao d\u1ecbch, staking, lending\u2026 Brand: NFT nh\u01b0 m\u1ed9t h\u00ecnh th\u1ee9c marketing v\u00e0 k\u00edch th\u00edch cho c\u1ed9ng \u0111\u1ed3ng. C\u00e1c th\u01b0\u01a1ng hi\u1ec7u l\u1edbn \u0111\u00e3 tham gia nh\u01b0 Gucci, LV, Hermes, Starbucks, Taco Bell, Coca-Cola, Pizza Hut DID: DID l\u00e0 h\u1ea1 t\u1ea7ng cho danh t\u00ednh Web3. V\u00ed d\u1ee5 ENS (Ethereum Name Service) gi\u1ed1ng nh\u01b0 \u201cDNS\u201d cho Web3 \u1ee8ng d\u1ee5ng c\u1ee7a NFT th\u00ec nhi\u1ec1u v\u00f4 k\u1ec3, m\u1ea5y nh\u00f3m tr\u00ean ch\u1ec9 l\u00e0 ph\u1ea7n n\u1ed5i c\u1ee7a t\u1ea3ng b\u0103ng . V\u00ec NFT mang t\u00ednh \u0111\u1ea1i di\u1ec7n cho quy\u1ec1n s\u1edf h\u1eefu, n\u00ean g\u1ea7n nh\u01b0 b\u1ea5t c\u1ee9 th\u1ee9 g\u00ec \"c\u00f3 owner\" \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a th\u00e0nh NFT. V\u1eady n\u00ean trong c\u1ed9ng \u0111\u1ed3ng m\u1edbi c\u00f3 c\u00e2u: everything can be NFT ngh\u0129a l\u00e0 c\u00e1i g\u00ec c\u0169ng c\u00f3 th\u1ec3 NFT h\u00f3a \u0111\u01b0\u1ee3c h\u1ebft \u00e1!","title":"C\u00e1c l\u0129nh v\u1ef1c \u1ee9ng d\u1ee5ng ch\u00ednh c\u1ee7a NFT"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/00_00_The_Anatomy_of_Web3/#32-defi","text":"DeFi vi\u1ebft t\u1eaft c\u1ee7a Decentralized Finance (t\u00e0i ch\u00ednh phi t\u1eadp trung) ch\u00ednh th\u1ee9c b\u00f9ng n\u1ed5 v\u00e0o m\u00f9a h\u00e8 n\u0103m 2020, t\u1edbi m\u1ee9c ng\u01b0\u1eddi ta \u0111\u1eb7t h\u1eb3n c\u00e1i t\u00ean ri\u00eang cho giai \u0111o\u1ea1n n\u00e0y l\u00e0 \u201cDeFi Summer\u201d \ud83c\udf1e. Theo s\u1ed1 li\u1ec7u t\u1eeb TradingView, khi m\u1edbi xu\u1ea5t hi\u1ec7n, t\u1ed5ng gi\u00e1 tr\u1ecb th\u1ecb tr\u01b0\u1eddng c\u1ee7a DeFi ch\u1ec9 kho\u1ea3ng 5 t\u1ef7 USD, nh\u01b0ng sau \u0111\u00f3 th\u00ec leo d\u1ed1c kh\u00f4ng phanh, ch\u1ea1m \u0111\u1ec9nh v\u00e0o cu\u1ed1i n\u0103m 2021 v\u1edbi g\u1ea7n 180 t\u1ef7 USD B\u1ea3n th\u00e2n Defi l\u00e0 m\u1ed9t h\u1ec7 sinh th\u00e1i l\u1edbn v\u1edbi nhi\u1ec1u \u201csub-sector\u201d kh\u00e1c nhau nh\u01b0: stablecoins, DEX, derivatives, lending, aggregators, insurance, prediction markets, index\u2026","title":"3.2 DeFi"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/00_00_The_Anatomy_of_Web3/#321-stablecoin","text":"Stablecoin l\u00e0 \u201c\u0111\u1ed3ng ti\u1ec1n \u1ed5n \u0111\u1ecbnh\u201d v\u00ed d\u1ee5 USD tr\u00ean Web3. C\u00f3 th\u1ec3 chia l\u00e0m 3 lo\u1ea1i ch\u00ednh: Centralized Stablecoins: do t\u1ed5 ch\u1ee9c t\u1eadp trung ph\u00e1t h\u00e0nh, backing b\u1eb1ng fiat th\u1eadt, ki\u1ec3u 1 USDT = 1 USD. Ti\u00eau bi\u1ec3u c\u00f3 USDT (Tether), USDC (Circle), v\u00e0 BUSD (Binance + Paxos) . Tuy t\u1eadp trung, nh\u01b0ng hi\u1ec7n v\u1eabn l\u00e0 d\u00f2ng stablecoin thanh kho\u1ea3n cao nh\u1ea5t th\u1ecb tr\u01b0\u1eddng. Overcollateralized Stablecoins: lo\u1ea1i n\u00e0y \u0111\u01b0\u1ee3c \u0111\u00fac b\u1eb1ng c\u00e1ch th\u1ebf ch\u1ea5p crypto kh\u00e1c, th\u01b0\u1eddng d\u00f9ng smart contract v\u00e0 oracle \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o peg 1:1. \u0110\u1ea1i di\u1ec7n ti\u00eau bi\u1ec3u l\u00e0 DAI t\u1eeb MakerDAO c\u00f3 decentralization cao, nh\u01b0ng ph\u1ea3i th\u1ebf ch\u1ea5p nhi\u1ec1u h\u01a1n gi\u00e1 tr\u1ecb c\u1ea7n mint. Algorithmic Stablecoins: kh\u00f4ng c\u1ea7n th\u1ebf ch\u1ea5p m\u00e0 d\u00f9ng thu\u1eadt to\u00e1n \u0111\u1ec3 c\u00e2n b\u1eb1ng cung \u2013 c\u1ea7u. C\u00f3 h\u00e0ng lo\u1ea1t t\u00ean tu\u1ed5i t\u1eebng th\u1eed nh\u01b0 UST, FEI, FRAX, CUSD, USDD\u2026","title":"3.2.1 Stablecoin"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/00_00_The_Anatomy_of_Web3/#322-dex-decentralized-exchange","text":"DEX (Decentralized Exchange) ch\u00ednh l\u00e0 n\u01a1i giao d\u1ecbch t\u00e0i s\u1ea3n crypto kh\u00f4ng c\u1ea7n trung gian. \u0110\u00e2y l\u00e0 sector c\u00f3 market cap to nh\u1ea5t trong DeFi, v\u00e0 c\u0169ng l\u00e0 c\u00e1i n\u00f4i cho \u0111\u1ee7 ki\u1ec3u m\u00f4 h\u00ecnh giao d\u1ecbch nh\u01b0: Spot DEX vs Derivatives DEX Orderbook mode vs AMM mode V\u1ec1 Orderbook DEX th\u00ec gi\u1ed1ng s\u00e0n ch\u1ee9ng kho\u00e1n truy\u1ec1n th\u1ed1ng. Ng\u01b0\u1eddi d\u00f9ng \u0111\u1eb7t l\u1ec7nh mua/b\u00e1n. C\u00f3 3 ki\u1ec3u tri\u1ec3n khai: On-chain Orderbook: nh\u01b0 EtherDelta, c\u1ef1c phi t\u1eadp trung nh\u01b0ng ch\u1eadm & ph\u00ed cao. Off-chain match, on-chain settle: nh\u01b0 0x protocol, ti\u1ebft ki\u1ec7m gas h\u01a1n nh\u01b0ng v\u1eabn ph\u1ea3i settle t\u1eebng giao d\u1ecbch Layer2 Orderbook: nh\u01b0 dYdX d\u00f9ng StarkEx \u2013 trade m\u01b0\u1ee3t nh\u01b0 CEX nh\u01b0ng v\u1eabn gi\u1eef t\u00ednh phi t\u1eadp trung \u1edf m\u1ee9c v\u1eeba ph\u1ea3i. V\u1ec1 AMM DEX , AMM (Automated Market Maker) l\u00e0 c\u00fa b\u00f9ng n\u1ed5 th\u1eadt s\u1ef1 c\u1ee7a DEX. Kh\u1edfi ngu\u1ed3n t\u1eeb Uniswap , r\u1ed3i lan ra SushiSwap, Curve, Balancer, GMX\u2026 . M\u00f4 h\u00ecnh n\u00e0y d\u1ef1a tr\u00ean liquidity pool, ng\u01b0\u1eddi d\u00f9ng b\u01a1m t\u00e0i s\u1ea3n v\u00e0o pool \u0111\u1ec3 tr\u1edf th\u00e0nh LP, \u0111\u1ed5i l\u1ea1i nh\u1eadn fee t\u1eeb ng\u01b0\u1eddi trade. T\u1ee9c l\u00e0 b\u1ea1n v\u1eeba l\u00e0m trader, v\u1eeba l\u00e0m ng\u00e2n h\u00e0ng lu\u00f4n. V\u1ec1 Derivatives, l\u00e0 \u0111\u00f2n b\u1ea9y th\u00ec trong DeFi g\u1ed3m 4 nh\u00f3m ch\u00ednh: Perpetual contracts: gi\u1ed1ng futures, c\u00f3 leverage. D\u1eabn \u0111\u1ea7u l\u00e0 dYdX, apeX, GMX, Perpetual Protocol. Options: ph\u1ee9c t\u1ea1p h\u01a1n future, \u00edt ph\u1ed5 bi\u1ebfn. C\u00f3 Hegic, Opyn, Charm, Primitive\u2026 Synthetic Assets: t\u1ea1o t\u00e0i s\u1ea3n m\u00f4 ph\u1ecfng nh\u01b0 v\u00e0ng, c\u1ed5 phi\u1ebfu\u2026 Ti\u00eau bi\u1ec3u l\u00e0 Synthetix, UMA, Mirror, Duet. Interest Rate Derivatives: nh\u01b0 BarnBridge, Swivel, cho ph\u00e9p user \u201c\u0111\u1eb7t c\u01b0\u1ee3c\u201d v\u00e0o l\u00e3i su\u1ea5t crypto. V\u1ec1 Lendind , cho vay l\u00e0 n\u1ec1n t\u1ea3ng th\u1ee9 hai b\u00ean c\u1ea1nh DEX. C\u00e1c \u00f4ng l\u1edbn g\u1ed3m Compound, Aave, Maker, Cream, Liquity, Venus, Euler, Fuse\u2026 Ch\u1ee7 y\u1ebfu d\u00f9ng m\u00f4 h\u00ecnh over-collateralized : mu\u1ed1n vay $80 th\u00ec ph\u1ea3i b\u1ea1n c\u1eafm \u00edt nh\u1ea5t $100 t\u00e0i s\u1ea3n \u0111i\u1ec1u n\u00e0y nh\u1eb1m b\u1ea3o v\u1ec7 c\u1ea3 borrower l\u1eabn protocol. Ngo\u00e0i ra c\u00f2n c\u00f3: Interest-free loan : nh\u01b0 Liquity, vay kh\u00f4ng l\u00e3i, ch\u1ec9 tr\u1ea3 1 l\u1ea7n ph\u00ed upfront. Asset isolation pools : t\u00e1ch c\u00e1c pool ra Cross-chain lending : v\u1edbi c\u00e1c t\u00ean nh\u01b0 Flux, Aave, Compound m\u1edf r\u1ed9ng sang nhi\u1ec1u chain. Credit-based loan : nh\u01b0 Wing Finance, nh\u01b0ng v\u1eabn thi\u1ebfu h\u1ec7 th\u1ed1ng on-chain credit chu\u1ea9n ch\u1ec9nh. V\u1ec1 Aggregator, b\u1ea1n s\u1ebd th\u1eafc m\u1eafc n\u1ebfu c\u00f3 r\u1ea5t nhi\u1ec1u protocol th\u00ec l\u00e0m sao \u0111\u1ec3 ta c\u00f3 th\u1ec3 qu\u1ea3n l\u00fd th\u00ec Aggregator l\u00e0 c\u00f4ng c\u1ee5 gom t\u1ee5 m\u1ecdi th\u1ee9 l\u1ea1i: DEX Aggregator : t\u00ecm gi\u00e1 t\u1ed1t nh\u1ea5t t\u1eeb nhi\u1ec1u DEX \u2192 1inch, Matcha, ParaSwap, MetaMask Swap. Yield Aggregator : t\u1ef1 \u0111\u1ed9ng yield farming \u2192 Yearn Finance, Alpha Finance, Harvest, Convex Asset Management : qu\u1ea3n l\u00fd danh m\u1ee5c & portfolio \u2192 Zapper, Zerion. Data Aggregator : nh\u01b0 CoinMarketCap, DeFi Pulse, DeBank \u2013 d\u00f9 l\u00e0 centralized nh\u01b0ng v\u1eabn c\u1ef1c quan tr\u1ecdng. V\u1ec1 Insurance , m\u1ed9t s\u1ed1 c\u00e1i t\u00ean ti\u00ean phong g\u1ed3m: Nexus Mutual, Cover, Unslashed, Opium\u2026 V\u1ec1 Prediction Markets , d\u1ef1 \u0111o\u00e1n k\u1ebft qu\u1ea3 b\u1ea7u c\u1eed, gi\u00e1 crypto, hay b\u1ea5t c\u1ee9 s\u1ef1 ki\u1ec7n n\u00e0o,d\u1ef1 \u0111o\u00e1n l\u00e0 playground cho ai mu\u1ed1n predict b\u1eb1ng d\u1eef li\u1ec7u. Ngo\u00e0i ra ta c\u00f2n c\u00f3 ETF phi\u00ean b\u1ea3n web3, ngh\u0129a l\u00e0 thay v\u00ec pick m\u1ed9t token th\u00ec b\u1ea1n c\u00f3 th\u1ec3 hold nhi\u1ec1u token. M\u1ed9t s\u1ed1 ch\u1ec9 s\u1ed1 n\u1ed5i b\u1eadt ta n\u00ean bi\u1ebft nh\u01b0 DPI, sDEFI, PIPT, DEFI++, BCP... DeFi l\u00e0 n\u01a1i rebuild l\u1ea1i t\u1eeb \u0111\u1ea7u, b\u1eb1ng smart contract, phi t\u1eadp trung, permissionless. M\u1ed7i m\u1ea3nh gh\u00e9p m\u00e0 m\u00ecnh k\u1ec3 tr\u00ean \u0111\u1ec1u \u0111\u00f3ng vai tr\u00f2 ri\u00eang v\u00e0 khi x\u00e2u chu\u1ed7i l\u1ea1i, n\u00f3 t\u1ea1o n\u00ean h\u1ec7 sinh th\u00e1i l\u1edbn.","title":"3.2.2 DEX (Decentralized Exchange)"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/00_00_The_Anatomy_of_Web3/#33-gamefi","text":"GameFi l\u00e0 vi\u1ebft t\u1eaft c\u1ee7a Game Finance t\u1ee9c l\u00e0 game + t\u00e0i ch\u00ednh. N\u00f3i c\u00e1ch kh\u00e1c, \u0111\u00e2y ch\u00ednh l\u00e0 thu\u1eadt ng\u1eef cool ng\u1ea7u h\u01a1n c\u1ee7a Web3 games. Tr\u01b0\u1edbc khi c\u00e1i t\u00ean GameFi xu\u1ea5t hi\u1ec7n, ng\u01b0\u1eddi ta th\u01b0\u1eddng g\u1ecdi m\u1ea5y tr\u00f2 n\u00e0y l\u00e0 blockchain games hay chain games. Nh\u01b0 \u0111\u1ec1 c\u1eadp trong n\u1ed9i dung NFT, D\u1ef1 \u00e1n ti\u00ean phong ph\u1ea3i k\u1ec3 \u0111\u1ebfn l\u00e0 CryptoKitties l\u00e0 tr\u00f2 nu\u00f4i m\u00e8o \u1ea3o t\u1eebng l\u00e0m t\u1eafc ngh\u1ebdn c\u1ea3 m\u1ea1ng Ethereum h\u1ed3i 2017. M\u1ed7i ch\u00fa m\u00e8o l\u00e0 m\u1ed9t NFT \u0111\u1ed9c l\u1eadp, c\u00f3 gen, c\u00f3 ngo\u1ea1i h\u00ecnh ri\u00eang. Ng\u01b0\u1eddi ch\u01a1i mua m\u00e8o, r\u1ed3i \u201cph\u1ed1i gi\u1ed1ng\u201d \u0111\u1ec3 \u0111\u1ebb ra m\u00e8o con c\u0169ng l\u00e0 NFT m\u1edbi. M\u00e8o n\u00e0o gen hi\u1ebfm th\u00ec gi\u00e1 c\u00e0ng ch\u00e1t. T\u00ednh \u0111\u1ebfn cu\u1ed1i th\u00e1ng 1/2023, \u0111\u00e3 c\u00f3 h\u01a1n 2 tri\u1ec7u m\u00e8o \u0111\u01b0\u1ee3c \u201cmint\u201d, v\u1edbi h\u01a1n 136,000 v\u00ed \u0111ang gi\u1eef m\u00e8o. Sau CryptoKitties l\u00e0 lo\u1ea1t clone sinh s\u1ea3n nh\u01b0 CryptoRabbit, CryptoFrog, CryptoDongle \u2026 Ho\u1eb7c m\u1ed9t game x\u1ed5 s\u1ed1 t\u00ean Fomo3D d\u00f9ng ETH. C\u1ee9 mua Key l\u00e0 nh\u1eadn \u0111\u01b0\u1ee3c c\u1ed5 t\u1ee9c. Ai l\u00e0 ng\u01b0\u1eddi cu\u1ed1i c\u00f9ng mua Key tr\u01b0\u1edbc khi countdown k\u1ebft th\u00fac (24h) th\u00ec s\u1ebd jackpot. Nh\u01b0ng m\u1ed7i l\u1ea7n ai \u0111\u00f3 mua Key m\u1edbi, th\u1eddi gian s\u1ebd c\u1ed9ng th\u00eam 30s. N\u00f3i \u0111\u1ebfn gamefi, m\u00ecnh kh\u00f4ng th\u1ec3 n\u00e0o kh\u00f4ng k\u1ec3 \u0111\u1ebfn l\u00e0 Axie Infinity . Ra m\u1eaft t\u1eeb 2018, nh\u01b0ng ph\u1ea3i \u0111\u1ebfn 2021 m\u1edbi \u201cn\u1ed5 tung\u201d v\u1edbi m\u00f4 h\u00ecnh Play-to-Earn (P2E). Trong game, b\u1ea1n s\u1eafm v\u00e0i con Axie (ki\u1ec3u Pok\u00e9mon NFT), sau \u0111\u00f3 \u0111em \u0111i \u0111\u00e1nh nhau, breed (ph\u1ed1i gi\u1ed1ng), trade tr\u00ean marketplace. Chi\u1ebfn th\u1eafng s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c SLP token, d\u00f9ng SLP + AXS \u0111\u1ec3 \u0111\u00fac Axie m\u1edbi \u2192 b\u00e1n l\u1ea5y l\u1eddi \u2192 quy \u0111\u1ed5i th\u00e0nh ETH ho\u1eb7c stablecoin, r\u1ed3i r\u00fat v\u1ec1 v\u00ed. Axie Infinity t\u1ea1o ra m\u1ed9t l\u00e0n s\u00f3ng l\u1edbn gi\u00fap gamefi b\u00f9ng n\u1ed5 \u1edf th\u1eddi \u0111i\u1ec3m 2021. Sau Axie, m\u00f4 h\u00ecnh ch\u01a1i \u0111\u1ec3 ki\u1ebfm (P2E) g\u1ea7n nh\u01b0 tr\u1edf th\u00e0nh ti\u00eau chu\u1ea9n cho Web3 games. \u201ctokenomics\u201d, \u201cearn model\u201d, \u201cNFT assets\u201d s\u1ebd l\u00e0 ti\u00eau chu\u1ea9n \u0111\u1ec3 m\u1ecdi ng\u01b0\u1eddi \u0111\u00e1nh gi\u00e1.","title":"3.3 GameFi"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/00_00_The_Anatomy_of_Web3/#34-socialfi","text":"SocialFi l\u00e0 vi\u1ebft t\u1eaft c\u1ee7a Social + Finance. Hi\u1ec3u \u0111\u01a1n gi\u1ea3n l\u00e0 m\u1ea1ng x\u00e3 h\u1ed9i phi\u00ean b\u1ea3n Web3 phi t\u1eadp trung, t\u00edch h\u1ee3p t\u00e0i ch\u00ednh, v\u00e0 cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng ki\u1ebfm ti\u1ec1n t\u1eeb t\u01b0\u01a1ng t\u00e1c x\u00e3 h\u1ed9i. Kh\u00e1i ni\u1ec7m n\u00e0y ch\u1ec9 th\u1ef1c s\u1ef1 hot trong 1\u20132 n\u0103m tr\u1edf l\u1ea1i \u0111\u00e2y. H\u1ea7u h\u1ebft c\u00e1c n\u1ec1n t\u1ea3ng SocialFi ng\u00e0y nay \u0111\u1ec1u v\u1eadn h\u00e0nh theo m\u00f4 h\u00ecnh qu\u1ea3n tr\u1ecb DAO (Decentralized Autonomous Organization) t\u1ee9c c\u1ed9ng \u0111\u1ed3ng l\u00e0 ng\u01b0\u1eddi \u0111\u01b0a ra quy\u1ebft \u0111\u1ecbnh. Kh\u00e1c v\u1edbi memecoin, th\u00ec socialfi s\u1ebd c\u00f3 t\u00ednh th\u1ef1c t\u1ebf h\u01a1n v\u00e0 c\u00f3 th\u1ec3 scale \u0111\u01b0\u1ee3c. Tuy nhi\u00ean \u0111\u1ec3 build m\u1ed9t dapp Socialfi th\u00ec technical c\u00f3 r\u1ea5t nhi\u1ec1u th\u1eed th\u00e1ch v\u00e0 builder ph\u1ea3i c\u00f3 t\u00ecm nh\u1eefng c\u00e2u tr\u1ea3 l\u1eddi ph\u00f9 h\u1ee3p. B\u1edfi v\u00ec kh\u00e1c v\u1edbi vi\u1ec7c x\u1eed l\u00fd data \u1edf web2 nh\u01b0 Facebook, X khi m\u00e0 m\u1ed7i ng\u00e0y generate h\u00e0ng t\u1ef7 interactions th\u00ec li\u1ec7u m\u1ed7i post/comment tr\u00ean socialfi c\u00f3 th\u1ec3 l\u00e0 on chain transaction \u0111\u01b0\u1ee3c ko? Th\u1ee9 2 l\u00e0 Ng\u01b0\u1eddi d\u00f9ng Web2 \u0111\u00e3 quen v\u1edbi m\u00f4 h\u00ecnh nh\u01b0 subcription (Patreon, Substack), Donate cho creator (Ko-fi, BuyMeACoffee)... SocialFi mu\u1ed1n b\u1eaft ch\u01b0\u1edbc m\u00f4 h\u00ecnh n\u00e0y th\u00ec ph\u1ea3i build tools \u0111\u1ee7 \u0111\u01a1n gi\u1ea3n, nh\u01b0ng v\u1eabn an to\u00e0n \u0111\u1ec3 ng\u01b0\u1eddi d\u00f9ng setup .","title":"3.4 SocialFi"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/00_00_The_Anatomy_of_Web3/#4-access-layer","text":"\u0110\u00e2y l\u00e0 t\u1ea7ng tr\u00ean c\u00f9ng c\u1ee7a ki\u1ebfn tr\u00fac Web3 n\u01a1i user nh\u01b0 b\u1ea1n v\u00e0 m\u00ecnh th\u1ef1c s\u1ef1 t\u01b0\u01a1ng t\u00e1c blockchain. C\u00e1c access layer ch\u00ednh l\u00e0: wallets, browsers, aggregators, v\u00e0 c\u1ea3\u2026 Twitter n\u1eefa . \u0110\u1ea7u ti\u00ean l\u00e0 Wallet : \u0110\u00e2y l\u00e0 entry point quan tr\u1ecdng nh\u1ea5t. Kh\u00f4ng c\u00f3 v\u00ed b\u1ea1n s\u1ebd kh\u00f4ng th\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi Blockchain. Hi\u1ec7n t\u1ea1i c\u00f3 c\u00e1c lo\u1ea1i v\u00ed nh\u01b0: * Browser Wallets: Metamask, Coinbase Wallet, WalletConnect... * Mobile Wallets: V\u00ed n\u1ed5i b\u1ead MetaMask Mobile, Coinbase Wallet, TokenPocket, Rainbow, BitKeep, Crypto.com, imToken\u2026 V\u00e0 c\u0169ng c\u00f3 nhi\u1ec1u v\u00ed h\u1ed7 tr\u1ee3 \u0111a chain nh\u01b0 BTC, ETH, BNB Chain, Polygon, Solana, Aptos, Cosmos\u2026 * Hardware Wallets: L\u01b0u private key ri\u00eang trong thi\u1ebft b\u1ecb v\u1eadt l\u00fd offline. N\u1ed5i b\u1eadt nh\u01b0 Ledger (Nano X, Nano S Plus, Ledger Stax), Trezor (Model One, Model T) * Multi-Signature Wallet: d\u00e0nh cho v\u00ed c\u1ea7n nhi\u1ec1u ng\u01b0\u1eddi k\u00fd d\u00f9ng set c\u1ea5u h\u00ecnh 2/3 ng\u01b0\u1eddi k\u00fd th\u00ec m\u1edbi th\u1ef1c hi\u1ec7n giao d\u1ecbch. D\u00f9ng nhi\u1ec1u trong DAO ho\u1eb7c team \u0111\u1ec3 tr\u00e1nh m\u1ea5t ti\u1ec1n oan. * MPC Wallet: MPC = Multi-Party Computation. V\u00ed chia nh\u1ecf private key th\u00e0nh nhi\u1ec1u m\u1ea3nh, m\u1ed7i b\u00ean gi\u1eef m\u1ed9t ph\u1ea7n. khi k\u00fd, m\u1edbi \u201cgh\u00e9p l\u1ea1i\u201d \u0111\u1ee7 m\u1ea3nh \u0111\u1ec3 unlock. G\u1ea7n gi\u1ed1ng multi-sig nh\u01b0ng ch\u1ea1y off-chain, kh\u00f4ng c\u1ea7n smart contract. * Smart Contract Wallet + Account Abstraction C\u00e1c browsers: H\u1ea7u h\u1ebft c\u00e1c DApp hi\u1ec7n v\u1eabn l\u00e0 web app, n\u00ean tr\u00ecnh duy\u1ec7t \u0111\u00f3ng vai tr\u00f2 quan tr\u1ecdng trong vi\u1ec7c render UI v\u00e0 k\u1ebft n\u1ed1i v\u1edbi v\u00ed. Chrome l\u00e0 browser ph\u1ed5 bi\u1ebfn nh\u1ea5t v\u00ec m\u1ecdi browser extension wallet \u0111\u1ec1u support. Ti\u1ebfp \u0111\u1ebfn ta c\u00f3 nh\u01b0 Brave ( c\u00f3 s\u1eb5n Brave wallet) Nhi\u1ec1u n\u1ec1n t\u1ea3ng nh\u01b0 Twitter (X), Reddit\u2026 l\u00e0 n\u01a1i m\u00e0 crypto culture di\u1ec5n ra v\u1edbi c\u00e1c C\u1ed9ng \u0111\u1ed3ng NFT, DAO, memecoin...","title":"4. Access Layer"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/01_00_Blockchain%20layers/","text":"Layer 0, 1, 2, 3 - Hi\u1ec3u Ki\u1ebfn Tr\u00fac Blockchain M\u1ee5c ti\u00eau Lesson: Gi\u1ea3i th\u00edch m\u00f4 h\u00ecnh ki\u1ebfn tr\u00fac ph\u00e2n l\u1edbp c\u1ee7a Blockchain, t\u1eadp trung v\u00e0o c\u00e1ch c\u00e1c gi\u1ea3i ph\u00e1p Layer 2 v\u00e0 Layer 3 gi\u00fap c\u1ea3i thi\u1ec7n kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng v\u00e0 hi\u1ec7u su\u1ea5t c\u1ee7a Layer 1. What are Layer 1 to Layer 3 doing? Why do we need so many layers? \u201cLayer\u201d hi\u1ec3u \u0111\u01a1n gi\u1ea3n l\u00e0 t\u1ea7ng trong h\u1ec7 sinh th\u00e1i blockchain, gi\u1ed1ng nh\u01b0 c\u00e1ch m\u1ea1ng Web2 c\u00f3 m\u00f4 h\u00ecnh 4 t\u1ea7ng TCP/IP: m\u1ed7i t\u1ea7ng lo m\u1ed9t vi\u1ec7c, t\u1eeb g\u1eedi g\u00f3i tin cho t\u1edbi hi\u1ec3n th\u1ecb web. Trong blockchain, c\u0169ng v\u1eady. H\u1ec7 sinh th\u00e1i th\u01b0\u1eddng \u0111\u01b0\u1ee3c chia l\u00e0m nhi\u1ec1u t\u1ea7ng, v\u00e0 m\u1ed7i t\u1ea7ng l\u00e0 \u0111\u1ea5t s\u1ed1ng c\u1ee7a h\u00e0ng lo\u1ea1t d\u1ef1 \u00e1n kh\u00e1c nhau. H\u00ecnh tr\u00ean minh ho\u1ea1 v\u1ec1 c\u00e1c layers. Bitcoin v\u00e0 Ethereum \u01b0u ti\u00ean decentralization + security l\u00ean h\u00e0ng \u0111\u1ea7u. Ch\u00ednh nh\u1edd \u0111\u00f3 m\u00e0 ch\u00fang \u0111\u1ea3m b\u1ea3o \u0111\u01b0\u1ee3c t\u00ednh open, neutral, anti-censorship. Nh\u01b0ng \u0111\u1ed5i l\u1ea1i, kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng (scalability) s\u1ebd k\u00e9m. V\u00ec th\u1ebf n\u00ean devs m\u1edbi t\u00ecm m\u1ecdi c\u00e1ch \u0111\u1ec3 scale blockchain l\u00ean m\u00e0 kh\u00f4ng ph\u00e1 v\u1ee1 trilemma. M\u1ed9t h\u01b0\u1edbng ph\u1ed5 bi\u1ebfn nh\u1ea5t l\u00e0 \u0111\u01b0a ph\u1ea7n t\u00ednh to\u00e1n ra off-chain (ngo\u00e0i chain), ch\u1ec9 \u0111\u1ec3 ph\u1ea7n x\u00e1c minh v\u00e0 l\u01b0u tr\u1eef l\u1ea1i on-chain. \u0110\u00e2y ch\u00ednh l\u00e0 l\u00fd do ra \u0111\u1eddi c\u1ee7a Layer2. B\u00ean d\u01b0\u1edbi l\u00e0 s\u01a1 \u0111\u1ed3 ki\u1ebfn tr\u00fac ph\u00e2n t\u1ea7ng: Layer 0 \u2013 kh\u1ea3 n\u0103ng t\u01b0\u01a1ng t\u00e1c li\u00ean chu\u1ed7i( inter-chain interactions) Ch\u00fang ta s\u1ebd b\u1eaft \u0111\u1ea7u ph\u00e2n t\u00edch t\u1eeb t\u1ea7ng th\u1ea5p nh\u1ea5t trong ki\u1ebfn tr\u00fac Web3 l\u00e0 Layer 0. Layer 0 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c xem nh\u01b0 l\u00e0 t\u1ea7ng v\u1eadt l\u00fd (physical layer) trong m\u00f4 h\u00ecnh Internet truy\u1ec1n th\u1ed1ng. V\u00ec Layer 0 \u0111\u00f3ng vai tr\u00f2 l\u00e0 h\u1ea1 t\u1ea7ng li\u00ean k\u1ebft v\u00e0 h\u1ed7 tr\u1ee3 t\u01b0\u01a1ng t\u00e1c gi\u1eefa nhi\u1ec1u Layer 1 kh\u00e1c nhau. C\u00e1c ch\u1ee9c n\u0103ng ch\u00ednh \u0111\u01b0\u1ee3c tri\u1ec3n khai \u1edf t\u1ea7ng Layer 0 bao g\u1ed3m: K\u1ebft n\u1ed1i v\u00e0 t\u01b0\u01a1ng t\u00e1c gi\u1eefa c\u00e1c blockchain kh\u00e1c nhau (Layer 1): Layer 0 t\u1ea1o \u0111i\u1ec1u ki\u1ec7n cho c\u00e1c blockchain \u0111\u1ed9c l\u1eadp c\u00f3 th\u1ec3 giao ti\u1ebfp, chia s\u1ebb d\u1eef li\u1ec7u ho\u1eb7c t\u00e0i s\u1ea3n, thay v\u00ec b\u1ecb c\u00f4 l\u1eadp nh\u01b0 tr\u01b0\u1edbc \u0111\u00e2y. T\u1ed1c \u0111\u1ed9 giao d\u1ecbch nhanh h\u01a1n, chi ph\u00ed r\u1ebb h\u01a1n: Nh\u1edd c\u1ea5u tr\u00fac thi\u1ebft k\u1ebf t\u1eeb t\u1ea7ng h\u1ea1 t\u1ea7ng, Layer 0 c\u00f3 th\u1ec3 h\u1ed7 tr\u1ee3 Layer 1 x\u1eed l\u00fd giao d\u1ecbch hi\u1ec7u qu\u1ea3 h\u01a1n, t\u1eeb \u0111\u00f3 gi\u1ea3m chi ph\u00ed v\u00e0 t\u0103ng throughput. Cung c\u1ea5p h\u1ea1 t\u1ea7ng \u0111\u1ec3 d\u1ec5 d\u00e0ng tri\u1ec3n khai blockchain m\u1edbi: Layer 0 th\u01b0\u1eddng cung c\u1ea5p c\u00f4ng c\u1ee5, SDK, framework \u0111\u1ec3 developers c\u00f3 th\u1ec3 t\u1ea1o ra Layer 1 c\u1ee7a ri\u00eang h\u1ecd m\u00e0 kh\u00f4ng ph\u1ea3i x\u00e2y l\u1ea1i t\u1eeb \u0111\u1ea7u. Nh\u1eefng d\u1ef1 \u00e1n ti\u00eau bi\u1ec3u c\u1ee7a Layer 0: Cosmos : V\u1edbi ki\u1ebfn tr\u00fac IBC (Inter-Blockchain Communication) , Cosmos cho ph\u00e9p c\u00e1c blockchain \u0111\u1ed9c l\u1eadp \u201cn\u00f3i chuy\u1ec7n\u201d v\u1edbi nhau d\u1ec5 d\u00e0ng. N\u1ed5i b\u1eadt v\u1edbi h\u1ec7 sinh th\u00e1i nh\u01b0 Osmosis, Oraichain... Polkadot : S\u1eed d\u1ee5ng m\u00f4 h\u00ecnh relay chain + parachains , gi\u00fap nhi\u1ec1u chain ch\u1ea1y song song, k\u1ebft n\u1ed1i m\u01b0\u1ee3t m\u00e0. Developer c\u00f3 th\u1ec3 build chain ri\u00eang th\u00f4ng qua framework Substrate . Avalanche : M\u1eb7c d\u00f9 th\u01b0\u1eddng \u0111\u01b0\u1ee3c nh\u1eafc l\u00e0 Layer 1, nh\u01b0ng ki\u1ebfn tr\u00fac multi-chain c\u1ee7a Avalanche (X-Chain, C-Chain, P-Chain) mang nhi\u1ec1u y\u1ebfu t\u1ed1 Layer 0. N\u00f3 cho ph\u00e9p kh\u1edfi t\u1ea1o subnet ri\u00eang cho t\u1eebng \u1ee9ng d\u1ee5ng. Cardano : D\u00f9 th\u01b0\u1eddng \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Layer 1, nh\u01b0ng m\u1ee5c ti\u00eau d\u00e0i h\u1ea1n c\u1ee7a Cardano l\u00e0 ph\u00e1t tri\u1ec3n th\u00e0nh m\u1ed9t n\u1ec1n t\u1ea3ng \u0111a chu\u1ed7i, h\u1ed7 tr\u1ee3 nhi\u1ec1u dApp v\u00e0 blockchain v\u1eadn h\u00e0nh song song. Layer 1 Th\u1ef1c thi (execution) v\u00e0 x\u00e1c nh\u1eadn cu\u1ed1i c\u00f9ng (final settlement) c\u1ee7a c\u00e1c giao d\u1ecbch. Layer 1 ch\u00ednh l\u00e0 t\u1ea7ng blockchain quen thu\u1ed9c nh\u1ea5t v\u1edbi t\u1ea5t c\u1ea3 ch\u00fang ta n\u01a1i di\u1ec5n ra vi\u1ec7c th\u1ef1c thi (execution) v\u00e0 x\u00e1c nh\u1eadn cu\u1ed1i c\u00f9ng (final settlement) c\u1ee7a c\u00e1c giao d\u1ecbch. C\u00e1c blockchain nh\u01b0 Bitcoin, Ethereum, BNB Chain, Solana, Sui, Aptos\u2026 \u0111\u1ec1u l\u00e0 nh\u1eefng v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh thu\u1ed9c Layer 1. \u1ede t\u1ea7ng n\u00e0y, m\u1ed7i blockchain s\u1ebd: T\u1ef1 x\u1eed l\u00fd giao d\u1ecbch c\u1ee7a ch\u00ednh m\u00ecnh Thi\u1ebft l\u1eadp c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn d\u1eef li\u1ec7u (consensus) th\u00f4ng qua c\u00e1c thu\u1eadt to\u00e1n nh\u01b0 Proof of Work (PoW) ho\u1eb7c Proof of Stake (PoS) .. Ghi d\u1eef li\u1ec7u giao d\u1ecbch l\u00ean chain \u0111\u1ec3 t\u1ea1o th\u00e0nh s\u1ed5 c\u00e1i b\u1ea5t bi\u1ebfn Layer 1 c\u0169ng l\u00e0 n\u01a1i xu\u1ea5t hi\u1ec7n tam gi\u00e1c b\u1ea5t kh\u1ea3 thi (blockchain trilemma) n\u1ed5i ti\u1ebfng. B\u1edfi v\u00ec M\u1ed9t blockchain kh\u00f3 c\u00f3 th\u1ec3 \u0111\u1ed3ng th\u1eddi \u0111\u1ea1t \u0111\u01b0\u1ee3c c\u1ea3 3 y\u1ebfu t\u1ed1: Scalability \u2013 kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng \u0111\u1ec3 x\u1eed l\u00fd nhi\u1ec1u giao d\u1ecbch Security \u2013 b\u1ea3o m\u1eadt ch\u1ed1ng l\u1ea1i t\u1ea5n c\u00f4ng Decentralization \u2013 ph\u00e2n quy\u1ec1n, kh\u00f4ng b\u1ecb ki\u1ec3m so\u00e1t b\u1edfi m\u1ed9t b\u00ean Th\u00f4ng th\u01b0\u1eddng, n\u1ebfu m\u1ed9t chain t\u0103ng t\u1ed1c \u0111\u1ed9 (scalability), th\u00ec ph\u1ea3i \u0111\u00e1nh \u0111\u1ed5i ph\u1ea7n n\u00e0o t\u00ednh phi t\u1eadp trung ho\u1eb7c b\u1ea3o m\u1eadt v\u00e0 ng\u01b0\u1ee3c l\u1ea1i. V\u00ed d\u1ee5: * Bitcoin \u01b0u ti\u00ean b\u1ea3o m\u1eadt v\u00e0 ph\u00e2n quy\u1ec1n \u2192 r\u1ea5t ch\u1eadm * Solana t\u1ed1i \u01b0u hi\u1ec7u su\u1ea5t cao \u2192 gi\u1ea3m ph\u1ea7n n\u00e0o t\u00ednh ph\u00e2n t\u00e1n Self-improvement in ethererum Nh\u00ecn v\u00e0o Ethereum Roadmap, ta th\u1ea5y Ethereum \u0111ang \u0111i theo h\u01b0\u1edbng t\u1ed1i \u01b0u ho\u00e1 t\u1eebng l\u1edbp c\u1ee7a h\u1ec7 th\u1ed1ng, m\u00e0 n\u1ed5i b\u1eadt nh\u1ea5t l\u00e0 SSF (Single Slot Finality) s\u1ebd l\u00e0 c\u01a1 ch\u1ebf s\u1ea3n xu\u1ea5t block m\u1edbi v\u1edbi m\u1ee5c ti\u00eau l\u00e0 t\u0103ng security + stability cho m\u1ea1ng l\u01b0\u1edbi. \u0110\u00e2y ch\u00ednh l\u00e0 trung t\u00e2m c\u1ee7a qu\u00e1 tr\u00ecnh n\u00e2ng c\u1ea5p c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn (consensus). DA (Data Availability) l\u00e0 v\u1ea5n \u0111\u1ec1 s\u1ed1ng c\u00f2n cho t\u01b0\u01a1ng lai c\u00e1c \u1ee9ng d\u1ee5ng, \u0111\u1eb7c bi\u1ec7t trong b\u1ed1i c\u1ea3nh Layer2 ph\u00e1t tri\u1ec3n m\u1ea1nh. Ethereum Layer1 bu\u1ed9c ph\u1ea3i gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n n\u00e0y \u0111\u1ec3 kh\u00f4ng tr\u1edf th\u00e0nh bottleneck. EVM th\u00ec v\u1eabn \u0111ang \u0111\u01b0\u1ee3c li\u00ean t\u1ee5c upgrade qua t\u1eebng b\u1ea3n c\u1eadp nh\u1eadt.. Developer activity M\u1ed9t trong nh\u1eefng \u0111i\u1ec1u ki\u1ec7n ti\u00ean quy\u1ebft \u0111\u1ec3 m\u1ed9t h\u1ec7 sinh th\u00e1i Layer1 \u0111\u01b0\u1ee3c ch\u1ea5p nh\u1eadn r\u1ed9ng r\u00e3i l\u00e0 s\u1ef1 hi\u1ec7n di\u1ec7n c\u1ee7a m\u1ed9t c\u1ed9ng \u0111\u1ed3ng l\u1eadp tr\u00ecnh vi\u00ean m\u1ea1nh m\u1ebd. N\u1ebfu kh\u00f4ng c\u00f3 c\u00e1c nh\u00e0 ph\u00e1t tri\u1ec3n x\u00e2y d\u1ef1ng s\u1ea3n ph\u1ea9m, s\u1ebd kh\u00f4ng c\u00f3 g\u00ec \u0111\u1ec3 ng\u01b0\u1eddi d\u00f9ng t\u01b0\u01a1ng t\u00e1c v\u00e0 s\u1eed d\u1ee5ng. Layer 2: Scaling based on Layer1 M\u1ed9t trong nh\u1eefng v\u1ea5n \u0111\u1ec1 l\u1edbn c\u1ee7a Ethereum l\u00e0 TPS (transaction per second) qu\u00e1 th\u1ea5p, ch\u1ec9 kho\u1ea3ng 15\u201345 giao d\u1ecbch m\u1ed7i gi\u00e2y. K\u1ebft qu\u1ea3 l\u00e0 Gas fee cao, tr\u1ea3i nghi\u1ec7m t\u1ec7 v\u00e0 c\u00e1c D\u1ef1 \u00e1n kh\u00f3 scale \u0111\u1ec3 c\u1ea3 h\u1ec7 sinh th\u00e1i ph\u00e1t tri\u1ec3n ch\u1eadm. V\u00ec v\u1eady ta c\u1ea7n m\u1ed9t gi\u1ea3i ph\u00e1p m\u1edf r\u1ed9ng v\u00e0 \u0111\u00f3 l\u00e0 l\u00fd do Layer 2 ra \u0111\u1eddi. Hi\u1ec3u \u0111\u01a1n gi\u1ea3n th\u00ec Layer 2 l\u00e0 c\u00e1c gi\u1ea3i ph\u00e1p m\u1edf r\u1ed9ng ch\u1ea1y song song v\u1edbi Layer 1 , ho\u1ea1t \u0111\u1ed9ng nh\u01b0 m\u1ed9t \u201cph\u1ee5 t\u00e1\u201d gi\u00fap x\u1eed l\u00fd giao d\u1ecbch nhanh v\u00e0 r\u1ebb h\u01a1n. Sau khi x\u1eed l\u00fd xong, k\u1ebft qu\u1ea3 s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a tr\u1edf l\u1ea1i Layer 1 \u0111\u1ec3 l\u01b0u tr\u1eef v\u0129nh vi\u1ec5n (final settlement). Layer 2 gi\u00fap Ethereum (v\u00e0 c\u00e1c Layer 1 kh\u00e1c) n\u00e2ng cao TPS m\u00e0 kh\u00f4ng ph\u1ea3i hy sinh b\u1ea3o m\u1eadt hay phi t\u1eadp trung M\u1ed9t s\u1ed1 d\u1ea1ng Layer 2 ph\u1ed5 bi\u1ebfn: zkRollup (Zero-Knowledge Rollup) : s\u1eed d\u1ee5ng b\u1eb1ng ch\u1ee9ng m\u1eadt m\u00e3 \u0111\u1ec3 ch\u1ee9ng minh giao d\u1ecbch h\u1ee3p l\u1ec7, r\u1ea5t b\u1ea3o m\u1eadt, d\u1eef li\u1ec7u n\u00e9n c\u1ef1c t\u1ed1t. Optimistic Rollup (opRollup) : gi\u1ea3 \u0111\u1ecbnh m\u1ecdi giao d\u1ecbch l\u00e0 h\u1ee3p l\u1ec7 Sidechain : chu\u1ed7i ch\u1ea1y song song, t\u1ef1 c\u00f3 c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn ri\u00eang, \u0111\u1ed9 an to\u00e0n ph\u1ee5 thu\u1ed9c v\u00e0o thi\u1ebft k\u1ebf t\u1eebng chain. Layer 3: Pure application layer \u0110\u00e2y c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 l\u1edbp \u1ee9ng d\u1ee5ng, l\u00e0 m\u1ed9t l\u1edbp blockchain \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng tr\u00ean Layer 2 (v\u00e0 gi\u00e1n ti\u1ebfp tr\u00ean Layer 1). N\u00f3 t\u1eadp trung v\u00e0o vi\u1ec7c cung c\u1ea5p m\u00f4i tr\u01b0\u1eddng cho c\u00e1c \u1ee9ng d\u1ee5ng phi t\u1eadp trung (DApps) Hi\u1ec7n t\u1ea1i, h\u1ea7u h\u1ebft c\u00e1c layer 3 \u0111\u1ec1u \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng tr\u00ean Ethereum: Vitalik t\u1eebng chia s\u1ebb m\u1ed9t v\u00e0i \u0111\u1ecbnh ngh\u0129a kh\u00e1 k\u1ef9 thu\u1eadt v\u1ec1 Layer 3 , d\u00f9 kh\u00f4ng n\u00f3i r\u00f5 n\u00f3 s\u1ebd \u201cd\u00f9ng \u0111\u1ec3 l\u00e0m g\u00ec\u201d trong th\u1ef1c t\u1ebf. Nh\u01b0ng t\u1eeb b\u00e0i vi\u1ebft \u0111\u00f3, c\u00f3 th\u1ec3 t\u00f3m g\u1ecdn th\u00e0nh 3 g\u00f3c nh\u00ecn v\u1ec1 L3 nh\u01b0 sau: L2 \u0111\u1ec3 scale, L3 \u0111\u1ec3 t\u00f9y bi\u1ebfn (custom features): \u1ede g\u00f3c nh\u00ecn n\u00e0y, Layer2 \u0111\u00f3ng vai tr\u00f2 m\u1edf r\u1ed9ng TPS (throughput), c\u00f2n Layer3 sinh ra \u0111\u1ec3 ph\u1ee5c v\u1ee5 c\u00e1c nhu c\u1ea7u ri\u00eang v\u00ed d\u1ee5 nh\u01b0 privacy, compliance , ho\u1eb7c c\u00e1c t\u00ednh n\u0103ng \u0111\u1eb7c th\u00f9 c\u1ee7a Dapp. L2 th\u00ec lo ph\u1ea7n performance chung, c\u00f2n L3 l\u00e0 sandbox cho m\u1ed7i \u1ee9ng d\u1ee5ng t\u1ef1 t\u1ed1i \u01b0u theo style ri\u00eang. L2 = general scaling, L3 = customized scaling: Vitalik \u0111\u01b0a ra h\u01b0\u1edbng ph\u00e2n bi\u1ec7t theo d\u1ea1ng scaling. L2 th\u00ec ki\u1ec3u EVM-compatible , ph\u1ee5c v\u1ee5 chung cho m\u1ecdi lo\u1ea1i dApp. C\u00f2n L3 th\u00ec thi\u00ean v\u1ec1 ki\u1ec3u application-specific , t\u1ee9c m\u1ed7i app c\u00f3 th\u1ec3 t\u1ef1 ch\u1ecdn c\u00e1ch t\u00ednh to\u00e1n, format data ri\u00eang, th\u1eadm ch\u00ed x\u00e0i non-EVM VM. L2 = trustless (rollups), L3 = weak trust (validiums): \u1ede vision n\u00e0y, L2 th\u00ec l\u00e0 fully trustless, gi\u1ed1ng nh\u01b0 rollup: m\u1ecdi th\u1ee9 \u0111\u01b0\u1ee3c x\u00e1c minh v\u00e0 d\u1eef li\u1ec7u lu\u00f4n c\u00f4ng khai. C\u00f2n L3 s\u1ebd l\u00e0 semi-trust , nh\u01b0 Validium v\u1eabn d\u00f9ng SNARK \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o \u0111\u00fang sai, nh\u01b0ng ph\u1ea7n data availability th\u00ec ph\u1ee5 thu\u1ed9c v\u00e0o 1 b\u00ean th\u1ee9 3 ho\u1eb7c h\u1ed9i \u0111\u1ed3ng tin c\u1eady. Vitalik cho r\u1eb1ng validium b\u1ecb undervalued , d\u00f9 n\u00f3 c\u1ef1c k\u1ef3 h\u1ee3p v\u1edbi c\u00e1c use case enterprise, c\u00e1c m\u00f4 h\u00ecnh ki\u1ec3u doanh nghi\u1ec7p ch\u1ec9 c\u1ea7n \u0111\u1ea3m b\u1ea3o d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c ch\u1ee9ng th\u1ef1c, nh\u01b0ng kh\u00f4ng c\u1ea7n ph\u1ea3i c\u00f4ng khai to\u00e0n b\u1ed9 transaction ra public.","title":"Layer 0, 1, 2, 3 - Hi\u1ec3u Ki\u1ebfn Tr\u00fac Blockchain"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/01_00_Blockchain%20layers/#layer-0-1-2-3-hieu-kien-truc-blockchain","text":"M\u1ee5c ti\u00eau Lesson: Gi\u1ea3i th\u00edch m\u00f4 h\u00ecnh ki\u1ebfn tr\u00fac ph\u00e2n l\u1edbp c\u1ee7a Blockchain, t\u1eadp trung v\u00e0o c\u00e1ch c\u00e1c gi\u1ea3i ph\u00e1p Layer 2 v\u00e0 Layer 3 gi\u00fap c\u1ea3i thi\u1ec7n kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng v\u00e0 hi\u1ec7u su\u1ea5t c\u1ee7a Layer 1. What are Layer 1 to Layer 3 doing?","title":"Layer 0, 1, 2, 3 - Hi\u1ec3u Ki\u1ebfn Tr\u00fac Blockchain"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/01_00_Blockchain%20layers/#why-do-we-need-so-many-layers","text":"\u201cLayer\u201d hi\u1ec3u \u0111\u01a1n gi\u1ea3n l\u00e0 t\u1ea7ng trong h\u1ec7 sinh th\u00e1i blockchain, gi\u1ed1ng nh\u01b0 c\u00e1ch m\u1ea1ng Web2 c\u00f3 m\u00f4 h\u00ecnh 4 t\u1ea7ng TCP/IP: m\u1ed7i t\u1ea7ng lo m\u1ed9t vi\u1ec7c, t\u1eeb g\u1eedi g\u00f3i tin cho t\u1edbi hi\u1ec3n th\u1ecb web. Trong blockchain, c\u0169ng v\u1eady. H\u1ec7 sinh th\u00e1i th\u01b0\u1eddng \u0111\u01b0\u1ee3c chia l\u00e0m nhi\u1ec1u t\u1ea7ng, v\u00e0 m\u1ed7i t\u1ea7ng l\u00e0 \u0111\u1ea5t s\u1ed1ng c\u1ee7a h\u00e0ng lo\u1ea1t d\u1ef1 \u00e1n kh\u00e1c nhau. H\u00ecnh tr\u00ean minh ho\u1ea1 v\u1ec1 c\u00e1c layers. Bitcoin v\u00e0 Ethereum \u01b0u ti\u00ean decentralization + security l\u00ean h\u00e0ng \u0111\u1ea7u. Ch\u00ednh nh\u1edd \u0111\u00f3 m\u00e0 ch\u00fang \u0111\u1ea3m b\u1ea3o \u0111\u01b0\u1ee3c t\u00ednh open, neutral, anti-censorship. Nh\u01b0ng \u0111\u1ed5i l\u1ea1i, kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng (scalability) s\u1ebd k\u00e9m. V\u00ec th\u1ebf n\u00ean devs m\u1edbi t\u00ecm m\u1ecdi c\u00e1ch \u0111\u1ec3 scale blockchain l\u00ean m\u00e0 kh\u00f4ng ph\u00e1 v\u1ee1 trilemma. M\u1ed9t h\u01b0\u1edbng ph\u1ed5 bi\u1ebfn nh\u1ea5t l\u00e0 \u0111\u01b0a ph\u1ea7n t\u00ednh to\u00e1n ra off-chain (ngo\u00e0i chain), ch\u1ec9 \u0111\u1ec3 ph\u1ea7n x\u00e1c minh v\u00e0 l\u01b0u tr\u1eef l\u1ea1i on-chain. \u0110\u00e2y ch\u00ednh l\u00e0 l\u00fd do ra \u0111\u1eddi c\u1ee7a Layer2. B\u00ean d\u01b0\u1edbi l\u00e0 s\u01a1 \u0111\u1ed3 ki\u1ebfn tr\u00fac ph\u00e2n t\u1ea7ng:","title":"Why do we need so many layers?"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/01_00_Blockchain%20layers/#layer-0-kha-nang-tuong-tac-lien-chuoi-inter-chain-interactions","text":"Ch\u00fang ta s\u1ebd b\u1eaft \u0111\u1ea7u ph\u00e2n t\u00edch t\u1eeb t\u1ea7ng th\u1ea5p nh\u1ea5t trong ki\u1ebfn tr\u00fac Web3 l\u00e0 Layer 0. Layer 0 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c xem nh\u01b0 l\u00e0 t\u1ea7ng v\u1eadt l\u00fd (physical layer) trong m\u00f4 h\u00ecnh Internet truy\u1ec1n th\u1ed1ng. V\u00ec Layer 0 \u0111\u00f3ng vai tr\u00f2 l\u00e0 h\u1ea1 t\u1ea7ng li\u00ean k\u1ebft v\u00e0 h\u1ed7 tr\u1ee3 t\u01b0\u01a1ng t\u00e1c gi\u1eefa nhi\u1ec1u Layer 1 kh\u00e1c nhau. C\u00e1c ch\u1ee9c n\u0103ng ch\u00ednh \u0111\u01b0\u1ee3c tri\u1ec3n khai \u1edf t\u1ea7ng Layer 0 bao g\u1ed3m: K\u1ebft n\u1ed1i v\u00e0 t\u01b0\u01a1ng t\u00e1c gi\u1eefa c\u00e1c blockchain kh\u00e1c nhau (Layer 1): Layer 0 t\u1ea1o \u0111i\u1ec1u ki\u1ec7n cho c\u00e1c blockchain \u0111\u1ed9c l\u1eadp c\u00f3 th\u1ec3 giao ti\u1ebfp, chia s\u1ebb d\u1eef li\u1ec7u ho\u1eb7c t\u00e0i s\u1ea3n, thay v\u00ec b\u1ecb c\u00f4 l\u1eadp nh\u01b0 tr\u01b0\u1edbc \u0111\u00e2y. T\u1ed1c \u0111\u1ed9 giao d\u1ecbch nhanh h\u01a1n, chi ph\u00ed r\u1ebb h\u01a1n: Nh\u1edd c\u1ea5u tr\u00fac thi\u1ebft k\u1ebf t\u1eeb t\u1ea7ng h\u1ea1 t\u1ea7ng, Layer 0 c\u00f3 th\u1ec3 h\u1ed7 tr\u1ee3 Layer 1 x\u1eed l\u00fd giao d\u1ecbch hi\u1ec7u qu\u1ea3 h\u01a1n, t\u1eeb \u0111\u00f3 gi\u1ea3m chi ph\u00ed v\u00e0 t\u0103ng throughput. Cung c\u1ea5p h\u1ea1 t\u1ea7ng \u0111\u1ec3 d\u1ec5 d\u00e0ng tri\u1ec3n khai blockchain m\u1edbi: Layer 0 th\u01b0\u1eddng cung c\u1ea5p c\u00f4ng c\u1ee5, SDK, framework \u0111\u1ec3 developers c\u00f3 th\u1ec3 t\u1ea1o ra Layer 1 c\u1ee7a ri\u00eang h\u1ecd m\u00e0 kh\u00f4ng ph\u1ea3i x\u00e2y l\u1ea1i t\u1eeb \u0111\u1ea7u. Nh\u1eefng d\u1ef1 \u00e1n ti\u00eau bi\u1ec3u c\u1ee7a Layer 0: Cosmos : V\u1edbi ki\u1ebfn tr\u00fac IBC (Inter-Blockchain Communication) , Cosmos cho ph\u00e9p c\u00e1c blockchain \u0111\u1ed9c l\u1eadp \u201cn\u00f3i chuy\u1ec7n\u201d v\u1edbi nhau d\u1ec5 d\u00e0ng. N\u1ed5i b\u1eadt v\u1edbi h\u1ec7 sinh th\u00e1i nh\u01b0 Osmosis, Oraichain... Polkadot : S\u1eed d\u1ee5ng m\u00f4 h\u00ecnh relay chain + parachains , gi\u00fap nhi\u1ec1u chain ch\u1ea1y song song, k\u1ebft n\u1ed1i m\u01b0\u1ee3t m\u00e0. Developer c\u00f3 th\u1ec3 build chain ri\u00eang th\u00f4ng qua framework Substrate . Avalanche : M\u1eb7c d\u00f9 th\u01b0\u1eddng \u0111\u01b0\u1ee3c nh\u1eafc l\u00e0 Layer 1, nh\u01b0ng ki\u1ebfn tr\u00fac multi-chain c\u1ee7a Avalanche (X-Chain, C-Chain, P-Chain) mang nhi\u1ec1u y\u1ebfu t\u1ed1 Layer 0. N\u00f3 cho ph\u00e9p kh\u1edfi t\u1ea1o subnet ri\u00eang cho t\u1eebng \u1ee9ng d\u1ee5ng. Cardano : D\u00f9 th\u01b0\u1eddng \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Layer 1, nh\u01b0ng m\u1ee5c ti\u00eau d\u00e0i h\u1ea1n c\u1ee7a Cardano l\u00e0 ph\u00e1t tri\u1ec3n th\u00e0nh m\u1ed9t n\u1ec1n t\u1ea3ng \u0111a chu\u1ed7i, h\u1ed7 tr\u1ee3 nhi\u1ec1u dApp v\u00e0 blockchain v\u1eadn h\u00e0nh song song.","title":"Layer 0 \u2013 kh\u1ea3 n\u0103ng t\u01b0\u01a1ng t\u00e1c li\u00ean chu\u1ed7i( inter-chain interactions)"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/01_00_Blockchain%20layers/#layer-1-thuc-thi-execution-va-xac-nhan-cuoi-cung-final-settlement-cua-cac-giao-dich","text":"Layer 1 ch\u00ednh l\u00e0 t\u1ea7ng blockchain quen thu\u1ed9c nh\u1ea5t v\u1edbi t\u1ea5t c\u1ea3 ch\u00fang ta n\u01a1i di\u1ec5n ra vi\u1ec7c th\u1ef1c thi (execution) v\u00e0 x\u00e1c nh\u1eadn cu\u1ed1i c\u00f9ng (final settlement) c\u1ee7a c\u00e1c giao d\u1ecbch. C\u00e1c blockchain nh\u01b0 Bitcoin, Ethereum, BNB Chain, Solana, Sui, Aptos\u2026 \u0111\u1ec1u l\u00e0 nh\u1eefng v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh thu\u1ed9c Layer 1. \u1ede t\u1ea7ng n\u00e0y, m\u1ed7i blockchain s\u1ebd: T\u1ef1 x\u1eed l\u00fd giao d\u1ecbch c\u1ee7a ch\u00ednh m\u00ecnh Thi\u1ebft l\u1eadp c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn d\u1eef li\u1ec7u (consensus) th\u00f4ng qua c\u00e1c thu\u1eadt to\u00e1n nh\u01b0 Proof of Work (PoW) ho\u1eb7c Proof of Stake (PoS) .. Ghi d\u1eef li\u1ec7u giao d\u1ecbch l\u00ean chain \u0111\u1ec3 t\u1ea1o th\u00e0nh s\u1ed5 c\u00e1i b\u1ea5t bi\u1ebfn Layer 1 c\u0169ng l\u00e0 n\u01a1i xu\u1ea5t hi\u1ec7n tam gi\u00e1c b\u1ea5t kh\u1ea3 thi (blockchain trilemma) n\u1ed5i ti\u1ebfng. B\u1edfi v\u00ec M\u1ed9t blockchain kh\u00f3 c\u00f3 th\u1ec3 \u0111\u1ed3ng th\u1eddi \u0111\u1ea1t \u0111\u01b0\u1ee3c c\u1ea3 3 y\u1ebfu t\u1ed1: Scalability \u2013 kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng \u0111\u1ec3 x\u1eed l\u00fd nhi\u1ec1u giao d\u1ecbch Security \u2013 b\u1ea3o m\u1eadt ch\u1ed1ng l\u1ea1i t\u1ea5n c\u00f4ng Decentralization \u2013 ph\u00e2n quy\u1ec1n, kh\u00f4ng b\u1ecb ki\u1ec3m so\u00e1t b\u1edfi m\u1ed9t b\u00ean Th\u00f4ng th\u01b0\u1eddng, n\u1ebfu m\u1ed9t chain t\u0103ng t\u1ed1c \u0111\u1ed9 (scalability), th\u00ec ph\u1ea3i \u0111\u00e1nh \u0111\u1ed5i ph\u1ea7n n\u00e0o t\u00ednh phi t\u1eadp trung ho\u1eb7c b\u1ea3o m\u1eadt v\u00e0 ng\u01b0\u1ee3c l\u1ea1i. V\u00ed d\u1ee5: * Bitcoin \u01b0u ti\u00ean b\u1ea3o m\u1eadt v\u00e0 ph\u00e2n quy\u1ec1n \u2192 r\u1ea5t ch\u1eadm * Solana t\u1ed1i \u01b0u hi\u1ec7u su\u1ea5t cao \u2192 gi\u1ea3m ph\u1ea7n n\u00e0o t\u00ednh ph\u00e2n t\u00e1n","title":"Layer 1 Th\u1ef1c thi (execution) v\u00e0 x\u00e1c nh\u1eadn cu\u1ed1i c\u00f9ng (final settlement) c\u1ee7a c\u00e1c giao d\u1ecbch."},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/01_00_Blockchain%20layers/#self-improvement-in-ethererum","text":"Nh\u00ecn v\u00e0o Ethereum Roadmap, ta th\u1ea5y Ethereum \u0111ang \u0111i theo h\u01b0\u1edbng t\u1ed1i \u01b0u ho\u00e1 t\u1eebng l\u1edbp c\u1ee7a h\u1ec7 th\u1ed1ng, m\u00e0 n\u1ed5i b\u1eadt nh\u1ea5t l\u00e0 SSF (Single Slot Finality) s\u1ebd l\u00e0 c\u01a1 ch\u1ebf s\u1ea3n xu\u1ea5t block m\u1edbi v\u1edbi m\u1ee5c ti\u00eau l\u00e0 t\u0103ng security + stability cho m\u1ea1ng l\u01b0\u1edbi. \u0110\u00e2y ch\u00ednh l\u00e0 trung t\u00e2m c\u1ee7a qu\u00e1 tr\u00ecnh n\u00e2ng c\u1ea5p c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn (consensus). DA (Data Availability) l\u00e0 v\u1ea5n \u0111\u1ec1 s\u1ed1ng c\u00f2n cho t\u01b0\u01a1ng lai c\u00e1c \u1ee9ng d\u1ee5ng, \u0111\u1eb7c bi\u1ec7t trong b\u1ed1i c\u1ea3nh Layer2 ph\u00e1t tri\u1ec3n m\u1ea1nh. Ethereum Layer1 bu\u1ed9c ph\u1ea3i gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n n\u00e0y \u0111\u1ec3 kh\u00f4ng tr\u1edf th\u00e0nh bottleneck. EVM th\u00ec v\u1eabn \u0111ang \u0111\u01b0\u1ee3c li\u00ean t\u1ee5c upgrade qua t\u1eebng b\u1ea3n c\u1eadp nh\u1eadt..","title":"Self-improvement in ethererum"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/01_00_Blockchain%20layers/#developer-activity","text":"M\u1ed9t trong nh\u1eefng \u0111i\u1ec1u ki\u1ec7n ti\u00ean quy\u1ebft \u0111\u1ec3 m\u1ed9t h\u1ec7 sinh th\u00e1i Layer1 \u0111\u01b0\u1ee3c ch\u1ea5p nh\u1eadn r\u1ed9ng r\u00e3i l\u00e0 s\u1ef1 hi\u1ec7n di\u1ec7n c\u1ee7a m\u1ed9t c\u1ed9ng \u0111\u1ed3ng l\u1eadp tr\u00ecnh vi\u00ean m\u1ea1nh m\u1ebd. N\u1ebfu kh\u00f4ng c\u00f3 c\u00e1c nh\u00e0 ph\u00e1t tri\u1ec3n x\u00e2y d\u1ef1ng s\u1ea3n ph\u1ea9m, s\u1ebd kh\u00f4ng c\u00f3 g\u00ec \u0111\u1ec3 ng\u01b0\u1eddi d\u00f9ng t\u01b0\u01a1ng t\u00e1c v\u00e0 s\u1eed d\u1ee5ng.","title":"Developer activity"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/01_00_Blockchain%20layers/#layer-2-scaling-based-on-layer1","text":"M\u1ed9t trong nh\u1eefng v\u1ea5n \u0111\u1ec1 l\u1edbn c\u1ee7a Ethereum l\u00e0 TPS (transaction per second) qu\u00e1 th\u1ea5p, ch\u1ec9 kho\u1ea3ng 15\u201345 giao d\u1ecbch m\u1ed7i gi\u00e2y. K\u1ebft qu\u1ea3 l\u00e0 Gas fee cao, tr\u1ea3i nghi\u1ec7m t\u1ec7 v\u00e0 c\u00e1c D\u1ef1 \u00e1n kh\u00f3 scale \u0111\u1ec3 c\u1ea3 h\u1ec7 sinh th\u00e1i ph\u00e1t tri\u1ec3n ch\u1eadm. V\u00ec v\u1eady ta c\u1ea7n m\u1ed9t gi\u1ea3i ph\u00e1p m\u1edf r\u1ed9ng v\u00e0 \u0111\u00f3 l\u00e0 l\u00fd do Layer 2 ra \u0111\u1eddi. Hi\u1ec3u \u0111\u01a1n gi\u1ea3n th\u00ec Layer 2 l\u00e0 c\u00e1c gi\u1ea3i ph\u00e1p m\u1edf r\u1ed9ng ch\u1ea1y song song v\u1edbi Layer 1 , ho\u1ea1t \u0111\u1ed9ng nh\u01b0 m\u1ed9t \u201cph\u1ee5 t\u00e1\u201d gi\u00fap x\u1eed l\u00fd giao d\u1ecbch nhanh v\u00e0 r\u1ebb h\u01a1n. Sau khi x\u1eed l\u00fd xong, k\u1ebft qu\u1ea3 s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a tr\u1edf l\u1ea1i Layer 1 \u0111\u1ec3 l\u01b0u tr\u1eef v\u0129nh vi\u1ec5n (final settlement). Layer 2 gi\u00fap Ethereum (v\u00e0 c\u00e1c Layer 1 kh\u00e1c) n\u00e2ng cao TPS m\u00e0 kh\u00f4ng ph\u1ea3i hy sinh b\u1ea3o m\u1eadt hay phi t\u1eadp trung M\u1ed9t s\u1ed1 d\u1ea1ng Layer 2 ph\u1ed5 bi\u1ebfn: zkRollup (Zero-Knowledge Rollup) : s\u1eed d\u1ee5ng b\u1eb1ng ch\u1ee9ng m\u1eadt m\u00e3 \u0111\u1ec3 ch\u1ee9ng minh giao d\u1ecbch h\u1ee3p l\u1ec7, r\u1ea5t b\u1ea3o m\u1eadt, d\u1eef li\u1ec7u n\u00e9n c\u1ef1c t\u1ed1t. Optimistic Rollup (opRollup) : gi\u1ea3 \u0111\u1ecbnh m\u1ecdi giao d\u1ecbch l\u00e0 h\u1ee3p l\u1ec7 Sidechain : chu\u1ed7i ch\u1ea1y song song, t\u1ef1 c\u00f3 c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn ri\u00eang, \u0111\u1ed9 an to\u00e0n ph\u1ee5 thu\u1ed9c v\u00e0o thi\u1ebft k\u1ebf t\u1eebng chain.","title":"Layer 2: Scaling based on Layer1"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/01_00_Blockchain%20layers/#layer-3-pure-application-layer","text":"\u0110\u00e2y c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 l\u1edbp \u1ee9ng d\u1ee5ng, l\u00e0 m\u1ed9t l\u1edbp blockchain \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng tr\u00ean Layer 2 (v\u00e0 gi\u00e1n ti\u1ebfp tr\u00ean Layer 1). N\u00f3 t\u1eadp trung v\u00e0o vi\u1ec7c cung c\u1ea5p m\u00f4i tr\u01b0\u1eddng cho c\u00e1c \u1ee9ng d\u1ee5ng phi t\u1eadp trung (DApps) Hi\u1ec7n t\u1ea1i, h\u1ea7u h\u1ebft c\u00e1c layer 3 \u0111\u1ec1u \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng tr\u00ean Ethereum: Vitalik t\u1eebng chia s\u1ebb m\u1ed9t v\u00e0i \u0111\u1ecbnh ngh\u0129a kh\u00e1 k\u1ef9 thu\u1eadt v\u1ec1 Layer 3 , d\u00f9 kh\u00f4ng n\u00f3i r\u00f5 n\u00f3 s\u1ebd \u201cd\u00f9ng \u0111\u1ec3 l\u00e0m g\u00ec\u201d trong th\u1ef1c t\u1ebf. Nh\u01b0ng t\u1eeb b\u00e0i vi\u1ebft \u0111\u00f3, c\u00f3 th\u1ec3 t\u00f3m g\u1ecdn th\u00e0nh 3 g\u00f3c nh\u00ecn v\u1ec1 L3 nh\u01b0 sau: L2 \u0111\u1ec3 scale, L3 \u0111\u1ec3 t\u00f9y bi\u1ebfn (custom features): \u1ede g\u00f3c nh\u00ecn n\u00e0y, Layer2 \u0111\u00f3ng vai tr\u00f2 m\u1edf r\u1ed9ng TPS (throughput), c\u00f2n Layer3 sinh ra \u0111\u1ec3 ph\u1ee5c v\u1ee5 c\u00e1c nhu c\u1ea7u ri\u00eang v\u00ed d\u1ee5 nh\u01b0 privacy, compliance , ho\u1eb7c c\u00e1c t\u00ednh n\u0103ng \u0111\u1eb7c th\u00f9 c\u1ee7a Dapp. L2 th\u00ec lo ph\u1ea7n performance chung, c\u00f2n L3 l\u00e0 sandbox cho m\u1ed7i \u1ee9ng d\u1ee5ng t\u1ef1 t\u1ed1i \u01b0u theo style ri\u00eang. L2 = general scaling, L3 = customized scaling: Vitalik \u0111\u01b0a ra h\u01b0\u1edbng ph\u00e2n bi\u1ec7t theo d\u1ea1ng scaling. L2 th\u00ec ki\u1ec3u EVM-compatible , ph\u1ee5c v\u1ee5 chung cho m\u1ecdi lo\u1ea1i dApp. C\u00f2n L3 th\u00ec thi\u00ean v\u1ec1 ki\u1ec3u application-specific , t\u1ee9c m\u1ed7i app c\u00f3 th\u1ec3 t\u1ef1 ch\u1ecdn c\u00e1ch t\u00ednh to\u00e1n, format data ri\u00eang, th\u1eadm ch\u00ed x\u00e0i non-EVM VM. L2 = trustless (rollups), L3 = weak trust (validiums): \u1ede vision n\u00e0y, L2 th\u00ec l\u00e0 fully trustless, gi\u1ed1ng nh\u01b0 rollup: m\u1ecdi th\u1ee9 \u0111\u01b0\u1ee3c x\u00e1c minh v\u00e0 d\u1eef li\u1ec7u lu\u00f4n c\u00f4ng khai. C\u00f2n L3 s\u1ebd l\u00e0 semi-trust , nh\u01b0 Validium v\u1eabn d\u00f9ng SNARK \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o \u0111\u00fang sai, nh\u01b0ng ph\u1ea7n data availability th\u00ec ph\u1ee5 thu\u1ed9c v\u00e0o 1 b\u00ean th\u1ee9 3 ho\u1eb7c h\u1ed9i \u0111\u1ed3ng tin c\u1eady. Vitalik cho r\u1eb1ng validium b\u1ecb undervalued , d\u00f9 n\u00f3 c\u1ef1c k\u1ef3 h\u1ee3p v\u1edbi c\u00e1c use case enterprise, c\u00e1c m\u00f4 h\u00ecnh ki\u1ec3u doanh nghi\u1ec7p ch\u1ec9 c\u1ea7n \u0111\u1ea3m b\u1ea3o d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c ch\u1ee9ng th\u1ef1c, nh\u01b0ng kh\u00f4ng c\u1ea7n ph\u1ea3i c\u00f4ng khai to\u00e0n b\u1ed9 transaction ra public.","title":"Layer 3: Pure application layer"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/01_01_blockchain_dilemma/","text":"The blockchain trilemma Once we understand the underlying knowledge, we will learn the blockchain trilemma. The blockchain trilemma refers to the widely held belief that, at any given time, decentralized networks can only offer two of the three benefits of decentralization, security, and scalability. For example, Ethereum has decentralization and security, but not scalability. Solving this problem is really the domain of layer-one engineers, so we are unlikely to have a strong opinion on which chain truly has the winning technology. But be familiar with this tension, as it will help us better categorize different layer-one projects. Reference https://www.gemini.com/cryptopedia/blockchain-trilemma-decentralization-scalability-definition#section-what-is-scalability https://academy.shrimpy.io/post/what-is-the-blockchain-trilemma","title":"The blockchain trilemma"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/01_01_blockchain_dilemma/#the-blockchain-trilemma","text":"Once we understand the underlying knowledge, we will learn the blockchain trilemma. The blockchain trilemma refers to the widely held belief that, at any given time, decentralized networks can only offer two of the three benefits of decentralization, security, and scalability. For example, Ethereum has decentralization and security, but not scalability. Solving this problem is really the domain of layer-one engineers, so we are unlikely to have a strong opinion on which chain truly has the winning technology. But be familiar with this tension, as it will help us better categorize different layer-one projects.","title":"The blockchain trilemma"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/01_01_blockchain_dilemma/#reference","text":"https://www.gemini.com/cryptopedia/blockchain-trilemma-decentralization-scalability-definition#section-what-is-scalability https://academy.shrimpy.io/post/what-is-the-blockchain-trilemma","title":"Reference"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/02_EVM/","text":"Ethereum Virtual Machine (EVM) Diagram adapted from Ethereum EVM illustrated The EVM is the part of Ethereum that handles the deployment and execution of smart contracts. In reality, a simple value transfer transaction from one EOA to another does not require the EVM, but everything else will involve state updates computed by the EVM. From a higher level perspective, the EVM running on the Ethereum blockchain can be viewed as a global decentralized computer containing millions of executable objects, each with its own permanent data storage. \u2014Andreas Antonopoulos and Dr. Gavin Wood, Mastering Ethereum T\u1ea1m d\u1ecbch: EVM l\u00e0 ph\u1ea7n trong Ethereum ch\u1ecbu tr\u00e1ch nhi\u1ec7m tri\u1ec3n khai v\u00e0 th\u1ef1c thi c\u00e1c smart contract. Th\u1ef1c t\u1ebf, n\u1ebfu ch\u1ec9 \u0111\u01a1n gi\u1ea3n chuy\u1ec3n gi\u00e1 tr\u1ecb (value transfer) t\u1eeb m\u1ed9t v\u00ed th\u00f4ng th\u01b0\u1eddng (EOA) sang v\u00ed kh\u00e1c th\u00ec kh\u00f4ng c\u1ea7n \u0111\u1ebfn EVM. Nh\u01b0ng b\u1ea5t k\u1ef3 h\u00e0nh \u0111\u1ed9ng n\u00e0o kh\u00e1c \u0111\u1ec1u s\u1ebd li\u00ean quan \u0111\u1ebfn vi\u1ec7c c\u1eadp nh\u1eadt tr\u1ea1ng th\u00e1i (state) do EVM t\u00ednh to\u00e1n. N\u1ebfu nh\u00ecn \u1edf g\u00f3c \u0111\u1ed9 tr\u1eebu t\u01b0\u1ee3ng h\u01a1n, EVM ch\u1ea1y tr\u00ean blockchain Ethereum c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c xem nh\u01b0 m\u1ed9t chi\u1ebfc m\u00e1y t\u00ednh phi t\u1eadp trung to\u00e0n c\u1ea7u, n\u01a1i ch\u1ee9a h\u00e0ng tri\u1ec7u \u201c\u0111\u1ed1i t\u01b0\u1ee3ng th\u1ef1c thi\u201d (executable objects) m\u1ed7i \u0111\u1ed1i t\u01b0\u1ee3ng c\u00f3 kh\u00f4ng gian l\u01b0u tr\u1eef d\u1eef li\u1ec7u ri\u00eang v\u00e0 t\u1ed3n t\u1ea1i v\u0129nh vi\u1ec5n. N\u1ebfu b\u1ea1n qu\u00e1 l\u01b0\u1eddi \u0111\u1ecdc \ud83e\udd23 th\u00ec gi\u1ea3i th\u00edch ng\u1eafn g\u1ecdn l\u00e0 Ethereum Virtual Machine (EVM) c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c hi\u1ec3u \u0111\u01a1n gi\u1ea3n l\u00e0 m\u1ed9t m\u00f4i tr\u01b0\u1eddng \u0111\u1ed9c l\u1eadp, \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf ri\u00eang \u0111\u1ec3 x\u1eed l\u00fd c\u00e1c giao d\u1ecbch li\u00ean quan \u0111\u1ebfn smart contract, v\u00e0 quan tr\u1ecdng h\u01a1n c\u1ea3 l\u00e0 x\u00e1c \u0111\u1ecbnh state t\u1ed5ng th\u1ec3 c\u1ee7a blockchain Ethereum sau m\u1ed7i block m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o ra. B\u1ea1n c\u00f3 th\u1ec3 t\u01b0\u1edfng t\u01b0\u1ee3ng EVM nh\u01b0 m\u1ed9t chi\u1ebfc m\u00e1y t\u00ednh chuy\u00ean x\u1eed l\u00fd c\u00e1c giao d\u1ecbch smart contract, \u0111\u1ed3ng th\u1eddi \u0111\u1ecbnh ngh\u0129a c\u00e1c quy t\u1eafc thay \u0111\u1ed5i tr\u1ea1ng th\u00e1i c\u1ee7a m\u1ea1ng Ethereum theo t\u1eebng block. Tuy nhi\u00ean, kh\u00e1c v\u1edbi m\u00e1y t\u00ednh v\u1eadt l\u00fd, EVM l\u00e0 m\u1ed9t m\u00e1y \u1ea3o n\u00f3 kh\u00f4ng ph\u1ee5 thu\u1ed9c v\u00e0o h\u1ec7 \u0111i\u1ec1u h\u00e0nh c\u1ee5 th\u1ec3 hay v\u1ecb tr\u00ed \u0111\u1ecba l\u00fd n\u00e0o c\u1ea3. Ch\u00ednh v\u00ec v\u1eady, b\u1ea5t k\u1ef3 ai \u1edf b\u1ea5t k\u1ef3 \u0111\u00e2u \u0111\u1ec1u c\u00f3 th\u1ec3 truy c\u1eadp v\u00e0 v\u1eadn h\u00e0nh m\u1ed9t node Ethereum \u0111\u1ec3 ch\u1ea1y EVM. 1. Deep dive more about EVM C\u00f3 nhi\u1ec1u c\u00e1ch kh\u00e1u nhau \u0111\u1ec3 m\u1ecdi ng\u01b0\u1eddi m\u00f4 t\u1ea3 v\u1ec1 EVM. Nh\u01b0 l\u00e0 EVM nh\u01b0 l\u00e0 m\u1ed9t Vitural Machine ( m\u00e1y \u1ea3o) EVM l\u00e0 State machine Hay EVM l\u00e0 Quasi-Turing Complete Machine M\u1ed9t s\u1ed1 thu\u1eadt ng\u1eef \u0111\u00e2y s\u1ebd nghe c\u00f3 v\u1ebb l\u1ea1 nh\u01b0ng th\u1ef1c ra m\u1ed7i \u0111\u1ecbnh ngh\u0129a tr\u00ean \u0111\u1ec1u theo t\u1eebng g\u00f3c nh\u00ecn kh\u00e1c nhau v\u1ec1 EVM. V\u00e0 t\u1ea5t c\u1ea3 \u0111\u1ec1u \u0111\u00fang theo g\u00f3c nh\u00ecn \u0111\u00f3. 1.1 VM nh\u01b0 l\u00e0 m\u1ed9t Virtual Machine \u0110\u1ec3 hi\u1ec3u \u0111\u01b0\u1ee3c ph\u1ea7n \u201cVirtual Machine\u201d trong c\u00e1i t\u00ean EVM (Ethereum Virtual Machine), t\u1ee5i m\u00ecnh c\u1ea7n quay l\u1ea1i m\u1ed9t ch\u00fat v\u00e8 physical machines . \u0110\u00f3 l\u00e0 x86, ARM, hay Apple M1 m\u00e0 m\u00e1y t\u00ednh b\u1ea1n \u0111ang ch\u1ea1y. \u1ede Layer th\u1ea5p nh\u1ea5t, m\u1ea5y n\u00e0y ch\u1ec9 hi\u1ec3u \u0111\u01b0\u1ee3c nh\u1ecb ph\u00e2n t\u1ee9c l\u00e0 d\u00e3y s\u1ed1 0 v\u00e0 1. M\u1ecdi thao t\u00e1c nh\u01b0 c\u1ed9ng, tr\u1eeb, l\u01b0u file, render \u1ea3nh\u2026 \u0111\u1ec1u \u0111\u01b0\u1ee3c \u0111i\u1ec1u khi\u1ec3n b\u1edfi chu\u1ed7i opcode l\u00e0 l\u1ec7nh m\u00e1y t\u00ednh \u0111\u1ecdc \u0111\u01b0\u1ee3c \u2013 to\u00e0n s\u1ed1 0 v\u00e0 1. kh\u00e1i ni\u1ec7m Virtual Machine (VM) \u2013 m\u00e1y \u1ea3o. VM v\u1ec1 c\u01a1 b\u1ea3n c\u0169ng ho\u1ea1t \u0111\u1ed9ng y chang m\u00e1y th\u1eadt l\u00e0 c\u00f3 opcode, c\u00f3 c\u00e1c b\u01b0\u1edbc th\u1ef1c thi logic. M\u1ed9t s\u1ed1 v\u00ed d\u1ee5 quen thu\u1ed9c l\u00e0 JVM (Java Virtual Machine) hay LLVM trong h\u1ec7 sinh th\u00e1i c\u1ee7a nhi\u1ec1u ng\u00f4n ng\u1eef nh\u01b0 Rust, C, Swift\u2026 Nh\u01b0ng \u0111i\u1ec3m kh\u00e1c bi\u1ec7t quan tr\u1ecdng l\u00e0: VM kh\u00f4ng b\u1ecb g\u1eafn v\u1edbi ph\u1ea7n c\u1ee9ng c\u1ee5 th\u1ec3 n\u00e0o. B\u1ea1n c\u00f3 th\u1ec3 ch\u1ea1y m\u1ed9t virtual machine tr\u00ean b\u1ea5t k\u1ef3 lo\u1ea1i m\u00e1y n\u00e0o, h\u1ec7 \u0111i\u1ec1u h\u00e0nh n\u00e0o mi\u1ec5n l\u00e0 c\u00f3 ph\u1ea7n m\u1ec1m support n\u00f3. T\u1ee9c l\u00e0 VM mang l\u1ea1i m\u1ed9t m\u00f4i tr\u01b0\u1eddng th\u1ef1c thi \u0111\u1ed9c l\u1eadp v\u1edbi n\u1ec1n t\u1ea3ng Quay l\u1ea1i v\u1edbi Ethereum th\u00ec EVM ch\u00ednh l\u00e0 virtual machine c\u1ee7a ri\u00eang Ethereum . \u0110i\u1ec1u \u0111\u00f3 c\u00f3 ngh\u0129a l\u00e0 b\u1ea1n c\u00f3 th\u1ec3 ch\u1ea1y EVM tr\u00ean b\u1ea5t k\u1ef3 h\u1ec7 \u0111i\u1ec1u h\u00e0nh n\u00e0o (Windows, macOS, Linux\u2026), tr\u00ean b\u1ea5t k\u1ef3 ph\u1ea7n c\u1ee9ng n\u00e0o (PC, laptop, server, th\u1eadm ch\u00ed Raspberry Pi), mi\u1ec5n l\u00e0 b\u1ea1n c\u00e0i m\u1ed9t Ethereum node . \u0110\u00e2y ch\u00ednh l\u00e0 \u0111i\u1ec3m then ch\u1ed1t khi\u1ebfn Ethereum th\u1ef1c s\u1ef1 phi t\u1eadp trung (decentralized)v\u00ec ai c\u0169ng c\u00f3 th\u1ec3 ch\u1ea1y EVM \u1edf b\u1ea5t c\u1ee9 \u0111\u00e2u. In the pre-EVM era, this would have been a nightmare as a new blockchain with custom logic had to be created every time a new app with specific use case was to be built. T\u1ea1m d\u1ecbch l\u00e0: Tr\u01b0\u1edbc khi c\u00f3 EVM, n\u1ebfu b\u1ea1n mu\u1ed1n ch\u1ea1y m\u1ed9t app c\u00f3 logic ri\u00eang tr\u00ean blockchain, b\u1ea1n ph\u1ea3i t\u1ea1o nguy\u00ean m\u1ed9t blockchain m\u1edbi t\u1eeb thi\u1ebft k\u1ebf, consensus, state machine\u2026 c\u1ef1c k\u1ef3 t\u1ed1n c\u00f4ng. Nh\u01b0ng gi\u1edd c\u00f3 th\u1ec3 vi\u1ebft b\u1ea5t k\u1ef3 \u1ee9ng d\u1ee5ng n\u00e0o b\u1eb1ng Solidity \u2192 bi\u00ean d\u1ecbch th\u00e0nh EVM bytecode \u2192 deploy l\u00ean Ethereum \u2192 ch\u1ea1y ngay trong EVM. N\u00f3i c\u00e1ch kh\u00e1c, EVM bi\u1ebfn Ethereum th\u00e0nh m\u1ed9t \u201cm\u00e1y t\u00ednh global, c\u00f3 th\u1ec3 ch\u1ea1y b\u1ea5t k\u1ef3 \u0111o\u1ea1n arbitrary code n\u00e0o. Bytecode l\u00e0 g\u00ec ? Bytecode basically l\u00e0 \u201cmachine code\u201d \u0111\u01b0\u1ee3c generate sau khi compile ng\u00f4n ng\u1eef smart contract c\u1ea5p cao nh\u01b0 Solidity. N\u00f3 ki\u1ec3u nh\u01b0 v\u1ea7y (s\u1ed1 li\u1ec7u d\u00e0i qu\u00e1 n\u00ean m\u00ecnh b\u1ecf b\u1edbt): T\u1ea1i v\u00ec n\u1ebfu b\u1ea1n kh\u00f4ng c\u00f3 source code v\u00e0 ABI (Application Binary Interface) c\u1ee7a smart contract \u0111\u00f3 th\u00ec vi\u1ec7c t\u01b0\u01a1ng t\u00e1c v\u1edbi n\u00f3 tr\u00ean blockchain s\u1ebd r\u1ea5t risky v\u00e0 d\u1ec5 sai. \u0110o\u1ea1n bytecode m\u00e0 m\u00ecnh show ph\u00eda tr\u00ean ch\u00ednh l\u00e0 deployment bytecode c\u1ee7a contract HelloWorld.sol l\u00e0 contract m\u1eabu m\u00e0 t\u1ee5i m\u00ecnh \u0111\u00e3 deploy. Deployment v\u00e0 runtime bytecode Kh\u00e1c v\u1edbi runtime bytecode , deployment bytecode s\u1ebd g\u1ed3m th\u00eam m\u1ea5y code h\u1ed7 tr\u1ee3 ( auxiliary code ) \u0111\u1ec3 gi\u00fap qu\u00e1 tr\u00ecnh deploy di\u1ec5n ra th\u00e0nh c\u00f4ng. Sau khi contract \u0111\u01b0\u1ee3c deploy th\u00e0nh c\u00f4ng, ch\u1ec9 c\u00f2n runtime bytecode \u1edf l\u1ea1i n\u1eb1m t\u1ea1i \u0111\u1ecba ch\u1ec9 contract tr\u00ean blockchain \u0111\u00e2y ch\u00ednh l\u00e0 ph\u1ea7n s\u1ebd \u0111\u01b0\u1ee3c EVM d\u00f9ng m\u1ed7i khi c\u00f3 ng\u01b0\u1eddi g\u1ecdi h\u00e0m c\u1ee7a contract \u0111\u00f3. EVM Assembly Solidity compiler c\u00f3 th\u1ec3 in ra phi\u00ean b\u1ea3n human-readable c\u1ee7a EVM Assembly cho contract HelloWorld.sol . Khi b\u1ea1n bi\u00ean d\u1ecbch contract, b\u1ea1n kh\u00f4ng ch\u1ec9 ra bytecode m\u00e0 c\u00f2n c\u00f3 th\u1ec3 l\u1ea5y c\u1ea3 assembly code, t\u1ee9c l\u00e0 ng\u00f4n ng\u1eef g\u1ea7n s\u00e1t m\u00e1y nh\u1ea5t nh\u01b0ng v\u1eabn c\u00f3 th\u1ec3 \u0111\u1ecdc \u0111\u01b0\u1ee3c ph\u1ea7n n\u00e0o n\u1ebfu b\u1ea1n \u0111\u00e3 quen v\u1edbi EVM. V\u00ed d\u1ee5 \u0111o\u1ea1n d\u01b0\u1edbi l\u00e0 m\u1ed9t ph\u1ea7n c\u1ee7a EVM assembly cho contract HelloWorld : mstore(0x40, 0x80) callvalue dup1 iszero jumpi(tag_1) ... greeting = \"Hello, World.\" 0x48656c6c6f2c20576f726c642e... Smart contracts c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c compiled th\u00e0nh EVM bytecode. H\u00ecnh dung cho d\u1ec5 thif Solidity code ng\u00f4n ng\u1eef \u0111\u1ec3 vi\u1ebft smart contractgi\u1ed1ng nh\u01b0 C++ trong l\u1eadp tr\u00ecnh truy\u1ec1n th\u1ed1ng. C\u00f2n EVM bytecode th\u00ec nh\u01b0 machine code m\u00e0 CPU hi\u1ec3u \u0111\u01b0\u1ee3c. EVM bytecode l\u00e0 m\u1ed9t chu\u1ed7i c\u00e1c opcode (operation code) v\u00e0 d\u1eef li\u1ec7u, \u0111\u01b0\u1ee3c EVM x\u1eed l\u00fd \u0111\u1ec3 th\u1ef1c hi\u1ec7n state transition \u2013 t\u1ee9c l\u00e0 thay \u0111\u1ed5i tr\u1ea1ng th\u00e1i to\u00e0n c\u1ee5c c\u1ee7a Ethereum sau m\u1ed7i giao d\u1ecbch ho\u1eb7c function call trong smart contract. V\u1eady r\u1ed1t cu\u1ed9c vai tr\u00f2 c\u1ee7a EVM trong vi\u1ec7c execute m\u1ed9t transaction l\u00e0 g\u00ec? \u0110\u1ea7u ti\u00ean, n\u00f3 cho ph\u00e9p chuy\u1ec3n WEI (1 ETH = 10\u00b9\u2078 WEI) t\u1eeb account n\u00e0y sang account kh\u00e1c. V\u00e0 n\u1ebfu account nh\u1eadn \u0111\u01b0\u1ee3c giao d\u1ecbch \u0111\u00f3 c\u00f3 ch\u1ee9a bytecode li\u00ean quan t\u1edbi EVM, th\u00ec EVM s\u1ebd ph\u1ea3i ch\u1ea1y c\u00e1i \u0111o\u1ea1n bytecode \u0111\u00f3 c\u00f3 th\u1ec3 k\u00e8m theo transaction.data l\u00e0m input (input n\u00e0y l\u00e0 d\u1eef li\u1ec7u t\u1eeb tr\u01b0\u1eddng data c\u1ee7a transaction). V\u1eady account n\u00e0o c\u0169ng c\u00f3 bytecode h\u1ebft \u00e0?\u201d C\u00e2u tr\u1ea3 l\u1eddi l\u00e0: kh\u00f4ng. Trong Ethereum, ch\u1ec9 c\u00f3 2 lo\u1ea1i account: EOA (Externally Owned Account): L\u00e0 account do m\u1ed9t ng\u01b0\u1eddi/ t\u1ed5 ch\u1ee9c ki\u1ec3m so\u00e1t th\u00f4ng qua private key. Ki\u1ec3u nh\u01b0 v\u00ed Metamask c\u1ee7a b\u1ea1n \u1ea5y. CA (Contract Account): L\u00e0 account \u0111\u01b0\u1ee3c t\u1ea1o ra b\u1eb1ng c\u00e1ch deploy smart contract. Nh\u1eefng account n\u00e0y kh\u00f4ng c\u00f3 private key, v\u00e0 \u0111\u01b0\u1ee3c control b\u1edfi code, th\u00f4ng qua c\u00e1c call t\u1eeb EOA (transaction). N\u00f3i \u0111\u01a1n gi\u1ea3n, ch\u1ec9 c\u00f3 Contract Account m\u1edbi ch\u1ee9a bytecode \u0111\u1ec3 EVM th\u1ef1c thi. Let\u2019s dive deeper\u2026 v\u00e0o ki\u1ebfn tr\u00fac b\u00ean trong c\u1ee7a EVM: Diagram from https://ethereum.org/en/developers/docs/evm/ M\u1ed7i EVM instance \u0111\u01b0\u1ee3c kh\u1edfi ch\u1ea1y l\u00e0 \u0111\u1ec3 th\u1ef1c thi m\u1ed9t \u0111o\u1ea1n bytecode c\u1ee5 th\u1ec3 (v\u00ec m\u1ee5c ti\u00eau c\u1ee7a transaction l\u00e0 m\u1ed9t Contract Account). Do \u0111\u00f3, \u0111o\u1ea1n bytecode n\u00e0y ho\u1ea1t \u0111\u1ed9ng nh\u01b0 ROM, b\u1ed9 nh\u1edb ch\u1ec9 \u0111\u1ecdc c\u1ee7a EVM instance , v\u00e0 t\u1ea5t nhi\u00ean l\u00e0 kh\u00f4ng th\u1ec3 b\u1ecb thay \u0111\u1ed5i sau khi \u0111\u00e3 deploy. T\u01b0\u1edfng t\u01b0\u1ee3ng gi\u1ed1ng nh\u01b0 m\u1ed9t Turing Machine , EVM c\u0169ng c\u00f3 c\u00e1c th\u00e0nh ph\u1ea7n c\u01a1 b\u1ea3n g\u1ed3m: Program Counter (PC): L\u00e0 m\u1ed9t con tr\u1ecf ch\u1ec9 t\u1edbi opcode ti\u1ebfp theo trong bytecode m\u00e0 EVM c\u1ea7n th\u1ef1c thi. PC l\u00e0 s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m trong kho\u1ea3ng [0, s\u1ed1 l\u01b0\u1ee3ng byte c\u1ee7a bytecode - 1]. Memory: L\u00e0 b\u1ed9 nh\u1edb t\u1ea1m, c\u00f3 th\u1ec3 m\u1edf r\u1ed9ng v\u00f4 h\u1ea1n (mi\u1ec5n l\u00e0 b\u1ea1n ch\u1ecbu tr\u1ea3 th\u00eam ph\u00ed gas cho vi\u1ec7c m\u1edf r\u1ed9ng). M\u1ed7i slot trong memory l\u00e0 1 byte (unsigned 8-bit integer). Stack: Stack trong EVM c\u00f3 th\u1ec3 ch\u1ee9a t\u1ed1i \u0111a 1024 ph\u1ea7n t\u1eed , m\u1ed7i ph\u1ea7n t\u1eed l\u00e0 m\u1ed9t unsigned integer 256-bit (t\u1ee9c 32 byte). \u0110\u00e2y l\u00e0 n\u01a1i c\u00e1c gi\u00e1 tr\u1ecb trung gian \u0111\u01b0\u1ee3c x\u1eed l\u00fd li\u00ean t\u1ee5c nh\u01b0 push, pop, add, sub, v.v. External Storage: v\u00f9ng l\u01b0u tr\u1eef permanent c\u1ee7a c\u00e1c account, n\u01a1i contract c\u00f3 th\u1ec3 l\u01b0u state. EVM bytecode c\u00f3 th\u1ec3 \u0111\u1ecdc/ghi v\u00e0o storage c\u1ee7a account hi\u1ec7n t\u1ea1i ho\u1eb7c external account kh\u00e1c Trong \u0111\u00f3, external storage l\u00e0 n\u01a1i l\u01b0u tr\u1eef v\u0129nh vi\u1ec5n t\u1ea5t c\u1ea3 tr\u1ea1ng th\u00e1i v\u00e0 d\u1eef li\u1ec7u li\u00ean quan \u0111\u1ebfn smart contract. Ng\u01b0\u1ee3c l\u1ea1i, c\u00e1c th\u00e0nh ph\u1ea7n c\u00f2n l\u1ea1i nh\u01b0 PC, stack, v\u00e0 memory \u0111\u1ec1u l\u00e0 volatile \u2013 t\u1ee9c l\u00e0 ch\u1ec9 t\u1ed3n t\u1ea1i trong l\u00fac EVM instance \u0111ang ch\u1ea1y v\u00e0 s\u1ebd b\u1ecb reset m\u1ed7i l\u1ea7n instance m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o. T\u01b0\u01a1ng t\u1ef1 nh\u01b0 CPU hi\u1ec3u c\u00e1c l\u1ec7nh trong Instruction Set, EVM c\u0169ng c\u1ea7n hi\u1ec3u c\u00e1c opcode (m\u1ed7i opcode l\u00e0 1 byte => t\u1ed1i \u0111a 256 opcode). M\u1eb7c d\u00f9 kh\u00f4ng li\u1ec7t k\u00ea to\u00e0n b\u1ed9 \u1edf \u0111\u00e2y, nh\u01b0ng ta c\u00f3 th\u1ec3 chia opcode th\u00e0nh c\u00e1c nh\u00f3m ch\u00ednh nh\u01b0 sau: Control Opcodes: \u0111i\u1ec1u khi\u1ec3n PC, stack, memory, storage Arithmetic & Bitwise: nh\u01b0 ADD, MUL, AND, OR, XOR\u2026 Contextual Info: truy xu\u1ea5t th\u00f4ng tin block, transaction, msg.sender Log: t\u1ea1o log record (LOG0, LOG1,\u2026) System-level: t\u1ea1o contract m\u1edbi (CREATE), g\u1ecdi contract kh\u00e1c (CALL, DELEGATECALL), xo\u00e1 contract (SELFDESTRUCT) Hi\u1ec7u n\u0103ng c\u1ee7a EVM Khi ch\u1ea1y tr\u00ean mainnet, EVM (Ethereum Virtual Machine) th\u01b0\u1eddng x\u1eed l\u00fd bytecode ch\u1eadm h\u01a1n kha kh\u00e1 so v\u1edbi c\u00e1c lo\u1ea1i m\u00e1y \u1ea3o th\u00f4ng th\u01b0\u1eddng. Nh\u01b0ng c\u00e1i n\u00e0y kh\u00f4ng ph\u1ea3i bug \u0111\u00e2u m\u00e0 l\u00e0 t\u00ednh n\u0103ng \ud83d\ude0e. L\u00fd do ch\u00ednh l\u00e0 b\u1edfi m\u1ed7i ph\u00e9p to\u00e1n (operation) ph\u1ea3i \u0111\u01b0\u1ee3c th\u1ef1c thi b\u1edfi t\u1ea5t c\u1ea3 c\u00e1c full node trong m\u1ea1ng \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o t\u00ednh trustless t\u1ee9c kh\u00f4ng c\u1ea7n tin t\u01b0\u1edfng ai m\u00e0 v\u1eabn ho\u1ea1t \u0111\u1ed9ng \u0111\u01b0\u1ee3c. Ch\u00ednh v\u00ec \u01b0u ti\u00ean cho t\u00ednh \u0111\u1ed3ng thu\u1eadn ph\u00e2n t\u00e1n (decentralized consensus) n\u00e0y m\u00e0 EVM ch\u1ea5p nh\u1eadn \u0111\u00e1nh \u0111\u1ed5i x\u1eed l\u00fd ch\u1eadm h\u01a1n v\u00e0 chi ph\u00ed t\u00ednh to\u00e1n (gas fee) cao h\u01a1n nhi\u1ec1u so v\u1edbi c\u00e1c h\u1ec7 th\u1ed1ng t\u1eadp trung. \u0110\u1ed5i l\u1ea1i th\u00ec t\u00ednh b\u1ea5t bi\u1ebfn g\u1ea7n nh\u01b0 tuy\u1ec7t \u0111\u1ed1i, kh\u1ea3 n\u0103ng ch\u1ed1ng l\u1ed7i cao, v\u00e0 zero downtimekh\u00f4ng b\u1ecb \u201cngh\u1ec9 server\u201d gi\u1eefa ch\u1eebng nh\u01b0 web2. Ch\u01b0a h\u1ebft, EVM c\u00f2n c\u00f3 c\u01a1 ch\u1ebf gas metering nh\u01b0 \u0111\u1ed3ng h\u1ed3 \u0111o gas v\u1eady. N\u00f3 \u0111\u1ea3m b\u1ea3o r\u1eb1ng miners (ho\u1eb7c validators sau The Merge) s\u1ebd \u0111\u01b0\u1ee3c tr\u1ea3 c\u00f4ng x\u1ee9ng \u0111\u00e1ng khi th\u00eam transaction c\u1ee7a b\u1ea1n v\u00e0o block. \u0110\u1ed3ng th\u1eddi, c\u01a1 ch\u1ebf n\u00e0y ng\u0103n ch\u1eb7n \u0111o\u1ea1n code b\u1ecb loop v\u00f4 t\u1eadn. N\u1ebfu m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea1y m\u00e3i kh\u00f4ng d\u1eebng v\u00e0 v\u01b0\u1ee3t qu\u00e1 gi\u1edbi h\u1ea1n gas \u0111\u00e3 set, EVM s\u1ebd auto \u201c\u0111\u1eadp\u201d giao d\u1ecbch \u0111\u00f3, revert to\u00e0n b\u1ed9 c\u00e1c thay \u0111\u1ed5i state t\u1ea1m th\u1eddi (sandboxed state)","title":"Ethereum Virtual Machine (EVM)"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/02_EVM/#ethereum-virtual-machine-evm","text":"Diagram adapted from Ethereum EVM illustrated The EVM is the part of Ethereum that handles the deployment and execution of smart contracts. In reality, a simple value transfer transaction from one EOA to another does not require the EVM, but everything else will involve state updates computed by the EVM. From a higher level perspective, the EVM running on the Ethereum blockchain can be viewed as a global decentralized computer containing millions of executable objects, each with its own permanent data storage. \u2014Andreas Antonopoulos and Dr. Gavin Wood, Mastering Ethereum T\u1ea1m d\u1ecbch: EVM l\u00e0 ph\u1ea7n trong Ethereum ch\u1ecbu tr\u00e1ch nhi\u1ec7m tri\u1ec3n khai v\u00e0 th\u1ef1c thi c\u00e1c smart contract. Th\u1ef1c t\u1ebf, n\u1ebfu ch\u1ec9 \u0111\u01a1n gi\u1ea3n chuy\u1ec3n gi\u00e1 tr\u1ecb (value transfer) t\u1eeb m\u1ed9t v\u00ed th\u00f4ng th\u01b0\u1eddng (EOA) sang v\u00ed kh\u00e1c th\u00ec kh\u00f4ng c\u1ea7n \u0111\u1ebfn EVM. Nh\u01b0ng b\u1ea5t k\u1ef3 h\u00e0nh \u0111\u1ed9ng n\u00e0o kh\u00e1c \u0111\u1ec1u s\u1ebd li\u00ean quan \u0111\u1ebfn vi\u1ec7c c\u1eadp nh\u1eadt tr\u1ea1ng th\u00e1i (state) do EVM t\u00ednh to\u00e1n. N\u1ebfu nh\u00ecn \u1edf g\u00f3c \u0111\u1ed9 tr\u1eebu t\u01b0\u1ee3ng h\u01a1n, EVM ch\u1ea1y tr\u00ean blockchain Ethereum c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c xem nh\u01b0 m\u1ed9t chi\u1ebfc m\u00e1y t\u00ednh phi t\u1eadp trung to\u00e0n c\u1ea7u, n\u01a1i ch\u1ee9a h\u00e0ng tri\u1ec7u \u201c\u0111\u1ed1i t\u01b0\u1ee3ng th\u1ef1c thi\u201d (executable objects) m\u1ed7i \u0111\u1ed1i t\u01b0\u1ee3ng c\u00f3 kh\u00f4ng gian l\u01b0u tr\u1eef d\u1eef li\u1ec7u ri\u00eang v\u00e0 t\u1ed3n t\u1ea1i v\u0129nh vi\u1ec5n.","title":"Ethereum Virtual Machine (EVM)"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/02_EVM/#neu-ban-qua-luoi-oc-thi-giai-thich-ngan-gon-la","text":"Ethereum Virtual Machine (EVM) c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c hi\u1ec3u \u0111\u01a1n gi\u1ea3n l\u00e0 m\u1ed9t m\u00f4i tr\u01b0\u1eddng \u0111\u1ed9c l\u1eadp, \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf ri\u00eang \u0111\u1ec3 x\u1eed l\u00fd c\u00e1c giao d\u1ecbch li\u00ean quan \u0111\u1ebfn smart contract, v\u00e0 quan tr\u1ecdng h\u01a1n c\u1ea3 l\u00e0 x\u00e1c \u0111\u1ecbnh state t\u1ed5ng th\u1ec3 c\u1ee7a blockchain Ethereum sau m\u1ed7i block m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o ra. B\u1ea1n c\u00f3 th\u1ec3 t\u01b0\u1edfng t\u01b0\u1ee3ng EVM nh\u01b0 m\u1ed9t chi\u1ebfc m\u00e1y t\u00ednh chuy\u00ean x\u1eed l\u00fd c\u00e1c giao d\u1ecbch smart contract, \u0111\u1ed3ng th\u1eddi \u0111\u1ecbnh ngh\u0129a c\u00e1c quy t\u1eafc thay \u0111\u1ed5i tr\u1ea1ng th\u00e1i c\u1ee7a m\u1ea1ng Ethereum theo t\u1eebng block. Tuy nhi\u00ean, kh\u00e1c v\u1edbi m\u00e1y t\u00ednh v\u1eadt l\u00fd, EVM l\u00e0 m\u1ed9t m\u00e1y \u1ea3o n\u00f3 kh\u00f4ng ph\u1ee5 thu\u1ed9c v\u00e0o h\u1ec7 \u0111i\u1ec1u h\u00e0nh c\u1ee5 th\u1ec3 hay v\u1ecb tr\u00ed \u0111\u1ecba l\u00fd n\u00e0o c\u1ea3. Ch\u00ednh v\u00ec v\u1eady, b\u1ea5t k\u1ef3 ai \u1edf b\u1ea5t k\u1ef3 \u0111\u00e2u \u0111\u1ec1u c\u00f3 th\u1ec3 truy c\u1eadp v\u00e0 v\u1eadn h\u00e0nh m\u1ed9t node Ethereum \u0111\u1ec3 ch\u1ea1y EVM.","title":"N\u1ebfu b\u1ea1n qu\u00e1 l\u01b0\u1eddi \u0111\u1ecdc \ud83e\udd23 th\u00ec gi\u1ea3i th\u00edch ng\u1eafn g\u1ecdn l\u00e0"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/02_EVM/#1-deep-dive-more-about-evm","text":"C\u00f3 nhi\u1ec1u c\u00e1ch kh\u00e1u nhau \u0111\u1ec3 m\u1ecdi ng\u01b0\u1eddi m\u00f4 t\u1ea3 v\u1ec1 EVM. Nh\u01b0 l\u00e0 EVM nh\u01b0 l\u00e0 m\u1ed9t Vitural Machine ( m\u00e1y \u1ea3o) EVM l\u00e0 State machine Hay EVM l\u00e0 Quasi-Turing Complete Machine M\u1ed9t s\u1ed1 thu\u1eadt ng\u1eef \u0111\u00e2y s\u1ebd nghe c\u00f3 v\u1ebb l\u1ea1 nh\u01b0ng th\u1ef1c ra m\u1ed7i \u0111\u1ecbnh ngh\u0129a tr\u00ean \u0111\u1ec1u theo t\u1eebng g\u00f3c nh\u00ecn kh\u00e1c nhau v\u1ec1 EVM. V\u00e0 t\u1ea5t c\u1ea3 \u0111\u1ec1u \u0111\u00fang theo g\u00f3c nh\u00ecn \u0111\u00f3.","title":"1. Deep dive more about EVM"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/02_EVM/#11-vm-nhu-la-mot-virtual-machine","text":"\u0110\u1ec3 hi\u1ec3u \u0111\u01b0\u1ee3c ph\u1ea7n \u201cVirtual Machine\u201d trong c\u00e1i t\u00ean EVM (Ethereum Virtual Machine), t\u1ee5i m\u00ecnh c\u1ea7n quay l\u1ea1i m\u1ed9t ch\u00fat v\u00e8 physical machines . \u0110\u00f3 l\u00e0 x86, ARM, hay Apple M1 m\u00e0 m\u00e1y t\u00ednh b\u1ea1n \u0111ang ch\u1ea1y. \u1ede Layer th\u1ea5p nh\u1ea5t, m\u1ea5y n\u00e0y ch\u1ec9 hi\u1ec3u \u0111\u01b0\u1ee3c nh\u1ecb ph\u00e2n t\u1ee9c l\u00e0 d\u00e3y s\u1ed1 0 v\u00e0 1. M\u1ecdi thao t\u00e1c nh\u01b0 c\u1ed9ng, tr\u1eeb, l\u01b0u file, render \u1ea3nh\u2026 \u0111\u1ec1u \u0111\u01b0\u1ee3c \u0111i\u1ec1u khi\u1ec3n b\u1edfi chu\u1ed7i opcode l\u00e0 l\u1ec7nh m\u00e1y t\u00ednh \u0111\u1ecdc \u0111\u01b0\u1ee3c \u2013 to\u00e0n s\u1ed1 0 v\u00e0 1. kh\u00e1i ni\u1ec7m Virtual Machine (VM) \u2013 m\u00e1y \u1ea3o. VM v\u1ec1 c\u01a1 b\u1ea3n c\u0169ng ho\u1ea1t \u0111\u1ed9ng y chang m\u00e1y th\u1eadt l\u00e0 c\u00f3 opcode, c\u00f3 c\u00e1c b\u01b0\u1edbc th\u1ef1c thi logic. M\u1ed9t s\u1ed1 v\u00ed d\u1ee5 quen thu\u1ed9c l\u00e0 JVM (Java Virtual Machine) hay LLVM trong h\u1ec7 sinh th\u00e1i c\u1ee7a nhi\u1ec1u ng\u00f4n ng\u1eef nh\u01b0 Rust, C, Swift\u2026 Nh\u01b0ng \u0111i\u1ec3m kh\u00e1c bi\u1ec7t quan tr\u1ecdng l\u00e0: VM kh\u00f4ng b\u1ecb g\u1eafn v\u1edbi ph\u1ea7n c\u1ee9ng c\u1ee5 th\u1ec3 n\u00e0o. B\u1ea1n c\u00f3 th\u1ec3 ch\u1ea1y m\u1ed9t virtual machine tr\u00ean b\u1ea5t k\u1ef3 lo\u1ea1i m\u00e1y n\u00e0o, h\u1ec7 \u0111i\u1ec1u h\u00e0nh n\u00e0o mi\u1ec5n l\u00e0 c\u00f3 ph\u1ea7n m\u1ec1m support n\u00f3. T\u1ee9c l\u00e0 VM mang l\u1ea1i m\u1ed9t m\u00f4i tr\u01b0\u1eddng th\u1ef1c thi \u0111\u1ed9c l\u1eadp v\u1edbi n\u1ec1n t\u1ea3ng Quay l\u1ea1i v\u1edbi Ethereum th\u00ec EVM ch\u00ednh l\u00e0 virtual machine c\u1ee7a ri\u00eang Ethereum . \u0110i\u1ec1u \u0111\u00f3 c\u00f3 ngh\u0129a l\u00e0 b\u1ea1n c\u00f3 th\u1ec3 ch\u1ea1y EVM tr\u00ean b\u1ea5t k\u1ef3 h\u1ec7 \u0111i\u1ec1u h\u00e0nh n\u00e0o (Windows, macOS, Linux\u2026), tr\u00ean b\u1ea5t k\u1ef3 ph\u1ea7n c\u1ee9ng n\u00e0o (PC, laptop, server, th\u1eadm ch\u00ed Raspberry Pi), mi\u1ec5n l\u00e0 b\u1ea1n c\u00e0i m\u1ed9t Ethereum node . \u0110\u00e2y ch\u00ednh l\u00e0 \u0111i\u1ec3m then ch\u1ed1t khi\u1ebfn Ethereum th\u1ef1c s\u1ef1 phi t\u1eadp trung (decentralized)v\u00ec ai c\u0169ng c\u00f3 th\u1ec3 ch\u1ea1y EVM \u1edf b\u1ea5t c\u1ee9 \u0111\u00e2u. In the pre-EVM era, this would have been a nightmare as a new blockchain with custom logic had to be created every time a new app with specific use case was to be built. T\u1ea1m d\u1ecbch l\u00e0: Tr\u01b0\u1edbc khi c\u00f3 EVM, n\u1ebfu b\u1ea1n mu\u1ed1n ch\u1ea1y m\u1ed9t app c\u00f3 logic ri\u00eang tr\u00ean blockchain, b\u1ea1n ph\u1ea3i t\u1ea1o nguy\u00ean m\u1ed9t blockchain m\u1edbi t\u1eeb thi\u1ebft k\u1ebf, consensus, state machine\u2026 c\u1ef1c k\u1ef3 t\u1ed1n c\u00f4ng. Nh\u01b0ng gi\u1edd c\u00f3 th\u1ec3 vi\u1ebft b\u1ea5t k\u1ef3 \u1ee9ng d\u1ee5ng n\u00e0o b\u1eb1ng Solidity \u2192 bi\u00ean d\u1ecbch th\u00e0nh EVM bytecode \u2192 deploy l\u00ean Ethereum \u2192 ch\u1ea1y ngay trong EVM. N\u00f3i c\u00e1ch kh\u00e1c, EVM bi\u1ebfn Ethereum th\u00e0nh m\u1ed9t \u201cm\u00e1y t\u00ednh global, c\u00f3 th\u1ec3 ch\u1ea1y b\u1ea5t k\u1ef3 \u0111o\u1ea1n arbitrary code n\u00e0o.","title":"1.1 VM nh\u01b0 l\u00e0 m\u1ed9t Virtual Machine"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/02_EVM/#bytecode-la-gi","text":"Bytecode basically l\u00e0 \u201cmachine code\u201d \u0111\u01b0\u1ee3c generate sau khi compile ng\u00f4n ng\u1eef smart contract c\u1ea5p cao nh\u01b0 Solidity. N\u00f3 ki\u1ec3u nh\u01b0 v\u1ea7y (s\u1ed1 li\u1ec7u d\u00e0i qu\u00e1 n\u00ean m\u00ecnh b\u1ecf b\u1edbt): T\u1ea1i v\u00ec n\u1ebfu b\u1ea1n kh\u00f4ng c\u00f3 source code v\u00e0 ABI (Application Binary Interface) c\u1ee7a smart contract \u0111\u00f3 th\u00ec vi\u1ec7c t\u01b0\u01a1ng t\u00e1c v\u1edbi n\u00f3 tr\u00ean blockchain s\u1ebd r\u1ea5t risky v\u00e0 d\u1ec5 sai. \u0110o\u1ea1n bytecode m\u00e0 m\u00ecnh show ph\u00eda tr\u00ean ch\u00ednh l\u00e0 deployment bytecode c\u1ee7a contract HelloWorld.sol l\u00e0 contract m\u1eabu m\u00e0 t\u1ee5i m\u00ecnh \u0111\u00e3 deploy.","title":"Bytecode l\u00e0 g\u00ec ?"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/02_EVM/#deployment-va-runtime-bytecode","text":"Kh\u00e1c v\u1edbi runtime bytecode , deployment bytecode s\u1ebd g\u1ed3m th\u00eam m\u1ea5y code h\u1ed7 tr\u1ee3 ( auxiliary code ) \u0111\u1ec3 gi\u00fap qu\u00e1 tr\u00ecnh deploy di\u1ec5n ra th\u00e0nh c\u00f4ng. Sau khi contract \u0111\u01b0\u1ee3c deploy th\u00e0nh c\u00f4ng, ch\u1ec9 c\u00f2n runtime bytecode \u1edf l\u1ea1i n\u1eb1m t\u1ea1i \u0111\u1ecba ch\u1ec9 contract tr\u00ean blockchain \u0111\u00e2y ch\u00ednh l\u00e0 ph\u1ea7n s\u1ebd \u0111\u01b0\u1ee3c EVM d\u00f9ng m\u1ed7i khi c\u00f3 ng\u01b0\u1eddi g\u1ecdi h\u00e0m c\u1ee7a contract \u0111\u00f3.","title":"Deployment v\u00e0 runtime bytecode"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/02_EVM/#evm-assembly","text":"Solidity compiler c\u00f3 th\u1ec3 in ra phi\u00ean b\u1ea3n human-readable c\u1ee7a EVM Assembly cho contract HelloWorld.sol . Khi b\u1ea1n bi\u00ean d\u1ecbch contract, b\u1ea1n kh\u00f4ng ch\u1ec9 ra bytecode m\u00e0 c\u00f2n c\u00f3 th\u1ec3 l\u1ea5y c\u1ea3 assembly code, t\u1ee9c l\u00e0 ng\u00f4n ng\u1eef g\u1ea7n s\u00e1t m\u00e1y nh\u1ea5t nh\u01b0ng v\u1eabn c\u00f3 th\u1ec3 \u0111\u1ecdc \u0111\u01b0\u1ee3c ph\u1ea7n n\u00e0o n\u1ebfu b\u1ea1n \u0111\u00e3 quen v\u1edbi EVM. V\u00ed d\u1ee5 \u0111o\u1ea1n d\u01b0\u1edbi l\u00e0 m\u1ed9t ph\u1ea7n c\u1ee7a EVM assembly cho contract HelloWorld : mstore(0x40, 0x80) callvalue dup1 iszero jumpi(tag_1) ... greeting = \"Hello, World.\" 0x48656c6c6f2c20576f726c642e... Smart contracts c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c compiled th\u00e0nh EVM bytecode. H\u00ecnh dung cho d\u1ec5 thif Solidity code ng\u00f4n ng\u1eef \u0111\u1ec3 vi\u1ebft smart contractgi\u1ed1ng nh\u01b0 C++ trong l\u1eadp tr\u00ecnh truy\u1ec1n th\u1ed1ng. C\u00f2n EVM bytecode th\u00ec nh\u01b0 machine code m\u00e0 CPU hi\u1ec3u \u0111\u01b0\u1ee3c. EVM bytecode l\u00e0 m\u1ed9t chu\u1ed7i c\u00e1c opcode (operation code) v\u00e0 d\u1eef li\u1ec7u, \u0111\u01b0\u1ee3c EVM x\u1eed l\u00fd \u0111\u1ec3 th\u1ef1c hi\u1ec7n state transition \u2013 t\u1ee9c l\u00e0 thay \u0111\u1ed5i tr\u1ea1ng th\u00e1i to\u00e0n c\u1ee5c c\u1ee7a Ethereum sau m\u1ed7i giao d\u1ecbch ho\u1eb7c function call trong smart contract. V\u1eady r\u1ed1t cu\u1ed9c vai tr\u00f2 c\u1ee7a EVM trong vi\u1ec7c execute m\u1ed9t transaction l\u00e0 g\u00ec? \u0110\u1ea7u ti\u00ean, n\u00f3 cho ph\u00e9p chuy\u1ec3n WEI (1 ETH = 10\u00b9\u2078 WEI) t\u1eeb account n\u00e0y sang account kh\u00e1c. V\u00e0 n\u1ebfu account nh\u1eadn \u0111\u01b0\u1ee3c giao d\u1ecbch \u0111\u00f3 c\u00f3 ch\u1ee9a bytecode li\u00ean quan t\u1edbi EVM, th\u00ec EVM s\u1ebd ph\u1ea3i ch\u1ea1y c\u00e1i \u0111o\u1ea1n bytecode \u0111\u00f3 c\u00f3 th\u1ec3 k\u00e8m theo transaction.data l\u00e0m input (input n\u00e0y l\u00e0 d\u1eef li\u1ec7u t\u1eeb tr\u01b0\u1eddng data c\u1ee7a transaction). V\u1eady account n\u00e0o c\u0169ng c\u00f3 bytecode h\u1ebft \u00e0?\u201d C\u00e2u tr\u1ea3 l\u1eddi l\u00e0: kh\u00f4ng. Trong Ethereum, ch\u1ec9 c\u00f3 2 lo\u1ea1i account: EOA (Externally Owned Account): L\u00e0 account do m\u1ed9t ng\u01b0\u1eddi/ t\u1ed5 ch\u1ee9c ki\u1ec3m so\u00e1t th\u00f4ng qua private key. Ki\u1ec3u nh\u01b0 v\u00ed Metamask c\u1ee7a b\u1ea1n \u1ea5y. CA (Contract Account): L\u00e0 account \u0111\u01b0\u1ee3c t\u1ea1o ra b\u1eb1ng c\u00e1ch deploy smart contract. Nh\u1eefng account n\u00e0y kh\u00f4ng c\u00f3 private key, v\u00e0 \u0111\u01b0\u1ee3c control b\u1edfi code, th\u00f4ng qua c\u00e1c call t\u1eeb EOA (transaction). N\u00f3i \u0111\u01a1n gi\u1ea3n, ch\u1ec9 c\u00f3 Contract Account m\u1edbi ch\u1ee9a bytecode \u0111\u1ec3 EVM th\u1ef1c thi. Let\u2019s dive deeper\u2026 v\u00e0o ki\u1ebfn tr\u00fac b\u00ean trong c\u1ee7a EVM: Diagram from https://ethereum.org/en/developers/docs/evm/ M\u1ed7i EVM instance \u0111\u01b0\u1ee3c kh\u1edfi ch\u1ea1y l\u00e0 \u0111\u1ec3 th\u1ef1c thi m\u1ed9t \u0111o\u1ea1n bytecode c\u1ee5 th\u1ec3 (v\u00ec m\u1ee5c ti\u00eau c\u1ee7a transaction l\u00e0 m\u1ed9t Contract Account). Do \u0111\u00f3, \u0111o\u1ea1n bytecode n\u00e0y ho\u1ea1t \u0111\u1ed9ng nh\u01b0 ROM, b\u1ed9 nh\u1edb ch\u1ec9 \u0111\u1ecdc c\u1ee7a EVM instance , v\u00e0 t\u1ea5t nhi\u00ean l\u00e0 kh\u00f4ng th\u1ec3 b\u1ecb thay \u0111\u1ed5i sau khi \u0111\u00e3 deploy. T\u01b0\u1edfng t\u01b0\u1ee3ng gi\u1ed1ng nh\u01b0 m\u1ed9t Turing Machine , EVM c\u0169ng c\u00f3 c\u00e1c th\u00e0nh ph\u1ea7n c\u01a1 b\u1ea3n g\u1ed3m: Program Counter (PC): L\u00e0 m\u1ed9t con tr\u1ecf ch\u1ec9 t\u1edbi opcode ti\u1ebfp theo trong bytecode m\u00e0 EVM c\u1ea7n th\u1ef1c thi. PC l\u00e0 s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m trong kho\u1ea3ng [0, s\u1ed1 l\u01b0\u1ee3ng byte c\u1ee7a bytecode - 1]. Memory: L\u00e0 b\u1ed9 nh\u1edb t\u1ea1m, c\u00f3 th\u1ec3 m\u1edf r\u1ed9ng v\u00f4 h\u1ea1n (mi\u1ec5n l\u00e0 b\u1ea1n ch\u1ecbu tr\u1ea3 th\u00eam ph\u00ed gas cho vi\u1ec7c m\u1edf r\u1ed9ng). M\u1ed7i slot trong memory l\u00e0 1 byte (unsigned 8-bit integer). Stack: Stack trong EVM c\u00f3 th\u1ec3 ch\u1ee9a t\u1ed1i \u0111a 1024 ph\u1ea7n t\u1eed , m\u1ed7i ph\u1ea7n t\u1eed l\u00e0 m\u1ed9t unsigned integer 256-bit (t\u1ee9c 32 byte). \u0110\u00e2y l\u00e0 n\u01a1i c\u00e1c gi\u00e1 tr\u1ecb trung gian \u0111\u01b0\u1ee3c x\u1eed l\u00fd li\u00ean t\u1ee5c nh\u01b0 push, pop, add, sub, v.v. External Storage: v\u00f9ng l\u01b0u tr\u1eef permanent c\u1ee7a c\u00e1c account, n\u01a1i contract c\u00f3 th\u1ec3 l\u01b0u state. EVM bytecode c\u00f3 th\u1ec3 \u0111\u1ecdc/ghi v\u00e0o storage c\u1ee7a account hi\u1ec7n t\u1ea1i ho\u1eb7c external account kh\u00e1c Trong \u0111\u00f3, external storage l\u00e0 n\u01a1i l\u01b0u tr\u1eef v\u0129nh vi\u1ec5n t\u1ea5t c\u1ea3 tr\u1ea1ng th\u00e1i v\u00e0 d\u1eef li\u1ec7u li\u00ean quan \u0111\u1ebfn smart contract. Ng\u01b0\u1ee3c l\u1ea1i, c\u00e1c th\u00e0nh ph\u1ea7n c\u00f2n l\u1ea1i nh\u01b0 PC, stack, v\u00e0 memory \u0111\u1ec1u l\u00e0 volatile \u2013 t\u1ee9c l\u00e0 ch\u1ec9 t\u1ed3n t\u1ea1i trong l\u00fac EVM instance \u0111ang ch\u1ea1y v\u00e0 s\u1ebd b\u1ecb reset m\u1ed7i l\u1ea7n instance m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o. T\u01b0\u01a1ng t\u1ef1 nh\u01b0 CPU hi\u1ec3u c\u00e1c l\u1ec7nh trong Instruction Set, EVM c\u0169ng c\u1ea7n hi\u1ec3u c\u00e1c opcode (m\u1ed7i opcode l\u00e0 1 byte => t\u1ed1i \u0111a 256 opcode). M\u1eb7c d\u00f9 kh\u00f4ng li\u1ec7t k\u00ea to\u00e0n b\u1ed9 \u1edf \u0111\u00e2y, nh\u01b0ng ta c\u00f3 th\u1ec3 chia opcode th\u00e0nh c\u00e1c nh\u00f3m ch\u00ednh nh\u01b0 sau: Control Opcodes: \u0111i\u1ec1u khi\u1ec3n PC, stack, memory, storage Arithmetic & Bitwise: nh\u01b0 ADD, MUL, AND, OR, XOR\u2026 Contextual Info: truy xu\u1ea5t th\u00f4ng tin block, transaction, msg.sender Log: t\u1ea1o log record (LOG0, LOG1,\u2026) System-level: t\u1ea1o contract m\u1edbi (CREATE), g\u1ecdi contract kh\u00e1c (CALL, DELEGATECALL), xo\u00e1 contract (SELFDESTRUCT)","title":"EVM Assembly"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/02_EVM/#hieu-nang-cua-evm","text":"Khi ch\u1ea1y tr\u00ean mainnet, EVM (Ethereum Virtual Machine) th\u01b0\u1eddng x\u1eed l\u00fd bytecode ch\u1eadm h\u01a1n kha kh\u00e1 so v\u1edbi c\u00e1c lo\u1ea1i m\u00e1y \u1ea3o th\u00f4ng th\u01b0\u1eddng. Nh\u01b0ng c\u00e1i n\u00e0y kh\u00f4ng ph\u1ea3i bug \u0111\u00e2u m\u00e0 l\u00e0 t\u00ednh n\u0103ng \ud83d\ude0e. L\u00fd do ch\u00ednh l\u00e0 b\u1edfi m\u1ed7i ph\u00e9p to\u00e1n (operation) ph\u1ea3i \u0111\u01b0\u1ee3c th\u1ef1c thi b\u1edfi t\u1ea5t c\u1ea3 c\u00e1c full node trong m\u1ea1ng \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o t\u00ednh trustless t\u1ee9c kh\u00f4ng c\u1ea7n tin t\u01b0\u1edfng ai m\u00e0 v\u1eabn ho\u1ea1t \u0111\u1ed9ng \u0111\u01b0\u1ee3c. Ch\u00ednh v\u00ec \u01b0u ti\u00ean cho t\u00ednh \u0111\u1ed3ng thu\u1eadn ph\u00e2n t\u00e1n (decentralized consensus) n\u00e0y m\u00e0 EVM ch\u1ea5p nh\u1eadn \u0111\u00e1nh \u0111\u1ed5i x\u1eed l\u00fd ch\u1eadm h\u01a1n v\u00e0 chi ph\u00ed t\u00ednh to\u00e1n (gas fee) cao h\u01a1n nhi\u1ec1u so v\u1edbi c\u00e1c h\u1ec7 th\u1ed1ng t\u1eadp trung. \u0110\u1ed5i l\u1ea1i th\u00ec t\u00ednh b\u1ea5t bi\u1ebfn g\u1ea7n nh\u01b0 tuy\u1ec7t \u0111\u1ed1i, kh\u1ea3 n\u0103ng ch\u1ed1ng l\u1ed7i cao, v\u00e0 zero downtimekh\u00f4ng b\u1ecb \u201cngh\u1ec9 server\u201d gi\u1eefa ch\u1eebng nh\u01b0 web2. Ch\u01b0a h\u1ebft, EVM c\u00f2n c\u00f3 c\u01a1 ch\u1ebf gas metering nh\u01b0 \u0111\u1ed3ng h\u1ed3 \u0111o gas v\u1eady. N\u00f3 \u0111\u1ea3m b\u1ea3o r\u1eb1ng miners (ho\u1eb7c validators sau The Merge) s\u1ebd \u0111\u01b0\u1ee3c tr\u1ea3 c\u00f4ng x\u1ee9ng \u0111\u00e1ng khi th\u00eam transaction c\u1ee7a b\u1ea1n v\u00e0o block. \u0110\u1ed3ng th\u1eddi, c\u01a1 ch\u1ebf n\u00e0y ng\u0103n ch\u1eb7n \u0111o\u1ea1n code b\u1ecb loop v\u00f4 t\u1eadn. N\u1ebfu m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea1y m\u00e3i kh\u00f4ng d\u1eebng v\u00e0 v\u01b0\u1ee3t qu\u00e1 gi\u1edbi h\u1ea1n gas \u0111\u00e3 set, EVM s\u1ebd auto \u201c\u0111\u1eadp\u201d giao d\u1ecbch \u0111\u00f3, revert to\u00e0n b\u1ed9 c\u00e1c thay \u0111\u1ed5i state t\u1ea1m th\u1eddi (sandboxed state)","title":"Hi\u1ec7u n\u0103ng c\u1ee7a EVM"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/03_non_evm_protocols/","text":"What is NON-EVM ? 1. Gi\u1ea3i th\u00edch v\u1ec1 Non-EVM Non-EVM blockchains l\u00e0 c\u00e1c n\u1ec1n t\u1ea3ng phi t\u1eadp trung \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n \u0111\u1ed9c l\u1eadp, kh\u00f4ng tu\u00e2n theo c\u00e1c ti\u00eau chu\u1ea9n k\u1ef9 thu\u1eadt do Ethereum Virtual Machine (EVM) thi\u1ebft l\u1eadp. C\u00e1c giao th\u1ee9c Non-EVM (t\u1ee9c l\u00e0 kh\u00f4ng d\u00f9ng Ethereum Virtual Machine) c\u00f3 c\u00e1ch ti\u1ebfp c\u1eadn r\u1ea5t kh\u00e1c khi th\u1ef1c thi smart contract, v\u1edbi nh\u1eefng ki\u1ebfn tr\u00fac v\u00e0 t\u00ednh n\u0103ng thay th\u1ebf ri\u00eang bi\u1ec7t. Nh\u1eefng kh\u00e1c bi\u1ec7t n\u00e0y ch\u1ee7 y\u1ebfu n\u1eb1m \u1edf c\u00f4ng ngh\u1ec7 n\u1ec1n t\u1ea3ng, ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh, c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn, v\u00e0 thi\u1ebft k\u1ebf. M\u1ed9t s\u1ed1 v\u00ed d\u1ee5 ti\u00eau bi\u1ec3u: Solana: S\u1eed d\u1ee5ng ng\u00f4n ng\u1eef Rust n\u1ed5i b\u1eadt v\u1edbi t\u1ed1c \u0111\u1ed9 x\u1eed l\u00fd cao v\u00e0 th\u1eddi gian block c\u1ef1c ng\u1eafn. \u0110\u00e2y l\u00e0 m\u1ed9t blockchai h\u01b0\u1edbng t\u1edbi hi\u1ec7u n\u0103ng t\u1ed1i \u0111a thay v\u00ec kh\u1ea3 n\u0103ng t\u01b0\u01a1ng t\u00e1c gi\u1eefa c\u00e1c chain. Polkadot: D\u1ef1a tr\u00ean n\u1ec1n t\u1ea3ng WebAssembly (WASM) \u0111\u1ec3 tri\u1ec3n khai smart contract, Polkadot \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf v\u1edbi m\u1ee5c ti\u00eau interoperability t\u1ee9c kh\u1ea3 n\u0103ng k\u1ebft n\u1ed1i v\u00e0 t\u01b0\u01a1ng t\u00e1c gi\u1eefa nhi\u1ec1u blockchain th\u00f4ng qua c\u00e1c parachain v\u00e0 relay chain. Cosmos: Ch\u1ea1y tr\u00ean c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn Tendermint v\u00e0 framework Cosmos SDK, Cosmos t\u1eadp trung v\u00e0o kh\u1ea3 n\u0103ng x\u00e2y d\u1ef1ng c\u00e1c blockchain \u0111\u1ed9c l\u1eadp nh\u01b0ng v\u1eabn c\u00f3 th\u1ec3 giao ti\u1ebfp v\u1edbi nhau qua IBC (Inter-Blockchain Communication). 2. L\u1ee3i th\u1ebf c\u1ee7a Non-EVM blockchain l\u00e0 g\u00ec? 2.1 Gi\u1ea3m chi ph\u00ed giao d\u1ecbch (Gas Fee) M\u1ed9t trong nh\u1eefng h\u1ea1n ch\u1ebf l\u1edbn nh\u1ea5t c\u1ee7a Ethereum l\u00e0 chi ph\u00ed giao d\u1ecbch cao, \u0111\u1eb7c bi\u1ec7t trong th\u1eddi \u0111i\u1ec3m m\u1ea1ng l\u01b0\u1edbi b\u1ecb t\u1eafc ngh\u1ebdn. \u0110i\u1ec1u n\u00e0y g\u00e2y c\u1ea3n tr\u1edf cho ng\u01b0\u1eddi d\u00f9ng ph\u1ed5 th\u00f4ng c\u0169ng nh\u01b0 c\u00e1c \u1ee9ng d\u1ee5ng \u0111\u00f2i h\u1ecfi s\u1ed1 l\u01b0\u1ee3ng l\u1edbn giao d\u1ecbch v\u1edbi chi ph\u00ed th\u1ea5p. Ng\u01b0\u1ee3c l\u1ea1i, c\u00e1c n\u1ec1n t\u1ea3ng non-EVM th\u01b0\u1eddng \u00e1p d\u1ee5ng nh\u1eefng c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn kh\u00e1c v\u00e0 m\u00f4 h\u00ecnh t\u00ednh ph\u00ed linh ho\u1ea1t h\u01a1n. Nh\u1edd v\u1eady, c\u00f3 th\u1ec3 duy tr\u00ec chi ph\u00ed giao d\u1ecbch \u1edf m\u1ee9c th\u1ea5p h\u01a1n, qua \u0111\u00f3 t\u0103ng kh\u1ea3 n\u0103ng ti\u1ebfp c\u1eadn cho ng\u01b0\u1eddi d\u00f9ng v\u00e0 h\u1ed7 tr\u1ee3 c\u00e1c \u1ee9ng d\u1ee5ng c\u00f3 nhu c\u1ea7u x\u1eed l\u00fd giao d\u1ecbch l\u1edbn. 2.2 C\u1ea3i thi\u1ec7n t\u1ed1c \u0111\u1ed9 x\u1eed l\u00fd giao d\u1ecbch Nhi\u1ec1u non-EVM blockchain \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 t\u1ed1i \u01b0u h\u00f3a hi\u1ec7u su\u1ea5t x\u1eed l\u00fd, th\u00f4ng qua vi\u1ec7c s\u1eed d\u1ee5ng c\u00e1c m\u00e1y \u1ea3o ri\u00eang bi\u1ec7t v\u00e0 thu\u1eadt to\u00e1n \u0111\u1ed3ng thu\u1eadn nhanh h\u01a1n. \u0110i\u1ec1u n\u00e0y cho ph\u00e9p c\u00e1c n\u1ec1n t\u1ea3ng n\u00e0y \u0111\u1ea1t \u0111\u01b0\u1ee3c th\u00f4ng l\u01b0\u1ee3ng cao h\u01a1n v\u00e0 th\u1eddi gian x\u00e1c nh\u1eadn nhanh h\u01a1n, mang l\u1ea1i tr\u1ea3i nghi\u1ec7m ng\u01b0\u1eddi d\u00f9ng m\u01b0\u1ee3t m\u00e0 h\u01a1n 2.3 Kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng Nhi\u1ec1u n\u1ec1n t\u1ea3ng non-EVM \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng v\u1edbi ki\u1ebfn tr\u00fac m\u00f4-\u0111un, t\u00edch h\u1ee3p s\u1eb5n c\u00e1c gi\u1ea3i ph\u00e1p m\u1edf r\u1ed9ng nh\u01b0 sharding, consensus hi\u1ec7u qu\u1ea3 cao ho\u1eb7c c\u01a1 ch\u1ebf l\u01b0u tr\u1eef d\u1eef li\u1ec7u t\u1ed1i \u01b0u.. H\u1ea1n ch\u1ebf c\u1ee7a c\u00e1c n\u1ec1n t\u1ea3ng Non-EVM D\u00f9 mang l\u1ea1i nhi\u1ec1u \u01b0u \u0111i\u1ec3m v\u1ec1 hi\u1ec7u n\u0103ng v\u00e0 kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng, c\u00e1c blockchain kh\u00f4ng t\u01b0\u01a1ng th\u00edch v\u1edbi EVM v\u1eabn t\u1ed3n t\u1ea1i m\u1ed9t s\u1ed1 h\u1ea1n ch\u1ebf \u0111\u00e1ng l\u01b0u \u00fd: Do kh\u00f4ng t\u01b0\u01a1ng th\u00edch v\u1edbi chu\u1ea9n EVM, c\u00e1c n\u1ec1n t\u1ea3ng n\u00e0y th\u01b0\u1eddng y\u00eau c\u1ea7u team dev ph\u1ea3i l\u00e0m quen v\u1edbi m\u1ed9t h\u1ec7 sinh th\u00e1i ho\u00e0n to\u00e0n m\u1edbi t\u1eeb c\u00f4ng c\u1ee5 ph\u00e1t tri\u1ec3n, ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh, \u0111\u1ebfn c\u01a1 ch\u1ebf tri\u1ec3n khai. \u0110i\u1ec1u n\u00e0y l\u00e0m t\u0103ngth\u1eddi gian ph\u00e1t tri\u1ec3n, \u0111\u1eb7c bi\u1ec7t v\u1edbi c\u00e1c \u0111\u1ed9i ng\u0169 v\u1ed1n quen thu\u1ed9c v\u1edbi EVM stack. Kh\u00f4ng ch\u1ec9 \u0111\u1ed1i v\u1edbi developer, c\u1ea3 ng\u01b0\u1eddi d\u00f9ng c\u0169ng ph\u1ea3i th\u00edch nghi v\u1edbi c\u00e1c v\u00ed, c\u00f4ng c\u1ee5, v\u00e0 c\u00e1ch t\u01b0\u01a1ng t\u00e1c m\u1edbi. Vi\u1ec7c thi\u1ebfu ti\u00eau chu\u1ea9n chung d\u1eabn \u0111\u1ebfn \u0111\u01b0\u1eddng cong h\u1ecdc t\u1eadp cao h\u01a1n, khi\u1ebfn non-EVM kh\u00f3 ti\u1ebfp c\u1eadn v\u1edbi c\u1ed9ng \u0111\u1ed3ng Web3 ph\u1ed5 th\u00f4ng. Kh\u00f4ng ch\u1ec9 \u0111\u1ed1i v\u1edbi developer, c\u1ea3 ng\u01b0\u1eddi d\u00f9ng c\u0169ng ph\u1ea3i th\u00edch nghi v\u1edbi c\u00e1c v\u00ed, c\u00f4ng c\u1ee5, v\u00e0 c\u00e1ch t\u01b0\u01a1ng t\u00e1c m\u1edbi. Vi\u1ec7c thi\u1ebfu ti\u00eau chu\u1ea9n chung d\u1eabn \u0111\u1ebfn \u0111\u01b0\u1eddng cong h\u1ecdc t\u1eadp cao h\u01a1n, khi\u1ebfn non-EVM kh\u00f3 ti\u1ebfp c\u1eadn v\u1edbi c\u1ed9ng \u0111\u1ed3ng Web3 ph\u1ed5 th\u00f4ng. Kh\u00f3 kh\u0103n \u1edf ph\u1ea7n migration, v\u00ec vi\u1ec7c chuy\u1ec3n m\u1ed9t \u1ee9ng d\u1ee5ng t\u1eeb EVM sang non-EVM th\u01b0\u1eddng \u0111\u00f2i h\u1ecfi ph\u1ea3i vi\u1ebft l\u1ea1i to\u00e0n b\u1ed9 smart contract, thay \u0111\u1ed5i ki\u1ebfn tr\u00fac backend/frontend v\u00e0 t\u00edch h\u1ee3p l\u1ea1i c\u00e1c c\u00f4ng c\u1ee5 m\u1edbi t\u1eeb \u0111\u1ea7u. Qu\u00e1 tr\u00ecnh n\u00e0y kh\u00f4ng ch\u1ec9 ph\u1ee9c t\u1ea1p m\u00e0 c\u00f2n ti\u1ec1m \u1ea9n nhi\u1ec1u r\u1ee7i ro k\u1ef9 thu\u1eadt. H\u1ec7 sinh th\u00e1i c\u00f2n ph\u00e2n m\u1ea3nh do s\u1ed1 l\u01b0\u1ee3ng d\u1ef1 \u00e1n, c\u00f4ng c\u1ee5 h\u1ed7 tr\u1ee3 v\u00e0 c\u1ed9ng \u0111\u1ed3ng tr\u00ean c\u00e1c non-EVM chain hi\u1ec7n v\u1eabn c\u00f2n h\u1ea1n ch\u1ebf so v\u1edbi h\u1ec7 sinh th\u00e1i EVM 3. S\u1ef1 \u0111a d\u1ea1ng ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh Vi\u1ec7c c\u00e1c blockchain project s\u1eed d\u1ee5ng nhi\u1ec1u ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh kh\u00e1c nhau nh\u01b0 Rust, Move hay Go.. cho th\u1ea5y s\u1ef1 \u0111a d\u1ea1ng v\u00e0 kh\u00f4ng ng\u1eebng ph\u00e1t tri\u1ec3n c\u1ee7a c\u00f4ng ngh\u1ec7 n\u00e0y. M\u1ed7i ng\u00f4n ng\u1eef \u0111\u1ec1u c\u00f3 \u01b0u \u0111i\u1ec3m ri\u00eang, ph\u00f9 h\u1ee3p v\u1edbi t\u1eebng lo\u1ea1i nhu c\u1ea7u v\u00e0 t\u01b0 duy thi\u1ebft k\u1ebf c\u1ee7a dev c\u0169ng nh\u01b0 d\u1ef1 \u00e1n. 3.1 Rust in Blockchain Development Hi\u1ec7u n\u0103ng v\u00e0 an to\u00e0n b\u1ed9 nh\u1edb: Rust \u0111\u01b0\u1ee3c \u0111\u00e1nh gi\u00e1 cao nh\u1edd kh\u1ea3 n\u0103ng ki\u1ec3m so\u00e1t b\u1ed9 nh\u1edb nghi\u00eam ng\u1eb7t m\u00e0 kh\u00f4ng c\u1ea7n garbage collector, gi\u00fap lo\u1ea1i b\u1ecf nhi\u1ec1u l\u1edbp l\u1ed7i nguy hi\u1ec3m trong runtime m\u1ed9t y\u1ebfu t\u1ed1 c\u1ef1c k\u1ef3 quan tr\u1ecdng trong defi. H\u1ed7 tr\u1ee3 concurrency v\u01b0\u1ee3t tr\u1ed9i: V\u1edbi c\u01a1 ch\u1ebf thread-safe m\u1eb7c \u0111\u1ecbnh, Rust r\u1ea5t ph\u00f9 h\u1ee3p cho x\u1eed l\u00fd song song m\u1ed9t y\u00eau c\u1ea7u thi\u1ebft y\u1ebfu trong m\u1ea1ng l\u01b0\u1edbi blockchain c\u00f3 throughput cao. V\u00ed d\u1ee5 nh\u01b0 Solana x\u00e2y d\u1ef1ng to\u00e0n b\u1ed9 h\u1ec7 sinh th\u00e1i v\u1edbi Rust l\u00e0m ng\u00f4n ng\u1eef ch\u00ednh, nh\u1eafm \u0111\u1ebfn m\u1ee5c ti\u00eau high-performance v\u00e0 low-latency. Th\u00e2m ch\u00ed Parity Ethereum (client c\u0169 c\u1ee7a Ethereum) c\u0169ng \u0111\u01b0\u1ee3c vi\u1ebft b\u1eb1ng Rust. V\u00e0 Polkadot , m\u1ed9t n\u1ec1n t\u1ea3ng multi-chain, s\u1eed d\u1ee5ng Substrateframework vi\u1ebft ho\u00e0n to\u00e0n b\u1eb1ng Rust. 3.2 Go in Blockchain development Go n\u1ed5i b\u1eadt nh\u1edd c\u00fa ph\u00e1p \u0111\u01a1n gi\u1ea3n, t\u1ed1c \u0111\u1ed9 compile nhanh v\u00e0 b\u1ed9 th\u01b0 vi\u1ec7n chu\u1ea9n m\u1ea1nh. \u0110i\u1ec1u n\u00e0y gi\u00fap r\u00fat ng\u1eafn th\u1eddi gian ph\u00e1t tri\u1ec3n v\u00e0 tri\u1ec3n khai \u1ee9ng d\u1ee5ng blockchain. C\u01a1 ch\u1ebf concurrency nh\u1eb9 gi\u00fap Go \u0111\u1eb7c bi\u1ec7t ph\u00f9 h\u1ee3p \u0111\u1ec3 x\u00e2y d\u1ef1ng m\u1ea1ng l\u01b0\u1edbi node l\u1edbn, giao ti\u1ebfp th\u01b0\u1eddng xuy\u00ean v\u00e0 y\u00eau c\u1ea7u \u1ed5n \u0111\u1ecbnh cao. C\u00e1c d\u1ef1 \u00e1n s\u1eed d\u1ee5ng Go nh\u01b0 Geth , Hyperledger Fabric v\u00e0 c\u1ea3 Cosmos SDK 3.3 Move - Ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh qu\u1ea3n l\u00fd resources T\u00ednh m\u00f4-\u0111un, \u0111\u1ecbnh h\u01b0\u1edbng t\u00e0i s\u1ea3n (resource-oriented): Move \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1eb7c bi\u1ec7t cho blockchain, v\u1edbi c\u01a1 ch\u1ebf qu\u1ea3n l\u00fd t\u00e0i s\u1ea3n d\u01b0\u1edbi d\u1ea1ng resource \u2013 \u0111\u1ea3m b\u1ea3o t\u00e0i s\u1ea3n kh\u00f4ng b\u1ecb sao ch\u00e9p ho\u1eb7c m\u1ea5t m\u00e1t ngo\u00e0i \u00fd mu\u1ed1n. \u0110i\u1ec1u n\u00e0y t\u1ea1o l\u1edbp b\u1ea3o m\u1eadt m\u1eb7c \u0111\u1ecbnh m\u00e0 h\u1ea7u h\u1ebft c\u00e1c ng\u00f4n ng\u1eef kh\u00e1c ph\u1ea3i x\u1eed l\u00fd th\u1ee7 c\u00f4ng. \u0110\u01b0\u1ee3c t\u1ed1i \u01b0u cho on-chain logic: Move c\u00f3 kh\u1ea3 n\u0103ng express logic ph\u1ee9c t\u1ea1p m\u1ed9t c\u00e1ch an to\u00e0n, \u0111\u1eb7c bi\u1ec7t l\u00e0 c\u00e1c primitive nh\u01b0 capability, permission, ho\u1eb7c rules. H\u1ec7 sinh th\u00e1i s\u1eed d\u1ee5ng Move: nh\u01b0 Sui, Aptos hay Movement. Do Move v\u1eabn c\u00f2n m\u1edbi, c\u00f4ng c\u1ee5 v\u00e0 c\u1ed9ng \u0111\u1ed3ng v\u1eabn \u0111ang ph\u00e1t tri\u1ec3n. Tuy nhi\u00ean, c\u00e1c h\u1ec7 sinh th\u00e1i nh\u01b0 Sui \u0111\u00e3 cung c\u1ea5p c\u00e1c toolchain m\u1ea1nh B\u00ean c\u1ea1nh \u0111\u00f3 c\u00f2n nhi\u1ec1u ng\u00f4n ng\u1eef kh\u00e1c... T\u00e1c \u0111\u1ed9ng vi\u1ec7c l\u1ef1a ch\u1ecdn ng\u00f4n ng\u1eef Vi\u1ec7c l\u1ef1a ch\u1ecdn ng\u00f4n ng\u1eef s\u1ebd quy\u1ebft \u0111\u1ecbnh m\u1ee9c \u0111\u1ed9 d\u1ec5 ti\u1ebfp c\u1eadn c\u1ee7a m\u1ed9t blockchain \u0111\u1ed1i v\u1edbi dev m\u1edbi. Go thu h\u00fat \u0111\u00f4ng \u0111\u1ea3o developer Web2, Rust v\u00e0 Move th\u00ec thu h\u00fat nh\u1eefng dev chuy\u00ean s\u00e2u, t\u1eadp trung v\u00e0o hi\u1ec7u su\u1ea5t v\u00e0 an to\u00e0n.","title":"What is NON-EVM ?"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/03_non_evm_protocols/#what-is-non-evm","text":"","title":"What is NON-EVM ?"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/03_non_evm_protocols/#1-giai-thich-ve-non-evm","text":"Non-EVM blockchains l\u00e0 c\u00e1c n\u1ec1n t\u1ea3ng phi t\u1eadp trung \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n \u0111\u1ed9c l\u1eadp, kh\u00f4ng tu\u00e2n theo c\u00e1c ti\u00eau chu\u1ea9n k\u1ef9 thu\u1eadt do Ethereum Virtual Machine (EVM) thi\u1ebft l\u1eadp. C\u00e1c giao th\u1ee9c Non-EVM (t\u1ee9c l\u00e0 kh\u00f4ng d\u00f9ng Ethereum Virtual Machine) c\u00f3 c\u00e1ch ti\u1ebfp c\u1eadn r\u1ea5t kh\u00e1c khi th\u1ef1c thi smart contract, v\u1edbi nh\u1eefng ki\u1ebfn tr\u00fac v\u00e0 t\u00ednh n\u0103ng thay th\u1ebf ri\u00eang bi\u1ec7t. Nh\u1eefng kh\u00e1c bi\u1ec7t n\u00e0y ch\u1ee7 y\u1ebfu n\u1eb1m \u1edf c\u00f4ng ngh\u1ec7 n\u1ec1n t\u1ea3ng, ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh, c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn, v\u00e0 thi\u1ebft k\u1ebf. M\u1ed9t s\u1ed1 v\u00ed d\u1ee5 ti\u00eau bi\u1ec3u: Solana: S\u1eed d\u1ee5ng ng\u00f4n ng\u1eef Rust n\u1ed5i b\u1eadt v\u1edbi t\u1ed1c \u0111\u1ed9 x\u1eed l\u00fd cao v\u00e0 th\u1eddi gian block c\u1ef1c ng\u1eafn. \u0110\u00e2y l\u00e0 m\u1ed9t blockchai h\u01b0\u1edbng t\u1edbi hi\u1ec7u n\u0103ng t\u1ed1i \u0111a thay v\u00ec kh\u1ea3 n\u0103ng t\u01b0\u01a1ng t\u00e1c gi\u1eefa c\u00e1c chain. Polkadot: D\u1ef1a tr\u00ean n\u1ec1n t\u1ea3ng WebAssembly (WASM) \u0111\u1ec3 tri\u1ec3n khai smart contract, Polkadot \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf v\u1edbi m\u1ee5c ti\u00eau interoperability t\u1ee9c kh\u1ea3 n\u0103ng k\u1ebft n\u1ed1i v\u00e0 t\u01b0\u01a1ng t\u00e1c gi\u1eefa nhi\u1ec1u blockchain th\u00f4ng qua c\u00e1c parachain v\u00e0 relay chain. Cosmos: Ch\u1ea1y tr\u00ean c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn Tendermint v\u00e0 framework Cosmos SDK, Cosmos t\u1eadp trung v\u00e0o kh\u1ea3 n\u0103ng x\u00e2y d\u1ef1ng c\u00e1c blockchain \u0111\u1ed9c l\u1eadp nh\u01b0ng v\u1eabn c\u00f3 th\u1ec3 giao ti\u1ebfp v\u1edbi nhau qua IBC (Inter-Blockchain Communication).","title":"1. Gi\u1ea3i th\u00edch v\u1ec1 Non-EVM"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/03_non_evm_protocols/#2-loi-the-cua-non-evm-blockchain-la-gi","text":"","title":"2. L\u1ee3i th\u1ebf c\u1ee7a Non-EVM blockchain l\u00e0 g\u00ec?"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/03_non_evm_protocols/#21-giam-chi-phi-giao-dich-gas-fee","text":"M\u1ed9t trong nh\u1eefng h\u1ea1n ch\u1ebf l\u1edbn nh\u1ea5t c\u1ee7a Ethereum l\u00e0 chi ph\u00ed giao d\u1ecbch cao, \u0111\u1eb7c bi\u1ec7t trong th\u1eddi \u0111i\u1ec3m m\u1ea1ng l\u01b0\u1edbi b\u1ecb t\u1eafc ngh\u1ebdn. \u0110i\u1ec1u n\u00e0y g\u00e2y c\u1ea3n tr\u1edf cho ng\u01b0\u1eddi d\u00f9ng ph\u1ed5 th\u00f4ng c\u0169ng nh\u01b0 c\u00e1c \u1ee9ng d\u1ee5ng \u0111\u00f2i h\u1ecfi s\u1ed1 l\u01b0\u1ee3ng l\u1edbn giao d\u1ecbch v\u1edbi chi ph\u00ed th\u1ea5p. Ng\u01b0\u1ee3c l\u1ea1i, c\u00e1c n\u1ec1n t\u1ea3ng non-EVM th\u01b0\u1eddng \u00e1p d\u1ee5ng nh\u1eefng c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn kh\u00e1c v\u00e0 m\u00f4 h\u00ecnh t\u00ednh ph\u00ed linh ho\u1ea1t h\u01a1n. Nh\u1edd v\u1eady, c\u00f3 th\u1ec3 duy tr\u00ec chi ph\u00ed giao d\u1ecbch \u1edf m\u1ee9c th\u1ea5p h\u01a1n, qua \u0111\u00f3 t\u0103ng kh\u1ea3 n\u0103ng ti\u1ebfp c\u1eadn cho ng\u01b0\u1eddi d\u00f9ng v\u00e0 h\u1ed7 tr\u1ee3 c\u00e1c \u1ee9ng d\u1ee5ng c\u00f3 nhu c\u1ea7u x\u1eed l\u00fd giao d\u1ecbch l\u1edbn.","title":"2.1 Gi\u1ea3m chi ph\u00ed giao d\u1ecbch (Gas Fee)"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/03_non_evm_protocols/#22-cai-thien-toc-o-xu-ly-giao-dich","text":"Nhi\u1ec1u non-EVM blockchain \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 t\u1ed1i \u01b0u h\u00f3a hi\u1ec7u su\u1ea5t x\u1eed l\u00fd, th\u00f4ng qua vi\u1ec7c s\u1eed d\u1ee5ng c\u00e1c m\u00e1y \u1ea3o ri\u00eang bi\u1ec7t v\u00e0 thu\u1eadt to\u00e1n \u0111\u1ed3ng thu\u1eadn nhanh h\u01a1n. \u0110i\u1ec1u n\u00e0y cho ph\u00e9p c\u00e1c n\u1ec1n t\u1ea3ng n\u00e0y \u0111\u1ea1t \u0111\u01b0\u1ee3c th\u00f4ng l\u01b0\u1ee3ng cao h\u01a1n v\u00e0 th\u1eddi gian x\u00e1c nh\u1eadn nhanh h\u01a1n, mang l\u1ea1i tr\u1ea3i nghi\u1ec7m ng\u01b0\u1eddi d\u00f9ng m\u01b0\u1ee3t m\u00e0 h\u01a1n","title":"2.2 C\u1ea3i thi\u1ec7n t\u1ed1c \u0111\u1ed9 x\u1eed l\u00fd giao d\u1ecbch"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/03_non_evm_protocols/#23-kha-nang-mo-rong","text":"Nhi\u1ec1u n\u1ec1n t\u1ea3ng non-EVM \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng v\u1edbi ki\u1ebfn tr\u00fac m\u00f4-\u0111un, t\u00edch h\u1ee3p s\u1eb5n c\u00e1c gi\u1ea3i ph\u00e1p m\u1edf r\u1ed9ng nh\u01b0 sharding, consensus hi\u1ec7u qu\u1ea3 cao ho\u1eb7c c\u01a1 ch\u1ebf l\u01b0u tr\u1eef d\u1eef li\u1ec7u t\u1ed1i \u01b0u..","title":"2.3 Kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/03_non_evm_protocols/#han-che-cua-cac-nen-tang-non-evm","text":"D\u00f9 mang l\u1ea1i nhi\u1ec1u \u01b0u \u0111i\u1ec3m v\u1ec1 hi\u1ec7u n\u0103ng v\u00e0 kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng, c\u00e1c blockchain kh\u00f4ng t\u01b0\u01a1ng th\u00edch v\u1edbi EVM v\u1eabn t\u1ed3n t\u1ea1i m\u1ed9t s\u1ed1 h\u1ea1n ch\u1ebf \u0111\u00e1ng l\u01b0u \u00fd: Do kh\u00f4ng t\u01b0\u01a1ng th\u00edch v\u1edbi chu\u1ea9n EVM, c\u00e1c n\u1ec1n t\u1ea3ng n\u00e0y th\u01b0\u1eddng y\u00eau c\u1ea7u team dev ph\u1ea3i l\u00e0m quen v\u1edbi m\u1ed9t h\u1ec7 sinh th\u00e1i ho\u00e0n to\u00e0n m\u1edbi t\u1eeb c\u00f4ng c\u1ee5 ph\u00e1t tri\u1ec3n, ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh, \u0111\u1ebfn c\u01a1 ch\u1ebf tri\u1ec3n khai. \u0110i\u1ec1u n\u00e0y l\u00e0m t\u0103ngth\u1eddi gian ph\u00e1t tri\u1ec3n, \u0111\u1eb7c bi\u1ec7t v\u1edbi c\u00e1c \u0111\u1ed9i ng\u0169 v\u1ed1n quen thu\u1ed9c v\u1edbi EVM stack. Kh\u00f4ng ch\u1ec9 \u0111\u1ed1i v\u1edbi developer, c\u1ea3 ng\u01b0\u1eddi d\u00f9ng c\u0169ng ph\u1ea3i th\u00edch nghi v\u1edbi c\u00e1c v\u00ed, c\u00f4ng c\u1ee5, v\u00e0 c\u00e1ch t\u01b0\u01a1ng t\u00e1c m\u1edbi. Vi\u1ec7c thi\u1ebfu ti\u00eau chu\u1ea9n chung d\u1eabn \u0111\u1ebfn \u0111\u01b0\u1eddng cong h\u1ecdc t\u1eadp cao h\u01a1n, khi\u1ebfn non-EVM kh\u00f3 ti\u1ebfp c\u1eadn v\u1edbi c\u1ed9ng \u0111\u1ed3ng Web3 ph\u1ed5 th\u00f4ng. Kh\u00f4ng ch\u1ec9 \u0111\u1ed1i v\u1edbi developer, c\u1ea3 ng\u01b0\u1eddi d\u00f9ng c\u0169ng ph\u1ea3i th\u00edch nghi v\u1edbi c\u00e1c v\u00ed, c\u00f4ng c\u1ee5, v\u00e0 c\u00e1ch t\u01b0\u01a1ng t\u00e1c m\u1edbi. Vi\u1ec7c thi\u1ebfu ti\u00eau chu\u1ea9n chung d\u1eabn \u0111\u1ebfn \u0111\u01b0\u1eddng cong h\u1ecdc t\u1eadp cao h\u01a1n, khi\u1ebfn non-EVM kh\u00f3 ti\u1ebfp c\u1eadn v\u1edbi c\u1ed9ng \u0111\u1ed3ng Web3 ph\u1ed5 th\u00f4ng. Kh\u00f3 kh\u0103n \u1edf ph\u1ea7n migration, v\u00ec vi\u1ec7c chuy\u1ec3n m\u1ed9t \u1ee9ng d\u1ee5ng t\u1eeb EVM sang non-EVM th\u01b0\u1eddng \u0111\u00f2i h\u1ecfi ph\u1ea3i vi\u1ebft l\u1ea1i to\u00e0n b\u1ed9 smart contract, thay \u0111\u1ed5i ki\u1ebfn tr\u00fac backend/frontend v\u00e0 t\u00edch h\u1ee3p l\u1ea1i c\u00e1c c\u00f4ng c\u1ee5 m\u1edbi t\u1eeb \u0111\u1ea7u. Qu\u00e1 tr\u00ecnh n\u00e0y kh\u00f4ng ch\u1ec9 ph\u1ee9c t\u1ea1p m\u00e0 c\u00f2n ti\u1ec1m \u1ea9n nhi\u1ec1u r\u1ee7i ro k\u1ef9 thu\u1eadt. H\u1ec7 sinh th\u00e1i c\u00f2n ph\u00e2n m\u1ea3nh do s\u1ed1 l\u01b0\u1ee3ng d\u1ef1 \u00e1n, c\u00f4ng c\u1ee5 h\u1ed7 tr\u1ee3 v\u00e0 c\u1ed9ng \u0111\u1ed3ng tr\u00ean c\u00e1c non-EVM chain hi\u1ec7n v\u1eabn c\u00f2n h\u1ea1n ch\u1ebf so v\u1edbi h\u1ec7 sinh th\u00e1i EVM","title":"H\u1ea1n ch\u1ebf c\u1ee7a c\u00e1c n\u1ec1n t\u1ea3ng Non-EVM"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/03_non_evm_protocols/#3-su-a-dang-ngon-ngu-lap-trinh","text":"Vi\u1ec7c c\u00e1c blockchain project s\u1eed d\u1ee5ng nhi\u1ec1u ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh kh\u00e1c nhau nh\u01b0 Rust, Move hay Go.. cho th\u1ea5y s\u1ef1 \u0111a d\u1ea1ng v\u00e0 kh\u00f4ng ng\u1eebng ph\u00e1t tri\u1ec3n c\u1ee7a c\u00f4ng ngh\u1ec7 n\u00e0y. M\u1ed7i ng\u00f4n ng\u1eef \u0111\u1ec1u c\u00f3 \u01b0u \u0111i\u1ec3m ri\u00eang, ph\u00f9 h\u1ee3p v\u1edbi t\u1eebng lo\u1ea1i nhu c\u1ea7u v\u00e0 t\u01b0 duy thi\u1ebft k\u1ebf c\u1ee7a dev c\u0169ng nh\u01b0 d\u1ef1 \u00e1n.","title":"3. S\u1ef1 \u0111a d\u1ea1ng ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/03_non_evm_protocols/#31-rust-in-blockchain-development","text":"Hi\u1ec7u n\u0103ng v\u00e0 an to\u00e0n b\u1ed9 nh\u1edb: Rust \u0111\u01b0\u1ee3c \u0111\u00e1nh gi\u00e1 cao nh\u1edd kh\u1ea3 n\u0103ng ki\u1ec3m so\u00e1t b\u1ed9 nh\u1edb nghi\u00eam ng\u1eb7t m\u00e0 kh\u00f4ng c\u1ea7n garbage collector, gi\u00fap lo\u1ea1i b\u1ecf nhi\u1ec1u l\u1edbp l\u1ed7i nguy hi\u1ec3m trong runtime m\u1ed9t y\u1ebfu t\u1ed1 c\u1ef1c k\u1ef3 quan tr\u1ecdng trong defi. H\u1ed7 tr\u1ee3 concurrency v\u01b0\u1ee3t tr\u1ed9i: V\u1edbi c\u01a1 ch\u1ebf thread-safe m\u1eb7c \u0111\u1ecbnh, Rust r\u1ea5t ph\u00f9 h\u1ee3p cho x\u1eed l\u00fd song song m\u1ed9t y\u00eau c\u1ea7u thi\u1ebft y\u1ebfu trong m\u1ea1ng l\u01b0\u1edbi blockchain c\u00f3 throughput cao. V\u00ed d\u1ee5 nh\u01b0 Solana x\u00e2y d\u1ef1ng to\u00e0n b\u1ed9 h\u1ec7 sinh th\u00e1i v\u1edbi Rust l\u00e0m ng\u00f4n ng\u1eef ch\u00ednh, nh\u1eafm \u0111\u1ebfn m\u1ee5c ti\u00eau high-performance v\u00e0 low-latency. Th\u00e2m ch\u00ed Parity Ethereum (client c\u0169 c\u1ee7a Ethereum) c\u0169ng \u0111\u01b0\u1ee3c vi\u1ebft b\u1eb1ng Rust. V\u00e0 Polkadot , m\u1ed9t n\u1ec1n t\u1ea3ng multi-chain, s\u1eed d\u1ee5ng Substrateframework vi\u1ebft ho\u00e0n to\u00e0n b\u1eb1ng Rust.","title":"3.1 Rust in Blockchain Development"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/03_non_evm_protocols/#32-go-in-blockchain-development","text":"Go n\u1ed5i b\u1eadt nh\u1edd c\u00fa ph\u00e1p \u0111\u01a1n gi\u1ea3n, t\u1ed1c \u0111\u1ed9 compile nhanh v\u00e0 b\u1ed9 th\u01b0 vi\u1ec7n chu\u1ea9n m\u1ea1nh. \u0110i\u1ec1u n\u00e0y gi\u00fap r\u00fat ng\u1eafn th\u1eddi gian ph\u00e1t tri\u1ec3n v\u00e0 tri\u1ec3n khai \u1ee9ng d\u1ee5ng blockchain. C\u01a1 ch\u1ebf concurrency nh\u1eb9 gi\u00fap Go \u0111\u1eb7c bi\u1ec7t ph\u00f9 h\u1ee3p \u0111\u1ec3 x\u00e2y d\u1ef1ng m\u1ea1ng l\u01b0\u1edbi node l\u1edbn, giao ti\u1ebfp th\u01b0\u1eddng xuy\u00ean v\u00e0 y\u00eau c\u1ea7u \u1ed5n \u0111\u1ecbnh cao. C\u00e1c d\u1ef1 \u00e1n s\u1eed d\u1ee5ng Go nh\u01b0 Geth , Hyperledger Fabric v\u00e0 c\u1ea3 Cosmos SDK","title":"3.2 Go in Blockchain development"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/03_non_evm_protocols/#33-move-ngon-ngu-lap-trinh-quan-ly-resources","text":"T\u00ednh m\u00f4-\u0111un, \u0111\u1ecbnh h\u01b0\u1edbng t\u00e0i s\u1ea3n (resource-oriented): Move \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1eb7c bi\u1ec7t cho blockchain, v\u1edbi c\u01a1 ch\u1ebf qu\u1ea3n l\u00fd t\u00e0i s\u1ea3n d\u01b0\u1edbi d\u1ea1ng resource \u2013 \u0111\u1ea3m b\u1ea3o t\u00e0i s\u1ea3n kh\u00f4ng b\u1ecb sao ch\u00e9p ho\u1eb7c m\u1ea5t m\u00e1t ngo\u00e0i \u00fd mu\u1ed1n. \u0110i\u1ec1u n\u00e0y t\u1ea1o l\u1edbp b\u1ea3o m\u1eadt m\u1eb7c \u0111\u1ecbnh m\u00e0 h\u1ea7u h\u1ebft c\u00e1c ng\u00f4n ng\u1eef kh\u00e1c ph\u1ea3i x\u1eed l\u00fd th\u1ee7 c\u00f4ng. \u0110\u01b0\u1ee3c t\u1ed1i \u01b0u cho on-chain logic: Move c\u00f3 kh\u1ea3 n\u0103ng express logic ph\u1ee9c t\u1ea1p m\u1ed9t c\u00e1ch an to\u00e0n, \u0111\u1eb7c bi\u1ec7t l\u00e0 c\u00e1c primitive nh\u01b0 capability, permission, ho\u1eb7c rules. H\u1ec7 sinh th\u00e1i s\u1eed d\u1ee5ng Move: nh\u01b0 Sui, Aptos hay Movement. Do Move v\u1eabn c\u00f2n m\u1edbi, c\u00f4ng c\u1ee5 v\u00e0 c\u1ed9ng \u0111\u1ed3ng v\u1eabn \u0111ang ph\u00e1t tri\u1ec3n. Tuy nhi\u00ean, c\u00e1c h\u1ec7 sinh th\u00e1i nh\u01b0 Sui \u0111\u00e3 cung c\u1ea5p c\u00e1c toolchain m\u1ea1nh B\u00ean c\u1ea1nh \u0111\u00f3 c\u00f2n nhi\u1ec1u ng\u00f4n ng\u1eef kh\u00e1c...","title":"3.3 Move - Ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh qu\u1ea3n l\u00fd resources"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/03_non_evm_protocols/#tac-ong-viec-lua-chon-ngon-ngu","text":"Vi\u1ec7c l\u1ef1a ch\u1ecdn ng\u00f4n ng\u1eef s\u1ebd quy\u1ebft \u0111\u1ecbnh m\u1ee9c \u0111\u1ed9 d\u1ec5 ti\u1ebfp c\u1eadn c\u1ee7a m\u1ed9t blockchain \u0111\u1ed1i v\u1edbi dev m\u1edbi. Go thu h\u00fat \u0111\u00f4ng \u0111\u1ea3o developer Web2, Rust v\u00e0 Move th\u00ec thu h\u00fat nh\u1eefng dev chuy\u00ean s\u00e2u, t\u1eadp trung v\u00e0o hi\u1ec7u su\u1ea5t v\u00e0 an to\u00e0n.","title":"T\u00e1c \u0111\u1ed9ng vi\u1ec7c l\u1ef1a ch\u1ecdn ng\u00f4n ng\u1eef"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/04_evm_vs_non_evm/","text":"EVM vs Non-EVM - Ch\u1ecdn N\u1ec1n T\u1ea3ng N\u00e0o? Objective EVM-compatible chains: Ethereum, Polygon, Arbitrum, Base Non-EVM alternatives: Solana, Near, Sui, Aptos So s\u00e1nh performance, cost, developer experience Ethereum v\u1eeba l\u00e0 m\u1ed9t blockchain, v\u1eeba l\u00e0 m\u1ed9t lo\u1ea1i t\u00e0i s\u1ea3n k\u1ef9 thu\u1eadt s\u1ed1. Nh\u01b0ng \u0111i\u1ec3m kh\u00e1c bi\u1ec7t l\u00e0 Ethereum \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf chuy\u00ean bi\u1ec7t \u0111\u1ec3 ch\u1ea1y c\u00e1c smart contract nh\u1eefng \u0111o\u1ea1n m\u00e3 t\u1ef1 th\u1ef1c thi, kh\u00f4ng c\u1ea7n b\u00ean trung gian. Ch\u00ednh nh\u1edd smart contract m\u00e0 dev c\u00f3 th\u1ec3 build ra v\u00f4 s\u1ed1 \u1ee9ng d\u1ee5ng phi t\u1eadp trung (dApps), t\u1eeb t\u00e0i ch\u00ednh (DeFi), \u0111\u1ebfn game, NFT, social\u2026 V\u00e0 \u0111\u1ee9ng sau t\u1ea5t c\u1ea3 nh\u1eefng \u0111i\u1ec1u k\u1ef3 di\u1ec7u n\u00e0y l\u00e0 Ethereum Virtual Machine (EVM) S\u1ef1 kh\u00e1c bi\u1ec7t gi\u1eefa EVM v\u00e0 non EVM M\u1ed9t blockchain t\u01b0\u01a1ng th\u00edch v\u1edbi Ethereum kh\u00f4ng nh\u1ea5t thi\u1ebft l\u00e0 ph\u1ea3i ch\u1ea1y EVM v\u00e0 ng\u01b0\u1ee3c l\u1ea1i, m\u1ed9t blockchain kh\u00f4ng ph\u1ea3i EVM th\u00ec s\u1ebd kh\u00f4ng t\u01b0\u01a1ng th\u00edch v\u1edbi h\u1ec7 sinh th\u00e1i Ethereum. H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng EVM v\u00e0 non-EVM gi\u1ed1ng nh\u01b0 hai h\u1ec7 \u0111i\u1ec1u h\u00e0nh smartphone kh\u00e1c nhau. V\u00ed d\u1ee5, Android ch\u00ednh l\u00e0 \u0111\u1ea1i di\u1ec7n cho EVM. C\u00e1c \u0111i\u1ec7n tho\u1ea1i ch\u1ea1y Android (Samsung, Xiaomi, Oppo\u2026) th\u00ec d\u00f9 kh\u00e1c nhau v\u1ec1 th\u01b0\u01a1ng hi\u1ec7u, nh\u01b0ng v\u1eabn c\u00f3 th\u1ec3 c\u00e0i chung app t\u1eeb Play Store, v\u00ec t\u1ea5t c\u1ea3 \u0111\u1ec1u h\u1ed7 tr\u1ee3 Android. Ng\u01b0\u1ee3c l\u1ea1i, iOS (Apple) l\u00e0 m\u1ed9t h\u1ec7 \u0111i\u1ec1u h\u00e0nh ri\u00eang, kh\u00f4ng t\u01b0\u01a1ng th\u00edch v\u1edbi Android. App vi\u1ebft cho iOS th\u00ec kh\u00f4ng th\u1ec3 ch\u1ea1y tr\u00ean Android \u0111\u01b0\u1ee3c \u2013 t\u01b0\u01a1ng t\u1ef1 nh\u01b0 c\u00e1c blockchain non-EVM kh\u00f4ng th\u1ec3 ch\u1ea1y smart contract vi\u1ebft b\u1eb1ng Solidity. Code Comparison Example: Counter Contract V\u1edbi Solidity: pragma solidity ~0.8.0; contract Counter { uint256 public count; function (increment) external { count += 1; } } V\u1edbi rust: #[program] pub mod counter { pub fn increment(ctx: Context<Increment>) -> Result<()> { let counter = &mut ctx.accounts.counter; counter.count = counter.count.checked_add(1).unwrap(); Ok(()) } } S\u1ef1 kh\u00e1c bi\u1ec7t n\u00e0y cho c\u1ea3 \u0111o\u1ea1n m\u00e3 Solidity l\u1eabn Rust \u0111\u1ec1u ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\u00e0 t\u0103ng gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t bi\u1ebfn \u0111\u1ebfm , nh\u01b0ng c\u00e1ch ch\u00fang th\u1ef1c hi\u1ec7n \u0111i\u1ec1u \u0111\u00f3 l\u1ea1i r\u1ea5t kh\u00e1c nhau t\u1eeb c\u00e1ch m\u00f4 h\u00ecnh ho\u00e1 d\u1eef li\u1ec7u on-chain, c\u01a1 ch\u1ebf \u0111\u1ea3m b\u1ea3o an to\u00e0n, \u0111\u1ebfn c\u00e1ch t\u1ed5 ch\u1ee9c lu\u1ed3ng ph\u00e1t tri\u1ec3n cho dev. Nh\u1eefng kh\u00e1c bi\u1ec7t n\u00e0y kh\u00f4ng ch\u1ec9 \u0111\u1ebfn t\u1eeb ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh (Solidity vs Rust), m\u00e0 c\u00f2n ph\u1ea3n \u00e1nh thi\u1ebft k\u1ebf v\u00e0 c\u1ea5u tr\u00fac c\u1ee7a t\u1eebng m\u00e1y \u1ea3o (EVM v\u1edbi Solidity v\u00e0 Solana VM v\u1edbi Anchor/Rust). \u0110i\u1ec1u n\u00e0y \u1ea3nh h\u01b0\u1edfng tr\u1ef1c ti\u1ebfp \u0111\u1ebfn tr\u1ea3i nghi\u1ec7m c\u1ee7a developer v\u00e0 c\u00e1ch h\u1ecd t\u01b0 duy khi x\u00e2y d\u1ef1ng smart contract tr\u00ean m\u1ed7i n\u1ec1n t\u1ea3ng. V\u00ed d\u1ee5 nh\u01b0 s\u1ef1 kh\u00e1c nhau v\u1ec1 Type Safety & Error Handling : Tr\u00ean Solidity, ta th\u01b0\u1eddng d\u00f9ng c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u c\u01a1 b\u1ea3n nh\u01b0 uint256, address. C\u00e1c l\u1ed7i logic (nh\u01b0 chia cho 0, overflow, truy c\u1eadp sai state\u2026) ch\u1ec9 \u0111\u01b0\u1ee3c ph\u00e1t hi\u1ec7n khi giao d\u1ecbch th\u1ef1c s\u1ef1 ch\u1ea1y tr\u00ean blockchain, t\u1ee9c l\u00e0 khi \u0111\u00e3 t\u1ed1n ph\u00ed gas. \u0110i\u1ec1u n\u00e0y khi\u1ebfn smart contract d\u1ec5 b\u1ecb bug n\u1ebfu kh\u00f4ng test k\u1ef9 t\u1eeb tr\u01b0\u1edbc. C\u00f2n rust th\u00ec cho ph\u00e9p ki\u1ec3m tra l\u1ed7i ngay t\u1eeb th\u1eddi \u0111i\u1ec3m bi\u00ean d\u1ecbch v\u00ec Rust n\u1ed5i ti\u1ebfn v\u1edbi kh\u1ea3 n\u0103ng memory safety n\u00ean. Framework Anchor tr\u00ean Solana t\u1eadn d\u1ee5ng \u0111i\u1ec1u n\u00e0y b\u1eb1ng c\u00e1ch y\u00eau c\u1ea7u developer ph\u1ea3i x\u1eed l\u00fd r\u00f5 r\u00e0ng t\u1eebng kh\u1ea3 n\u0103ng l\u1ed7i (th\u00f4ng qua Result<T, E> ), nh\u1edd \u0111\u00f3 t\u0103ng \u0111\u1ed9 tin c\u1eady v\u00e0 an to\u00e0n c\u1ee7a smart contract tr\u01b0\u1edbc khi deploy. Ho\u1eb7c n\u00f3i v\u1ec1 DevX: * Solidity/EVM: H\u1ec7 sinh th\u00e1i \u0111\u00e3 ho\u00e0n thi\u1ec7n v\u1edbi nhi\u1ec1u tool nh\u01b0 Hardhat, Remix, Truffle. Vi\u1ec7c setup v\u00e0 test c\u1ef1c k\u1ef3 nhanh ch\u00f3ng, ph\u00f9 h\u1ee3p cho c\u1ea3 dev m\u1edbi l\u1eabn team production. Rust/Anchor: D\u00f9 \u0111ang ph\u00e1t tri\u1ec3n nhanh v\u1edbi Anchor CLI , Solana localnet, nh\u01b0ng v\u1eabn \u0111\u00f2i h\u1ecfi ki\u1ebfn th\u1ee9c n\u1ec1n t\u1ed1t v\u00e0 th\u1eddi gian compile/test d\u00e0i h\u01a1n \u0111\u00e1ng k\u1ec3. Security v\u00e0 Auditing D\u00f9 n\u1ec1n t\u1ea3ng l\u00e0 EVM hay non-EVM, b\u1ea3o m\u1eadt lu\u00f4n l\u00e0 y\u1ebfu t\u1ed1 t\u1ed1i quan tr\u1ecdng trong ph\u00e1t tri\u1ec3n smart contract. Tuy nhi\u00ean, c\u00e1ch ti\u1ebfp c\u1eadn c\u1ee7a hai h\u1ec7 sinh th\u00e1i l\u1ea1i kh\u00e1c nhau \u0111\u00e1ng k\u1ec3. EVM/Solidity: Ph\u00e1t hi\u1ec7n l\u1ed7i \u1edf runtime th\u01b0\u1eddng d\u00f9ng tool & library Trong m\u00f4i tr\u01b0\u1eddng EVM, developer th\u01b0\u1eddng ph\u1ea3i ch\u1ee7 \u0111\u1ed9ng secure contract kh\u1ecfi c\u00e1c l\u1ed7i ph\u1ed5 bi\u1ebfn nh\u01b0: * Reentrancy (g\u1ecdi l\u1ea1i contract g\u00e2y l\u1ed7i logic) * Integer overflow/underflow * External call kh\u00f4ng \u0111\u01b0\u1ee3c ki\u1ec3m tra \u0111\u00fang c\u00e1ch... \u0110\u1ec3 x\u1eed l\u00fd, h\u1ecd th\u01b0\u1eddng d\u00f9ng c\u00e1c th\u1eed vi\u1ec7n \u0111\u00e3 audit v\u00ed d\u1ee5 nh\u01b0 OpenZeppelin.. ho\u1eb7c c\u00e1c toool \u0111\u1ec3 qu\u00e9t l\u1ed7 h\u1ed5ng. Ho\u1eb7c c\u00e1c pattern nh\u01b0 modifier , interface .. gi\u00fap enforce logic truy c\u1eadp( access controls ). Trong khi \u0111\u00f3, c\u00e1c ng\u00f4n ng\u1eef nh\u01b0 Rust d\u00f9ng C\u01a1 ch\u1ebf ownership v\u00e0 borrow checker lo\u1ea1i b\u1ecf h\u1ea7u h\u1ebft c\u00e1c l\u1ed7i li\u00ean quan \u0111\u1ebfn qu\u1ea3n l\u00fd b\u1ed9 nh\u1edb, use-after-free, hay race condition. Ho\u1eb7c l\u00e0 Move ta Resource-type system hay Sui th\u00ec Object centric model gi\u00fap \u0111\u1ea3m b\u1ea3o t\u00e0i s\u1ea3n ch\u1ec9 h\u1ec9 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1edf h\u1eefu b\u1edfi m\u1ed9t entity duy nh\u1ea5t t\u1ea1i m\u1ed9t th\u1eddi \u0111i\u1ec3m, gi\u00fap \u0111\u1ea3m b\u1ea3o logic t\u00e0i s\u1ea3n kh\u00f4ng th\u1ec3 b\u1ecb nh\u00e2n b\u1ea3n ho\u1eb7c destroy. So s\u00e1nh hi\u1ec7u n\u0103ng v\u00e0 cost c\u1ee7a EVM vs non-EVM Performance v\u00e0 cost l\u00e0 l\u00e0 m\u1ed9t trong nh\u1eefng \u0111i\u1ec3m ngh\u1ebdn d\u1ec5 th\u1ea5y nh\u1ea5t c\u1ee7a c\u00e1c blockchain t\u01b0\u01a1ng th\u00edch EVM, \u0111\u1eb7c bi\u1ec7t l\u00e0 Ethereum. Tr\u00ean Ethereum Layer 1 , hi\u1ec7u su\u1ea5t x\u1eed l\u00fd gi\u1edbi h\u1ea1n \u1edf kho\u1ea3ng 15 giao d\u1ecbch m\u1ed7i gi\u00e2y (TPS). Trong giai \u0111o\u1ea1n cao \u0111i\u1ec3m (nh\u01b0 NFT mint), m\u1ea1ng c\u00f3 th\u1ec3 t\u1eafc ngh\u1ebdn nghi\u00eam tr\u1ecdng, khi\u1ebfn ph\u00ed gas t\u0103ng v\u1ecdt c\u00f3 th\u1ec3 l\u00ean t\u1edbi h\u00e0ng ch\u1ee5c ho\u1eb7c h\u00e0ng tr\u0103m \u0111\u00f4 cho m\u1ed9t giao d\u1ecbch. \u0110\u1ec3 c\u1ea3i thi\u1ec7n, c\u00e1c gi\u1ea3i ph\u00e1p Layer-2 nh\u01b0 PolyGon hay Arbitrum , Optimism (rollups) \u0111\u00e3 \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n nh\u1eb1m x\u1eed l\u00fd giao d\u1ecbch off-chain, sau \u0111\u00f3 \u201cg\u1ed9p\u201d (batch) l\u1ea1i v\u00e0 \u0111\u01b0a l\u00ean Ethereum \u0111\u1ec3 x\u00e1c nh\u1eadn. C\u00e1c gi\u1ea3i ph\u00e1p n\u00e0y \u0111i k\u00e8m v\u1edbi trade-off ri\u00eang: * \u0110\u1ed9 tr\u1ec5(finality delay) * R\u1ee7i ro b\u1ea3o m\u1eadt li\u00ean quan \u0111\u1ebfn c\u1ea7u n\u1ed1i (bridge) v\u00e0 fraud proof Ng\u01b0\u1ee3c l\u1ea1i, c\u00e1c n\u1ec1n t\u1ea3ng non-EVM nh\u01b0 Solana ho\u1eb7c c\u00e1c chain d\u00f9ng Move (Aptos, Sui) \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 hi\u1ec7u n\u0103ng nh\u01b0 t\u1eadn d\u1ee5ng parallel execution cho ph\u00e9p nhi\u1ec1u giao d\u1ecbch ch\u1ea1y \u0111\u1ed3ng th\u1eddi Solana s\u1eed d\u1ee5ng m\u00f4 h\u00ecnh t\u00ednh ph\u00ed d\u1ef1a tr\u00ean \u0111\u01a1n v\u1ecb t\u00ednh to\u00e1n (compute units), v\u1edbi m\u1ee9c ph\u00ed c\u1ed1 \u0111\u1ecbnh cho m\u1ed7i \u0111\u01a1n v\u1ecb. C\u00e1ch ti\u1ebfp c\u1eadn n\u00e0y cho ph\u00e9p m\u1ea1ng l\u01b0\u1edbi x\u1eed l\u00fd h\u00e0ng ngh\u00ecn giao d\u1ecbch m\u1ed7i gi\u00e2y v\u1edbi chi ph\u00ed c\u1ef1c k\u1ef3 th\u1ea5p . \u0110\u00e2u l\u00e0 l\u1ef1a ch\u1ecdn t\u1ed1t nh\u1ea5t ? Th\u1ef1c t\u1ebf thi l\u1ef1a ch\u1ecdn gi\u1eefa EVM v\u00e0 non-EVM chains, developer c\u1ea7n \u0111\u00e1nh gi\u00e1 d\u1ef1a tr\u00ean nhi\u1ec1u y\u1ebfu t\u1ed1 k\u1ef9 thu\u1eadt v\u00e0 h\u1ec7 sinh th\u00e1i. V\u1edbi EVM chains, Cung c\u1ea5p m\u1ed9t m\u00f4i tr\u01b0\u1eddng ph\u00e1t tri\u1ec3n v\u1edbi h\u1ec7 sinh th\u00e1i l\u1edbn. Th\u01b0 vi\u1ec7n l\u1edbn v\u1edbi nhi\u1ec1u code examples c\u00f3 s\u1eb5n v\u00e0 c\u00e1c ti\u00eau chu\u1ea9n ph\u1ed5 bi\u1ebfn nh\u01b0 ERC-20 , ERC-721 ,... gi\u00fap dApp d\u1ec5 t\u00edch h\u1ee3p v\u00e0 t\u01b0\u01a1ng th\u00edch. Tuy nhi\u00ean c\u0169ng c\u00f3 nh\u1eefng m\u1eb7c gi\u1edbi h\u1ea1n nh\u01b0 kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng th\u1ea5p (\u0111\u1eb7c bi\u1ec7t tr\u00ean Ethereum L1). Ph\u00ed gas bi\u1ebfn \u0111\u1ed9ng cao v\u00e0 c\u1ea7n ph\u1ee5 thu\u1ed9c v\u00e0o Layer-2 \u0111\u1ec3 \u0111\u1ea1t hi\u1ec7u su\u1ea5t cao h\u01a1n. C\u00f2n v\u1edbi Non-EVM chains s\u1ebd c\u00f3 nh\u1eefng m\u00f4 h\u00ecnh m\u1edbi d\u00f9ng \u0111\u1ec3 thi\u1ebft k\u1ebf t\u1ed1i \u01b0u cho hi\u1ec7u su\u1ea5t cao, kh\u1ea3 n\u0103ng x\u1eed l\u00fd h\u00e0ng ngh\u00ecn TPS. S\u1eed d\u1ee5ng c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn chuy\u00ean bi\u1ec7t ho\u1eb7c t\u00edch h\u1ee3p kh\u1ea3 n\u0103ng interoperability ngay t\u1eeb \u0111\u1ea7u (IBC, native bridge, cross-chain API\u2026). Nh\u01b0ng non-EVM chains c\u0169ng \u0111i k\u00e8m v\u1edbi m\u1ed9t s\u1ed1 th\u00e1ch th\u1ee9c nh\u01b0 v\u1ec1 m\u1eb7t DevX tooling s\u1ebd ch\u01b0a \u0111\u1ed3ng b\u1ed9 v\u00e0 \u0111\u00f4i khi ph\u00e1t tri\u1ec3n tr\u00ean EVM b\u1ea1n s\u1ebd th\u1ea5y ti\u1ec7n h\u01a1n nhi\u1ec1u. Kh\u00f3 ti\u1ebfp c\u1eadn tr\u1ef1c ti\u1ebfp ngu\u1ed3n thanh kho\u1ea3n l\u1edbn t\u1eeb Ethereum.","title":"EVM vs Non-EVM - Ch\u1ecdn N\u1ec1n T\u1ea3ng N\u00e0o?"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/04_evm_vs_non_evm/#evm-vs-non-evm-chon-nen-tang-nao","text":"","title":"EVM vs Non-EVM - Ch\u1ecdn N\u1ec1n T\u1ea3ng N\u00e0o?"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/04_evm_vs_non_evm/#objective","text":"EVM-compatible chains: Ethereum, Polygon, Arbitrum, Base Non-EVM alternatives: Solana, Near, Sui, Aptos So s\u00e1nh performance, cost, developer experience Ethereum v\u1eeba l\u00e0 m\u1ed9t blockchain, v\u1eeba l\u00e0 m\u1ed9t lo\u1ea1i t\u00e0i s\u1ea3n k\u1ef9 thu\u1eadt s\u1ed1. Nh\u01b0ng \u0111i\u1ec3m kh\u00e1c bi\u1ec7t l\u00e0 Ethereum \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf chuy\u00ean bi\u1ec7t \u0111\u1ec3 ch\u1ea1y c\u00e1c smart contract nh\u1eefng \u0111o\u1ea1n m\u00e3 t\u1ef1 th\u1ef1c thi, kh\u00f4ng c\u1ea7n b\u00ean trung gian. Ch\u00ednh nh\u1edd smart contract m\u00e0 dev c\u00f3 th\u1ec3 build ra v\u00f4 s\u1ed1 \u1ee9ng d\u1ee5ng phi t\u1eadp trung (dApps), t\u1eeb t\u00e0i ch\u00ednh (DeFi), \u0111\u1ebfn game, NFT, social\u2026 V\u00e0 \u0111\u1ee9ng sau t\u1ea5t c\u1ea3 nh\u1eefng \u0111i\u1ec1u k\u1ef3 di\u1ec7u n\u00e0y l\u00e0 Ethereum Virtual Machine (EVM)","title":"Objective"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/04_evm_vs_non_evm/#su-khac-biet-giua-evm-va-non-evm","text":"M\u1ed9t blockchain t\u01b0\u01a1ng th\u00edch v\u1edbi Ethereum kh\u00f4ng nh\u1ea5t thi\u1ebft l\u00e0 ph\u1ea3i ch\u1ea1y EVM v\u00e0 ng\u01b0\u1ee3c l\u1ea1i, m\u1ed9t blockchain kh\u00f4ng ph\u1ea3i EVM th\u00ec s\u1ebd kh\u00f4ng t\u01b0\u01a1ng th\u00edch v\u1edbi h\u1ec7 sinh th\u00e1i Ethereum. H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng EVM v\u00e0 non-EVM gi\u1ed1ng nh\u01b0 hai h\u1ec7 \u0111i\u1ec1u h\u00e0nh smartphone kh\u00e1c nhau. V\u00ed d\u1ee5, Android ch\u00ednh l\u00e0 \u0111\u1ea1i di\u1ec7n cho EVM. C\u00e1c \u0111i\u1ec7n tho\u1ea1i ch\u1ea1y Android (Samsung, Xiaomi, Oppo\u2026) th\u00ec d\u00f9 kh\u00e1c nhau v\u1ec1 th\u01b0\u01a1ng hi\u1ec7u, nh\u01b0ng v\u1eabn c\u00f3 th\u1ec3 c\u00e0i chung app t\u1eeb Play Store, v\u00ec t\u1ea5t c\u1ea3 \u0111\u1ec1u h\u1ed7 tr\u1ee3 Android. Ng\u01b0\u1ee3c l\u1ea1i, iOS (Apple) l\u00e0 m\u1ed9t h\u1ec7 \u0111i\u1ec1u h\u00e0nh ri\u00eang, kh\u00f4ng t\u01b0\u01a1ng th\u00edch v\u1edbi Android. App vi\u1ebft cho iOS th\u00ec kh\u00f4ng th\u1ec3 ch\u1ea1y tr\u00ean Android \u0111\u01b0\u1ee3c \u2013 t\u01b0\u01a1ng t\u1ef1 nh\u01b0 c\u00e1c blockchain non-EVM kh\u00f4ng th\u1ec3 ch\u1ea1y smart contract vi\u1ebft b\u1eb1ng Solidity.","title":"S\u1ef1 kh\u00e1c bi\u1ec7t gi\u1eefa EVM v\u00e0 non EVM"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/04_evm_vs_non_evm/#code-comparison-example-counter-contract","text":"V\u1edbi Solidity: pragma solidity ~0.8.0; contract Counter { uint256 public count; function (increment) external { count += 1; } } V\u1edbi rust: #[program] pub mod counter { pub fn increment(ctx: Context<Increment>) -> Result<()> { let counter = &mut ctx.accounts.counter; counter.count = counter.count.checked_add(1).unwrap(); Ok(()) } } S\u1ef1 kh\u00e1c bi\u1ec7t n\u00e0y cho c\u1ea3 \u0111o\u1ea1n m\u00e3 Solidity l\u1eabn Rust \u0111\u1ec1u ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\u00e0 t\u0103ng gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t bi\u1ebfn \u0111\u1ebfm , nh\u01b0ng c\u00e1ch ch\u00fang th\u1ef1c hi\u1ec7n \u0111i\u1ec1u \u0111\u00f3 l\u1ea1i r\u1ea5t kh\u00e1c nhau t\u1eeb c\u00e1ch m\u00f4 h\u00ecnh ho\u00e1 d\u1eef li\u1ec7u on-chain, c\u01a1 ch\u1ebf \u0111\u1ea3m b\u1ea3o an to\u00e0n, \u0111\u1ebfn c\u00e1ch t\u1ed5 ch\u1ee9c lu\u1ed3ng ph\u00e1t tri\u1ec3n cho dev. Nh\u1eefng kh\u00e1c bi\u1ec7t n\u00e0y kh\u00f4ng ch\u1ec9 \u0111\u1ebfn t\u1eeb ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh (Solidity vs Rust), m\u00e0 c\u00f2n ph\u1ea3n \u00e1nh thi\u1ebft k\u1ebf v\u00e0 c\u1ea5u tr\u00fac c\u1ee7a t\u1eebng m\u00e1y \u1ea3o (EVM v\u1edbi Solidity v\u00e0 Solana VM v\u1edbi Anchor/Rust). \u0110i\u1ec1u n\u00e0y \u1ea3nh h\u01b0\u1edfng tr\u1ef1c ti\u1ebfp \u0111\u1ebfn tr\u1ea3i nghi\u1ec7m c\u1ee7a developer v\u00e0 c\u00e1ch h\u1ecd t\u01b0 duy khi x\u00e2y d\u1ef1ng smart contract tr\u00ean m\u1ed7i n\u1ec1n t\u1ea3ng. V\u00ed d\u1ee5 nh\u01b0 s\u1ef1 kh\u00e1c nhau v\u1ec1 Type Safety & Error Handling : Tr\u00ean Solidity, ta th\u01b0\u1eddng d\u00f9ng c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u c\u01a1 b\u1ea3n nh\u01b0 uint256, address. C\u00e1c l\u1ed7i logic (nh\u01b0 chia cho 0, overflow, truy c\u1eadp sai state\u2026) ch\u1ec9 \u0111\u01b0\u1ee3c ph\u00e1t hi\u1ec7n khi giao d\u1ecbch th\u1ef1c s\u1ef1 ch\u1ea1y tr\u00ean blockchain, t\u1ee9c l\u00e0 khi \u0111\u00e3 t\u1ed1n ph\u00ed gas. \u0110i\u1ec1u n\u00e0y khi\u1ebfn smart contract d\u1ec5 b\u1ecb bug n\u1ebfu kh\u00f4ng test k\u1ef9 t\u1eeb tr\u01b0\u1edbc. C\u00f2n rust th\u00ec cho ph\u00e9p ki\u1ec3m tra l\u1ed7i ngay t\u1eeb th\u1eddi \u0111i\u1ec3m bi\u00ean d\u1ecbch v\u00ec Rust n\u1ed5i ti\u1ebfn v\u1edbi kh\u1ea3 n\u0103ng memory safety n\u00ean. Framework Anchor tr\u00ean Solana t\u1eadn d\u1ee5ng \u0111i\u1ec1u n\u00e0y b\u1eb1ng c\u00e1ch y\u00eau c\u1ea7u developer ph\u1ea3i x\u1eed l\u00fd r\u00f5 r\u00e0ng t\u1eebng kh\u1ea3 n\u0103ng l\u1ed7i (th\u00f4ng qua Result<T, E> ), nh\u1edd \u0111\u00f3 t\u0103ng \u0111\u1ed9 tin c\u1eady v\u00e0 an to\u00e0n c\u1ee7a smart contract tr\u01b0\u1edbc khi deploy. Ho\u1eb7c n\u00f3i v\u1ec1 DevX: * Solidity/EVM: H\u1ec7 sinh th\u00e1i \u0111\u00e3 ho\u00e0n thi\u1ec7n v\u1edbi nhi\u1ec1u tool nh\u01b0 Hardhat, Remix, Truffle. Vi\u1ec7c setup v\u00e0 test c\u1ef1c k\u1ef3 nhanh ch\u00f3ng, ph\u00f9 h\u1ee3p cho c\u1ea3 dev m\u1edbi l\u1eabn team production. Rust/Anchor: D\u00f9 \u0111ang ph\u00e1t tri\u1ec3n nhanh v\u1edbi Anchor CLI , Solana localnet, nh\u01b0ng v\u1eabn \u0111\u00f2i h\u1ecfi ki\u1ebfn th\u1ee9c n\u1ec1n t\u1ed1t v\u00e0 th\u1eddi gian compile/test d\u00e0i h\u01a1n \u0111\u00e1ng k\u1ec3.","title":"Code Comparison Example: Counter Contract"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/04_evm_vs_non_evm/#security-va-auditing","text":"D\u00f9 n\u1ec1n t\u1ea3ng l\u00e0 EVM hay non-EVM, b\u1ea3o m\u1eadt lu\u00f4n l\u00e0 y\u1ebfu t\u1ed1 t\u1ed1i quan tr\u1ecdng trong ph\u00e1t tri\u1ec3n smart contract. Tuy nhi\u00ean, c\u00e1ch ti\u1ebfp c\u1eadn c\u1ee7a hai h\u1ec7 sinh th\u00e1i l\u1ea1i kh\u00e1c nhau \u0111\u00e1ng k\u1ec3. EVM/Solidity: Ph\u00e1t hi\u1ec7n l\u1ed7i \u1edf runtime th\u01b0\u1eddng d\u00f9ng tool & library Trong m\u00f4i tr\u01b0\u1eddng EVM, developer th\u01b0\u1eddng ph\u1ea3i ch\u1ee7 \u0111\u1ed9ng secure contract kh\u1ecfi c\u00e1c l\u1ed7i ph\u1ed5 bi\u1ebfn nh\u01b0: * Reentrancy (g\u1ecdi l\u1ea1i contract g\u00e2y l\u1ed7i logic) * Integer overflow/underflow * External call kh\u00f4ng \u0111\u01b0\u1ee3c ki\u1ec3m tra \u0111\u00fang c\u00e1ch... \u0110\u1ec3 x\u1eed l\u00fd, h\u1ecd th\u01b0\u1eddng d\u00f9ng c\u00e1c th\u1eed vi\u1ec7n \u0111\u00e3 audit v\u00ed d\u1ee5 nh\u01b0 OpenZeppelin.. ho\u1eb7c c\u00e1c toool \u0111\u1ec3 qu\u00e9t l\u1ed7 h\u1ed5ng. Ho\u1eb7c c\u00e1c pattern nh\u01b0 modifier , interface .. gi\u00fap enforce logic truy c\u1eadp( access controls ). Trong khi \u0111\u00f3, c\u00e1c ng\u00f4n ng\u1eef nh\u01b0 Rust d\u00f9ng C\u01a1 ch\u1ebf ownership v\u00e0 borrow checker lo\u1ea1i b\u1ecf h\u1ea7u h\u1ebft c\u00e1c l\u1ed7i li\u00ean quan \u0111\u1ebfn qu\u1ea3n l\u00fd b\u1ed9 nh\u1edb, use-after-free, hay race condition. Ho\u1eb7c l\u00e0 Move ta Resource-type system hay Sui th\u00ec Object centric model gi\u00fap \u0111\u1ea3m b\u1ea3o t\u00e0i s\u1ea3n ch\u1ec9 h\u1ec9 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1edf h\u1eefu b\u1edfi m\u1ed9t entity duy nh\u1ea5t t\u1ea1i m\u1ed9t th\u1eddi \u0111i\u1ec3m, gi\u00fap \u0111\u1ea3m b\u1ea3o logic t\u00e0i s\u1ea3n kh\u00f4ng th\u1ec3 b\u1ecb nh\u00e2n b\u1ea3n ho\u1eb7c destroy.","title":"Security v\u00e0 Auditing"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/04_evm_vs_non_evm/#so-sanh-hieu-nang-va-cost-cua-evm-vs-non-evm","text":"Performance v\u00e0 cost l\u00e0 l\u00e0 m\u1ed9t trong nh\u1eefng \u0111i\u1ec3m ngh\u1ebdn d\u1ec5 th\u1ea5y nh\u1ea5t c\u1ee7a c\u00e1c blockchain t\u01b0\u01a1ng th\u00edch EVM, \u0111\u1eb7c bi\u1ec7t l\u00e0 Ethereum. Tr\u00ean Ethereum Layer 1 , hi\u1ec7u su\u1ea5t x\u1eed l\u00fd gi\u1edbi h\u1ea1n \u1edf kho\u1ea3ng 15 giao d\u1ecbch m\u1ed7i gi\u00e2y (TPS). Trong giai \u0111o\u1ea1n cao \u0111i\u1ec3m (nh\u01b0 NFT mint), m\u1ea1ng c\u00f3 th\u1ec3 t\u1eafc ngh\u1ebdn nghi\u00eam tr\u1ecdng, khi\u1ebfn ph\u00ed gas t\u0103ng v\u1ecdt c\u00f3 th\u1ec3 l\u00ean t\u1edbi h\u00e0ng ch\u1ee5c ho\u1eb7c h\u00e0ng tr\u0103m \u0111\u00f4 cho m\u1ed9t giao d\u1ecbch. \u0110\u1ec3 c\u1ea3i thi\u1ec7n, c\u00e1c gi\u1ea3i ph\u00e1p Layer-2 nh\u01b0 PolyGon hay Arbitrum , Optimism (rollups) \u0111\u00e3 \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n nh\u1eb1m x\u1eed l\u00fd giao d\u1ecbch off-chain, sau \u0111\u00f3 \u201cg\u1ed9p\u201d (batch) l\u1ea1i v\u00e0 \u0111\u01b0a l\u00ean Ethereum \u0111\u1ec3 x\u00e1c nh\u1eadn. C\u00e1c gi\u1ea3i ph\u00e1p n\u00e0y \u0111i k\u00e8m v\u1edbi trade-off ri\u00eang: * \u0110\u1ed9 tr\u1ec5(finality delay) * R\u1ee7i ro b\u1ea3o m\u1eadt li\u00ean quan \u0111\u1ebfn c\u1ea7u n\u1ed1i (bridge) v\u00e0 fraud proof Ng\u01b0\u1ee3c l\u1ea1i, c\u00e1c n\u1ec1n t\u1ea3ng non-EVM nh\u01b0 Solana ho\u1eb7c c\u00e1c chain d\u00f9ng Move (Aptos, Sui) \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 hi\u1ec7u n\u0103ng nh\u01b0 t\u1eadn d\u1ee5ng parallel execution cho ph\u00e9p nhi\u1ec1u giao d\u1ecbch ch\u1ea1y \u0111\u1ed3ng th\u1eddi Solana s\u1eed d\u1ee5ng m\u00f4 h\u00ecnh t\u00ednh ph\u00ed d\u1ef1a tr\u00ean \u0111\u01a1n v\u1ecb t\u00ednh to\u00e1n (compute units), v\u1edbi m\u1ee9c ph\u00ed c\u1ed1 \u0111\u1ecbnh cho m\u1ed7i \u0111\u01a1n v\u1ecb. C\u00e1ch ti\u1ebfp c\u1eadn n\u00e0y cho ph\u00e9p m\u1ea1ng l\u01b0\u1edbi x\u1eed l\u00fd h\u00e0ng ngh\u00ecn giao d\u1ecbch m\u1ed7i gi\u00e2y v\u1edbi chi ph\u00ed c\u1ef1c k\u1ef3 th\u1ea5p .","title":"So s\u00e1nh hi\u1ec7u n\u0103ng v\u00e0 cost c\u1ee7a EVM vs non-EVM"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/04_evm_vs_non_evm/#au-la-lua-chon-tot-nhat","text":"Th\u1ef1c t\u1ebf thi l\u1ef1a ch\u1ecdn gi\u1eefa EVM v\u00e0 non-EVM chains, developer c\u1ea7n \u0111\u00e1nh gi\u00e1 d\u1ef1a tr\u00ean nhi\u1ec1u y\u1ebfu t\u1ed1 k\u1ef9 thu\u1eadt v\u00e0 h\u1ec7 sinh th\u00e1i. V\u1edbi EVM chains, Cung c\u1ea5p m\u1ed9t m\u00f4i tr\u01b0\u1eddng ph\u00e1t tri\u1ec3n v\u1edbi h\u1ec7 sinh th\u00e1i l\u1edbn. Th\u01b0 vi\u1ec7n l\u1edbn v\u1edbi nhi\u1ec1u code examples c\u00f3 s\u1eb5n v\u00e0 c\u00e1c ti\u00eau chu\u1ea9n ph\u1ed5 bi\u1ebfn nh\u01b0 ERC-20 , ERC-721 ,... gi\u00fap dApp d\u1ec5 t\u00edch h\u1ee3p v\u00e0 t\u01b0\u01a1ng th\u00edch. Tuy nhi\u00ean c\u0169ng c\u00f3 nh\u1eefng m\u1eb7c gi\u1edbi h\u1ea1n nh\u01b0 kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng th\u1ea5p (\u0111\u1eb7c bi\u1ec7t tr\u00ean Ethereum L1). Ph\u00ed gas bi\u1ebfn \u0111\u1ed9ng cao v\u00e0 c\u1ea7n ph\u1ee5 thu\u1ed9c v\u00e0o Layer-2 \u0111\u1ec3 \u0111\u1ea1t hi\u1ec7u su\u1ea5t cao h\u01a1n. C\u00f2n v\u1edbi Non-EVM chains s\u1ebd c\u00f3 nh\u1eefng m\u00f4 h\u00ecnh m\u1edbi d\u00f9ng \u0111\u1ec3 thi\u1ebft k\u1ebf t\u1ed1i \u01b0u cho hi\u1ec7u su\u1ea5t cao, kh\u1ea3 n\u0103ng x\u1eed l\u00fd h\u00e0ng ngh\u00ecn TPS. S\u1eed d\u1ee5ng c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn chuy\u00ean bi\u1ec7t ho\u1eb7c t\u00edch h\u1ee3p kh\u1ea3 n\u0103ng interoperability ngay t\u1eeb \u0111\u1ea7u (IBC, native bridge, cross-chain API\u2026). Nh\u01b0ng non-EVM chains c\u0169ng \u0111i k\u00e8m v\u1edbi m\u1ed9t s\u1ed1 th\u00e1ch th\u1ee9c nh\u01b0 v\u1ec1 m\u1eb7t DevX tooling s\u1ebd ch\u01b0a \u0111\u1ed3ng b\u1ed9 v\u00e0 \u0111\u00f4i khi ph\u00e1t tri\u1ec3n tr\u00ean EVM b\u1ea1n s\u1ebd th\u1ea5y ti\u1ec7n h\u01a1n nhi\u1ec1u. Kh\u00f3 ti\u1ebfp c\u1eadn tr\u1ef1c ti\u1ebfp ngu\u1ed3n thanh kho\u1ea3n l\u1edbn t\u1eeb Ethereum.","title":"\u0110\u00e2u l\u00e0 l\u1ef1a ch\u1ecdn t\u1ed1t nh\u1ea5t ?"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/05_Wallet/","text":"T\u1ed5ng quan v\u1ec1 wallet v\u00e0 c\u00e1c bi\u1ec7n ph\u00e1p b\u1ea3o m\u1eadt N\u1ebfu b\u1ea1n \u0111\u00e3 t\u1eebng d\u00f9ng blockchain th\u00ec ch\u1eafc c\u0169ng nh\u1eadn ra r\u1ed3i: L\u00fd do v\u00ec sao v\u00ed blockchain \u0111\u01b0\u1ee3c chia th\u00e0nh nhi\u1ec1u lo\u1ea1i kh\u00e1c nhau \u2014 th\u1ef1c ra ch\u1ec9 xoay quanh c\u00e1ch qu\u1ea3n l\u00fd private key m\u00e0 th\u00f4i. C\u00f3 lo\u1ea1i v\u00ed th\u00ec user t\u1ef1 gi\u1eef private key (nh\u01b0 v\u00ed self-custody ki\u1ec3u MetaMask, Phantom, hay Trust Wallet). C\u00f3 lo\u1ea1i th\u00ec chia s\u1ebb quy\u1ec1n ki\u1ec3m so\u00e1t, nh\u01b0 v\u00ed MPC ho\u1eb7c v\u00ed c\u00f3 c\u01a1 ch\u1ebf social recovery. C\u0169ng c\u00f3 lo\u1ea1i ho\u00e0n to\u00e0n smart contract-based, ki\u1ec3u v\u00ed Safe hay nh\u1eefng smart wallet tr\u00ean Sui/Aptos ch\u1eb3ng h\u1ea1n. C\u00e1c lo\u1ea1i v\u00ed blockchain \u2013 Wallet Type V\u00ed t\u1eadp trung: Centralized wallet. \u0110\u00e2y l\u00e0 lo\u1ea1i v\u00ed m\u00e0 private key \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef tr\u00ean server t\u1eadp trung, do m\u1ed9t b\u00ean th\u1ee9 ba qu\u1ea3n l\u00fd th\u01b0\u1eddng l\u00e0 c\u00e1c s\u00e0n giao d\u1ecbch. V\u00ed d\u1ee5: v\u00ed s\u00e0n Binance, OKX, Bybit,\u2026 V\u00ed phi t\u1eadp trung - Decentralized wallet (HD wallet): Private key \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef tr\u1ef1c ti\u1ebfp tr\u00ean thi\u1ebft b\u1ecb c\u1ee7a ng\u01b0\u1eddi d\u00f9ng nh\u01b0 \u0111i\u1ec7n tho\u1ea1i hay laptop. Lo\u1ea1i v\u00ed n\u00e0y th\u01b0\u1eddng s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac Hierarchical Deterministic (HD) \u2013 t\u1ea1o nhi\u1ec1u \u0111\u1ecba ch\u1ec9 v\u00ed t\u1eeb m\u1ed9t seed phrase duy nh\u1ea5t. V\u00ed d\u1ee5: TP (TokenPocket), imToken, MetaMask,\u2026 V\u00ed c\u1ee9ng \u2013 Hardware wallet: Private key \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef trong thi\u1ebft b\u1ecb ph\u1ea7n c\u1ee9ng ri\u00eang bi\u1ec7t, kh\u00f4ng k\u1ebft n\u1ed1i internet g\u1ea7n nh\u01b0 kh\u00f4ng th\u1ec3 b\u1ecb hack t\u1eeb xa. V\u00ed d\u1ee5: Ledger, OneKey,\u2026 V\u00ed Web3 c\u1ee7a s\u00e0n \u2013 Exchange Web3 Wallet: M\u1ed9t s\u1ed1 s\u00e0n hi\u1ec7n \u0111\u1ea1i (nh\u01b0 OKX Wallet, Binance Web3 Wallet) cung c\u1ea5p v\u00ed k\u1ebft h\u1ee3p gi\u1eefa v\u00ed t\u1eadp trung, v\u00ed phi t\u1eadp trung, t\u00edch h\u1ee3p lu\u00f4n v\u1edbi v\u00ed c\u1ee9ng. V\u00ed u\u1ef7 th\u00e1c \u2013 Custodial wallet (MPC wallet): Th\u01b0\u1eddng d\u00f9ng thu\u1eadt to\u00e1n MPC (multi-party computation) chia private key ra nhi\u1ec1u m\u1ea3nh (shards), m\u1ed7i node gi\u1eef 1 ph\u1ea7n. Giao d\u1ecbch ch\u1ec9 \u0111\u01b0\u1ee3c k\u00fd n\u1ebfu c\u00f3 \u0111\u1ee7 M trong t\u1ed5ng N node \u0111\u1ed3ng \u00fd (N-M signature). Ph\u00f9 h\u1ee3p v\u1edbi t\u1ed5 ch\u1ee9c V\u00ed \u0111a ch\u1eef k\u00fd \u2013 Multi-signature wallet: tr\u00ean c\u00e1c chain EVM, th\u01b0\u1eddng d\u00f9ng v\u00ed Gnosis Safe \u0111\u1ec3 y\u00eau c\u1ea7u nhi\u1ec1u ng\u01b0\u1eddi c\u00f9ng k\u00fd \u0111\u1ec3 th\u1ef1c hi\u1ec7n giao d\u1ecbch. D\u00f9ng cho DAO, qu\u1ef9 \u0111\u1ea7u t\u01b0, team startup,\u2026 \u0111\u1ec3 tr\u00e1nh \"1 ng\u01b0\u1eddi n\u1eafm quy\u1ec1n\". (Account Abstraction) \u2013 EVM Chain AA Wallet: \u1ee8ng d\u1ee5ng theo ti\u00eau chu\u1ea9n ERC-4337, bi\u1ebfn v\u00ed th\u00e0nh m\u1ed9t smart contract c\u00f3 th\u1ec3 D\u00f9ng fee token kh\u00e1c thay v\u00ec ETH, Social recovery t\u00edch h\u1ee3p s\u1eb5n 3. Centralized Wallet 3.1. Centralized Wallet Architecture V\u00ed \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng b\u1edfi c\u00e1c s\u00e0n giao d\u1ecbch th\u01b0\u1eddng \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 v\u00ed t\u1eadp trung (centralized wallets). L\u00fd do l\u00e0 v\u00ec private key c\u1ee7a c\u00e1c v\u00ed n\u00e0y th\u01b0\u1eddng \u0111\u01b0\u1ee3c qu\u1ea3n l\u00fd tr\u00ean c\u00e1c m\u00e1y ch\u1ee7 t\u1eadp trung, v\u00e0 m\u1ed7i s\u00e0n s\u1ebd c\u00f3 c\u00e1ch qu\u1ea3n l\u00fd private key kh\u00e1c nhau. M\u1ed9t s\u1ed1 ph\u01b0\u01a1ng ph\u00e1p l\u01b0u tr\u1eef private key ph\u1ed5 bi\u1ebfn: C\u00e1ch \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 m\u00e3 h\u00f3a private key b\u1eb1ng thu\u1eadt to\u00e1n DES r\u1ed3i l\u01b0u v\u00e0o c\u01a1 s\u1edf d\u1eef li\u1ec7u ho\u1eb7c file nh\u01b0 wallet.data. C\u00e1ch d\u1ec5 th\u1ee9 hai l\u00e0 d\u00f9ng m\u00f4i tr\u01b0\u1eddng KMS (Key Management System) \u0111\u1ec3 l\u01b0u tr\u1eef private key \u0111\u00e3 \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a. D\u00f9 l\u00e0 l\u01b0u file hay d\u00f9ng KMS th\u00ec private key v\u1eabn ph\u1ea3i \u0111\u01b0\u1ee3c gi\u1ea3i m\u00e3 tr\u01b0\u1edbc khi k\u00fd giao d\u1ecbch. \u0110\u00e2y ch\u00ednh l\u00e0 \u0111i\u1ec3m r\u1ee7i ro l\u1edbn nh\u1ea5t v\u00ec private key c\u00f3 th\u1ec3 b\u1ecb l\u1ed9 ngay t\u1ea1i th\u1eddi \u0111i\u1ec3m gi\u1ea3i m\u00e3, d\u1eabn \u0111\u1ebfn kh\u1ea3 n\u0103ng b\u1ecb \u0111\u00e1nh c\u1eafp. M\u00f4i tr\u01b0\u1eddng TEE (Trusted Execution Environment): TEE l\u00e0 m\u1ed9t m\u00f4i tr\u01b0\u1eddng th\u1ef1c thi an to\u00e0n, nh\u01b0ng private key v\u1eabn \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a v\u00e0 l\u01b0u trong database ho\u1eb7c file n\u1ed9i b\u1ed9 c\u1ee7a m\u00f4i tr\u01b0\u1eddng \u0111\u00f3. M\u1ed7i l\u1ea7n k\u00fd, h\u1ec7 th\u1ed1ng ph\u1ea3i gi\u1ea3i m\u00e3 private key trong m\u00f4i tr\u01b0\u1eddng TEE \u0111\u1ec3 k\u00fd giao d\u1ecbch. Nguy c\u01a1 l\u1ed9 key v\u1eabn r\u1ea5t cao, v\u00e0 ng\u01b0\u1eddi n\u1ed9i b\u1ed9 v\u1eabn c\u00f3 th\u1ec3 ghi log tr\u01b0\u1edbc th\u1eddi \u0111i\u1ec3m k\u00fd \u0111\u1ec3 l\u1ea5y private key. C\u00e1ch chuy\u00ean nghi\u1ec7p v\u00e0 an to\u00e0n nh\u1ea5t l\u00e0 s\u1eed d\u1ee5ng CloudHSM ho\u1eb7c signature device with multi-node backup D\u00f9 s\u1eed d\u1ee5ng c\u01a1 s\u1edf d\u1eef li\u1ec7u, file d\u1eef li\u1ec7u, h\u1ec7 th\u1ed1ng KMS, m\u00f4i tr\u01b0\u1eddng TEE hay CloudHSM, th\u00ec m\u1ee9c \u0111\u1ed9 b\u1ea3o m\u1eadt c\u0169ng ch\u1ec9 l\u00e0 t\u01b0\u01a1ng \u0111\u1ed1i. B\u1ea5t k\u1ec3 gi\u1ea3i ph\u00e1p n\u00e0o \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng k\u1ec3 c\u1ea3 CloudHSM hay m\u00e1y k\u00fd chuy\u00ean d\u1ee5ng, vi\u1ec7c ph\u00f2ng ng\u1eeba b\u1ecb tr\u1ed9m v\u00ed t\u1eeb trong n\u1ed9i b\u1ed9 v\u1eabn lu\u00f4n l\u00e0 th\u00e1ch th\u1ee9c l\u1edbn nh\u1ea5t. N\u00ean c\u00e1c v\u00ed s\u00e0n ti\u00eau chu\u1ea9n b\u1eaft bu\u1ed9c ph\u1ea3i tri\u1ec3n khai m\u1ed9t h\u1ec7 th\u1ed1ng ki\u1ec3m so\u00e1t r\u1ee7i ro \u1edf c\u1ea5p \u0111\u1ed9 li\u00ean k\u1ebft (link-level risk control) n\u01a1i m\u1ecdi giao d\u1ecbch ph\u1ea3i \u0111\u01b0\u1ee3c ki\u1ec3m tra k\u1ef9 l\u01b0\u1ee1ng tr\u01b0\u1edbc khi \u0111\u01b0\u1ee3c g\u1eedi \u0111\u1ebfn thi\u1ebft b\u1ecb k\u00fd. V\u00ed d\u1ee5 nh\u01b0 c\u00e1c Consumer Exchange Wallet: Binance, Coinbase Gi\u1edbi thi\u1ec7u v\u1ec1 Decentralized Wallet (HD Wallet) Private key c\u1ee7a v\u00ed phi t\u1eadp trung (decentralized wallet) \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef tr\u1ef1c ti\u1ebfp tr\u00ean thi\u1ebft b\u1ecb c\u1ee7a ng\u01b0\u1eddi d\u00f9ng, v\u00e0 kh\u00f4ng ai c\u00f3 th\u1ec3 truy c\u1eadp \u0111\u01b0\u1ee3c ngo\u1ea1i tr\u1eeb ch\u00ednh ng\u01b0\u1eddi d\u00f9ng. H\u1ea7u h\u1ebft c\u00e1c v\u00ed phi t\u1eadp trung hi\u1ec7n nay \u0111\u1ec1u l\u00e0 v\u00ed deterministic (x\u00e1c \u0111\u1ecbnh) v\u00e0 c\u00f3 c\u1ea5u tr\u00fac ph\u00e2n c\u1ea5p (hierarchical). C\u01a1 ch\u1ebf ho\u1ea1t \u0111\u1ed9ng th\u01b0\u1eddng nh\u01b0 sau: 1.Tr\u01b0\u1edbc ti\u00ean, v\u00ed s\u1ebd t\u1ea1o ra m\u1ed9t c\u1ee5m t\u1eeb ghi nh\u1edb (mnemonic phrase). 2. T\u1eeb c\u1ee5m t\u1eeb n\u00e0y, h\u1ec7 th\u1ed1ng sinh ra private key ch\u00ednh (master private key). T\u1eeb master key n\u00e0y ti\u1ebfp t\u1ee5c sinh ra c\u00e1c private key con v\u00e0 public key con, Sau \u0111\u00f3, c\u00e1c key con n\u00e0y \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 t\u1ea1o \u0111\u1ecba ch\u1ec9 v\u00ed (address). Private key trong v\u00ed phi t\u1eadp trung th\u01b0\u1eddng \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a v\u00e0 l\u01b0u tr\u1eef c\u1ee5c b\u1ed9 tr\u00ean thi\u1ebft b\u1ecb c\u1ee7a ng\u01b0\u1eddi d\u00f9ng. N\u00ean khi ng\u01b0\u1eddi d\u00f9ng c\u1ea7n k\u00fd giao d\u1ecbch, h\u1ecd s\u1ebd nh\u1eadp m\u1eadt kh\u1ea9u \u0111\u1ec3 gi\u1ea3i m\u00e3 private key, r\u1ed3i m\u1edbi ti\u1ebfn h\u00e0nh k\u00fd. M\u1ed9t s\u1ed1 v\u00ed phi t\u1eadp trung ph\u1ed5 bi\u1ebfn hi\u1ec7n nay g\u1ed3m c\u00f3 .. How to set up a secure multi-sig wallet","title":"T\u1ed5ng quan v\u1ec1 wallet v\u00e0 c\u00e1c bi\u1ec7n ph\u00e1p b\u1ea3o m\u1eadt"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/05_Wallet/#tong-quan-ve-wallet-va-cac-bien-phap-bao-mat","text":"N\u1ebfu b\u1ea1n \u0111\u00e3 t\u1eebng d\u00f9ng blockchain th\u00ec ch\u1eafc c\u0169ng nh\u1eadn ra r\u1ed3i: L\u00fd do v\u00ec sao v\u00ed blockchain \u0111\u01b0\u1ee3c chia th\u00e0nh nhi\u1ec1u lo\u1ea1i kh\u00e1c nhau \u2014 th\u1ef1c ra ch\u1ec9 xoay quanh c\u00e1ch qu\u1ea3n l\u00fd private key m\u00e0 th\u00f4i. C\u00f3 lo\u1ea1i v\u00ed th\u00ec user t\u1ef1 gi\u1eef private key (nh\u01b0 v\u00ed self-custody ki\u1ec3u MetaMask, Phantom, hay Trust Wallet). C\u00f3 lo\u1ea1i th\u00ec chia s\u1ebb quy\u1ec1n ki\u1ec3m so\u00e1t, nh\u01b0 v\u00ed MPC ho\u1eb7c v\u00ed c\u00f3 c\u01a1 ch\u1ebf social recovery. C\u0169ng c\u00f3 lo\u1ea1i ho\u00e0n to\u00e0n smart contract-based, ki\u1ec3u v\u00ed Safe hay nh\u1eefng smart wallet tr\u00ean Sui/Aptos ch\u1eb3ng h\u1ea1n.","title":"T\u1ed5ng quan v\u1ec1 wallet v\u00e0 c\u00e1c bi\u1ec7n ph\u00e1p b\u1ea3o m\u1eadt"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/05_Wallet/#cac-loai-vi-blockchain-wallet-type","text":"V\u00ed t\u1eadp trung: Centralized wallet. \u0110\u00e2y l\u00e0 lo\u1ea1i v\u00ed m\u00e0 private key \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef tr\u00ean server t\u1eadp trung, do m\u1ed9t b\u00ean th\u1ee9 ba qu\u1ea3n l\u00fd th\u01b0\u1eddng l\u00e0 c\u00e1c s\u00e0n giao d\u1ecbch. V\u00ed d\u1ee5: v\u00ed s\u00e0n Binance, OKX, Bybit,\u2026 V\u00ed phi t\u1eadp trung - Decentralized wallet (HD wallet): Private key \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef tr\u1ef1c ti\u1ebfp tr\u00ean thi\u1ebft b\u1ecb c\u1ee7a ng\u01b0\u1eddi d\u00f9ng nh\u01b0 \u0111i\u1ec7n tho\u1ea1i hay laptop. Lo\u1ea1i v\u00ed n\u00e0y th\u01b0\u1eddng s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac Hierarchical Deterministic (HD) \u2013 t\u1ea1o nhi\u1ec1u \u0111\u1ecba ch\u1ec9 v\u00ed t\u1eeb m\u1ed9t seed phrase duy nh\u1ea5t. V\u00ed d\u1ee5: TP (TokenPocket), imToken, MetaMask,\u2026 V\u00ed c\u1ee9ng \u2013 Hardware wallet: Private key \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef trong thi\u1ebft b\u1ecb ph\u1ea7n c\u1ee9ng ri\u00eang bi\u1ec7t, kh\u00f4ng k\u1ebft n\u1ed1i internet g\u1ea7n nh\u01b0 kh\u00f4ng th\u1ec3 b\u1ecb hack t\u1eeb xa. V\u00ed d\u1ee5: Ledger, OneKey,\u2026 V\u00ed Web3 c\u1ee7a s\u00e0n \u2013 Exchange Web3 Wallet: M\u1ed9t s\u1ed1 s\u00e0n hi\u1ec7n \u0111\u1ea1i (nh\u01b0 OKX Wallet, Binance Web3 Wallet) cung c\u1ea5p v\u00ed k\u1ebft h\u1ee3p gi\u1eefa v\u00ed t\u1eadp trung, v\u00ed phi t\u1eadp trung, t\u00edch h\u1ee3p lu\u00f4n v\u1edbi v\u00ed c\u1ee9ng. V\u00ed u\u1ef7 th\u00e1c \u2013 Custodial wallet (MPC wallet): Th\u01b0\u1eddng d\u00f9ng thu\u1eadt to\u00e1n MPC (multi-party computation) chia private key ra nhi\u1ec1u m\u1ea3nh (shards), m\u1ed7i node gi\u1eef 1 ph\u1ea7n. Giao d\u1ecbch ch\u1ec9 \u0111\u01b0\u1ee3c k\u00fd n\u1ebfu c\u00f3 \u0111\u1ee7 M trong t\u1ed5ng N node \u0111\u1ed3ng \u00fd (N-M signature). Ph\u00f9 h\u1ee3p v\u1edbi t\u1ed5 ch\u1ee9c V\u00ed \u0111a ch\u1eef k\u00fd \u2013 Multi-signature wallet: tr\u00ean c\u00e1c chain EVM, th\u01b0\u1eddng d\u00f9ng v\u00ed Gnosis Safe \u0111\u1ec3 y\u00eau c\u1ea7u nhi\u1ec1u ng\u01b0\u1eddi c\u00f9ng k\u00fd \u0111\u1ec3 th\u1ef1c hi\u1ec7n giao d\u1ecbch. D\u00f9ng cho DAO, qu\u1ef9 \u0111\u1ea7u t\u01b0, team startup,\u2026 \u0111\u1ec3 tr\u00e1nh \"1 ng\u01b0\u1eddi n\u1eafm quy\u1ec1n\". (Account Abstraction) \u2013 EVM Chain AA Wallet: \u1ee8ng d\u1ee5ng theo ti\u00eau chu\u1ea9n ERC-4337, bi\u1ebfn v\u00ed th\u00e0nh m\u1ed9t smart contract c\u00f3 th\u1ec3 D\u00f9ng fee token kh\u00e1c thay v\u00ec ETH, Social recovery t\u00edch h\u1ee3p s\u1eb5n","title":"C\u00e1c lo\u1ea1i v\u00ed blockchain \u2013 Wallet Type"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/05_Wallet/#3-centralized-wallet","text":"3.1. Centralized Wallet Architecture V\u00ed \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng b\u1edfi c\u00e1c s\u00e0n giao d\u1ecbch th\u01b0\u1eddng \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 v\u00ed t\u1eadp trung (centralized wallets). L\u00fd do l\u00e0 v\u00ec private key c\u1ee7a c\u00e1c v\u00ed n\u00e0y th\u01b0\u1eddng \u0111\u01b0\u1ee3c qu\u1ea3n l\u00fd tr\u00ean c\u00e1c m\u00e1y ch\u1ee7 t\u1eadp trung, v\u00e0 m\u1ed7i s\u00e0n s\u1ebd c\u00f3 c\u00e1ch qu\u1ea3n l\u00fd private key kh\u00e1c nhau. M\u1ed9t s\u1ed1 ph\u01b0\u01a1ng ph\u00e1p l\u01b0u tr\u1eef private key ph\u1ed5 bi\u1ebfn: C\u00e1ch \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 m\u00e3 h\u00f3a private key b\u1eb1ng thu\u1eadt to\u00e1n DES r\u1ed3i l\u01b0u v\u00e0o c\u01a1 s\u1edf d\u1eef li\u1ec7u ho\u1eb7c file nh\u01b0 wallet.data. C\u00e1ch d\u1ec5 th\u1ee9 hai l\u00e0 d\u00f9ng m\u00f4i tr\u01b0\u1eddng KMS (Key Management System) \u0111\u1ec3 l\u01b0u tr\u1eef private key \u0111\u00e3 \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a. D\u00f9 l\u00e0 l\u01b0u file hay d\u00f9ng KMS th\u00ec private key v\u1eabn ph\u1ea3i \u0111\u01b0\u1ee3c gi\u1ea3i m\u00e3 tr\u01b0\u1edbc khi k\u00fd giao d\u1ecbch. \u0110\u00e2y ch\u00ednh l\u00e0 \u0111i\u1ec3m r\u1ee7i ro l\u1edbn nh\u1ea5t v\u00ec private key c\u00f3 th\u1ec3 b\u1ecb l\u1ed9 ngay t\u1ea1i th\u1eddi \u0111i\u1ec3m gi\u1ea3i m\u00e3, d\u1eabn \u0111\u1ebfn kh\u1ea3 n\u0103ng b\u1ecb \u0111\u00e1nh c\u1eafp. M\u00f4i tr\u01b0\u1eddng TEE (Trusted Execution Environment): TEE l\u00e0 m\u1ed9t m\u00f4i tr\u01b0\u1eddng th\u1ef1c thi an to\u00e0n, nh\u01b0ng private key v\u1eabn \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a v\u00e0 l\u01b0u trong database ho\u1eb7c file n\u1ed9i b\u1ed9 c\u1ee7a m\u00f4i tr\u01b0\u1eddng \u0111\u00f3. M\u1ed7i l\u1ea7n k\u00fd, h\u1ec7 th\u1ed1ng ph\u1ea3i gi\u1ea3i m\u00e3 private key trong m\u00f4i tr\u01b0\u1eddng TEE \u0111\u1ec3 k\u00fd giao d\u1ecbch. Nguy c\u01a1 l\u1ed9 key v\u1eabn r\u1ea5t cao, v\u00e0 ng\u01b0\u1eddi n\u1ed9i b\u1ed9 v\u1eabn c\u00f3 th\u1ec3 ghi log tr\u01b0\u1edbc th\u1eddi \u0111i\u1ec3m k\u00fd \u0111\u1ec3 l\u1ea5y private key. C\u00e1ch chuy\u00ean nghi\u1ec7p v\u00e0 an to\u00e0n nh\u1ea5t l\u00e0 s\u1eed d\u1ee5ng CloudHSM ho\u1eb7c signature device with multi-node backup D\u00f9 s\u1eed d\u1ee5ng c\u01a1 s\u1edf d\u1eef li\u1ec7u, file d\u1eef li\u1ec7u, h\u1ec7 th\u1ed1ng KMS, m\u00f4i tr\u01b0\u1eddng TEE hay CloudHSM, th\u00ec m\u1ee9c \u0111\u1ed9 b\u1ea3o m\u1eadt c\u0169ng ch\u1ec9 l\u00e0 t\u01b0\u01a1ng \u0111\u1ed1i. B\u1ea5t k\u1ec3 gi\u1ea3i ph\u00e1p n\u00e0o \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng k\u1ec3 c\u1ea3 CloudHSM hay m\u00e1y k\u00fd chuy\u00ean d\u1ee5ng, vi\u1ec7c ph\u00f2ng ng\u1eeba b\u1ecb tr\u1ed9m v\u00ed t\u1eeb trong n\u1ed9i b\u1ed9 v\u1eabn lu\u00f4n l\u00e0 th\u00e1ch th\u1ee9c l\u1edbn nh\u1ea5t. N\u00ean c\u00e1c v\u00ed s\u00e0n ti\u00eau chu\u1ea9n b\u1eaft bu\u1ed9c ph\u1ea3i tri\u1ec3n khai m\u1ed9t h\u1ec7 th\u1ed1ng ki\u1ec3m so\u00e1t r\u1ee7i ro \u1edf c\u1ea5p \u0111\u1ed9 li\u00ean k\u1ebft (link-level risk control) n\u01a1i m\u1ecdi giao d\u1ecbch ph\u1ea3i \u0111\u01b0\u1ee3c ki\u1ec3m tra k\u1ef9 l\u01b0\u1ee1ng tr\u01b0\u1edbc khi \u0111\u01b0\u1ee3c g\u1eedi \u0111\u1ebfn thi\u1ebft b\u1ecb k\u00fd. V\u00ed d\u1ee5 nh\u01b0 c\u00e1c Consumer Exchange Wallet: Binance, Coinbase","title":"3. Centralized Wallet"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/05_Wallet/#gioi-thieu-ve-decentralized-wallet-hd-wallet","text":"Private key c\u1ee7a v\u00ed phi t\u1eadp trung (decentralized wallet) \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef tr\u1ef1c ti\u1ebfp tr\u00ean thi\u1ebft b\u1ecb c\u1ee7a ng\u01b0\u1eddi d\u00f9ng, v\u00e0 kh\u00f4ng ai c\u00f3 th\u1ec3 truy c\u1eadp \u0111\u01b0\u1ee3c ngo\u1ea1i tr\u1eeb ch\u00ednh ng\u01b0\u1eddi d\u00f9ng. H\u1ea7u h\u1ebft c\u00e1c v\u00ed phi t\u1eadp trung hi\u1ec7n nay \u0111\u1ec1u l\u00e0 v\u00ed deterministic (x\u00e1c \u0111\u1ecbnh) v\u00e0 c\u00f3 c\u1ea5u tr\u00fac ph\u00e2n c\u1ea5p (hierarchical). C\u01a1 ch\u1ebf ho\u1ea1t \u0111\u1ed9ng th\u01b0\u1eddng nh\u01b0 sau: 1.Tr\u01b0\u1edbc ti\u00ean, v\u00ed s\u1ebd t\u1ea1o ra m\u1ed9t c\u1ee5m t\u1eeb ghi nh\u1edb (mnemonic phrase). 2. T\u1eeb c\u1ee5m t\u1eeb n\u00e0y, h\u1ec7 th\u1ed1ng sinh ra private key ch\u00ednh (master private key). T\u1eeb master key n\u00e0y ti\u1ebfp t\u1ee5c sinh ra c\u00e1c private key con v\u00e0 public key con, Sau \u0111\u00f3, c\u00e1c key con n\u00e0y \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 t\u1ea1o \u0111\u1ecba ch\u1ec9 v\u00ed (address). Private key trong v\u00ed phi t\u1eadp trung th\u01b0\u1eddng \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a v\u00e0 l\u01b0u tr\u1eef c\u1ee5c b\u1ed9 tr\u00ean thi\u1ebft b\u1ecb c\u1ee7a ng\u01b0\u1eddi d\u00f9ng. N\u00ean khi ng\u01b0\u1eddi d\u00f9ng c\u1ea7n k\u00fd giao d\u1ecbch, h\u1ecd s\u1ebd nh\u1eadp m\u1eadt kh\u1ea9u \u0111\u1ec3 gi\u1ea3i m\u00e3 private key, r\u1ed3i m\u1edbi ti\u1ebfn h\u00e0nh k\u00fd. M\u1ed9t s\u1ed1 v\u00ed phi t\u1eadp trung ph\u1ed5 bi\u1ebfn hi\u1ec7n nay g\u1ed3m c\u00f3 ..","title":"Gi\u1edbi thi\u1ec7u v\u1ec1 Decentralized Wallet (HD Wallet)"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_3/05_Wallet/#how-to-set-up-a-secure-multi-sig-wallet","text":"","title":"How to set up a secure multi-sig wallet"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_4/Framework_testing_and_smart_contract_security/","text":"Frameworks, Testing v\u00e0 Smart Contract Security Contract Auditing Tools Slither Mythril Listener Securify SmartCheck Manticore Echidna Teether Commercial Contract Auditing Tools (Add commercial tools here)","title":"Frameworks, Testing v\u00e0 Smart Contract Security"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_4/Framework_testing_and_smart_contract_security/#frameworks-testing-va-smart-contract-security","text":"","title":"Frameworks, Testing v\u00e0 Smart Contract Security"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_4/Framework_testing_and_smart_contract_security/#contract-auditing-tools","text":"Slither Mythril Listener Securify SmartCheck Manticore Echidna Teether","title":"Contract Auditing Tools"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_4/Framework_testing_and_smart_contract_security/#commercial-contract-auditing-tools","text":"(Add commercial tools here)","title":"Commercial Contract Auditing Tools"},{"location":"What_I_learned_from_VBI_Academy/Blockchain_101_course/Module_4/Web3_dev_stack_101_solidity_intro/","text":"","title":"Web3 dev stack 101 solidity intro"},{"location":"What_I_learned_from_VBI_Academy/Hyperliquid/Hyperliquid%20builder%20code/","text":"Learn how it works technically & start building \ud83d\udc40","title":"Hyperliquid builder code"},{"location":"What_I_learned_from_VBI_Academy/Near%20ai%20research/Near-ai-tooling-set/","text":"","title":"Near ai tooling set"},{"location":"What_I_learned_from_VBI_Academy/OpenHouse%20program/intro_/","text":"Kick off the Arbitrum Open Hourse Author: Developer Evangelist at the Arbitrum Foundation Previously: Developer Relations at Scroll in Web3 since 2017 X: https://x.com/Swagtimus The Modular L2 Stack How do L2s win as Ethereum matures? Arbitrum is not just an L2 what is exciting with Arbitrum? Why Stylus In EVM operates with 256 bit chunks. But with stylus you can take advantages of that wichi means huge efficienct..","title":"Kick off the Arbitrum Open Hourse"},{"location":"What_I_learned_from_VBI_Academy/OpenHouse%20program/intro_/#kick-off-the-arbitrum-open-hourse","text":"Author: Developer Evangelist at the Arbitrum Foundation Previously: Developer Relations at Scroll in Web3 since 2017","title":"Kick off the Arbitrum Open Hourse"},{"location":"What_I_learned_from_VBI_Academy/OpenHouse%20program/intro_/#x-httpsxcomswagtimus","text":"","title":"X: https://x.com/Swagtimus"},{"location":"What_I_learned_from_VBI_Academy/OpenHouse%20program/intro_/#the-modular-l2-stack","text":"","title":"The Modular L2 Stack"},{"location":"What_I_learned_from_VBI_Academy/OpenHouse%20program/intro_/#how-do-l2s-win-as-ethereum-matures","text":"","title":"How do L2s win as Ethereum matures?"},{"location":"What_I_learned_from_VBI_Academy/OpenHouse%20program/intro_/#arbitrum-is-not-just-an-l2","text":"","title":"Arbitrum is not just an L2"},{"location":"What_I_learned_from_VBI_Academy/OpenHouse%20program/intro_/#what-is-exciting-with-arbitrum","text":"","title":"what is exciting with Arbitrum?"},{"location":"What_I_learned_from_VBI_Academy/OpenHouse%20program/intro_/#why-stylus","text":"In EVM operates with 256 bit chunks. But with stylus you can take advantages of that wichi means huge efficienct..","title":"Why Stylus"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/00-introduction/","text":"Intro \u0111\u1ea7u ti\u00ean cho Rust Deep learning Build rust_deep community for this: Telegram: Unvailable \ud83d\udc40 Facebook group: Unvailable \ud83d\udc40 Rust l\u00e0 m\u1ed9t systems-level programming language \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf v\u1edbi m\u1ee5c ti\u00eau b\u1ea3o \u0111\u1ea3m memory safety v\u00e0 thread safety t\u1ee9c l\u00e0 tr\u00e1nh c\u00e1c l\u1ed7i kinh \u0111i\u1ec3n nh\u01b0 segmentation fault, crash hay race condition. V\u1edbi tri\u1ebft l\u00fd zero-overhead abstraction , Rust h\u01b0\u1edbng t\u1edbi vi\u1ec7c vi\u1ebft code c\u1ea5p th\u1ea5p (nh\u01b0 C/C++) nh\u01b0ng v\u1eabnan to\u00e0n m\u00e0 kh\u00f4ng ph\u1ea3i tr\u1ea3 gi\u00e1 b\u1eb1ng hi\u1ec7u su\u1ea5t. N\u00f3i m\u1ed9t c\u00e1ch d\u1ec5 hi\u1ec3u th\u00ec t\u1ed1c \u0111\u1ed9 c\u1ee7a Rust g\u1ea7n nh\u01b0 l\u00e0 same same v\u1edbi C/C++, nh\u01b0ng l\u1ea1i an to\u00e0n h\u01a1n r\u1ea5t nhi\u1ec1u. Rust \u0111\u01b0\u1ee3c x\u1ebfp v\u00e0o nh\u00f3m multi-paradigm compiled programming languages t\u1ee9c l\u00e0 h\u1ed7 tr\u1ee3 nhi\u1ec1u phong c\u00e1ch l\u1eadp tr\u00ecnh kh\u00e1c nhau v\u00e0 \u0111\u01b0\u1ee3c bi\u00ean d\u1ecbch (ch\u1ee9 kh\u00f4ng ph\u1ea3i interpreted). V\u1ec1 b\u1ea3n ch\u1ea5t, n\u00f3 c\u00f3 th\u1ec3 thay th\u1ebf cho C/C++ trong nhi\u1ec1u t\u00ecnh hu\u1ed1ng, nh\u01b0ng \u0111i\u1ec3m \u0111\u1eb7c bi\u1ec7t l\u00e0 Rust l\u00e0 thread-safe by default. Rust v\u1eabn c\u00f3 \u0111\u1ea7y \u0111\u1ee7 control structure quen thu\u1ed9c nh\u01b0 if, else, for, while,\u2026 v\u00e0 d\u00f9ng {} \u0111\u1ec3 bao kh\u1ed1i l\u1ec7nh gi\u1ed1ng phong c\u00e1ch curly-brace c\u1ee7a c\u00e1c ng\u00f4n ng\u1eef nh\u01b0 C, Java. Tuy nhi\u00ean, Rust kh\u00f4ng d\u00f9ng class hay inheritance nh\u01b0 C++/Java m\u00e0 ch\u1ecdn h\u01b0\u1edbng kh\u00e1c: d\u00f9ng struct, impl v\u00e0 trait \u2013 m\u1ed9t c\u00e1ch ti\u1ebfp c\u1eadn kh\u00e1 gi\u1ed1ng v\u1edbi functional languages nh\u01b0 Haskell hay OCaml. \u0110i\u1ec1u \u1ea5n t\u01b0\u1ee3ng l\u00e0 Rust kh\u00f4ng d\u00f9ng garbage collector nh\u01b0 Java hay C#, nh\u01b0ng v\u1eabn \u0111\u1ea3m b\u1ea3o memory safety th\u00f4ng qua ownership, borrowing, lifetime v\u00e0 h\u1ec7 th\u1ed1ng type-checking c\u1ef1c k\u1ef3 ch\u1eb7t ch\u1ebd. Khi b\u1ea1n hi\u1ec3u \u0111\u01b0\u1ee3c ownership model c\u1ee7a Rust, b\u1ea1n s\u1ebd th\u1ea5y n\u00f3 l\u00e0 m\u1ed9t masterpiece v\u1ec1 design system. V\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n nh\u1ea5t \u2013 Hello World: fn main() { println!(\"hello, world\"); } Rust ch\u1ecbu \u1ea3nh h\u01b0\u1edfng t\u1eeb nhi\u1ec1u ng\u00f4n ng\u1eef n\u1ed5i ti\u1ebfng nh\u01b0 C, C++, Haskell, OCaml, Ruby, Scheme, Swift,\u2026 v\u00e0 ng\u01b0\u1ee3c l\u1ea1i, c\u0169ng \u1ea3nh h\u01b0\u1edfng t\u1edbi C# 7, Elm, Idris, Swift sau n\u00e0y. Vi\u1ec7c c\u00e0i \u0111\u1eb7t rust r\u1ea5t d\u1ec5 b\u1ea1n ch\u1ec9 c\u1ea7n v\u00e0o trang rust-lang.org t\u1ea3i installer ph\u00f9 h\u1ee3p OS l\u00e0 xong. H\u1ed7 tr\u1ee3 m\u1ecdi h\u1ec7 \u0111i\u1ec1u h\u00e0nh ph\u1ed5 bi\u1ebfn nh\u01b0 Windows, macOS, Linux, FreeBSD, Android, iOS. V\u1ec1 l\u1ecbch s\u1eed: Rust b\u1eaft \u0111\u1ea7u nh\u01b0 m\u1ed9t d\u1ef1 \u00e1n c\u00e1 nh\u00e2n c\u1ee7a Graydon Hoare (m\u1ed9t dev \u1edf Mozilla) v\u00e0o n\u0103m 2009, sau \u0111\u00f3 \u0111\u01b0\u1ee3c Mozilla Research h\u1ed7 tr\u1ee3 ch\u00ednh th\u1ee9c v\u00e0 c\u00f4ng b\u1ed1 public n\u0103m 2010. T\u1eeb \u0111\u00f3 \u0111\u1ebfn khi ra m\u1eaft b\u1ea3n stable 1.0 (ng\u00e0y 15 th\u00e1ng 5 n\u0103m 2015), Rust \u0111\u00e3 tr\u1ea3i qua nhi\u1ec1u l\u1ea7n l\u1ed9t x\u00e1c, thay \u0111\u1ed5i thi\u1ebft k\u1ebf m\u1ed9t h\u00e0nh tr\u00ecnh kh\u00e1 \u201cpainful\u201d nh\u01b0ng c\u1ef1c k\u1ef3 \u0111\u00e1ng n\u1ec3. V\u00e0 k\u1ec3 t\u1eeb \u0111\u00f3, Rust tr\u1edf th\u00e0nh m\u1ed9t ng\u00f4n ng\u1eef v\u1edbi c\u1ed9ng \u0111\u1ed3ng dev \u0111\u00f3ng g\u00f3p m\u1ea1nh, t\u00e0i li\u1ec7u, v\u00e0 m\u1ed9t quy tr\u00ecnh contribution r\u1ea5t b\u00e0i b\u1ea3n t\u1ea1i github M\u1ee5c ti\u00eau c\u1ee7a kho\u00e1 h\u1ecdc n\u00e0y l\u00e0 \u0111\u1ec3 truy\u1ec1n t\u1ea3i Rust m\u1ed9t c\u00e1ch \u0111\u00fang nh\u1ea5t, c\u1eadp nh\u1eadt, d\u1ec5 hi\u1ec3u b\u1eb1ng ti\u1ebfng vi\u1ec7t cho nh\u1eefng ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u. Reference https://course.rs/about-book.html https://rustcc.gitbooks.io/rustprimer/content/install/rustup.html","title":"Intro \u0111\u1ea7u ti\u00ean cho Rust Deep learning"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/00-introduction/#intro-au-tien-cho-rust-deep-learning","text":"Build rust_deep community for this: Telegram: Unvailable \ud83d\udc40 Facebook group: Unvailable \ud83d\udc40 Rust l\u00e0 m\u1ed9t systems-level programming language \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf v\u1edbi m\u1ee5c ti\u00eau b\u1ea3o \u0111\u1ea3m memory safety v\u00e0 thread safety t\u1ee9c l\u00e0 tr\u00e1nh c\u00e1c l\u1ed7i kinh \u0111i\u1ec3n nh\u01b0 segmentation fault, crash hay race condition. V\u1edbi tri\u1ebft l\u00fd zero-overhead abstraction , Rust h\u01b0\u1edbng t\u1edbi vi\u1ec7c vi\u1ebft code c\u1ea5p th\u1ea5p (nh\u01b0 C/C++) nh\u01b0ng v\u1eabnan to\u00e0n m\u00e0 kh\u00f4ng ph\u1ea3i tr\u1ea3 gi\u00e1 b\u1eb1ng hi\u1ec7u su\u1ea5t. N\u00f3i m\u1ed9t c\u00e1ch d\u1ec5 hi\u1ec3u th\u00ec t\u1ed1c \u0111\u1ed9 c\u1ee7a Rust g\u1ea7n nh\u01b0 l\u00e0 same same v\u1edbi C/C++, nh\u01b0ng l\u1ea1i an to\u00e0n h\u01a1n r\u1ea5t nhi\u1ec1u. Rust \u0111\u01b0\u1ee3c x\u1ebfp v\u00e0o nh\u00f3m multi-paradigm compiled programming languages t\u1ee9c l\u00e0 h\u1ed7 tr\u1ee3 nhi\u1ec1u phong c\u00e1ch l\u1eadp tr\u00ecnh kh\u00e1c nhau v\u00e0 \u0111\u01b0\u1ee3c bi\u00ean d\u1ecbch (ch\u1ee9 kh\u00f4ng ph\u1ea3i interpreted). V\u1ec1 b\u1ea3n ch\u1ea5t, n\u00f3 c\u00f3 th\u1ec3 thay th\u1ebf cho C/C++ trong nhi\u1ec1u t\u00ecnh hu\u1ed1ng, nh\u01b0ng \u0111i\u1ec3m \u0111\u1eb7c bi\u1ec7t l\u00e0 Rust l\u00e0 thread-safe by default. Rust v\u1eabn c\u00f3 \u0111\u1ea7y \u0111\u1ee7 control structure quen thu\u1ed9c nh\u01b0 if, else, for, while,\u2026 v\u00e0 d\u00f9ng {} \u0111\u1ec3 bao kh\u1ed1i l\u1ec7nh gi\u1ed1ng phong c\u00e1ch curly-brace c\u1ee7a c\u00e1c ng\u00f4n ng\u1eef nh\u01b0 C, Java. Tuy nhi\u00ean, Rust kh\u00f4ng d\u00f9ng class hay inheritance nh\u01b0 C++/Java m\u00e0 ch\u1ecdn h\u01b0\u1edbng kh\u00e1c: d\u00f9ng struct, impl v\u00e0 trait \u2013 m\u1ed9t c\u00e1ch ti\u1ebfp c\u1eadn kh\u00e1 gi\u1ed1ng v\u1edbi functional languages nh\u01b0 Haskell hay OCaml. \u0110i\u1ec1u \u1ea5n t\u01b0\u1ee3ng l\u00e0 Rust kh\u00f4ng d\u00f9ng garbage collector nh\u01b0 Java hay C#, nh\u01b0ng v\u1eabn \u0111\u1ea3m b\u1ea3o memory safety th\u00f4ng qua ownership, borrowing, lifetime v\u00e0 h\u1ec7 th\u1ed1ng type-checking c\u1ef1c k\u1ef3 ch\u1eb7t ch\u1ebd. Khi b\u1ea1n hi\u1ec3u \u0111\u01b0\u1ee3c ownership model c\u1ee7a Rust, b\u1ea1n s\u1ebd th\u1ea5y n\u00f3 l\u00e0 m\u1ed9t masterpiece v\u1ec1 design system. V\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n nh\u1ea5t \u2013 Hello World: fn main() { println!(\"hello, world\"); } Rust ch\u1ecbu \u1ea3nh h\u01b0\u1edfng t\u1eeb nhi\u1ec1u ng\u00f4n ng\u1eef n\u1ed5i ti\u1ebfng nh\u01b0 C, C++, Haskell, OCaml, Ruby, Scheme, Swift,\u2026 v\u00e0 ng\u01b0\u1ee3c l\u1ea1i, c\u0169ng \u1ea3nh h\u01b0\u1edfng t\u1edbi C# 7, Elm, Idris, Swift sau n\u00e0y. Vi\u1ec7c c\u00e0i \u0111\u1eb7t rust r\u1ea5t d\u1ec5 b\u1ea1n ch\u1ec9 c\u1ea7n v\u00e0o trang rust-lang.org t\u1ea3i installer ph\u00f9 h\u1ee3p OS l\u00e0 xong. H\u1ed7 tr\u1ee3 m\u1ecdi h\u1ec7 \u0111i\u1ec1u h\u00e0nh ph\u1ed5 bi\u1ebfn nh\u01b0 Windows, macOS, Linux, FreeBSD, Android, iOS. V\u1ec1 l\u1ecbch s\u1eed: Rust b\u1eaft \u0111\u1ea7u nh\u01b0 m\u1ed9t d\u1ef1 \u00e1n c\u00e1 nh\u00e2n c\u1ee7a Graydon Hoare (m\u1ed9t dev \u1edf Mozilla) v\u00e0o n\u0103m 2009, sau \u0111\u00f3 \u0111\u01b0\u1ee3c Mozilla Research h\u1ed7 tr\u1ee3 ch\u00ednh th\u1ee9c v\u00e0 c\u00f4ng b\u1ed1 public n\u0103m 2010. T\u1eeb \u0111\u00f3 \u0111\u1ebfn khi ra m\u1eaft b\u1ea3n stable 1.0 (ng\u00e0y 15 th\u00e1ng 5 n\u0103m 2015), Rust \u0111\u00e3 tr\u1ea3i qua nhi\u1ec1u l\u1ea7n l\u1ed9t x\u00e1c, thay \u0111\u1ed5i thi\u1ebft k\u1ebf m\u1ed9t h\u00e0nh tr\u00ecnh kh\u00e1 \u201cpainful\u201d nh\u01b0ng c\u1ef1c k\u1ef3 \u0111\u00e1ng n\u1ec3. V\u00e0 k\u1ec3 t\u1eeb \u0111\u00f3, Rust tr\u1edf th\u00e0nh m\u1ed9t ng\u00f4n ng\u1eef v\u1edbi c\u1ed9ng \u0111\u1ed3ng dev \u0111\u00f3ng g\u00f3p m\u1ea1nh, t\u00e0i li\u1ec7u, v\u00e0 m\u1ed9t quy tr\u00ecnh contribution r\u1ea5t b\u00e0i b\u1ea3n t\u1ea1i github M\u1ee5c ti\u00eau c\u1ee7a kho\u00e1 h\u1ecdc n\u00e0y l\u00e0 \u0111\u1ec3 truy\u1ec1n t\u1ea3i Rust m\u1ed9t c\u00e1ch \u0111\u00fang nh\u1ea5t, c\u1eadp nh\u1eadt, d\u1ec5 hi\u1ec3u b\u1eb1ng ti\u1ebfng vi\u1ec7t cho nh\u1eefng ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u.","title":"Intro \u0111\u1ea7u ti\u00ean cho Rust Deep learning"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/00-introduction/#reference","text":"https://course.rs/about-book.html https://rustcc.gitbooks.io/rustprimer/content/install/rustup.html","title":"Reference"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/01-installing-rust/","text":"C\u00e0i Rust cho m\u1ecdi OS Trong ch\u01b0\u01a1ng n\u00e0y, m\u00ecnh s\u1ebd h\u01b0\u1edbng d\u1eabn c\u00e1ch c\u00e0i \u0111\u1eb7t Rust tr\u00ean ba n\u1ec1n t\u1ea3ng ph\u1ed5 bi\u1ebfn nh\u1ea5t hi\u1ec7n nay: Linux, macOS v\u00e0 Windows . 1. Rust cho Linux V\u1edbi Linux, Rust cung c\u1ea5p 2 c\u00e1ch c\u00e0i ch\u00ednh: \ud83d\udce6 C\u00e1ch 1: Download tr\u1ef1c ti\u1ebfp g\u00f3i c\u00e0i \u0111\u1eb7t N\u1ebfu b\u1ea1n ch\u1ecdn c\u00e1ch n\u00e0y th\u00ec c\u1ea7n ki\u1ec3m tra tr\u01b0\u1edbc xem h\u1ec7 \u0111i\u1ec1u h\u00e0nh hi\u1ec7n t\u1ea1i c\u1ee7a b\u1ea1n l\u00e0 64-bit hay 32-bit \u0111\u1ec3 t\u1ea3i \u0111\u00fang version ph\u00f9 h\u1ee3p. \u0110\u1ec3 ki\u1ec3m tra h\u1ec7 \u0111i\u1ec1u h\u00e0nh, m\u1edf terminal v\u00e0 ch\u1ea1y l\u1ec7nh sau: uname -a K\u1ebft qu\u1ea3 s\u1ebd tr\u1ea3 v\u1ec1 ki\u1ec3u ki\u1ec3u nh\u01b0 v\u1ea7y: Linux harry-laptop 5.15.0-106-generic #116-Ubuntu SMP x86_64 GNU/Linux Nh\u01b0 h\u00ecnh minh ho\u1ea1 \u1edf tr\u00ean, n\u1ebfu output ch\u1ee9a d\u00f2ng x86_64 \u2192 ngh\u0129a l\u00e0 b\u1ea1n \u0111ang d\u00f9ng 64-bit system h\u00e3y t\u1ea3i g\u00f3i c\u00e0i \u0111\u1eb7t 64-bit. Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu output l\u00e0 i386 ho\u1eb7c x86-32 th\u00ec b\u1ea1n \u0111ang d\u00f9ng 32-bit system \u2192 nh\u1edb t\u1ea3i \u0111\u00fang g\u00f3i 32-bit t\u01b0\u01a1ng \u1ee9ng nha. \u0110\u1ec3 gi\u1ea3i n\u00e9n c\u00e0i \u0111\u1eb7t th\u00ec ta d\u00f9ng: tar -zxvf rust-1.5.0-x86_64-unknown-linux-gnu.tar.gz Di chuy\u1ec3n v\u00e0o th\u01b0 m\u1ee5c \u0111\u00e3 gi\u1ea3i n\u00e9n: cd rust-1.5.0-x86_64-unknown-linux-gnu Ch\u1ea1y script c\u00e0i \u0111\u1eb7t: ./install.sh N\u1ebfu m\u1ecdi th\u1ee9 di\u1ec5n ra ok, b\u1ea1n s\u1ebd th\u1ea5y: Rust is ready to roll. Ki\u1ec3m tra phi\u00ean b\u1ea3n Rust \u0111\u00e3 c\u00e0i: b\u1eb1ng c\u00e1ch ch\u1ea1y l\u1ec7nh: rustc --version Output s\u1ebd gi\u1ed1ng nh\u01b0 v\u1ea7y: rustc 1.5.0 (3d7cd77e4 2015-12-04) D\u00f2ng n\u00e0y x\u00e1c nh\u1eadn b\u1ea1n \u0111\u00e3 c\u00f3 Rust compiler (rustc) ho\u1ea1t \u0111\u1ed9ng \u1ed5n \u0111\u1ecbnh tr\u00ean m\u00e1y. C\u00e1ch 2: C\u00e0i Rust b\u1eb1ng m\u1ed9t d\u00f2ng l\u1ec7nh duy nh\u1ea5t (One-click install) M\u1edf Terminal v\u00e0 ch\u1ea1y: curl -sSf https://static.rust-lang.org/rustup.sh | sh L\u1ec7nh n\u00e0y s\u1ebd: * T\u1ef1 t\u1ea3i script c\u00e0i \u0111\u1eb7t v\u1ec1 * Ch\u1ea1y qu\u00e1 tr\u00ecnh setup t\u1ef1 \u0111\u1ed9ng * Thi\u1ebft l\u1eadp m\u00f4i tr\u01b0\u1eddng cargo, rustc, rustup,\u2026 \u0111\u1ea7y \u0111\u1ee7 Tuy nhi\u00ean, rust s\u1ebd kh\u00f4ng ch\u1ec9 c\u00f3 m\u1ed7i stable version (b\u1ea3n \u1ed5n \u0111\u1ecbnh) , m\u00e0 c\u00f2n c\u00f3: Beta Nightly: b\u1ea3n bleeding-edge, h\u1ed7 tr\u1ee3 t\u00ednh n\u0103ng m\u1edbi, nh\u01b0ng kh\u00f4ng \u0111\u1ea3m b\u1ea3o \u1ed5n \u0111\u1ecbnh B\u1ea1n c\u00f3 th\u1ec3 ch\u1ecdn v\u00e0 t\u1ea3i c\u00e1c b\u1ea3n n\u00e0y t\u1ea1i: https://www.rust-lang.org/zh-CN/other-installers.html Ho\u1eb7c d\u00f9ng tr\u1ef1c ti\u1ebfp v\u1edbi b\u1ea3n browser: http://play.rust-lang.org/ 2. Rust cho MacOS 3. Rust cho Windows 4. Rustup \u2013 Qu\u1ea3n l\u00fd phi\u00ean b\u1ea3n Rust Website d\u1ef1 \u00e1n: https://github.com/rust-lang/rustup Rustup l\u00e0 c\u00f4ng c\u1ee5 ch\u00ednh th\u1ee9c d\u00f9ng \u0111\u1ec3 c\u00e0i \u0111\u1eb7t v\u00e0 qu\u1ea3n l\u00fd c\u00e1c phi\u00ean b\u1ea3n Rust. \u0110\u00e2y l\u00e0 l\u1ef1a ch\u1ecdn h\u00e0ng \u0111\u1ea7u d\u00e0nh cho b\u1ea5t k\u1ef3 ai b\u1eaft \u0111\u1ea7u h\u1ecdc ho\u1eb7c l\u00e0m vi\u1ec7c v\u1edbi Rust. Khi b\u1ea1n c\u00e0i Rust th\u00f4ng qua rustup, b\u1ea1n kh\u00f4ng ch\u1ec9 c\u00f3 rustc (compiler) m\u00e0 c\u00f2n c\u00f3 th\u00eam: cargo: tr\u00ecnh qu\u1ea3n l\u00fd package v\u00e0 build tool rustup: c\u00f4ng c\u1ee5 c\u00e0i, c\u1eadp nh\u1eadt v\u00e0 chuy\u1ec3n \u0111\u1ed5i gi\u1eefa c\u00e1c phi\u00ean b\u1ea3n Rust kh\u1ea3 n\u0103ng chuy\u1ec3n \u0111\u1ed5i nhanh gi\u1eefa stable, beta, nightly kh\u1ea3 n\u0103ng c\u1ea5u h\u00ecnh toolchain ri\u00eang cho t\u1eebng project ho\u1eb7c th\u01b0 m\u1ee5c kh\u1ea3 n\u0103ng c\u00e0i th\u00eam target \u0111\u1ec3 cross-compile v\u00e0 nhi\u1ec1u ti\u1ec7n \u00edch kh\u00e1c gi\u00fap dev Rust tho\u1ea3i m\u00e1i h\u01a1n trong qu\u00e1 tr\u00ecnh ph\u00e1t tri\u1ec3n 4.1 C\u00e0i \u0111\u1eb7t rustup Tr\u00ean Windows Truy c\u1eadp trang ch\u1ee7: https://rustup.rs T\u1ea3i file rustup-init.exe Ch\u1ea1y file v\u00e0 l\u00e0m theo h\u01b0\u1edbng d\u1eabn. B\u1ea1n s\u1ebd th\u1ea5y m\u00e0n h\u00ecnh t\u01b0\u01a1ng t\u00e1c nh\u01b0 sau: Welcome to Rust! 1) Proceed with installation (default) 2) Customize installation 3) Cancel installation B\u1ea1n c\u00f3 th\u1ec3 ch\u1ecdn: 1: C\u00e0i \u0111\u1eb7t nhanh v\u1edbi thi\u1ebft l\u1eadp m\u1eb7c \u0111\u1ecbnh (stable, th\u00eam v\u00e0o PATH) 2: Tu\u1ef3 ch\u1ec9nh cho ph\u00e9p ch\u1ecdn toolchain (nightly, beta\u2026), ki\u1ebfn tr\u00fac, v\u00e0 c\u00f3 th\u00eam PATH hay kh\u00f4ng Tr\u00ean Linux & macOS th\u00ec m\u1edf Terminal v\u00e0 g\u00f5 l\u1ec7nh sau: curl https://sh.rustup.rs -sSf | sh L\u1ec7nh n\u00e0y s\u1ebd: T\u1ea3i script c\u00e0i \u0111\u1eb7t v\u1ec1 T\u1ef1 \u0111\u1ed9ng c\u00e0i rustup, cargo, rustc Thi\u1ebft l\u1eadp stable l\u00e0m toolchain m\u1eb7c \u0111\u1ecbnh T\u1ef1 th\u00eam $HOME/.cargo/bin v\u00e0o PATH \ud83d\udccd Sau khi c\u00e0i xong, b\u1ea1n c\u1ea7n restart terminal ho\u1eb7c th\u00eam d\u00f2ng sau v\u00e0o .bashrc/.zshrc n\u1ebfu ch\u01b0a t\u1ef1 \u0111\u1ed9ng nh\u1eadn: export PATH=\"$HOME/.cargo/bin:$PATH\" N\u1ebfu b\u1ea1n mu\u1ed1n g\u1ee1 to\u00e0n b\u1ed9 Rust v\u00e0 rustup, ch\u1ec9 c\u1ea7n ch\u1ea1y: rustup self uninstall 4.2 C\u00e1c l\u1ec7nh rustup th\u01b0\u1eddng d\u00f9ng (Common rustup commands) Sau khi c\u00e0i \u0111\u1eb7t rustup, b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng h\u00e0ng lo\u1ea1t l\u1ec7nh ti\u1ec7n l\u1ee3i \u0111\u1ec3 qu\u1ea3n l\u00fd Rust toolchain v\u00e0 c\u1ea5u h\u00ecnh m\u00f4i tr\u01b0\u1eddng l\u1eadp tr\u00ecnh c\u1ee7a m\u00ecnh. C\u1ea5u h\u00ecnh toolchain: rustup default <toolchain> Thi\u1ebft l\u1eadp phi\u00ean b\u1ea3n Rust m\u1eb7c \u0111\u1ecbnh cho to\u00e0n h\u1ec7 th\u1ed1ng. rustup default stable rustup default nightly Qu\u1ea3n l\u00fd toolchain, c\u00e0i m\u1ed9t toolchain m\u1edbi: rustup toolchain install <toolchain> # rustup toolchain install nightly # rustup toolchain install 1.68.2 Li\u00ean k\u1ebft toolchain t\u00f9y ch\u1ec9nh: rustup toolchain link <toolchain-name> \"<toolchain-path>\" G\u00e1n toolchain ri\u00eang cho th\u01b0 m\u1ee5c,rustup override cho ph\u00e9p thi\u1ebft l\u1eadp toolchain c\u1ee5 th\u1ec3 cho m\u1ed9t folder v\u00e0 t\u1ea5t c\u1ea3 c\u00e1c th\u01b0 m\u1ee5c con b\u00ean trong. rustup override set <toolchain> # rustup override set nightly Qu\u1ea3n l\u00fd cross-compilation target. N\u1ebfu b\u1ea1n mu\u1ed1n build Rust cho m\u1ed9t n\u1ec1n t\u1ea3ng kh\u00e1c (nh\u01b0 WebAssembly, ARM, iOS\u2026), b\u1ea1n c\u1ea7n th\u00eam target v\u00e0o toolchain c\u1ee7a m\u00ecnh. rustup target add <target> V\u00ed d\u1ee5: rustup target add wasm32-unknown-unknown # g\u1ee1 target rustup target remove <target> # C\u00e0i target cho m\u1ed9t toolchain c\u1ee5 th\u1ec3: rustup target add --toolchain <toolchain> <target> Rustup component cho ph\u00e9p c\u00e0i th\u00eam c\u00e1c th\u00e0nh ph\u1ea7n nh\u01b0 linter, source code, RLS\u2026 rustup component add <component> # G\u1ee1 component rustup component remove <component> # Xem danh s\u00e1ch component kh\u1ea3 d\u1ee5ng: rustup component list","title":"C\u00e0i Rust cho m\u1ecdi OS"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/01-installing-rust/#cai-rust-cho-moi-os","text":"Trong ch\u01b0\u01a1ng n\u00e0y, m\u00ecnh s\u1ebd h\u01b0\u1edbng d\u1eabn c\u00e1ch c\u00e0i \u0111\u1eb7t Rust tr\u00ean ba n\u1ec1n t\u1ea3ng ph\u1ed5 bi\u1ebfn nh\u1ea5t hi\u1ec7n nay: Linux, macOS v\u00e0 Windows .","title":"C\u00e0i Rust cho m\u1ecdi OS"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/01-installing-rust/#1-rust-cho-linux","text":"V\u1edbi Linux, Rust cung c\u1ea5p 2 c\u00e1ch c\u00e0i ch\u00ednh:","title":"1. Rust cho Linux"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/01-installing-rust/#cach-1-download-truc-tiep-goi-cai-at","text":"N\u1ebfu b\u1ea1n ch\u1ecdn c\u00e1ch n\u00e0y th\u00ec c\u1ea7n ki\u1ec3m tra tr\u01b0\u1edbc xem h\u1ec7 \u0111i\u1ec1u h\u00e0nh hi\u1ec7n t\u1ea1i c\u1ee7a b\u1ea1n l\u00e0 64-bit hay 32-bit \u0111\u1ec3 t\u1ea3i \u0111\u00fang version ph\u00f9 h\u1ee3p. \u0110\u1ec3 ki\u1ec3m tra h\u1ec7 \u0111i\u1ec1u h\u00e0nh, m\u1edf terminal v\u00e0 ch\u1ea1y l\u1ec7nh sau: uname -a K\u1ebft qu\u1ea3 s\u1ebd tr\u1ea3 v\u1ec1 ki\u1ec3u ki\u1ec3u nh\u01b0 v\u1ea7y: Linux harry-laptop 5.15.0-106-generic #116-Ubuntu SMP x86_64 GNU/Linux Nh\u01b0 h\u00ecnh minh ho\u1ea1 \u1edf tr\u00ean, n\u1ebfu output ch\u1ee9a d\u00f2ng x86_64 \u2192 ngh\u0129a l\u00e0 b\u1ea1n \u0111ang d\u00f9ng 64-bit system h\u00e3y t\u1ea3i g\u00f3i c\u00e0i \u0111\u1eb7t 64-bit. Ng\u01b0\u1ee3c l\u1ea1i, n\u1ebfu output l\u00e0 i386 ho\u1eb7c x86-32 th\u00ec b\u1ea1n \u0111ang d\u00f9ng 32-bit system \u2192 nh\u1edb t\u1ea3i \u0111\u00fang g\u00f3i 32-bit t\u01b0\u01a1ng \u1ee9ng nha. \u0110\u1ec3 gi\u1ea3i n\u00e9n c\u00e0i \u0111\u1eb7t th\u00ec ta d\u00f9ng: tar -zxvf rust-1.5.0-x86_64-unknown-linux-gnu.tar.gz Di chuy\u1ec3n v\u00e0o th\u01b0 m\u1ee5c \u0111\u00e3 gi\u1ea3i n\u00e9n: cd rust-1.5.0-x86_64-unknown-linux-gnu Ch\u1ea1y script c\u00e0i \u0111\u1eb7t: ./install.sh N\u1ebfu m\u1ecdi th\u1ee9 di\u1ec5n ra ok, b\u1ea1n s\u1ebd th\u1ea5y: Rust is ready to roll. Ki\u1ec3m tra phi\u00ean b\u1ea3n Rust \u0111\u00e3 c\u00e0i: b\u1eb1ng c\u00e1ch ch\u1ea1y l\u1ec7nh: rustc --version Output s\u1ebd gi\u1ed1ng nh\u01b0 v\u1ea7y: rustc 1.5.0 (3d7cd77e4 2015-12-04) D\u00f2ng n\u00e0y x\u00e1c nh\u1eadn b\u1ea1n \u0111\u00e3 c\u00f3 Rust compiler (rustc) ho\u1ea1t \u0111\u1ed9ng \u1ed5n \u0111\u1ecbnh tr\u00ean m\u00e1y.","title":"\ud83d\udce6 C\u00e1ch 1: Download tr\u1ef1c ti\u1ebfp g\u00f3i c\u00e0i \u0111\u1eb7t"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/01-installing-rust/#cach-2-cai-rust-bang-mot-dong-lenh-duy-nhat-one-click-install","text":"M\u1edf Terminal v\u00e0 ch\u1ea1y: curl -sSf https://static.rust-lang.org/rustup.sh | sh L\u1ec7nh n\u00e0y s\u1ebd: * T\u1ef1 t\u1ea3i script c\u00e0i \u0111\u1eb7t v\u1ec1 * Ch\u1ea1y qu\u00e1 tr\u00ecnh setup t\u1ef1 \u0111\u1ed9ng * Thi\u1ebft l\u1eadp m\u00f4i tr\u01b0\u1eddng cargo, rustc, rustup,\u2026 \u0111\u1ea7y \u0111\u1ee7 Tuy nhi\u00ean, rust s\u1ebd kh\u00f4ng ch\u1ec9 c\u00f3 m\u1ed7i stable version (b\u1ea3n \u1ed5n \u0111\u1ecbnh) , m\u00e0 c\u00f2n c\u00f3: Beta Nightly: b\u1ea3n bleeding-edge, h\u1ed7 tr\u1ee3 t\u00ednh n\u0103ng m\u1edbi, nh\u01b0ng kh\u00f4ng \u0111\u1ea3m b\u1ea3o \u1ed5n \u0111\u1ecbnh B\u1ea1n c\u00f3 th\u1ec3 ch\u1ecdn v\u00e0 t\u1ea3i c\u00e1c b\u1ea3n n\u00e0y t\u1ea1i: https://www.rust-lang.org/zh-CN/other-installers.html Ho\u1eb7c d\u00f9ng tr\u1ef1c ti\u1ebfp v\u1edbi b\u1ea3n browser: http://play.rust-lang.org/","title":"C\u00e1ch 2: C\u00e0i Rust b\u1eb1ng m\u1ed9t d\u00f2ng l\u1ec7nh duy nh\u1ea5t (One-click install)"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/01-installing-rust/#2-rust-cho-macos","text":"","title":"2. Rust cho MacOS"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/01-installing-rust/#3-rust-cho-windows","text":"","title":"3. Rust cho Windows"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/01-installing-rust/#4-rustup-quan-ly-phien-ban-rust","text":"Website d\u1ef1 \u00e1n: https://github.com/rust-lang/rustup Rustup l\u00e0 c\u00f4ng c\u1ee5 ch\u00ednh th\u1ee9c d\u00f9ng \u0111\u1ec3 c\u00e0i \u0111\u1eb7t v\u00e0 qu\u1ea3n l\u00fd c\u00e1c phi\u00ean b\u1ea3n Rust. \u0110\u00e2y l\u00e0 l\u1ef1a ch\u1ecdn h\u00e0ng \u0111\u1ea7u d\u00e0nh cho b\u1ea5t k\u1ef3 ai b\u1eaft \u0111\u1ea7u h\u1ecdc ho\u1eb7c l\u00e0m vi\u1ec7c v\u1edbi Rust. Khi b\u1ea1n c\u00e0i Rust th\u00f4ng qua rustup, b\u1ea1n kh\u00f4ng ch\u1ec9 c\u00f3 rustc (compiler) m\u00e0 c\u00f2n c\u00f3 th\u00eam: cargo: tr\u00ecnh qu\u1ea3n l\u00fd package v\u00e0 build tool rustup: c\u00f4ng c\u1ee5 c\u00e0i, c\u1eadp nh\u1eadt v\u00e0 chuy\u1ec3n \u0111\u1ed5i gi\u1eefa c\u00e1c phi\u00ean b\u1ea3n Rust kh\u1ea3 n\u0103ng chuy\u1ec3n \u0111\u1ed5i nhanh gi\u1eefa stable, beta, nightly kh\u1ea3 n\u0103ng c\u1ea5u h\u00ecnh toolchain ri\u00eang cho t\u1eebng project ho\u1eb7c th\u01b0 m\u1ee5c kh\u1ea3 n\u0103ng c\u00e0i th\u00eam target \u0111\u1ec3 cross-compile v\u00e0 nhi\u1ec1u ti\u1ec7n \u00edch kh\u00e1c gi\u00fap dev Rust tho\u1ea3i m\u00e1i h\u01a1n trong qu\u00e1 tr\u00ecnh ph\u00e1t tri\u1ec3n","title":"4. Rustup \u2013 Qu\u1ea3n l\u00fd phi\u00ean b\u1ea3n Rust"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/01-installing-rust/#41-cai-at-rustup","text":"Tr\u00ean Windows Truy c\u1eadp trang ch\u1ee7: https://rustup.rs T\u1ea3i file rustup-init.exe Ch\u1ea1y file v\u00e0 l\u00e0m theo h\u01b0\u1edbng d\u1eabn. B\u1ea1n s\u1ebd th\u1ea5y m\u00e0n h\u00ecnh t\u01b0\u01a1ng t\u00e1c nh\u01b0 sau: Welcome to Rust! 1) Proceed with installation (default) 2) Customize installation 3) Cancel installation B\u1ea1n c\u00f3 th\u1ec3 ch\u1ecdn: 1: C\u00e0i \u0111\u1eb7t nhanh v\u1edbi thi\u1ebft l\u1eadp m\u1eb7c \u0111\u1ecbnh (stable, th\u00eam v\u00e0o PATH) 2: Tu\u1ef3 ch\u1ec9nh cho ph\u00e9p ch\u1ecdn toolchain (nightly, beta\u2026), ki\u1ebfn tr\u00fac, v\u00e0 c\u00f3 th\u00eam PATH hay kh\u00f4ng Tr\u00ean Linux & macOS th\u00ec m\u1edf Terminal v\u00e0 g\u00f5 l\u1ec7nh sau: curl https://sh.rustup.rs -sSf | sh L\u1ec7nh n\u00e0y s\u1ebd: T\u1ea3i script c\u00e0i \u0111\u1eb7t v\u1ec1 T\u1ef1 \u0111\u1ed9ng c\u00e0i rustup, cargo, rustc Thi\u1ebft l\u1eadp stable l\u00e0m toolchain m\u1eb7c \u0111\u1ecbnh T\u1ef1 th\u00eam $HOME/.cargo/bin v\u00e0o PATH \ud83d\udccd Sau khi c\u00e0i xong, b\u1ea1n c\u1ea7n restart terminal ho\u1eb7c th\u00eam d\u00f2ng sau v\u00e0o .bashrc/.zshrc n\u1ebfu ch\u01b0a t\u1ef1 \u0111\u1ed9ng nh\u1eadn: export PATH=\"$HOME/.cargo/bin:$PATH\" N\u1ebfu b\u1ea1n mu\u1ed1n g\u1ee1 to\u00e0n b\u1ed9 Rust v\u00e0 rustup, ch\u1ec9 c\u1ea7n ch\u1ea1y: rustup self uninstall","title":"4.1 C\u00e0i \u0111\u1eb7t rustup"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/01-installing-rust/#42-cac-lenh-rustup-thuong-dung-common-rustup-commands","text":"Sau khi c\u00e0i \u0111\u1eb7t rustup, b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng h\u00e0ng lo\u1ea1t l\u1ec7nh ti\u1ec7n l\u1ee3i \u0111\u1ec3 qu\u1ea3n l\u00fd Rust toolchain v\u00e0 c\u1ea5u h\u00ecnh m\u00f4i tr\u01b0\u1eddng l\u1eadp tr\u00ecnh c\u1ee7a m\u00ecnh. C\u1ea5u h\u00ecnh toolchain: rustup default <toolchain> Thi\u1ebft l\u1eadp phi\u00ean b\u1ea3n Rust m\u1eb7c \u0111\u1ecbnh cho to\u00e0n h\u1ec7 th\u1ed1ng. rustup default stable rustup default nightly Qu\u1ea3n l\u00fd toolchain, c\u00e0i m\u1ed9t toolchain m\u1edbi: rustup toolchain install <toolchain> # rustup toolchain install nightly # rustup toolchain install 1.68.2 Li\u00ean k\u1ebft toolchain t\u00f9y ch\u1ec9nh: rustup toolchain link <toolchain-name> \"<toolchain-path>\" G\u00e1n toolchain ri\u00eang cho th\u01b0 m\u1ee5c,rustup override cho ph\u00e9p thi\u1ebft l\u1eadp toolchain c\u1ee5 th\u1ec3 cho m\u1ed9t folder v\u00e0 t\u1ea5t c\u1ea3 c\u00e1c th\u01b0 m\u1ee5c con b\u00ean trong. rustup override set <toolchain> # rustup override set nightly Qu\u1ea3n l\u00fd cross-compilation target. N\u1ebfu b\u1ea1n mu\u1ed1n build Rust cho m\u1ed9t n\u1ec1n t\u1ea3ng kh\u00e1c (nh\u01b0 WebAssembly, ARM, iOS\u2026), b\u1ea1n c\u1ea7n th\u00eam target v\u00e0o toolchain c\u1ee7a m\u00ecnh. rustup target add <target> V\u00ed d\u1ee5: rustup target add wasm32-unknown-unknown # g\u1ee1 target rustup target remove <target> # C\u00e0i target cho m\u1ed9t toolchain c\u1ee5 th\u1ec3: rustup target add --toolchain <toolchain> <target> Rustup component cho ph\u00e9p c\u00e0i th\u00eam c\u00e1c th\u00e0nh ph\u1ea7n nh\u01b0 linter, source code, RLS\u2026 rustup component add <component> # G\u1ee1 component rustup component remove <component> # Xem danh s\u00e1ch component kh\u1ea3 d\u1ee5ng: rustup component list","title":"4.2 C\u00e1c l\u1ec7nh rustup th\u01b0\u1eddng d\u00f9ng (Common rustup commands)"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/Rust%20Core%20Concept%20Analysis/","text":"Rust core concepts analysis: references, borrowing and internal mutability The Rust language provides strong guarantees for solving these problems at the compile stage through its ownership and borrowing checking system. This article focuses on a key part of this system: references. We will analyze in detail the differences between shared references (&T) and mutable references (&mut) Tham chi\u1ebfu (References) Rust cho ph\u00e9p b\u1ea1n m\u01b0\u1ee3n gi\u00e1 tr\u1ecb m\u00e0 kh\u00f4ng c\u1ea7n chuy\u1ec3n quy\u1ec1n s\u1edf h\u1eefu , th\u00f4ng qua tham chi\u1ebfu (reference) . M\u1ed9t reference l\u00e0 m\u1ed9t con tr\u1ecf ( pointer ) nh\u01b0ng c\u00f3 k\u00e8m theo \u201ch\u1ee3p \u0111\u1ed3ng\u201d v\u1ec1 quy\u1ec1n truy c\u1eadp. &T \u2013 Shared Reference (tham chi\u1ebfu chia s\u1ebb)","title":"Rust core concepts analysis: references, borrowing and internal mutability"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/Rust%20Core%20Concept%20Analysis/#rust-core-concepts-analysis-references-borrowing-and-internal-mutability","text":"The Rust language provides strong guarantees for solving these problems at the compile stage through its ownership and borrowing checking system. This article focuses on a key part of this system: references. We will analyze in detail the differences between shared references (&T) and mutable references (&mut)","title":"Rust core concepts analysis: references, borrowing and internal mutability"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/Rust%20Core%20Concept%20Analysis/#tham-chieu-references","text":"Rust cho ph\u00e9p b\u1ea1n m\u01b0\u1ee3n gi\u00e1 tr\u1ecb m\u00e0 kh\u00f4ng c\u1ea7n chuy\u1ec3n quy\u1ec1n s\u1edf h\u1eefu , th\u00f4ng qua tham chi\u1ebfu (reference) . M\u1ed9t reference l\u00e0 m\u1ed9t con tr\u1ecf ( pointer ) nh\u01b0ng c\u00f3 k\u00e8m theo \u201ch\u1ee3p \u0111\u1ed3ng\u201d v\u1ec1 quy\u1ec1n truy c\u1eadp.","title":"Tham chi\u1ebfu (References)"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/Rust%20Core%20Concept%20Analysis/#t-shared-reference-tham-chieu-chia-se","text":"","title":"&amp;T \u2013 Shared Reference (tham chi\u1ebfu chia s\u1ebb)"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/Rust-traites%3A%20Static%20vs.%20Dynamic%20Choices%20and%20Tradeoffs/","text":"Hi\u1ec3u t\u01b0\u1eddng t\u1eadn Trait Dispatch trong Rust: Static vs. Dynamic Khi vi\u1ebft code Rust, b\u1ea1n s\u1ebd th\u01b0\u1eddng xuy\u00ean b\u1eaft g\u1eb7p impl Trait v\u00e0 &dyn Trai nh\u00ecn th\u00ec t\u01b0\u1edfng na n\u00e1 nhau, nh\u01b0ng th\u1ef1c ch\u1ea5t l\u1ea1i \u0111\u1ea1i di\u1ec7n cho hai c\u01a1 ch\u1ebf Trait Dispatch ho\u00e0n to\u00e0n kh\u00e1c nhau: static dispatch (t\u0129nh) v\u00e0 dynamic dispatch (\u0111\u1ed9ng). Vi\u1ec7c hi\u1ec3u s\u00e2u hai c\u01a1 ch\u1ebf n\u00e0y l\u00e0 ch\u00eca kh\u00f3a \u0111\u1ec3 vi\u1ebft code Rust hi\u1ec7u qu\u1ea3, t\u1eadn d\u1ee5ng t\u1ed1i \u0111a kh\u1ea3 n\u0103ng t\u1ed1i \u01b0u m\u00e0 ng\u00f4n ng\u1eef mang l\u1ea1i. 1.Trait Dispatch l\u00e0 g\u00ec? Trait dispatch l\u00e0 c\u00e1ch m\u00e0 Rust x\u00e1c \u0111\u1ecbnh v\u00e0 g\u1ecdi ph\u01b0\u01a1ng th\u1ee9c t\u1eeb trait. T\u00f9y v\u00e0o c\u00e1ch s\u1eed d\u1ee5ng, Rust s\u1ebd quy\u1ebft \u0111\u1ecbnh th\u1ef1c hi\u1ec7n \u0111i\u1ec1u \u0111\u00f3 t\u1ea1i th\u1eddi \u0111i\u1ec3m bi\u00ean d\u1ecbch (compile time) ho\u1eb7c th\u1eddi \u0111i\u1ec3m ch\u1ea1y (runtime) . 1.1 Static Dispatch - Ph\u00e2n ph\u1ed1i t\u0129nh Static dispatch x\u1ea3y ra khi s\u1eed d\u1ee5ng impl Trait ho\u1eb7c generic parameter c\u00f3 r\u00e0ng bu\u1ed9c trait: fn do_something<T: MyTrait>(x: T) { x.method(); } C\u01a1 ch\u1ebf l\u00e0 Rust s\u1ebd th\u1ef1c hi\u1ec7n monomorphization (qu\u00e1 tr\u00ecnh nh\u00e2n b\u1ea3n) h\u00e0m generic cho t\u1eebng ki\u1ec3u c\u1ee5 th\u1ec3 m\u00e0 b\u1ea1n s\u1eed d\u1ee5ng. M\u1ed7i b\u1ea3n sao s\u1ebd c\u00f3 t\u1ea5t c\u1ea3 ki\u1ec3u d\u1eef li\u1ec7u c\u1ee5 th\u1ec3 thay cho generic. \u0110i\u1ec1u n\u00e0y gi\u00fap compiler bi\u1ebft ch\u00ednh x\u00e1c \u0111\u1ecba ch\u1ec9 c\u1ee7a method c\u1ea7n g\u1ecdi v\u00e0 c\u00f3 th\u1ec3 t\u1ed1i \u01b0u r\u1ea5t m\u1ea1nh \u01afu \u0111i\u1ec3m: Hi\u1ec7u su\u1ea5t cao nh\u1ea5t G\u1ecdi ph\u01b0\u01a1ng th\u1ee9c kh\u00f4ng t\u1ed1n chi ph\u00ed ph\u1ee5 tr\u1ed9i Cho ph\u00e9p t\u1ed1i \u01b0u h\u00f3a s\u00e2u nh\u01b0 inline, unroll loop... Nh\u01b0\u1ee3c \u0111i\u1ec3m T\u0103ng th\u1eddi gian bi\u00ean d\u1ecbch T\u0103ng k\u00edch th\u01b0\u1edbc file nh\u1ecb ph\u00e2n C\u00f3 th\u1ec3 gi\u1ea3m hi\u1ec7u qu\u1ea3 cache CPU do nhi\u1ec1u b\u1ea3n sao 1.2 Dynamic Dispatch - Ph\u00e2n ph\u1ed1i \u0111\u1ed9ng Dynamic dispatch x\u1ea3y ra khi s\u1eed d\u1ee5ng &dyn Trait ho\u1eb7c Box : fn do_something(x: &dyn MyTrait) { x.method(); } Rust s\u1ebd t\u1ea1o m\u1ed9t trait object, bao g\u1ed3m: Con tr\u1ecf \u0111\u1ebfn d\u1eef li\u1ec7u th\u1ef1c t\u1ebf Con tr\u1ecf \u0111\u1ebfn b\u1ea3ng ph\u01b0\u01a1ng th\u1ee9c \u1ea3o (vtable) Khi g\u1ecdi ph\u01b0\u01a1ng th\u1ee9c, Rust s\u1ebd t\u00ecm \u0111\u1ecba ch\u1ec9 t\u01b0\u01a1ng \u1ee9ng trong vtable v\u00e0 g\u1ecdi gi\u00e1n ti\u1ebfp. \u01afu \u0111i\u1ec3m: Gi\u1ea3m th\u1eddi gian bi\u00ean d\u1ecbch Gi\u1ea3m k\u00edch th\u01b0\u1edbc nh\u1ecb ph\u00e2n do kh\u00f4ng c\u1ea7n t\u1ea1o nhi\u1ec1u b\u1ea3n sao Cho ph\u00e9p vi\u1ebft code linh ho\u1ea1t, \u0111\u1ed9c l\u1eadp v\u1edbi ki\u1ec3u c\u1ee5 th\u1ec3 Nh\u01b0\u1ee3c \u0111i\u1ec3m G\u1ecdi ph\u01b0\u01a1ng th\u1ee9c t\u1ed1n chi ph\u00ed vtable lookup Kh\u00f4ng th\u1ec3 t\u1ed1i \u01b0u nh\u01b0 static dispatch Trait c\u1ea7n tu\u00e2n th\u1ee7 \u0111i\u1ec1u ki\u1ec7n object-safe m\u1edbi d\u00f9ng \u0111\u01b0\u1ee3c Object Safety - T\u00ednh an to\u00e0n c\u1ee7a trait object Kh\u00f4ng ph\u1ea3i trait n\u00e0o c\u0169ng c\u00f3 th\u1ec3 d\u00f9ng d\u01b0\u1edbi d\u1ea1ng trait object. M\u1ed9t trait ch\u1ec9 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 object-safe n\u1ebfu th\u1ecfa c\u00e1c \u0111i\u1ec1u ki\u1ec7n: Kh\u00f4ng c\u00f3 generic trong ph\u01b0\u01a1ng th\u1ee9c Kh\u00f4ng c\u00f3 ph\u01b0\u01a1ng th\u1ee9c tr\u1ea3 v\u1ec1 Self Kh\u00f4ng c\u00f3 ph\u01b0\u01a1ng th\u1ee9c t\u0129nh (fn static_fn() -> ...) V\u00ed d\u1ee5, trait sau kh\u00f4ng object-safe : trait Clone { fn clone(&self) -> Self; } B\u1ea1n c\u00f3 th\u1ec3 d\u00f9ng Where Self: Sized \u0111\u1ec3 gi\u1edbi h\u1ea1n ph\u01b0\u01a1ng th\u1ee9c kh\u00f4ng \u0111\u01b0\u1ee3c g\u1ecdi qua trait object.","title":"Hi\u1ec3u t\u01b0\u1eddng t\u1eadn Trait Dispatch trong Rust: Static vs. Dynamic"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/Rust-traites%3A%20Static%20vs.%20Dynamic%20Choices%20and%20Tradeoffs/#hieu-tuong-tan-trait-dispatch-trong-rust-static-vs-dynamic","text":"Khi vi\u1ebft code Rust, b\u1ea1n s\u1ebd th\u01b0\u1eddng xuy\u00ean b\u1eaft g\u1eb7p impl Trait v\u00e0 &dyn Trai nh\u00ecn th\u00ec t\u01b0\u1edfng na n\u00e1 nhau, nh\u01b0ng th\u1ef1c ch\u1ea5t l\u1ea1i \u0111\u1ea1i di\u1ec7n cho hai c\u01a1 ch\u1ebf Trait Dispatch ho\u00e0n to\u00e0n kh\u00e1c nhau: static dispatch (t\u0129nh) v\u00e0 dynamic dispatch (\u0111\u1ed9ng). Vi\u1ec7c hi\u1ec3u s\u00e2u hai c\u01a1 ch\u1ebf n\u00e0y l\u00e0 ch\u00eca kh\u00f3a \u0111\u1ec3 vi\u1ebft code Rust hi\u1ec7u qu\u1ea3, t\u1eadn d\u1ee5ng t\u1ed1i \u0111a kh\u1ea3 n\u0103ng t\u1ed1i \u01b0u m\u00e0 ng\u00f4n ng\u1eef mang l\u1ea1i.","title":"Hi\u1ec3u t\u01b0\u1eddng t\u1eadn Trait Dispatch trong Rust: Static vs. Dynamic"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/Rust-traites%3A%20Static%20vs.%20Dynamic%20Choices%20and%20Tradeoffs/#1trait-dispatch-la-gi","text":"Trait dispatch l\u00e0 c\u00e1ch m\u00e0 Rust x\u00e1c \u0111\u1ecbnh v\u00e0 g\u1ecdi ph\u01b0\u01a1ng th\u1ee9c t\u1eeb trait. T\u00f9y v\u00e0o c\u00e1ch s\u1eed d\u1ee5ng, Rust s\u1ebd quy\u1ebft \u0111\u1ecbnh th\u1ef1c hi\u1ec7n \u0111i\u1ec1u \u0111\u00f3 t\u1ea1i th\u1eddi \u0111i\u1ec3m bi\u00ean d\u1ecbch (compile time) ho\u1eb7c th\u1eddi \u0111i\u1ec3m ch\u1ea1y (runtime) .","title":"1.Trait Dispatch l\u00e0 g\u00ec?"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/Rust-traites%3A%20Static%20vs.%20Dynamic%20Choices%20and%20Tradeoffs/#11-static-dispatch-phan-phoi-tinh","text":"Static dispatch x\u1ea3y ra khi s\u1eed d\u1ee5ng impl Trait ho\u1eb7c generic parameter c\u00f3 r\u00e0ng bu\u1ed9c trait: fn do_something<T: MyTrait>(x: T) { x.method(); } C\u01a1 ch\u1ebf l\u00e0 Rust s\u1ebd th\u1ef1c hi\u1ec7n monomorphization (qu\u00e1 tr\u00ecnh nh\u00e2n b\u1ea3n) h\u00e0m generic cho t\u1eebng ki\u1ec3u c\u1ee5 th\u1ec3 m\u00e0 b\u1ea1n s\u1eed d\u1ee5ng. M\u1ed7i b\u1ea3n sao s\u1ebd c\u00f3 t\u1ea5t c\u1ea3 ki\u1ec3u d\u1eef li\u1ec7u c\u1ee5 th\u1ec3 thay cho generic. \u0110i\u1ec1u n\u00e0y gi\u00fap compiler bi\u1ebft ch\u00ednh x\u00e1c \u0111\u1ecba ch\u1ec9 c\u1ee7a method c\u1ea7n g\u1ecdi v\u00e0 c\u00f3 th\u1ec3 t\u1ed1i \u01b0u r\u1ea5t m\u1ea1nh \u01afu \u0111i\u1ec3m: Hi\u1ec7u su\u1ea5t cao nh\u1ea5t G\u1ecdi ph\u01b0\u01a1ng th\u1ee9c kh\u00f4ng t\u1ed1n chi ph\u00ed ph\u1ee5 tr\u1ed9i Cho ph\u00e9p t\u1ed1i \u01b0u h\u00f3a s\u00e2u nh\u01b0 inline, unroll loop... Nh\u01b0\u1ee3c \u0111i\u1ec3m T\u0103ng th\u1eddi gian bi\u00ean d\u1ecbch T\u0103ng k\u00edch th\u01b0\u1edbc file nh\u1ecb ph\u00e2n C\u00f3 th\u1ec3 gi\u1ea3m hi\u1ec7u qu\u1ea3 cache CPU do nhi\u1ec1u b\u1ea3n sao","title":"1.1 Static Dispatch - Ph\u00e2n ph\u1ed1i t\u0129nh"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/Rust-traites%3A%20Static%20vs.%20Dynamic%20Choices%20and%20Tradeoffs/#12-dynamic-dispatch-phan-phoi-ong","text":"Dynamic dispatch x\u1ea3y ra khi s\u1eed d\u1ee5ng &dyn Trait ho\u1eb7c Box : fn do_something(x: &dyn MyTrait) { x.method(); } Rust s\u1ebd t\u1ea1o m\u1ed9t trait object, bao g\u1ed3m: Con tr\u1ecf \u0111\u1ebfn d\u1eef li\u1ec7u th\u1ef1c t\u1ebf Con tr\u1ecf \u0111\u1ebfn b\u1ea3ng ph\u01b0\u01a1ng th\u1ee9c \u1ea3o (vtable) Khi g\u1ecdi ph\u01b0\u01a1ng th\u1ee9c, Rust s\u1ebd t\u00ecm \u0111\u1ecba ch\u1ec9 t\u01b0\u01a1ng \u1ee9ng trong vtable v\u00e0 g\u1ecdi gi\u00e1n ti\u1ebfp. \u01afu \u0111i\u1ec3m: Gi\u1ea3m th\u1eddi gian bi\u00ean d\u1ecbch Gi\u1ea3m k\u00edch th\u01b0\u1edbc nh\u1ecb ph\u00e2n do kh\u00f4ng c\u1ea7n t\u1ea1o nhi\u1ec1u b\u1ea3n sao Cho ph\u00e9p vi\u1ebft code linh ho\u1ea1t, \u0111\u1ed9c l\u1eadp v\u1edbi ki\u1ec3u c\u1ee5 th\u1ec3 Nh\u01b0\u1ee3c \u0111i\u1ec3m G\u1ecdi ph\u01b0\u01a1ng th\u1ee9c t\u1ed1n chi ph\u00ed vtable lookup Kh\u00f4ng th\u1ec3 t\u1ed1i \u01b0u nh\u01b0 static dispatch Trait c\u1ea7n tu\u00e2n th\u1ee7 \u0111i\u1ec1u ki\u1ec7n object-safe m\u1edbi d\u00f9ng \u0111\u01b0\u1ee3c","title":"1.2 Dynamic Dispatch - Ph\u00e2n ph\u1ed1i \u0111\u1ed9ng"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/Rust-traites%3A%20Static%20vs.%20Dynamic%20Choices%20and%20Tradeoffs/#object-safety-tinh-an-toan-cua-trait-object","text":"Kh\u00f4ng ph\u1ea3i trait n\u00e0o c\u0169ng c\u00f3 th\u1ec3 d\u00f9ng d\u01b0\u1edbi d\u1ea1ng trait object. M\u1ed9t trait ch\u1ec9 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 object-safe n\u1ebfu th\u1ecfa c\u00e1c \u0111i\u1ec1u ki\u1ec7n: Kh\u00f4ng c\u00f3 generic trong ph\u01b0\u01a1ng th\u1ee9c Kh\u00f4ng c\u00f3 ph\u01b0\u01a1ng th\u1ee9c tr\u1ea3 v\u1ec1 Self Kh\u00f4ng c\u00f3 ph\u01b0\u01a1ng th\u1ee9c t\u0129nh (fn static_fn() -> ...) V\u00ed d\u1ee5, trait sau kh\u00f4ng object-safe : trait Clone { fn clone(&self) -> Self; } B\u1ea1n c\u00f3 th\u1ec3 d\u00f9ng Where Self: Sized \u0111\u1ec3 gi\u1edbi h\u1ea1n ph\u01b0\u01a1ng th\u1ee9c kh\u00f4ng \u0111\u01b0\u1ee3c g\u1ecdi qua trait object.","title":"Object Safety - T\u00ednh an to\u00e0n c\u1ee7a trait object"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/Scoped_threads/","text":"Scoped Threads trong Rust Qu\u1ea3n l\u00fd v\u00f2ng \u0111\u1eddi c\u1ee7a thread v\u00e0 chia s\u1ebb d\u1eef li\u1ec7u gi\u1eefa c\u00e1c thread lu\u00f4n l\u00e0 b\u00e0i to\u00e1n h\u00f3c b\u00faa trong l\u1eadp tr\u00ecnh \u0111\u1ed3ng th\u1eddi b\u1eb1ng Rust. C\u00e1ch ti\u1ebfp c\u1eadn truy\u1ec1n th\u1ed1ng th\u00f4ng qua std::thread::spawn y\u00eau c\u1ea7u closure ph\u1ea3i c\u00f3 v\u00f2ng \u0111\u1eddi 'static, khi\u1ebfn vi\u1ec7c m\u01b0\u1ee3n (borrow) d\u1eef li\u1ec7u t\u1eeb thread cha tr\u1edf n\u00ean r\u01b0\u1eddm r\u00e0 v\u00e0 th\u01b0\u1eddng c\u1ea7n \u0111\u1ebfn c\u00e1c c\u00f4ng c\u1ee5 nh\u01b0 Arc \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n ownership. \u0110\u1ec3 kh\u1eafc ph\u1ee5c b\u1ea5t ti\u1ec7n n\u00e0y, Rust gi\u1edbi thi\u1ec7u Scoped Threads sm\u1ed9t c\u01a1 ch\u1ebf gi\u00fap l\u1eadp tr\u00ecnh \u0111\u1ed3ng th\u1eddi an to\u00e0n v\u00e0 d\u1ec5 vi\u1ebft h\u01a1n. B\u00e0i vi\u1ebft n\u00e0y s\u1ebd tr\u00ecnh b\u00e0y kh\u00e1i ni\u1ec7m, \u01b0u \u0111i\u1ec3m v\u00e0 h\u1ea1n ch\u1ebf c\u1ee7a scoped threads , \u0111\u1ed3ng th\u1eddi minh ho\u1ea1 b\u1eb1ng nhi\u1ec1u v\u00ed d\u1ee5 c\u1ee5 th\u1ec3 \u0111\u1ec3 b\u1ea1n c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng ngay trong rust th\u1ef1c t\u1ebf. Scoped Threads l\u00e0 g\u00ec? Scoped Threads (thread theo ph\u1ea1m vi) l\u00e0 c\u00e1c thread \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o b\u00ean trong h\u00e0m std::thread::scope . Ch\u00fang c\u00f3 v\u00f2ng \u0111\u1eddi b\u1ecb gi\u1edbi h\u1ea1n b\u1edfi ph\u1ea1m vi (scope) c\u1ee7a closure truy\u1ec1n v\u00e0o, \u0111\u1ed3ng ngh\u0129a v\u1edbi vi\u1ec7c: M\u1ed7i thread \u0111\u01b0\u1ee3c spawn b\u00ean trong scope ph\u1ea3i ho\u00e0n t\u1ea5t tr\u01b0\u1edbc khi scope k\u1ebft th\u00fac. Kh\u00f4ng c\u1ea7n qu\u1ea3n l\u00fd th\u1ee7 c\u00f4ng JoinHandle. C\u00f3 th\u1ec3 m\u01b0\u1ee3n d\u1eef li\u1ec7u t\u1eeb thread cha m\u1ed9t c\u00e1ch an to\u00e0n m\u00e0 kh\u00f4ng c\u1ea7n move hay 'static.","title":"Scoped Threads trong Rust"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/Scoped_threads/#scoped-threads-trong-rust","text":"Qu\u1ea3n l\u00fd v\u00f2ng \u0111\u1eddi c\u1ee7a thread v\u00e0 chia s\u1ebb d\u1eef li\u1ec7u gi\u1eefa c\u00e1c thread lu\u00f4n l\u00e0 b\u00e0i to\u00e1n h\u00f3c b\u00faa trong l\u1eadp tr\u00ecnh \u0111\u1ed3ng th\u1eddi b\u1eb1ng Rust. C\u00e1ch ti\u1ebfp c\u1eadn truy\u1ec1n th\u1ed1ng th\u00f4ng qua std::thread::spawn y\u00eau c\u1ea7u closure ph\u1ea3i c\u00f3 v\u00f2ng \u0111\u1eddi 'static, khi\u1ebfn vi\u1ec7c m\u01b0\u1ee3n (borrow) d\u1eef li\u1ec7u t\u1eeb thread cha tr\u1edf n\u00ean r\u01b0\u1eddm r\u00e0 v\u00e0 th\u01b0\u1eddng c\u1ea7n \u0111\u1ebfn c\u00e1c c\u00f4ng c\u1ee5 nh\u01b0 Arc \u0111\u1ec3 gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n ownership. \u0110\u1ec3 kh\u1eafc ph\u1ee5c b\u1ea5t ti\u1ec7n n\u00e0y, Rust gi\u1edbi thi\u1ec7u Scoped Threads sm\u1ed9t c\u01a1 ch\u1ebf gi\u00fap l\u1eadp tr\u00ecnh \u0111\u1ed3ng th\u1eddi an to\u00e0n v\u00e0 d\u1ec5 vi\u1ebft h\u01a1n. B\u00e0i vi\u1ebft n\u00e0y s\u1ebd tr\u00ecnh b\u00e0y kh\u00e1i ni\u1ec7m, \u01b0u \u0111i\u1ec3m v\u00e0 h\u1ea1n ch\u1ebf c\u1ee7a scoped threads , \u0111\u1ed3ng th\u1eddi minh ho\u1ea1 b\u1eb1ng nhi\u1ec1u v\u00ed d\u1ee5 c\u1ee5 th\u1ec3 \u0111\u1ec3 b\u1ea1n c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng ngay trong rust th\u1ef1c t\u1ebf.","title":"Scoped Threads trong Rust"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/Scoped_threads/#scoped-threads-la-gi","text":"Scoped Threads (thread theo ph\u1ea1m vi) l\u00e0 c\u00e1c thread \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o b\u00ean trong h\u00e0m std::thread::scope . Ch\u00fang c\u00f3 v\u00f2ng \u0111\u1eddi b\u1ecb gi\u1edbi h\u1ea1n b\u1edfi ph\u1ea1m vi (scope) c\u1ee7a closure truy\u1ec1n v\u00e0o, \u0111\u1ed3ng ngh\u0129a v\u1edbi vi\u1ec7c: M\u1ed7i thread \u0111\u01b0\u1ee3c spawn b\u00ean trong scope ph\u1ea3i ho\u00e0n t\u1ea5t tr\u01b0\u1edbc khi scope k\u1ebft th\u00fac. Kh\u00f4ng c\u1ea7n qu\u1ea3n l\u00fd th\u1ee7 c\u00f4ng JoinHandle. C\u00f3 th\u1ec3 m\u01b0\u1ee3n d\u1eef li\u1ec7u t\u1eeb thread cha m\u1ed9t c\u00e1ch an to\u00e0n m\u00e0 kh\u00f4ng c\u1ea7n move hay 'static.","title":"Scoped Threads l\u00e0 g\u00ec?"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/The%20stages%20of%20learning%20rust/","text":"Okay, so you\u2019ve just heard of Rust. Maybe t\u1eeb c\u00e1i game sinh t\u1ed3n \ud83e\udd23 ho\u1eb7c l\u00e0 qua m\u1ed9t \u0111\u1ee9a dev nh\u00ecn nh\u01b0 hacker \u0111ang n\u00f3i v\u1ec1 \u201cmemory safety without GC\u201d gi\u1eefa qu\u00e1n cafe hay trong m\u1ed9t conference tech Memory safety without garbage collection is cool Stage 1: Awareness M\u00ecnh l\u00ean google v\u00e0 search: \"\u201cRust programming language\". M\u1ed9t \u0111\u1ed1ng code syntax k\u1ef3 qu\u1eb7c hi\u1ec7n ra nh\u01b0 Ownership? Borrowing? vcl. \u274c Stage 2: Denial & Coping \u201cRust kh\u00f3 vl. Th\u00f4i h\u1ecdc Go d\u1ec5 th\u1edf h\u01a1n.\u201d \u201cC\u00f4ng ty tao x\u00e0i Java m\u00e0, h\u1ecdc l\u00e0m g\u00ec?\u201d \u201cVi\u1ebft m\u1ea5y th\u1ee9 \u0111\u00f3 b\u1eb1ng C++ c\u0169ng \u0111\u01b0\u1ee3c m\u00e0?\u201d Meanwhile, b\u1ea1n th\u1ea5y th\u1eb1ng \u0111\u1ed3ng nghi\u1ec7p v\u1eeba rewrite m\u1ed9t service backend b\u1eb1ng Rus \ud83e\uddea Stage 3: First Attempt & Compiler Hell Okay fine. You give it a shot. Copy code t\u1eeb tutorial\u2026 \u201ccannot borrow x as mutable because it is also borrowed as immutable\u201d LOL Lifetime? Static? Mutable reference? \ud83c\udf08 Stage 4: Small Wins & Fake Confidence Sau h\u00e0ng gi\u1edd \u0111\u1ed3ng h\u1ed3 g\u00f5 ph\u00edm nh\u01b0 \u0111ang summon qu\u1ef7, cu\u1ed1i c\u00f9ng b\u1ea1n vi\u1ebft \u0111\u01b0\u1ee3c 1 c\u00e1i CLI tool\u2026 m\u00e0 ch\u1ea1y \u0111\u01b0\u1ee3c! M\u1eb7c d\u00f9 feature c\u00f2n thi\u1ebfu, nh\u01b0ng n\u00f3 compile \u0111\u01b0\u1ee3c l\u00e0 \u0111\u1ee7 vui. B\u1ea1n b\u1eaft \u0111\u1ea7u n\u00f3i v\u1edbi b\u1ea1n b\u00e8: \u201cTh\u1eadt ra Rust c\u0169ng d\u1ec5 m\u00e0, ch\u1ec9 c\u1ea7n quen th\u00f4i.\u201d (trong \u0111\u1ea7u v\u1eabn ch\u01b0a bi\u1ebft pin l\u00e0 g\u00ec\u2026) \u2e3b \ud83d\udce6 Stage 5: Cargo Pilled & Existential Crisis B\u1ea1n b\u1eaft \u0111\u1ea7u x\u00e0i cargo nh\u01b0 th\u1ea7n ch\u00fa. Join Discord Rust server. Copy macro t\u1eeb Stack Overflow m\u00e0 kh\u00f4ng hi\u1ec3u g\u00ec. Rust-analyzer b\u1ecb crash \u2192 b\u1ea1n ng\u1ed3i debug 3 ti\u1ebfng \u0111\u1ed3ng h\u1ed3. Nh\u01b0ng m\u00e0 code ch\u1ea1y m\u01b0\u1ee3t th\u1eadt s\u1ef1. B\u1ea1n b\u1eaft \u0111\u1ea7u n\u00f3i m\u1ea5y c\u00e2u ki\u1ec3u: \u201cZero-cost abstraction bro.\u201d \u201cBorrow checker is actually my friend.\u201d \u2e3b \u2694\ufe0f Stage 6: Rust Pilled Mode: Activated Neovim. Code tr\u00ean gi\u1ea5y. \u0110\u1ecdc doc Rust nomicon nh\u01b0 \u0111\u1ecdc kinh Ph\u1eadt. B\u1ea1n tranh lu\u1eadn v\u1ec1 \u201cpin\u201d, async/await v\u00e0 lifetime nh\u01b0 ng\u01b0\u1eddi tu luy\u1ec7n. M\u1ecdi th\u1ee9 b\u1ea1n vi\u1ebft \u0111\u1ec1u h\u01b0\u1edbng t\u1edbi \u201csafety\u201d, \u201cperformance\u201d, v\u00e0 \u201cdeterminism.\u201d B\u1ea1n genuinely believe Rust c\u00f3 th\u1ec3 thay th\u1ebf t\u1ea5t c\u1ea3 c\u00e1c ng\u00f4n ng\u1eef kh\u00e1c. \u2e3b \ud83e\uddd8\u200d\u2642\ufe0f Stage 7: Enlightenment Rust gi\u1edd kh\u00f4ng c\u00f2n l\u00e0 ng\u00f4n ng\u1eef n\u1eefa. \u0110\u00f3 l\u00e0 mindset s\u1ed1ng. N\u00f3 khi\u1ebfn b\u1ea1n khi\u00eam t\u1ed1n, ki\u00ean nh\u1eabn, v\u00e0 hi\u1ec3u b\u1ea3n ch\u1ea5t c\u1ee7a vi\u1ec7c \u201cthinking before you type.\u201d B\u1ea1n rewrite c\u1ea3 blog b\u1eb1ng Rust d\u00f9 ch\u1ec9 c\u1ea7n d\u00f9ng Notion l\u00e0 \u0111\u1ee7. T\u1ea1i sao? \u201cI wanted to write one tool, compile it once, and flex forever.\u201d Rust kh\u00f4ng l\u00e0m b\u1ea1n code nhanh h\u01a1n. Rust l\u00e0m b\u1ea1n code \u0111\u00fang h\u01a1n","title":"The stages of learning rust"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/The%20stages%20of%20learning%20rust/#stage-1-awareness","text":"M\u00ecnh l\u00ean google v\u00e0 search: \"\u201cRust programming language\". M\u1ed9t \u0111\u1ed1ng code syntax k\u1ef3 qu\u1eb7c hi\u1ec7n ra nh\u01b0 Ownership? Borrowing? vcl. \u274c Stage 2: Denial & Coping \u201cRust kh\u00f3 vl. Th\u00f4i h\u1ecdc Go d\u1ec5 th\u1edf h\u01a1n.\u201d \u201cC\u00f4ng ty tao x\u00e0i Java m\u00e0, h\u1ecdc l\u00e0m g\u00ec?\u201d \u201cVi\u1ebft m\u1ea5y th\u1ee9 \u0111\u00f3 b\u1eb1ng C++ c\u0169ng \u0111\u01b0\u1ee3c m\u00e0?\u201d Meanwhile, b\u1ea1n th\u1ea5y th\u1eb1ng \u0111\u1ed3ng nghi\u1ec7p v\u1eeba rewrite m\u1ed9t service backend b\u1eb1ng Rus","title":"Stage 1: Awareness"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/The%20stages%20of%20learning%20rust/#stage-3-first-attempt-compiler-hell","text":"Okay fine. You give it a shot. Copy code t\u1eeb tutorial\u2026 \u201ccannot borrow x as mutable because it is also borrowed as immutable\u201d LOL Lifetime? Static? Mutable reference? \ud83c\udf08 Stage 4: Small Wins & Fake Confidence Sau h\u00e0ng gi\u1edd \u0111\u1ed3ng h\u1ed3 g\u00f5 ph\u00edm nh\u01b0 \u0111ang summon qu\u1ef7, cu\u1ed1i c\u00f9ng b\u1ea1n vi\u1ebft \u0111\u01b0\u1ee3c 1 c\u00e1i CLI tool\u2026 m\u00e0 ch\u1ea1y \u0111\u01b0\u1ee3c! M\u1eb7c d\u00f9 feature c\u00f2n thi\u1ebfu, nh\u01b0ng n\u00f3 compile \u0111\u01b0\u1ee3c l\u00e0 \u0111\u1ee7 vui. B\u1ea1n b\u1eaft \u0111\u1ea7u n\u00f3i v\u1edbi b\u1ea1n b\u00e8: \u201cTh\u1eadt ra Rust c\u0169ng d\u1ec5 m\u00e0, ch\u1ec9 c\u1ea7n quen th\u00f4i.\u201d (trong \u0111\u1ea7u v\u1eabn ch\u01b0a bi\u1ebft pin l\u00e0 g\u00ec\u2026) \u2e3b \ud83d\udce6 Stage 5: Cargo Pilled & Existential Crisis B\u1ea1n b\u1eaft \u0111\u1ea7u x\u00e0i cargo nh\u01b0 th\u1ea7n ch\u00fa. Join Discord Rust server. Copy macro t\u1eeb Stack Overflow m\u00e0 kh\u00f4ng hi\u1ec3u g\u00ec. Rust-analyzer b\u1ecb crash \u2192 b\u1ea1n ng\u1ed3i debug 3 ti\u1ebfng \u0111\u1ed3ng h\u1ed3. Nh\u01b0ng m\u00e0 code ch\u1ea1y m\u01b0\u1ee3t th\u1eadt s\u1ef1. B\u1ea1n b\u1eaft \u0111\u1ea7u n\u00f3i m\u1ea5y c\u00e2u ki\u1ec3u: \u201cZero-cost abstraction bro.\u201d \u201cBorrow checker is actually my friend.\u201d \u2e3b \u2694\ufe0f Stage 6: Rust Pilled Mode: Activated Neovim. Code tr\u00ean gi\u1ea5y. \u0110\u1ecdc doc Rust nomicon nh\u01b0 \u0111\u1ecdc kinh Ph\u1eadt. B\u1ea1n tranh lu\u1eadn v\u1ec1 \u201cpin\u201d, async/await v\u00e0 lifetime nh\u01b0 ng\u01b0\u1eddi tu luy\u1ec7n. M\u1ecdi th\u1ee9 b\u1ea1n vi\u1ebft \u0111\u1ec1u h\u01b0\u1edbng t\u1edbi \u201csafety\u201d, \u201cperformance\u201d, v\u00e0 \u201cdeterminism.\u201d B\u1ea1n genuinely believe Rust c\u00f3 th\u1ec3 thay th\u1ebf t\u1ea5t c\u1ea3 c\u00e1c ng\u00f4n ng\u1eef kh\u00e1c. \u2e3b \ud83e\uddd8\u200d\u2642\ufe0f Stage 7: Enlightenment Rust gi\u1edd kh\u00f4ng c\u00f2n l\u00e0 ng\u00f4n ng\u1eef n\u1eefa. \u0110\u00f3 l\u00e0 mindset s\u1ed1ng. N\u00f3 khi\u1ebfn b\u1ea1n khi\u00eam t\u1ed1n, ki\u00ean nh\u1eabn, v\u00e0 hi\u1ec3u b\u1ea3n ch\u1ea5t c\u1ee7a vi\u1ec7c \u201cthinking before you type.\u201d B\u1ea1n rewrite c\u1ea3 blog b\u1eb1ng Rust d\u00f9 ch\u1ec9 c\u1ea7n d\u00f9ng Notion l\u00e0 \u0111\u1ee7. T\u1ea1i sao? \u201cI wanted to write one tool, compile it once, and flex forever.\u201d Rust kh\u00f4ng l\u00e0m b\u1ea1n code nhanh h\u01a1n. Rust l\u00e0m b\u1ea1n code \u0111\u00fang h\u01a1n","title":"\ud83e\uddea Stage 3: First Attempt &amp; Compiler Hell"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/data_types/","text":"Data Types in Rust Rust is a systems programming language designed with performance, safety, and reliability in mind. One of the foundational concepts that supports these goals is data typing . Every value in Rust has a specific data type , which helps the compiler understand how that value should behave. We will learn about the following data types in rust and understand how they work under the hood: * Scalar * Floating point types * Numeric Operation * Boolean * character types * compound types \ud83e\udd77 Static Typing trong Rust l\u00e0 sao? Rust l\u00e0 m\u1ed9t ng\u00f4n ng\u1eef c\u00f3 ki\u1ec3u t\u0129nh ( statically typed language ). \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u ( data type ) c\u1ee7a m\u1ed7i bi\u1ebfn ph\u1ea3i \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh ngay t\u1ea1i th\u1eddi \u0111i\u1ec3m bi\u00ean d\u1ecbch ( compile time ). Nh\u1edd \u0111\u00f3, tr\u00ecnh bi\u00ean d\u1ecbch c\u00f3 th\u1ec3 b\u1eaft l\u1ed7i s\u1edbm ( early bug detection ), v\u00e0 qu\u1ea3n l\u00fd b\u1ed9 nh\u1edb hi\u1ec7u qu\u1ea3 h\u01a1n v\u00ec n\u00f3 bi\u1ebft ch\u00ednh x\u00e1c m\u1ed7i bi\u1ebfn c\u1ea7n bao nhi\u00eau byte. Tuy nhi\u00ean, b\u1ea1n kh\u00f4ng c\u1ea7n l\u00fac n\u00e0o c\u0169ng khai b\u00e1o r\u00f5 ki\u1ec3u bi\u1ebfn. Rust c\u00f3 kh\u1ea3 n\u0103ng suy lu\u1eadn ki\u1ec3u d\u1eef li\u1ec7u ( type inference ) kh\u00e1 th\u00f4ng minh, d\u1ef1a tr\u00ean ng\u1eef c\u1ea3nh. V\u00ed d\u1ee5: let x = 5; // Rust hi\u1ec3u \u0111\u00e2y l\u00e0 i32 let name = \"Harry\"; // hi\u1ec3u l\u00e0 &str T\u1ee9c l\u00e0 b\u1ea1n kh\u00f4ng c\u1ea7n vi\u1ebft let x: i32 = 5 ; n\u1ebfu Rust t\u1ef1 \u0111o\u00e1n \u0111\u01b0\u1ee3c r\u1ed3i. Nh\u01b0ng n\u1ebfu Rust g\u1eb7p t\u00ecnh hu\u1ed1ng kh\u00f4ng th\u1ec3 t\u1ef1 \u0111o\u00e1n ki\u1ec3u \u0111\u01b0\u1ee3c v\u00ed d\u1ee5 nh\u01b0 khi parsing t\u1eeb chu\u1ed7i \"42\" th\u00ec b\u1ea1n ph\u1ea3i cung c\u1ea5p r\u00f5 ki\u1ec3u d\u1eef li\u1ec7u: let guess: u32 = \"42\".parse().expect(\"Not a number!\"); \ud83d\udca1 \u1ede \u0111\u00e2y, \"42\".parse() c\u00f3 th\u1ec3 tr\u1ea3 v\u1ec1 nhi\u1ec1u ki\u1ec3u s\u1ed1 (i32, u32, f64, etc.), n\u00ean Rust c\u1ea7n b\u1ea1n n\u00f3i r\u00f5 l\u00e0 b\u1ea1n mu\u1ed1n guess l\u00e0 ki\u1ec3u g\u00ec (u32 trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y). N\u1ebfu b\u1ea1n kh\u00f4ng s\u1eed d\u1ee5ng bi\u1ebfn \u0111\u00f3 sau khi khai b\u00e1o, Rust s\u1ebd c\u1ea3nh b\u00e1o nh\u01b0 trong h\u00ecnh: \u1ede \u0111\u00e2y, \"42\".parse() c\u00f3 th\u1ec3 tr\u1ea3 v\u1ec1 nhi\u1ec1u ki\u1ec3u s\u1ed1 (i32, u32, f64, etc.), n\u00ean Rust c\u1ea7n b\u1ea1n n\u00f3i r\u00f5 l\u00e0 b\u1ea1n mu\u1ed1n guess l\u00e0 ki\u1ec3u g\u00ec (u32 trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y). warning: unused variable: `guess` help: if this is intentional, prefix it with an underscore: `_guess` \u2728 C\u00e1i hay c\u1ee7a Rust l\u00e0 n\u00f3 c\u1ef1c k\u1ef3 quan t\u00e2m \u0111\u1ebfn \u0111\u1ed9 an to\u00e0n (safety). Ngay c\u1ea3 nh\u1eefng bi\u1ebfn kh\u00f4ng d\u00f9ng c\u0169ng \u0111\u01b0\u1ee3c nh\u1eafc nh\u1edf r\u00f5 r\u00e0ng, \u0111\u1ec3 tr\u00e1nh bug ti\u1ec1m \u1ea9n. \u2699\ufe0f Scalar Types \u2013 Ki\u1ec3u d\u1eef li\u1ec7u c\u00f3 m\u1ed9t gi\u00e1 tr\u1ecb trong Rust Scalar types \u0111\u1ea1i di\u1ec7n cho m\u1ed9t gi\u00e1 tr\u1ecb duy nh\u1ea5t. Trong Rust, c\u00f3 4 ki\u1ec3u scalar ch\u00ednh: 1\ufe0f\u20e3 Integers \u2013 S\u1ed1 nguy\u00ean S\u1ed1 nguy\u00ean l\u00e0 nh\u1eefng con s\u1ed1 kh\u00f4ng c\u00f3 ph\u1ea7n th\u1eadp ph\u00e2n (no floating-point) . Rust chia th\u00e0nh hai lo\u1ea1i: Signed integers (i): ch\u1ee9a \u0111\u01b0\u1ee3c c\u1ea3 s\u1ed1 \u00e2m v\u00e0 s\u1ed1 d\u01b0\u01a1ng. V\u00ed d\u1ee5: -42, 0, 123 Unsigned integers (u): ch\u1ec9 ch\u1ee9a \u0111\u01b0\u1ee3c s\u1ed1 d\u01b0\u01a1ng. V\u00ed d\u1ee5: 0, 200, 999 C\u1ea3 hai lo\u1ea1i \u0111\u1ec1u c\u00f3 c\u00e1c \u201csize\u201d kh\u00e1c nhau nh\u01b0: i8, i16, i32, i64, i128 \u2014 t\u01b0\u01a1ng \u1ee9ng v\u1edbi s\u1ed1 bit l\u01b0u tr\u1eef. T\u01b0\u01a1ng t\u1ef1 v\u1edbi u8, u16, v.v. \ud83d\udca1 Nh\u1edb nha: c\u00e0ng nhi\u1ec1u bit th\u00ec c\u00e0ng ch\u1ee9a \u0111\u01b0\u1ee3c s\u1ed1 to h\u01a1n, nh\u01b0ng c\u0169ng t\u1ed1n nhi\u1ec1u b\u1ed9 nh\u1edb h\u01a1n! Integer Overflow \u2013 Tr\u00e0n s\u1ed1 trong Rust Trong Rust, khi b\u1ea1n g\u00e1n m\u1ed9t gi\u00e1 tr\u1ecb v\u01b0\u1ee3t qu\u00e1 gi\u1edbi h\u1ea1n c\u1ee7a ki\u1ec3u s\u1ed1 nguy\u00ean , th\u00ec s\u1ebd x\u1ea3y ra hi\u1ec7n t\u01b0\u1ee3ng overflow (tr\u00e0n s\u1ed1). V\u00ed d\u1ee5: b\u1ea1n th\u1eed g\u00e1n 256 cho u8 (ki\u1ec3u n\u00e0y ch\u1ec9 ch\u1ee9a t\u1eeb 0 \u0111\u1ebfn 255) th\u00ec chuy\u1ec7n g\u00ec x\u1ea3y ra? \ud83d\udc40 Trong Debug mode : => Rust s\u1ebd panic ngay l\u1eadp t\u1ee9c v\u00e0 b\u00e1o l\u1ed7i. \u0110i\u1ec1u n\u00e0y gi\u00fap b\u1ea1n ph\u00e1t hi\u1ec7n bug s\u1edbm, tr\u00e1nh silent errors C\u00f2n khi Release mode th\u00ec Rust s\u1ebd wrap around gi\u00e1 tr\u1ecb (gi\u1ed1ng ki\u1ec3u quay v\u00f2ng v\u00f2ng): V\u00ed d\u1ee5: 256 th\u00e0nh 0, 257 th\u00e0nh 1, v.v. V\u1eady n\u00ean \u0111\u1ec3 x\u1eed l\u00fd overflow m\u1ed9t c\u00e1ch ch\u1ee7 \u0111\u1ed9ng. Rust cung c\u1ea5p m\u1ed9t s\u1ed1 h\u00e0m \u201cchuy\u00ean tr\u1ecb\u201d overflow \u0111\u1ec3 b\u1ea1n ki\u1ec3m so\u00e1t k\u1ebft qu\u1ea3 r\u00f5 r\u00e0ng h\u01a1n: Method M\u00f4 t\u1ea3 ng\u1eafn g\u1ecdn wrapping_add Cho ra k\u1ebft qu\u1ea3 ki\u1ec3u wrap (gi\u1ed1ng release mode) checked_add Tr\u1ea3 v\u1ec1 None n\u1ebfu b\u1ecb tr\u00e0n overflowing_add Tr\u1ea3 v\u1ec1 tuple (value, is_overflow) saturating_add Tr\u1ea3 v\u1ec1 max/min n\u1ebfu v\u01b0\u1ee3t gi\u1edbi h\u1ea1n Floating-Point Numbers \u2013 S\u1ed1 th\u1ef1c d\u1ea5u ph\u1ea9y \u0111\u1ed9ng Rust h\u1ed7 tr\u1ee3 2 ki\u1ec3u s\u1ed1 th\u1ef1c ch\u00ednh: * f32: s\u1ed1 th\u1ef1c 32-bit (nh\u1eb9, nhanh h\u01a1n, nh\u01b0ng \u0111\u1ed9 ch\u00ednh x\u00e1c th\u1ea5p h\u01a1n) * f64: s\u1ed1 th\u1ef1c 64-bit (default, ch\u00ednh x\u00e1c h\u01a1n, d\u00f9ng ph\u1ed5 bi\u1ebfn) V\u00ed d\u1ee5: let x = 2.0; // ki\u1ec3u f64 \u2013 \u0111\u01b0\u1ee3c suy lu\u1eadn t\u1ef1 \u0111\u1ed9ng let y: f32 = 3.0; // ki\u1ec3u f32 \u2013 \u0111\u01b0\u1ee3c ch\u1ec9 \u0111\u1ecbnh r\u00f5 Boolean \u2013 Ki\u1ec3u logic \u0111\u00fang/sai Rust c\u00f3 ki\u1ec3u bool, \u0111\u1ea1i di\u1ec7n cho hai gi\u00e1 tr\u1ecb: true ho\u1eb7c false . C\u1ef1c k\u1ef3 quan tr\u1ecdng trong \u0111i\u1ec1u ki\u1ec7n, v\u00f2ng l\u1eb7p, v.v. let t = true; let f: bool = false; Th\u01b0\u1eddng d\u00f9ng trong c\u00e1c bi\u1ec3u th\u1ee9c \u0111i\u1ec1u ki\u1ec7n nh\u01b0: if t { println!(\"It\u2019s true!\"); } Reference [1]. https://medium.com/@estheraladioche569/data-types-in-rust-eef697a3408e","title":"Data Types in Rust"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/data_types/#data-types-in-rust","text":"Rust is a systems programming language designed with performance, safety, and reliability in mind. One of the foundational concepts that supports these goals is data typing . Every value in Rust has a specific data type , which helps the compiler understand how that value should behave. We will learn about the following data types in rust and understand how they work under the hood: * Scalar * Floating point types * Numeric Operation * Boolean * character types * compound types","title":"Data Types in Rust"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/data_types/#static-typing-trong-rust-la-sao","text":"Rust l\u00e0 m\u1ed9t ng\u00f4n ng\u1eef c\u00f3 ki\u1ec3u t\u0129nh ( statically typed language ). \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u ( data type ) c\u1ee7a m\u1ed7i bi\u1ebfn ph\u1ea3i \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh ngay t\u1ea1i th\u1eddi \u0111i\u1ec3m bi\u00ean d\u1ecbch ( compile time ). Nh\u1edd \u0111\u00f3, tr\u00ecnh bi\u00ean d\u1ecbch c\u00f3 th\u1ec3 b\u1eaft l\u1ed7i s\u1edbm ( early bug detection ), v\u00e0 qu\u1ea3n l\u00fd b\u1ed9 nh\u1edb hi\u1ec7u qu\u1ea3 h\u01a1n v\u00ec n\u00f3 bi\u1ebft ch\u00ednh x\u00e1c m\u1ed7i bi\u1ebfn c\u1ea7n bao nhi\u00eau byte. Tuy nhi\u00ean, b\u1ea1n kh\u00f4ng c\u1ea7n l\u00fac n\u00e0o c\u0169ng khai b\u00e1o r\u00f5 ki\u1ec3u bi\u1ebfn. Rust c\u00f3 kh\u1ea3 n\u0103ng suy lu\u1eadn ki\u1ec3u d\u1eef li\u1ec7u ( type inference ) kh\u00e1 th\u00f4ng minh, d\u1ef1a tr\u00ean ng\u1eef c\u1ea3nh. V\u00ed d\u1ee5: let x = 5; // Rust hi\u1ec3u \u0111\u00e2y l\u00e0 i32 let name = \"Harry\"; // hi\u1ec3u l\u00e0 &str T\u1ee9c l\u00e0 b\u1ea1n kh\u00f4ng c\u1ea7n vi\u1ebft let x: i32 = 5 ; n\u1ebfu Rust t\u1ef1 \u0111o\u00e1n \u0111\u01b0\u1ee3c r\u1ed3i. Nh\u01b0ng n\u1ebfu Rust g\u1eb7p t\u00ecnh hu\u1ed1ng kh\u00f4ng th\u1ec3 t\u1ef1 \u0111o\u00e1n ki\u1ec3u \u0111\u01b0\u1ee3c v\u00ed d\u1ee5 nh\u01b0 khi parsing t\u1eeb chu\u1ed7i \"42\" th\u00ec b\u1ea1n ph\u1ea3i cung c\u1ea5p r\u00f5 ki\u1ec3u d\u1eef li\u1ec7u: let guess: u32 = \"42\".parse().expect(\"Not a number!\"); \ud83d\udca1 \u1ede \u0111\u00e2y, \"42\".parse() c\u00f3 th\u1ec3 tr\u1ea3 v\u1ec1 nhi\u1ec1u ki\u1ec3u s\u1ed1 (i32, u32, f64, etc.), n\u00ean Rust c\u1ea7n b\u1ea1n n\u00f3i r\u00f5 l\u00e0 b\u1ea1n mu\u1ed1n guess l\u00e0 ki\u1ec3u g\u00ec (u32 trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y). N\u1ebfu b\u1ea1n kh\u00f4ng s\u1eed d\u1ee5ng bi\u1ebfn \u0111\u00f3 sau khi khai b\u00e1o, Rust s\u1ebd c\u1ea3nh b\u00e1o nh\u01b0 trong h\u00ecnh: \u1ede \u0111\u00e2y, \"42\".parse() c\u00f3 th\u1ec3 tr\u1ea3 v\u1ec1 nhi\u1ec1u ki\u1ec3u s\u1ed1 (i32, u32, f64, etc.), n\u00ean Rust c\u1ea7n b\u1ea1n n\u00f3i r\u00f5 l\u00e0 b\u1ea1n mu\u1ed1n guess l\u00e0 ki\u1ec3u g\u00ec (u32 trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y). warning: unused variable: `guess` help: if this is intentional, prefix it with an underscore: `_guess` \u2728 C\u00e1i hay c\u1ee7a Rust l\u00e0 n\u00f3 c\u1ef1c k\u1ef3 quan t\u00e2m \u0111\u1ebfn \u0111\u1ed9 an to\u00e0n (safety). Ngay c\u1ea3 nh\u1eefng bi\u1ebfn kh\u00f4ng d\u00f9ng c\u0169ng \u0111\u01b0\u1ee3c nh\u1eafc nh\u1edf r\u00f5 r\u00e0ng, \u0111\u1ec3 tr\u00e1nh bug ti\u1ec1m \u1ea9n.","title":"\ud83e\udd77 Static Typing trong Rust l\u00e0 sao?"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/data_types/#scalar-types-kieu-du-lieu-co-mot-gia-tri-trong-rust","text":"Scalar types \u0111\u1ea1i di\u1ec7n cho m\u1ed9t gi\u00e1 tr\u1ecb duy nh\u1ea5t. Trong Rust, c\u00f3 4 ki\u1ec3u scalar ch\u00ednh:","title":"\u2699\ufe0f Scalar Types \u2013 Ki\u1ec3u d\u1eef li\u1ec7u c\u00f3 m\u1ed9t gi\u00e1 tr\u1ecb trong Rust"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/data_types/#1-integers-so-nguyen","text":"S\u1ed1 nguy\u00ean l\u00e0 nh\u1eefng con s\u1ed1 kh\u00f4ng c\u00f3 ph\u1ea7n th\u1eadp ph\u00e2n (no floating-point) . Rust chia th\u00e0nh hai lo\u1ea1i: Signed integers (i): ch\u1ee9a \u0111\u01b0\u1ee3c c\u1ea3 s\u1ed1 \u00e2m v\u00e0 s\u1ed1 d\u01b0\u01a1ng. V\u00ed d\u1ee5: -42, 0, 123 Unsigned integers (u): ch\u1ec9 ch\u1ee9a \u0111\u01b0\u1ee3c s\u1ed1 d\u01b0\u01a1ng. V\u00ed d\u1ee5: 0, 200, 999 C\u1ea3 hai lo\u1ea1i \u0111\u1ec1u c\u00f3 c\u00e1c \u201csize\u201d kh\u00e1c nhau nh\u01b0: i8, i16, i32, i64, i128 \u2014 t\u01b0\u01a1ng \u1ee9ng v\u1edbi s\u1ed1 bit l\u01b0u tr\u1eef. T\u01b0\u01a1ng t\u1ef1 v\u1edbi u8, u16, v.v. \ud83d\udca1 Nh\u1edb nha: c\u00e0ng nhi\u1ec1u bit th\u00ec c\u00e0ng ch\u1ee9a \u0111\u01b0\u1ee3c s\u1ed1 to h\u01a1n, nh\u01b0ng c\u0169ng t\u1ed1n nhi\u1ec1u b\u1ed9 nh\u1edb h\u01a1n!","title":"1\ufe0f\u20e3 Integers \u2013 S\u1ed1 nguy\u00ean"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/data_types/#integer-overflow-tran-so-trong-rust","text":"Trong Rust, khi b\u1ea1n g\u00e1n m\u1ed9t gi\u00e1 tr\u1ecb v\u01b0\u1ee3t qu\u00e1 gi\u1edbi h\u1ea1n c\u1ee7a ki\u1ec3u s\u1ed1 nguy\u00ean , th\u00ec s\u1ebd x\u1ea3y ra hi\u1ec7n t\u01b0\u1ee3ng overflow (tr\u00e0n s\u1ed1). V\u00ed d\u1ee5: b\u1ea1n th\u1eed g\u00e1n 256 cho u8 (ki\u1ec3u n\u00e0y ch\u1ec9 ch\u1ee9a t\u1eeb 0 \u0111\u1ebfn 255) th\u00ec chuy\u1ec7n g\u00ec x\u1ea3y ra? \ud83d\udc40 Trong Debug mode : => Rust s\u1ebd panic ngay l\u1eadp t\u1ee9c v\u00e0 b\u00e1o l\u1ed7i. \u0110i\u1ec1u n\u00e0y gi\u00fap b\u1ea1n ph\u00e1t hi\u1ec7n bug s\u1edbm, tr\u00e1nh silent errors C\u00f2n khi Release mode th\u00ec Rust s\u1ebd wrap around gi\u00e1 tr\u1ecb (gi\u1ed1ng ki\u1ec3u quay v\u00f2ng v\u00f2ng): V\u00ed d\u1ee5: 256 th\u00e0nh 0, 257 th\u00e0nh 1, v.v. V\u1eady n\u00ean \u0111\u1ec3 x\u1eed l\u00fd overflow m\u1ed9t c\u00e1ch ch\u1ee7 \u0111\u1ed9ng. Rust cung c\u1ea5p m\u1ed9t s\u1ed1 h\u00e0m \u201cchuy\u00ean tr\u1ecb\u201d overflow \u0111\u1ec3 b\u1ea1n ki\u1ec3m so\u00e1t k\u1ebft qu\u1ea3 r\u00f5 r\u00e0ng h\u01a1n: Method M\u00f4 t\u1ea3 ng\u1eafn g\u1ecdn wrapping_add Cho ra k\u1ebft qu\u1ea3 ki\u1ec3u wrap (gi\u1ed1ng release mode) checked_add Tr\u1ea3 v\u1ec1 None n\u1ebfu b\u1ecb tr\u00e0n overflowing_add Tr\u1ea3 v\u1ec1 tuple (value, is_overflow) saturating_add Tr\u1ea3 v\u1ec1 max/min n\u1ebfu v\u01b0\u1ee3t gi\u1edbi h\u1ea1n","title":"Integer Overflow \u2013 Tr\u00e0n s\u1ed1 trong Rust"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/data_types/#floating-point-numbers-so-thuc-dau-phay-ong","text":"Rust h\u1ed7 tr\u1ee3 2 ki\u1ec3u s\u1ed1 th\u1ef1c ch\u00ednh: * f32: s\u1ed1 th\u1ef1c 32-bit (nh\u1eb9, nhanh h\u01a1n, nh\u01b0ng \u0111\u1ed9 ch\u00ednh x\u00e1c th\u1ea5p h\u01a1n) * f64: s\u1ed1 th\u1ef1c 64-bit (default, ch\u00ednh x\u00e1c h\u01a1n, d\u00f9ng ph\u1ed5 bi\u1ebfn) V\u00ed d\u1ee5: let x = 2.0; // ki\u1ec3u f64 \u2013 \u0111\u01b0\u1ee3c suy lu\u1eadn t\u1ef1 \u0111\u1ed9ng let y: f32 = 3.0; // ki\u1ec3u f32 \u2013 \u0111\u01b0\u1ee3c ch\u1ec9 \u0111\u1ecbnh r\u00f5","title":"Floating-Point Numbers \u2013 S\u1ed1 th\u1ef1c d\u1ea5u ph\u1ea9y \u0111\u1ed9ng"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/data_types/#boolean-kieu-logic-ungsai","text":"Rust c\u00f3 ki\u1ec3u bool, \u0111\u1ea1i di\u1ec7n cho hai gi\u00e1 tr\u1ecb: true ho\u1eb7c false . C\u1ef1c k\u1ef3 quan tr\u1ecdng trong \u0111i\u1ec1u ki\u1ec7n, v\u00f2ng l\u1eb7p, v.v. let t = true; let f: bool = false; Th\u01b0\u1eddng d\u00f9ng trong c\u00e1c bi\u1ec3u th\u1ee9c \u0111i\u1ec1u ki\u1ec7n nh\u01b0: if t { println!(\"It\u2019s true!\"); }","title":"Boolean \u2013 Ki\u1ec3u logic \u0111\u00fang/sai"},{"location":"What_I_learned_from_VBI_Academy/Rust%20learning%20course/data_types/#reference","text":"[1]. https://medium.com/@estheraladioche569/data-types-in-rust-eef697a3408e","title":"Reference"},{"location":"What_I_learned_from_VBI_Academy/Saga%20chainlet/Launch%20game%20tr%C3%AAn%20Chainlet/","text":"","title":"Launch game tr\u00ean Chainlet"},{"location":"What_I_learned_from_VBI_Academy/Saga%20chainlet/Launch%20game%20tr%C3%AAn%20Chainlet/#_1","text":"","title":""},{"location":"collections/Awesome%20Smart%20Contracts/","text":"Awesome Smart Contracts The best smart contracts in one place. Protocol Type Repository Documentation The Bytecode Episode Aave Lending https://github.com/aave/protocol-v2 Docs N/A Ajna Lending https://github.com/ajna-finance/ajna-core Docs N/A Art Gobblers NFT https://github.com/artgobblers/art-gobblers Docs N/A Balancer V2 DEX https://github.com/balancer/balancer-v2-monorepo Docs N/A Balancer V3 DEX https://github.com/balancer/balancer-v3-monorepo Docs N/A Compound Lending https://github.com/compound-finance/compound-protocol Docs N/A Curve DEX https://github.com/curvefi/curve-contract Docs N/A EigenLayer Restaking https://github.com/Layr-Labs/eigenlayer-contracts Docs N/A MakerDAO Stablecoin https://github.com/makerdao/dss Docs N/A Maple Lending https://github.com/maple-labs/maple-core-v2 Docs Youtube Sablier V2 Streaming https://github.com/sablier-labs/v2-core Docs Youtube Seaport NFT Marketplace https://github.com/ProjectOpenSea/seaport Docs Youtube \ud83d\udc0d snekmate Library https://github.com/pcaversaccio/snekmate Docs N/A Solady Library https://github.com/Vectorized/solady Docs N/A Solmate Library https://github.com/transmissions11/solmate Docs N/A Synthetix Derivatives https://github.com/Synthetixio/synthetix Docs N/A Uniswap V2 DEX https://github.com/Uniswap/uniswap-v2-core Docs N/A Uniswap V3 DEX https://github.com/Uniswap/v3-core Docs N/A Yearn V3 Yield Farming https://github.com/yearn/yearn-vaults-v3 Docs N/A Github: https://github.com/shafu0x/awesome-smart-contracts/blob/main/README.md?plain=1","title":"Awesome Smart Contracts"},{"location":"collections/Awesome%20Smart%20Contracts/#awesome-smart-contracts","text":"The best smart contracts in one place. Protocol Type Repository Documentation The Bytecode Episode Aave Lending https://github.com/aave/protocol-v2 Docs N/A Ajna Lending https://github.com/ajna-finance/ajna-core Docs N/A Art Gobblers NFT https://github.com/artgobblers/art-gobblers Docs N/A Balancer V2 DEX https://github.com/balancer/balancer-v2-monorepo Docs N/A Balancer V3 DEX https://github.com/balancer/balancer-v3-monorepo Docs N/A Compound Lending https://github.com/compound-finance/compound-protocol Docs N/A Curve DEX https://github.com/curvefi/curve-contract Docs N/A EigenLayer Restaking https://github.com/Layr-Labs/eigenlayer-contracts Docs N/A MakerDAO Stablecoin https://github.com/makerdao/dss Docs N/A Maple Lending https://github.com/maple-labs/maple-core-v2 Docs Youtube Sablier V2 Streaming https://github.com/sablier-labs/v2-core Docs Youtube Seaport NFT Marketplace https://github.com/ProjectOpenSea/seaport Docs Youtube \ud83d\udc0d snekmate Library https://github.com/pcaversaccio/snekmate Docs N/A Solady Library https://github.com/Vectorized/solady Docs N/A Solmate Library https://github.com/transmissions11/solmate Docs N/A Synthetix Derivatives https://github.com/Synthetixio/synthetix Docs N/A Uniswap V2 DEX https://github.com/Uniswap/uniswap-v2-core Docs N/A Uniswap V3 DEX https://github.com/Uniswap/v3-core Docs N/A Yearn V3 Yield Farming https://github.com/yearn/yearn-vaults-v3 Docs N/A Github: https://github.com/shafu0x/awesome-smart-contracts/blob/main/README.md?plain=1","title":"Awesome Smart Contracts"},{"location":"collections/Hackathon%2C%20Grant%2C%20and%20Bounty%20Platforms/","text":"Hackathon, Grant, and Bounty Platforms For developers, participating in hackathons is an important way to help us quickly improve our technology, participate in ecological contributions, accumulate project experience, obtain opportunities, enhance communication, integrate into the circle and establish connections. Hackathons are usually organized by public chain foundations, infrastructure project owners, funds and incubators to enhance brand image, attract more user attention and creative developers to participate in ecosystem construction. There are also investors who participate in order to discover potential talents and projects. Most of the hackathons held by ETHGlobal are related to the EVM ecosystem, covering multiple tracks such as DeFi, NFT and infrastructure: https://ethglobal.com/ DoraHacks is a multi-chain developer incentive platform and hackathon platform. Gitcoin is a public goods support platform. Projects can raise funds in Gitcoin DAO, which is very similar to participating in a hackathon, except that the time and form of receiving bonuses are different . Chainlink has organized hackathons almost every year in recent years. Colosseum is a platform that combines a hackathon, accelerator, and venture fund focused on accelerating the Solana ecosystem. Sui Overflow is Sui\u2019s first global virtual hackathon. Other public chains, such as Avanlanche , Ton Blockchain , Polygon , Monad , Aptos , etc. will hold corresponding hackathons. If you are interested in a certain blockchain, you can directly observe their social media or official website to get the latest hackathon and Grant news. Some bounty platforms HackenProof Immunefi certik dework hashlock cyfrin-codehawks audit task upwork tags: #web3hackathons #web3social","title":"Hackathon, Grant, and Bounty Platforms"},{"location":"collections/Hackathon%2C%20Grant%2C%20and%20Bounty%20Platforms/#hackathon-grant-and-bounty-platforms","text":"For developers, participating in hackathons is an important way to help us quickly improve our technology, participate in ecological contributions, accumulate project experience, obtain opportunities, enhance communication, integrate into the circle and establish connections. Hackathons are usually organized by public chain foundations, infrastructure project owners, funds and incubators to enhance brand image, attract more user attention and creative developers to participate in ecosystem construction. There are also investors who participate in order to discover potential talents and projects. Most of the hackathons held by ETHGlobal are related to the EVM ecosystem, covering multiple tracks such as DeFi, NFT and infrastructure: https://ethglobal.com/ DoraHacks is a multi-chain developer incentive platform and hackathon platform. Gitcoin is a public goods support platform. Projects can raise funds in Gitcoin DAO, which is very similar to participating in a hackathon, except that the time and form of receiving bonuses are different . Chainlink has organized hackathons almost every year in recent years. Colosseum is a platform that combines a hackathon, accelerator, and venture fund focused on accelerating the Solana ecosystem. Sui Overflow is Sui\u2019s first global virtual hackathon. Other public chains, such as Avanlanche , Ton Blockchain , Polygon , Monad , Aptos , etc. will hold corresponding hackathons. If you are interested in a certain blockchain, you can directly observe their social media or official website to get the latest hackathon and Grant news.","title":"Hackathon, Grant, and Bounty Platforms"},{"location":"collections/Hackathon%2C%20Grant%2C%20and%20Bounty%20Platforms/#some-bounty-platforms","text":"HackenProof Immunefi certik dework hashlock cyfrin-codehawks audit task upwork tags: #web3hackathons #web3social","title":"Some bounty platforms"},{"location":"collections/How%20to%20secure%20Smart%20Contracts/","text":"How to secure Smart Contracts unit tests fuzz tests fork tests invariant tests formal verification static analysis mutation testing static Analysis solo Audit in House Audit audit by Tier-B Company contests audit by Tier-A Company AI audit","title":"How to secure Smart Contracts"},{"location":"collections/How%20to%20secure%20Smart%20Contracts/#how-to-secure-smart-contracts","text":"unit tests fuzz tests fork tests invariant tests formal verification static analysis mutation testing static Analysis solo Audit in House Audit audit by Tier-B Company contests audit by Tier-A Company AI audit","title":"How to secure Smart Contracts"},{"location":"collections/Three%20Layers%20of%20Verifiability%20%7C%20On-chain%2C%20Off-chain%2C%20Non-verifiable/","text":"(verifiability) l\u00e0 l\u1ee3i th\u1ebf l\u1edbn nh\u1ea5t c\u1ee7a crypto. The original link(english): https://x.com/paramonoww/status/1948064814439207010 Bitcoin v\u00e0 Ethereum \u0111\u00e3 mang l\u1ea1i cho ch\u00fang ta verifiable money (ti\u1ec1n c\u00f3 th\u1ec3 ki\u1ec3m ch\u1ee9ng \u0111\u01b0\u1ee3c) v\u00e0 verifiable finance (t\u00e0i ch\u00ednh c\u00f3 th\u1ec3 ki\u1ec3m ch\u1ee9ng \u0111\u01b0\u1ee3c). Nh\u01b0ng b\u01b0\u1edbc ti\u1ebfp theo li\u00ean quan \u0111\u1ebfn t\u00ednh ki\u1ec3m ch\u1ee9ng s\u1ebd r\u1ea5t kh\u00e1c so v\u1edbi 2 c\u00e1i tr\u01b0\u1edbc \u0111\u00f3. \u0110i\u1ec3m chung c\u1ee7a Bitcoin v\u00e0 Ethereum l\u00e0 D\u1ea1ng verifiability m\u00e0 ch\u00fang cung c\u1ea5p \u0111\u1ec1u di\u1ec5n ra trong crypto environment, c\u1ee5 th\u1ec3 l\u00e0 tr\u00ean m\u00f4i tr\u01b0\u1eddng on-chain. T\u1ee9c l\u00e0 vi\u1ec7c b\u1ea1n ki\u1ec3m tra, x\u00e1c minh th\u00f4ng tin \u0111\u1ec1u x\u1ea3y ra trong m\u1ed9t h\u1ec7 k\u00edn \u2013 n\u01a1i m\u1ecdi th\u1ee9 \u0111\u00e3 \u0111\u01b0\u1ee3c chu\u1ea9n ho\u00e1 b\u1edfi blockchain. Sau khi m\u1ecdi ng\u01b0\u1eddi th\u1eadt s\u1ef1 c\u1ea3m \u0111\u01b0\u1ee3c s\u1ee9c m\u1ea1nh c\u1ee7a on-chain verifiability (kh\u1ea3 n\u0103ng ki\u1ec3m ch\u1ee9ng on-chain), \u0111\u00e3 c\u00f3 m\u1ed9t th\u1eddi k\u1ef3 m\u00e0 ai c\u0169ng ngh\u0129: \u201cM\u1ecdi th\u1ee9 \u0111\u1ec1u n\u00ean on-chain!\u201d. T\u1eeb game, app chat, nh\u1ea1c, news... t\u1ea5t t\u1ea7n t\u1eadt app truy\u1ec1n th\u1ed1ng \u0111\u1ec1u b\u1ecb\u2026 qu\u0103ng l\u00ean chain. During that mania, few people said: \"Why does it have to be on the blockchain?\". Nh\u1eefng builder t\u1eeb TradFi hay IT truy\u1ec1n th\u1ed1ng c\u0169ng lao v\u00e0o crypto, x\u00e2y l\u1ea1i y chang th\u1ee9 h\u1ecd \u0111\u00e3 quen, ch\u1ec9 kh\u00e1c l\u00e0 \u201ctr\u00ean chain\u201d. K\u1ebft qu\u1ea3 l\u00e0 90% fail. M\u00e0 th\u1eadt ra l\u00e0 g\u1ea7n nh\u01b0 ch\u1eb3ng c\u00e1i n\u00e0o s\u1ed1ng s\u00f3t c\u1ea3. C\u00e2u h\u1ecfi \u0111\u00f3 sau n\u00e0y th\u00e0nh meme, v\u00e0 c\u00e2u tr\u1ea3 l\u1eddi c\u0169ng viral kh\u00f4ng k\u00e9m: \"it doesn\u2019t have to be on the blockchain\". C\u1ea3 c\u00e2u h\u1ecfi l\u1eabn c\u00e2u tr\u1ea3 l\u1eddi\u2026 \u0111\u1ec1u sai (1) V\u1ea5n \u0111\u1ec1 \u0111\u1ea7u ti\u00ean: M\u1ecdi ng\u01b0\u1eddi kh\u00f4ng th\u1eadt s\u1ef1 hi\u1ec3u core value c\u1ee7a crypto B\u1edfi v\u00ec mindset ph\u1ed5 bi\u1ebfn c\u1ee7a m\u1ecdi ng\u01b0\u1eddi l\u00e0 c\u1ee9 c\u00e1i g\u00ec on-chain l\u00e0 auto t\u1ed1t h\u01a1n c\u00e1i off-chain, \u0111\u01a1n gi\u1ea3n ch\u1ec9 v\u00ec n\u00f3 d\u00f9ng ki\u1ebfn tr\u00fac phi t\u1eadp trung. C\u00f4ng b\u1eb1ng m\u00e0 n\u00f3i ta c\u00f3 \u0111i\u1ec3m m\u1ea1nh l\u00e0 decentralized infra, trustless, permissionless c\u00e1c ki\u1ec3u v\u00e0 \u0111i\u1ec3m tr\u1eeb l\u00e0 x\u1eed l\u00fd ch\u1eadm, t\u1ed1n gas, kh\u00f4ng scale n\u1ed5i nh\u1eefng th\u1ee9 ph\u1ee9c t\u1ea1p. T\u1eeb \u0111\u00f3 d\u1ec5 k\u1ebft lu\u1eadn l\u00e0 on-chain app l\u00e0 x\u1ecbn v\u00ec d\u00f9ng decentral infra Nh\u01b0ng th\u1eadt ra, c\u00e1i gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t kh\u00f4ng n\u1eb1m \u1edf decentral infra. Gi\u00e1 tr\u1ecb th\u1eadt n\u1eb1m \u1edf c\u00e1i verifiability m\u00e0 h\u1ea1 t\u1ea7ng \u0111\u00f3 mang l\u1ea1i. T\u1ee9c l\u00e0 kh\u00f4ng ph\u1ea3i c\u00e1i g\u00ec ch\u1ea1y tr\u00ean chain c\u0169ng t\u1ed1t. Ch\u1ec9 khi n\u00e0o b\u1ea1n th\u1eadt s\u1ef1 c\u1ea7n t\u00ednh ki\u1ec3m ch\u1ee9ng minh b\u1ea1ch (verifiability), th\u00ec on-chain m\u1edbi \u0111\u00e1ng. Vi\u1ec7c build to\u00e0n b\u1ed9 logic \u1ee9ng d\u1ee5ng on-chain nghe th\u00ec c\u00f3 v\u1ebb \u201cthu\u1ea7n crypto\u201d, nh\u01b0ng th\u1ef1c t\u1ebf l\u00e0 thi\u1ebfu h\u1ee3p l\u00fd v\u00ec nhi\u1ec1u l\u00fd do: B\u1ecb gi\u1edbi h\u1ea1n b\u1edfi software ch\u1ec9 ch\u1ea1y trong 1 VM c\u1ee5 th\u1ec3 (ex: EVM, MoveVM\u2026) B\u1ecb tr\u00f3i bu\u1ed9c b\u1edfi ph\u1ea7n c\u1ee9ng c\u1ee7a m\u1ea1ng blockchain (gi\u1edbi h\u1ea1n compute, storage, bandwidth\u2026) Ph\u1ea3i tu\u00e2n theo consensus protocol hi\u1ec7n t\u1ea1i Giao ti\u1ebfp v\u1edbi th\u1ebf gi\u1edbi b\u00ean ngo\u00e0i h\u1ea1n ch\u1ebf C\u00f3 th\u1ec3 b\u1ea1n s\u1ebd b\u1ea3o smart contracts c\u00f3 th\u1ec3 l\u1ea5y data t\u1eeb ngo\u00e0i qua oracles . Nh\u01b0ng b\u1ea3n th\u00e2n oracles l\u1ea1i c\u00f3 v\u1ea5n \u0111\u1ec1 trust v\u00e0 data \u0111\u00f3 th\u00ec ai c\u0169ng th\u1ea5y, v\u00ec blockchain l\u00e0 transparent by design. N\u00ean n\u1ebfu b\u1ea1n mu\u1ed1n L\u1ea5y data public th\u00ec ok. Nh\u01b0ng n\u1ebfu b\u1ea1n mu\u1ed1n \u0111\u01b0a v\u00e0o m\u1ed9t d\u1eef li\u1ec7u private \u0111\u1ec3 x\u1eed l\u00fd? \u0110i\u1ec1u m\u1ea1nh nh\u1ea5t m\u00e0 crypto mang l\u1ea1i ch\u00ednh l\u00e0 verifiability t\u1ee9c l\u00e0 ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 t\u1ef1 ki\u1ec3m ch\u1ee9ng t\u00ednh \u0111\u00fang \u0111\u1eafn, to\u00e0n v\u1eb9n, t\u00ednh x\u00e1c th\u1ef1c c\u1ee7a b\u1ea5t k\u1ef3 h\u00e0nh \u0111\u1ed9ng n\u00e0o trong h\u1ec7 th\u1ed1ng. Nh\u01b0 \u0111\u00e3 n\u00f3i kh\u00f4ng ph\u1ea3i c\u00e1i g\u00ec c\u0169ng n\u00ean (ho\u1eb7c c\u00f3 th\u1ec3) nh\u00e9t l\u00ean on-chain. N\u00f3 slow, expensive, ho\u1eb7c \u0111\u01a1n gi\u1ea3n l\u00e0 impossible. You cannot just put expressive and complex instructions (code) onchain. Copy and paste doesn\u2019t work in that case. (2) N\u1ebfu kh\u00f4ng th\u1ec3 build to\u00e0n b\u1ed9 infrastructure on-chain, th\u00ec\u2026 li\u1ec7u ta c\u00f3 th\u1ec3 \u0111\u01b0a m\u1ed9t ph\u1ea7n l\u00ean kh\u00f4ng? C\u00f3 ph\u1ea3i m\u1ecdi \u1ee9ng d\u1ee5ng \u0111\u1ec1u c\u1ea7n t\u00ednh verifiability (x\u00e1c minh \u0111\u01b0\u1ee3c)? Kh\u00f4ng. Nh\u01b0ng \u0111a s\u1ed1 th\u00ec c\u00f3. L\u1ea5y v\u00ed d\u1ee5 twitter c\u1ea7n verifiability cho: * T\u00ednh ti\u1ec1n qu\u1ea3ng c\u00e1o (\u0111\u1ec3 creator bi\u1ebft m\u00ecnh c\u00f3 b\u1ecb \u0103n ch\u1eb7n kh\u00f4ng) * \u0110\u1ebfm s\u1ed1 view th\u1eadt s\u1ef1 (\u0111\u1ec3 tr\u00e1nh b\u1ecb bot spam) * Trending topics * V\u00e0 nhi\u1ec1u th\u1ee9 kh\u00e1c n\u1eefa C\u00f3 ng\u01b0\u1eddi s\u1ebd n\u00f3i: Ai l\u1ea1i \u0111em Twitter l\u00ean blockchain? Kh\u00f4ng ai \u0111em c\u1ea3 Twitter l\u00ean on-chain \u0111\u01b0\u1ee3c v\u00ec kh\u00f4ng th\u1ec3 g\u1ecdi API \u0111\u1ec3 fetch d\u1eef li\u1ec7u ngo\u00e0i. Kh\u00f4ng ch\u1ea1y \u0111\u01b0\u1ee3c bot-detection hay machine learning v\u00e0 Kh\u00f4ng x\u1eed l\u00fd \u0111\u01b0\u1ee3c c\u00e1c t\u00ednh to\u00e1n ph\u1ee9c t\u1ea1p C\u00e1i b\u1ea1n c\u00f3 th\u1ec3 l\u00e0m ch\u1ec9 l\u00e0 vi\u1ebft m\u1ed9t smart contract \u0111\u01a1n gi\u1ea3n t\u00ednh ti\u1ec1n payout d\u1ef1a v\u00e0o view count nh\u01b0ng view \u0111\u00f3 d\u1ec5 b\u1ecb bot gi\u1ea3 m\u1ea1o. Gi\u1edd x\u00e9t t\u1edbi nh\u1eefng h\u1ec7 th\u1ed1ng ph\u1ee9c t\u1ea1p h\u01a1n nh\u01b0 AI: \u201cM\u1ed9t t\u00e1c v\u1ee5 c\u00e0ng d\u1ec5 x\u00e1c minh \u2192 c\u00e0ng d\u1ec5 hu\u1ea5n luy\u1ec7n AI \u0111\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c.\u201d V\u00ed d\u1ee5: * G\u1eedi coin \u2192 d\u1ec5 \u2192 c\u00f3 th\u1ec3 verify on-chain * Training AI model \u2192 c\u1ef1c n\u1eb7ng Nh\u01b0ng v\u1eady c\u00f3 ph\u1ea3i ta b\u1ecf cu\u1ed9c kh\u00f4ng? Kh\u00f4ng h\u1ec1. Thay v\u00ec nh\u00e9t to\u00e0n b\u1ed9 app logic l\u00ean on-chain, sao kh\u00f4ng nh\u00e9t ph\u1ea7n l\u00f5i, ph\u1ea7n m\u00e0 th\u1ef1c s\u1ef1 li\u00ean quan \u0111\u1ebfn gi\u00e1 tr\u1ecb & ni\u1ec1m tin? B\u1ea1n kh\u00f4ng th\u1ec3 detect bot view. Nh\u01b0ng View n\u00e0o \u0111\u00e3 \u0111\u01b0\u1ee3c x\u00e1c th\u1ef1c (off-chain), t\u00f4i s\u1ebd d\u00f9ng n\u00f3 \u0111\u1ec3 payout (on-chain). C\u00e1i c\u1ea7n l\u01b0u gi\u1eef v\u00e0 update on-chain kh\u00f4ng ph\u1ea3i to\u00e0n b\u1ed9 logic, m\u00e0 l\u00e0 state cu\u1ed1i c\u00f9ng th\u1ee9 quy\u1ebft \u0111\u1ecbnh vi\u1ec7c ai nh\u1eadn g\u00ec. V\u00e0 c\u00e1i n\u00e0y kh\u00f4ng qu\u00e1 t\u1ed1n t\u00e0i nguy\u00ean, r\u1ea5t kh\u1ea3 thi. \u0110\u1ec3 th\u1ea5y r\u00f5 kho\u1ea3ng c\u00e1ch gi\u1eefa \u201cmu\u1ed1n \u0111\u01b0a h\u1ebft l\u00ean chain\u201d v\u00e0 \u201cn\u00ean \u0111\u01b0a c\u00e1i g\u00ec l\u00ean\u201d, h\u00e3y nghe @0xbodu v\u00ed d\u1ee5: * Ch\u1ec9 ri\u00eang \u0111\u1ec3 clone l\u1ea1i Uber to\u00e0n c\u1ea7u l\u00ean blockchain \u2192 b\u1ea1n s\u1ebd c\u1ea7n h\u00e0ng ng\u00e0n MegaETH chains (3) Li\u1ec7u ta c\u00f3 th\u1ec3 gi\u1eef ph\u1ea7n logic c\u01a1 b\u1ea3n \u1edf on-chain v\u00e0 l\u00e0m cho ph\u1ea7n logic ph\u1ee9c t\u1ea1p tr\u1edf n\u00ean verifiable (x\u00e1c minh \u0111\u01b0\u1ee3c)? Ph\u1ea7n logic \u0111\u01a1n gi\u1ea3n nh\u01b0 transfer token, c\u1eadp nh\u1eadt state c\u01a1 b\u1ea3n th\u00ec \u0111\u1ec3 on-chain l\u00e0 h\u1ee3p l\u00fd. Nh\u01b0ng khi \u0111\u1ee5ng t\u1edbi nh\u1eefng ph\u1ea7n n\u1eb7ng \u0111\u00f4 h\u01a1n nh\u01b0 g\u1ecdi API, ch\u1ea1y AI, ML, ho\u1eb7c m\u1ea5y thu\u1eadt to\u00e1n ph\u1ee9c t\u1ea1p\u2026 th\u00ec kh\u00f4ng \u1ed5n n\u1ebfu c\u1ee9 c\u1ed1 nh\u00e9t h\u1ebft v\u00e0o smart contract. V\u1eady n\u00ean ta c\u1ea7n 1 gi\u1ea3i ph\u00e1p. M\u1ed9t c\u00e1ch \u0111\u1ec3 khi\u1ebfn nh\u1eefng h\u1ec7 th\u1ed1ng ph\u1ee9c t\u1ea1p c\u00f3 th\u1ec3 verify \u0111\u01b0\u1ee3c, ngay c\u1ea3 khi n\u00f3 ch\u1ea1y off-chain. V\u1ec1 c\u01a1 b\u1ea3n, Web3 \u0111\u00e3 l\u00e0m t\u1ed1t m\u1ea3ng verifiability cho t\u00e0i s\u1ea3n s\u1ed1 v\u00e0 smart contract. Nh\u01b0ng gi\u1edd, ch\u00fang ta c\u1ea7n m\u1edf r\u1ed9ng ra nh\u1eefng th\u1ee9 to v\u00e0 ph\u1ee9c t\u1ea1p h\u01a1n nhi\u1ec1u nh\u01b0 entire infra. EigenCloud n\u1ed5i ti\u1ebfng v\u1edbi concept \u201crestaking\u201d tr\u00ean Ethereum. Nh\u01b0ng b\u1ea3n ch\u1ea5t restaking kh\u00f4ng ch\u1ec9 \u0111\u1ec3 kh\u00f3a ETH. Restaking l\u00e0 m\u1ed9t c\u00e1ch \u0111\u1ec3 t\u1ea1o verifiability, v\u00ec khi b\u1ea1n c\u00f3 th\u1ec3 slash ng\u01b0\u1eddi n\u00e0o \u0111\u00f3 n\u1ebfu h\u1ecd l\u00e0m sai th\u00ec b\u1ea1n \u0111ang t\u1ea1o \u0111\u1ed9ng l\u1ef1c \u0111\u1ec3 h\u1ecd ch\u01a1i \u0111\u00fang lu\u1eadt. Restaking \u2260 Verifiability Insight c\u1ed1t l\u00f5i m\u00e0 EigenCloud \u0111\u01b0a ra l\u00e0 ung d\u1ee5ng n\u00e0o c\u0169ng c\u00f3 nhi\u1ec1u th\u00e0nh ph\u1ea7n. V\u00e0 kh\u00f4ng ph\u1ea3i th\u00e0nh ph\u1ea7n n\u00e0o c\u0169ng c\u1ea7n (ho\u1eb7c n\u00ean) \u0111\u01b0\u1ee3c x\u00e1c minh. T\u00f9y lo\u1ea1i logic, ta chia \u0111\u01b0\u1ee3c 3 c\u1ea5p \u0111\u1ed9 verifiability: Logic \u0111\u01a1n gi\u1ea3n (nh\u01b0 chuy\u1ec3n token, vote, update state nh\u1ecf): n\u00ean verifiable on-chain Logic ph\u1ee9c t\u1ea1p (AI, ML, g\u1ecdi API, \u0111i\u1ec1u ph\u1ed1i logic): th\u00ec c\u1ea7n verifiability off-chain Logic l\u1eb7p l\u1ea1i / routine tasks (build UI, render \u1ea3nh, ki\u1ec3m tra syntax, v.v.): c\u00f3 th\u1ec3 kh\u00f4ng c\u1ea7n verify C\u00f3 h\u00e0ng t\u00e1 b\u00e0i ph\u00e2n t\u00edch k\u1ef9 thu\u1eadt v\u1ec1 c\u00e1ch EigenCloud v\u1eadn h\u00e0nh, v\u1ec1 m\u00f4 h\u00ecnh trust, AVS, v.v. Nh\u01b0ng \u1edf \u0111\u00e2y, m\u00ecnh s\u1ebd kh\u00f4ng l\u1eb7p l\u1ea1i m\u1edb ki\u1ebfn th\u1ee9c \u0111\u00f3 l\u00e0m g\u00ec. Thay v\u00e0o \u0111\u00f3, m\u00ecnh s\u1ebd \u0111\u01b0a 3 v\u00ed d\u1ee5 cho th\u1ea5y t\u1ea1i sao vi\u1ec7c x\u00e1c minh logic ph\u1ee9c t\u1ea1p l\u00e0 si\u00eau quan tr\u1ecdng v\u00e0 th\u1eadm ch\u00ed c\u1ea3 nh\u1eefng h\u1ec7 th\u1ed1ng kh\u00f4ng ph\u1ea3i crypto c\u0169ng c\u00f3 th\u1ec3 h\u01b0\u1edfng l\u1ee3i t\u1eeb EigenCloud:","title":"(verifiability) l\u00e0 l\u1ee3i th\u1ebf l\u1edbn nh\u1ea5t c\u1ee7a crypto."},{"location":"collections/Three%20Layers%20of%20Verifiability%20%7C%20On-chain%2C%20Off-chain%2C%20Non-verifiable/#verifiability-la-loi-the-lon-nhat-cua-crypto","text":"The original link(english): https://x.com/paramonoww/status/1948064814439207010 Bitcoin v\u00e0 Ethereum \u0111\u00e3 mang l\u1ea1i cho ch\u00fang ta verifiable money (ti\u1ec1n c\u00f3 th\u1ec3 ki\u1ec3m ch\u1ee9ng \u0111\u01b0\u1ee3c) v\u00e0 verifiable finance (t\u00e0i ch\u00ednh c\u00f3 th\u1ec3 ki\u1ec3m ch\u1ee9ng \u0111\u01b0\u1ee3c). Nh\u01b0ng b\u01b0\u1edbc ti\u1ebfp theo li\u00ean quan \u0111\u1ebfn t\u00ednh ki\u1ec3m ch\u1ee9ng s\u1ebd r\u1ea5t kh\u00e1c so v\u1edbi 2 c\u00e1i tr\u01b0\u1edbc \u0111\u00f3. \u0110i\u1ec3m chung c\u1ee7a Bitcoin v\u00e0 Ethereum l\u00e0 D\u1ea1ng verifiability m\u00e0 ch\u00fang cung c\u1ea5p \u0111\u1ec1u di\u1ec5n ra trong crypto environment, c\u1ee5 th\u1ec3 l\u00e0 tr\u00ean m\u00f4i tr\u01b0\u1eddng on-chain. T\u1ee9c l\u00e0 vi\u1ec7c b\u1ea1n ki\u1ec3m tra, x\u00e1c minh th\u00f4ng tin \u0111\u1ec1u x\u1ea3y ra trong m\u1ed9t h\u1ec7 k\u00edn \u2013 n\u01a1i m\u1ecdi th\u1ee9 \u0111\u00e3 \u0111\u01b0\u1ee3c chu\u1ea9n ho\u00e1 b\u1edfi blockchain. Sau khi m\u1ecdi ng\u01b0\u1eddi th\u1eadt s\u1ef1 c\u1ea3m \u0111\u01b0\u1ee3c s\u1ee9c m\u1ea1nh c\u1ee7a on-chain verifiability (kh\u1ea3 n\u0103ng ki\u1ec3m ch\u1ee9ng on-chain), \u0111\u00e3 c\u00f3 m\u1ed9t th\u1eddi k\u1ef3 m\u00e0 ai c\u0169ng ngh\u0129: \u201cM\u1ecdi th\u1ee9 \u0111\u1ec1u n\u00ean on-chain!\u201d. T\u1eeb game, app chat, nh\u1ea1c, news... t\u1ea5t t\u1ea7n t\u1eadt app truy\u1ec1n th\u1ed1ng \u0111\u1ec1u b\u1ecb\u2026 qu\u0103ng l\u00ean chain. During that mania, few people said: \"Why does it have to be on the blockchain?\". Nh\u1eefng builder t\u1eeb TradFi hay IT truy\u1ec1n th\u1ed1ng c\u0169ng lao v\u00e0o crypto, x\u00e2y l\u1ea1i y chang th\u1ee9 h\u1ecd \u0111\u00e3 quen, ch\u1ec9 kh\u00e1c l\u00e0 \u201ctr\u00ean chain\u201d. K\u1ebft qu\u1ea3 l\u00e0 90% fail. M\u00e0 th\u1eadt ra l\u00e0 g\u1ea7n nh\u01b0 ch\u1eb3ng c\u00e1i n\u00e0o s\u1ed1ng s\u00f3t c\u1ea3. C\u00e2u h\u1ecfi \u0111\u00f3 sau n\u00e0y th\u00e0nh meme, v\u00e0 c\u00e2u tr\u1ea3 l\u1eddi c\u0169ng viral kh\u00f4ng k\u00e9m: \"it doesn\u2019t have to be on the blockchain\". C\u1ea3 c\u00e2u h\u1ecfi l\u1eabn c\u00e2u tr\u1ea3 l\u1eddi\u2026 \u0111\u1ec1u sai","title":"(verifiability) l\u00e0 l\u1ee3i th\u1ebf l\u1edbn nh\u1ea5t c\u1ee7a crypto."},{"location":"collections/Three%20Layers%20of%20Verifiability%20%7C%20On-chain%2C%20Off-chain%2C%20Non-verifiable/#1-van-e-au-tien-moi-nguoi-khong-that-su-hieu-core-value-cua-crypto","text":"B\u1edfi v\u00ec mindset ph\u1ed5 bi\u1ebfn c\u1ee7a m\u1ecdi ng\u01b0\u1eddi l\u00e0 c\u1ee9 c\u00e1i g\u00ec on-chain l\u00e0 auto t\u1ed1t h\u01a1n c\u00e1i off-chain, \u0111\u01a1n gi\u1ea3n ch\u1ec9 v\u00ec n\u00f3 d\u00f9ng ki\u1ebfn tr\u00fac phi t\u1eadp trung. C\u00f4ng b\u1eb1ng m\u00e0 n\u00f3i ta c\u00f3 \u0111i\u1ec3m m\u1ea1nh l\u00e0 decentralized infra, trustless, permissionless c\u00e1c ki\u1ec3u v\u00e0 \u0111i\u1ec3m tr\u1eeb l\u00e0 x\u1eed l\u00fd ch\u1eadm, t\u1ed1n gas, kh\u00f4ng scale n\u1ed5i nh\u1eefng th\u1ee9 ph\u1ee9c t\u1ea1p. T\u1eeb \u0111\u00f3 d\u1ec5 k\u1ebft lu\u1eadn l\u00e0 on-chain app l\u00e0 x\u1ecbn v\u00ec d\u00f9ng decentral infra Nh\u01b0ng th\u1eadt ra, c\u00e1i gi\u00e1 tr\u1ecb l\u1edbn nh\u1ea5t kh\u00f4ng n\u1eb1m \u1edf decentral infra. Gi\u00e1 tr\u1ecb th\u1eadt n\u1eb1m \u1edf c\u00e1i verifiability m\u00e0 h\u1ea1 t\u1ea7ng \u0111\u00f3 mang l\u1ea1i. T\u1ee9c l\u00e0 kh\u00f4ng ph\u1ea3i c\u00e1i g\u00ec ch\u1ea1y tr\u00ean chain c\u0169ng t\u1ed1t. Ch\u1ec9 khi n\u00e0o b\u1ea1n th\u1eadt s\u1ef1 c\u1ea7n t\u00ednh ki\u1ec3m ch\u1ee9ng minh b\u1ea1ch (verifiability), th\u00ec on-chain m\u1edbi \u0111\u00e1ng. Vi\u1ec7c build to\u00e0n b\u1ed9 logic \u1ee9ng d\u1ee5ng on-chain nghe th\u00ec c\u00f3 v\u1ebb \u201cthu\u1ea7n crypto\u201d, nh\u01b0ng th\u1ef1c t\u1ebf l\u00e0 thi\u1ebfu h\u1ee3p l\u00fd v\u00ec nhi\u1ec1u l\u00fd do: B\u1ecb gi\u1edbi h\u1ea1n b\u1edfi software ch\u1ec9 ch\u1ea1y trong 1 VM c\u1ee5 th\u1ec3 (ex: EVM, MoveVM\u2026) B\u1ecb tr\u00f3i bu\u1ed9c b\u1edfi ph\u1ea7n c\u1ee9ng c\u1ee7a m\u1ea1ng blockchain (gi\u1edbi h\u1ea1n compute, storage, bandwidth\u2026) Ph\u1ea3i tu\u00e2n theo consensus protocol hi\u1ec7n t\u1ea1i Giao ti\u1ebfp v\u1edbi th\u1ebf gi\u1edbi b\u00ean ngo\u00e0i h\u1ea1n ch\u1ebf C\u00f3 th\u1ec3 b\u1ea1n s\u1ebd b\u1ea3o smart contracts c\u00f3 th\u1ec3 l\u1ea5y data t\u1eeb ngo\u00e0i qua oracles . Nh\u01b0ng b\u1ea3n th\u00e2n oracles l\u1ea1i c\u00f3 v\u1ea5n \u0111\u1ec1 trust v\u00e0 data \u0111\u00f3 th\u00ec ai c\u0169ng th\u1ea5y, v\u00ec blockchain l\u00e0 transparent by design. N\u00ean n\u1ebfu b\u1ea1n mu\u1ed1n L\u1ea5y data public th\u00ec ok. Nh\u01b0ng n\u1ebfu b\u1ea1n mu\u1ed1n \u0111\u01b0a v\u00e0o m\u1ed9t d\u1eef li\u1ec7u private \u0111\u1ec3 x\u1eed l\u00fd? \u0110i\u1ec1u m\u1ea1nh nh\u1ea5t m\u00e0 crypto mang l\u1ea1i ch\u00ednh l\u00e0 verifiability t\u1ee9c l\u00e0 ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 t\u1ef1 ki\u1ec3m ch\u1ee9ng t\u00ednh \u0111\u00fang \u0111\u1eafn, to\u00e0n v\u1eb9n, t\u00ednh x\u00e1c th\u1ef1c c\u1ee7a b\u1ea5t k\u1ef3 h\u00e0nh \u0111\u1ed9ng n\u00e0o trong h\u1ec7 th\u1ed1ng. Nh\u01b0 \u0111\u00e3 n\u00f3i kh\u00f4ng ph\u1ea3i c\u00e1i g\u00ec c\u0169ng n\u00ean (ho\u1eb7c c\u00f3 th\u1ec3) nh\u00e9t l\u00ean on-chain. N\u00f3 slow, expensive, ho\u1eb7c \u0111\u01a1n gi\u1ea3n l\u00e0 impossible. You cannot just put expressive and complex instructions (code) onchain. Copy and paste doesn\u2019t work in that case.","title":"(1) V\u1ea5n \u0111\u1ec1 \u0111\u1ea7u ti\u00ean: M\u1ecdi ng\u01b0\u1eddi kh\u00f4ng th\u1eadt s\u1ef1 hi\u1ec3u core value c\u1ee7a crypto"},{"location":"collections/Three%20Layers%20of%20Verifiability%20%7C%20On-chain%2C%20Off-chain%2C%20Non-verifiable/#2-neu-khong-the-build-toan-bo-infrastructure-on-chain-thi-lieu-ta-co-the-ua-mot-phan-len-khong","text":"C\u00f3 ph\u1ea3i m\u1ecdi \u1ee9ng d\u1ee5ng \u0111\u1ec1u c\u1ea7n t\u00ednh verifiability (x\u00e1c minh \u0111\u01b0\u1ee3c)? Kh\u00f4ng. Nh\u01b0ng \u0111a s\u1ed1 th\u00ec c\u00f3. L\u1ea5y v\u00ed d\u1ee5 twitter c\u1ea7n verifiability cho: * T\u00ednh ti\u1ec1n qu\u1ea3ng c\u00e1o (\u0111\u1ec3 creator bi\u1ebft m\u00ecnh c\u00f3 b\u1ecb \u0103n ch\u1eb7n kh\u00f4ng) * \u0110\u1ebfm s\u1ed1 view th\u1eadt s\u1ef1 (\u0111\u1ec3 tr\u00e1nh b\u1ecb bot spam) * Trending topics * V\u00e0 nhi\u1ec1u th\u1ee9 kh\u00e1c n\u1eefa C\u00f3 ng\u01b0\u1eddi s\u1ebd n\u00f3i: Ai l\u1ea1i \u0111em Twitter l\u00ean blockchain? Kh\u00f4ng ai \u0111em c\u1ea3 Twitter l\u00ean on-chain \u0111\u01b0\u1ee3c v\u00ec kh\u00f4ng th\u1ec3 g\u1ecdi API \u0111\u1ec3 fetch d\u1eef li\u1ec7u ngo\u00e0i. Kh\u00f4ng ch\u1ea1y \u0111\u01b0\u1ee3c bot-detection hay machine learning v\u00e0 Kh\u00f4ng x\u1eed l\u00fd \u0111\u01b0\u1ee3c c\u00e1c t\u00ednh to\u00e1n ph\u1ee9c t\u1ea1p C\u00e1i b\u1ea1n c\u00f3 th\u1ec3 l\u00e0m ch\u1ec9 l\u00e0 vi\u1ebft m\u1ed9t smart contract \u0111\u01a1n gi\u1ea3n t\u00ednh ti\u1ec1n payout d\u1ef1a v\u00e0o view count nh\u01b0ng view \u0111\u00f3 d\u1ec5 b\u1ecb bot gi\u1ea3 m\u1ea1o. Gi\u1edd x\u00e9t t\u1edbi nh\u1eefng h\u1ec7 th\u1ed1ng ph\u1ee9c t\u1ea1p h\u01a1n nh\u01b0 AI: \u201cM\u1ed9t t\u00e1c v\u1ee5 c\u00e0ng d\u1ec5 x\u00e1c minh \u2192 c\u00e0ng d\u1ec5 hu\u1ea5n luy\u1ec7n AI \u0111\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c.\u201d V\u00ed d\u1ee5: * G\u1eedi coin \u2192 d\u1ec5 \u2192 c\u00f3 th\u1ec3 verify on-chain * Training AI model \u2192 c\u1ef1c n\u1eb7ng Nh\u01b0ng v\u1eady c\u00f3 ph\u1ea3i ta b\u1ecf cu\u1ed9c kh\u00f4ng? Kh\u00f4ng h\u1ec1. Thay v\u00ec nh\u00e9t to\u00e0n b\u1ed9 app logic l\u00ean on-chain, sao kh\u00f4ng nh\u00e9t ph\u1ea7n l\u00f5i, ph\u1ea7n m\u00e0 th\u1ef1c s\u1ef1 li\u00ean quan \u0111\u1ebfn gi\u00e1 tr\u1ecb & ni\u1ec1m tin? B\u1ea1n kh\u00f4ng th\u1ec3 detect bot view. Nh\u01b0ng View n\u00e0o \u0111\u00e3 \u0111\u01b0\u1ee3c x\u00e1c th\u1ef1c (off-chain), t\u00f4i s\u1ebd d\u00f9ng n\u00f3 \u0111\u1ec3 payout (on-chain). C\u00e1i c\u1ea7n l\u01b0u gi\u1eef v\u00e0 update on-chain kh\u00f4ng ph\u1ea3i to\u00e0n b\u1ed9 logic, m\u00e0 l\u00e0 state cu\u1ed1i c\u00f9ng th\u1ee9 quy\u1ebft \u0111\u1ecbnh vi\u1ec7c ai nh\u1eadn g\u00ec. V\u00e0 c\u00e1i n\u00e0y kh\u00f4ng qu\u00e1 t\u1ed1n t\u00e0i nguy\u00ean, r\u1ea5t kh\u1ea3 thi. \u0110\u1ec3 th\u1ea5y r\u00f5 kho\u1ea3ng c\u00e1ch gi\u1eefa \u201cmu\u1ed1n \u0111\u01b0a h\u1ebft l\u00ean chain\u201d v\u00e0 \u201cn\u00ean \u0111\u01b0a c\u00e1i g\u00ec l\u00ean\u201d, h\u00e3y nghe @0xbodu v\u00ed d\u1ee5: * Ch\u1ec9 ri\u00eang \u0111\u1ec3 clone l\u1ea1i Uber to\u00e0n c\u1ea7u l\u00ean blockchain \u2192 b\u1ea1n s\u1ebd c\u1ea7n h\u00e0ng ng\u00e0n MegaETH chains","title":"(2) N\u1ebfu kh\u00f4ng th\u1ec3 build to\u00e0n b\u1ed9 infrastructure on-chain, th\u00ec\u2026 li\u1ec7u ta c\u00f3 th\u1ec3 \u0111\u01b0a m\u1ed9t ph\u1ea7n l\u00ean kh\u00f4ng?"},{"location":"collections/Three%20Layers%20of%20Verifiability%20%7C%20On-chain%2C%20Off-chain%2C%20Non-verifiable/#3-lieu-ta-co-the-giu-phan-logic-co-ban-o-on-chain-va-lam-cho-phan-logic-phuc-tap-tro-nen-verifiable-xac-minh-uoc","text":"Ph\u1ea7n logic \u0111\u01a1n gi\u1ea3n nh\u01b0 transfer token, c\u1eadp nh\u1eadt state c\u01a1 b\u1ea3n th\u00ec \u0111\u1ec3 on-chain l\u00e0 h\u1ee3p l\u00fd. Nh\u01b0ng khi \u0111\u1ee5ng t\u1edbi nh\u1eefng ph\u1ea7n n\u1eb7ng \u0111\u00f4 h\u01a1n nh\u01b0 g\u1ecdi API, ch\u1ea1y AI, ML, ho\u1eb7c m\u1ea5y thu\u1eadt to\u00e1n ph\u1ee9c t\u1ea1p\u2026 th\u00ec kh\u00f4ng \u1ed5n n\u1ebfu c\u1ee9 c\u1ed1 nh\u00e9t h\u1ebft v\u00e0o smart contract. V\u1eady n\u00ean ta c\u1ea7n 1 gi\u1ea3i ph\u00e1p. M\u1ed9t c\u00e1ch \u0111\u1ec3 khi\u1ebfn nh\u1eefng h\u1ec7 th\u1ed1ng ph\u1ee9c t\u1ea1p c\u00f3 th\u1ec3 verify \u0111\u01b0\u1ee3c, ngay c\u1ea3 khi n\u00f3 ch\u1ea1y off-chain. V\u1ec1 c\u01a1 b\u1ea3n, Web3 \u0111\u00e3 l\u00e0m t\u1ed1t m\u1ea3ng verifiability cho t\u00e0i s\u1ea3n s\u1ed1 v\u00e0 smart contract. Nh\u01b0ng gi\u1edd, ch\u00fang ta c\u1ea7n m\u1edf r\u1ed9ng ra nh\u1eefng th\u1ee9 to v\u00e0 ph\u1ee9c t\u1ea1p h\u01a1n nhi\u1ec1u nh\u01b0 entire infra. EigenCloud n\u1ed5i ti\u1ebfng v\u1edbi concept \u201crestaking\u201d tr\u00ean Ethereum. Nh\u01b0ng b\u1ea3n ch\u1ea5t restaking kh\u00f4ng ch\u1ec9 \u0111\u1ec3 kh\u00f3a ETH. Restaking l\u00e0 m\u1ed9t c\u00e1ch \u0111\u1ec3 t\u1ea1o verifiability, v\u00ec khi b\u1ea1n c\u00f3 th\u1ec3 slash ng\u01b0\u1eddi n\u00e0o \u0111\u00f3 n\u1ebfu h\u1ecd l\u00e0m sai th\u00ec b\u1ea1n \u0111ang t\u1ea1o \u0111\u1ed9ng l\u1ef1c \u0111\u1ec3 h\u1ecd ch\u01a1i \u0111\u00fang lu\u1eadt. Restaking \u2260 Verifiability Insight c\u1ed1t l\u00f5i m\u00e0 EigenCloud \u0111\u01b0a ra l\u00e0 ung d\u1ee5ng n\u00e0o c\u0169ng c\u00f3 nhi\u1ec1u th\u00e0nh ph\u1ea7n. V\u00e0 kh\u00f4ng ph\u1ea3i th\u00e0nh ph\u1ea7n n\u00e0o c\u0169ng c\u1ea7n (ho\u1eb7c n\u00ean) \u0111\u01b0\u1ee3c x\u00e1c minh. T\u00f9y lo\u1ea1i logic, ta chia \u0111\u01b0\u1ee3c 3 c\u1ea5p \u0111\u1ed9 verifiability: Logic \u0111\u01a1n gi\u1ea3n (nh\u01b0 chuy\u1ec3n token, vote, update state nh\u1ecf): n\u00ean verifiable on-chain Logic ph\u1ee9c t\u1ea1p (AI, ML, g\u1ecdi API, \u0111i\u1ec1u ph\u1ed1i logic): th\u00ec c\u1ea7n verifiability off-chain Logic l\u1eb7p l\u1ea1i / routine tasks (build UI, render \u1ea3nh, ki\u1ec3m tra syntax, v.v.): c\u00f3 th\u1ec3 kh\u00f4ng c\u1ea7n verify C\u00f3 h\u00e0ng t\u00e1 b\u00e0i ph\u00e2n t\u00edch k\u1ef9 thu\u1eadt v\u1ec1 c\u00e1ch EigenCloud v\u1eadn h\u00e0nh, v\u1ec1 m\u00f4 h\u00ecnh trust, AVS, v.v. Nh\u01b0ng \u1edf \u0111\u00e2y, m\u00ecnh s\u1ebd kh\u00f4ng l\u1eb7p l\u1ea1i m\u1edb ki\u1ebfn th\u1ee9c \u0111\u00f3 l\u00e0m g\u00ec. Thay v\u00e0o \u0111\u00f3, m\u00ecnh s\u1ebd \u0111\u01b0a 3 v\u00ed d\u1ee5 cho th\u1ea5y t\u1ea1i sao vi\u1ec7c x\u00e1c minh logic ph\u1ee9c t\u1ea1p l\u00e0 si\u00eau quan tr\u1ecdng v\u00e0 th\u1eadm ch\u00ed c\u1ea3 nh\u1eefng h\u1ec7 th\u1ed1ng kh\u00f4ng ph\u1ea3i crypto c\u0169ng c\u00f3 th\u1ec3 h\u01b0\u1edfng l\u1ee3i t\u1eeb EigenCloud:","title":"(3) Li\u1ec7u ta c\u00f3 th\u1ec3 gi\u1eef ph\u1ea7n logic c\u01a1 b\u1ea3n \u1edf on-chain v\u00e0 l\u00e0m cho ph\u1ea7n logic ph\u1ee9c t\u1ea1p tr\u1edf n\u00ean verifiable (x\u00e1c minh \u0111\u01b0\u1ee3c)?"},{"location":"collections/Web3%20Job%20Search%20Sites/","text":"Remote Job Search Cryptojobslist Cryptocurrency Engineering Jobs: https://cryptocurrencyjobs.co/engineering/ https://www.remote3.co/ https://crypto.jobs/ https://www.defi.jobs/ https://blockchain.works-hub.com/web3-jobs https://github.com/remoteintech/remote-jobs resources to become a smart contract dev do cryptozombies cyfrin updraft read mastering ethereum read great protocols owen thurn's yt master foundry read audit reports deploy something real pay for a small audit uttams's yt build a dune dashboard set up tenderly alarms jorwdan mc kinney's yt use slither and echidna","title":"Remote Job Search"},{"location":"collections/Web3%20Job%20Search%20Sites/#remote-job-search","text":"Cryptojobslist Cryptocurrency Engineering Jobs: https://cryptocurrencyjobs.co/engineering/ https://www.remote3.co/ https://crypto.jobs/ https://www.defi.jobs/ https://blockchain.works-hub.com/web3-jobs https://github.com/remoteintech/remote-jobs","title":"Remote Job Search"},{"location":"collections/Web3%20Job%20Search%20Sites/#resources-to-become-a-smart-contract-dev","text":"do cryptozombies cyfrin updraft read mastering ethereum read great protocols owen thurn's yt master foundry read audit reports deploy something real pay for a small audit uttams's yt build a dune dashboard set up tenderly alarms jorwdan mc kinney's yt use slither and echidna","title":"resources to become a smart contract dev"},{"location":"collections/Blockchain%20Interview%20Guide/How%20become%20a%20blockchain%20enginner%3F/","text":"interview ideas and interview questions in blockchain. Link: https://github.com/the-web3/chaineye-blockchain-interview/tree/main","title":"interview ideas and interview questions in blockchain."},{"location":"collections/Blockchain%20Interview%20Guide/How%20become%20a%20blockchain%20enginner%3F/#interview-ideas-and-interview-questions-in-blockchain","text":"Link: https://github.com/the-web3/chaineye-blockchain-interview/tree/main","title":"interview ideas and interview questions in blockchain."},{"location":"collections/Defi/ERC-6551%20Token%20Bound%20Accounts/","text":"ERC-6551 Token Bound Accounts (aka how NFTs can own assets). Every NFT has it owns wallet The ERC-6551 standard specifies how an NFT can \"own\" other assets. Essentially, the NFT owns a variation of a \"smart wallet\" that itself is the owner of other assets. If you want to bring together your knowledge of proxies, assembly optimization, NFTs, and several other ERCs, ERC-6551 will do that for you! The interace interface IERC6551Registry { function createAccount( address implementation, uint256 chainId, address tokenContract, uint256 tokenId, uint256 salt, bytes calldata initData ) external returns (address) ; function account( address implementation, uint256 chainId, address tokenContract, uint256 tokenId, uint256 salt ) external view returns (address); } Case studies AI-powered simulation game using NFT character Mint unique digital signature NFTS video: https://www.youtube.com/watch?v=TNuLH47vZ2w The article here: https://medium.com/klaytn/revolutionizing-nfts-how-erc6551-token-bound-accounts-drive-nft-innovation-b7c262a2302c","title":"ERC-6551 Token Bound Accounts"},{"location":"collections/Defi/ERC-6551%20Token%20Bound%20Accounts/#erc-6551-token-bound-accounts","text":"(aka how NFTs can own assets). Every NFT has it owns wallet The ERC-6551 standard specifies how an NFT can \"own\" other assets. Essentially, the NFT owns a variation of a \"smart wallet\" that itself is the owner of other assets. If you want to bring together your knowledge of proxies, assembly optimization, NFTs, and several other ERCs, ERC-6551 will do that for you! The interace interface IERC6551Registry { function createAccount( address implementation, uint256 chainId, address tokenContract, uint256 tokenId, uint256 salt, bytes calldata initData ) external returns (address) ; function account( address implementation, uint256 chainId, address tokenContract, uint256 tokenId, uint256 salt ) external view returns (address); }","title":"ERC-6551 Token Bound Accounts"},{"location":"collections/Defi/ERC-6551%20Token%20Bound%20Accounts/#case-studies","text":"AI-powered simulation game using NFT character Mint unique digital signature NFTS video: https://www.youtube.com/watch?v=TNuLH47vZ2w The article here: https://medium.com/klaytn/revolutionizing-nfts-how-erc6551-token-bound-accounts-drive-nft-innovation-b7c262a2302c","title":"Case studies"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/","text":"What is a liquidity pool? What is a liquidity pool? Uniswap ho\u1ea1t \u0111\u1ed9ng kh\u00f4ng gi\u1ed1ng s\u00e0n t\u1eadp trung (CEX). N\u00f3 kh\u00f4ng c\u00f3 order book. Thay v\u00e0o \u0111\u00f3, n\u00f3 d\u00f9ng m\u1ed9t th\u1ee9 g\u1ecdi l\u00e0 liquidity pool n\u01a1i m\u00e0 ng\u01b0\u1eddi d\u00f9ng ( liquidity provider) \u0111\u1ed5 c\u1ea3 ETH v\u00e0 token v\u00e0o \u0111\u1ec3 ng\u01b0\u1eddi kh\u00e1c swap qua l\u1ea1i. Liquidity Pool l\u00e0 g\u00ec? Liquidity Pool (LP) l\u00e0 m\u1ed9t smart contract ch\u1ee9a hai lo\u1ea1i t\u00e0i s\u1ea3n (vd: ETH v\u00e0 DAI). Ai c\u0169ng c\u00f3 th\u1ec3 swap qua l\u1ea1i gi\u1eefa 2 token n\u00e0y trong pool, kh\u00f4ng c\u1ea7n order book, kh\u00f4ng c\u1ea7n matching engine. LP Token l\u00e0 g\u00ec? Khi th\u00eam thanh kho\u1ea3n v\u00e0o pool, Uniswap s\u1ebd mint ra LP token \u0111\u1ec3 ch\u1ee9ng nh\u1eadn r\u1eb1ng: \u201cYou now own a piece of the pool, homie.\u201d \ud83d\udcb8 LP token gi\u1ed1ng v\u00e9 x\u00e1c nh\u1eadn quy\u1ec1n s\u1edf h\u1eefu. T\u1ea5t nhi\u00ean LP c\u0169ng l\u00e0 token chu\u1ea9n ERC-20 n\u00ean b\u1ea1n c\u00f3 th\u1ec3 chuy\u1ec3n nh\u01b0\u1ee3ng, b\u00e1n, farm, ho\u1eb7c c\u1ea7m \u0111i th\u1ebf ch\u1ea5p n\u1ebfu protocol n\u00e0o \u0111\u00f3 cho ph\u00e9p. \u203c\ufe0f N\u1ebfu b\u1ea1n chuy\u1ec3n LP token cho ng\u01b0\u1eddi kh\u00e1c, t\u1ee9c l\u00e0 b\u1ea1n \u0111\u00e3 chuy\u1ec3n quy\u1ec1n s\u1edf h\u1eefu pool cho h\u1ecd lu\u00f4n. H\u1ecd c\u00f3 th\u1ec3 r\u00fat ETH v\u00e0 token ra thay b\u1ea1n \ud83e\udee0 Ai l\u00e0 Liquidity Provider (LP-er)? L\u00e0 ng\u01b0\u1eddi ch\u01a1i ch\u1ecbu b\u1ecf ETH v\u00e0 token (c\u00f9ng gi\u00e1 tr\u1ecb) v\u00e0o pool. Khi swapper swap token trong pool \u2192 LP-er nh\u1eadn \u0111\u01b0\u1ee3c ph\u00ed giao d\u1ecbch (0.3%/swap tr\u00ean V1). /** * @notice Remove liquidity, burn LP tokens, and retrieve ETH and tokens proportionally * @param amount The amount of LP tokens to burn * @param min_eth The minimum amount of ETH expected to receive * @param min_tokens The minimum amount of tokens expected to receive * @param deadline The transaction deadline (timestamp) * @return The actual amounts of ETH and tokens withdrawn */ function removeLiquidity( uint256 amount, uint256 min_eth, uint256 min_tokens, uint256 deadline ) external returns (uint256, uint256) { // Validate input parameters require(amount > 0, \"Factory: INVALID_AMOUNT\"); // LP token amount must be greater than 0 require(deadline >= block.timestamp, \"Factory: DEADLINE_EXCEEDED\"); // Ensure the transaction hasn't expired // Get the total current liquidity uint256 totalLiquidity = totalSupply; require(totalLiquidity > 0, \"Factory: EMPTY_LIQUIDITY\"); // Ensure there is liquidity in the pool // Calculate the amount of ETH and tokens to return proportionally uint256 tokenReserve = IERC20(token).balanceOf(address(this)); // Get the current token balance in the contract uint256 ethWithdrawn = (amount * address(this).balance) / totalLiquidity; // Proportional ETH to return uint256 tokenWithdrawn = (amount * tokenReserve) / totalLiquidity; // Proportional token to return // Ensure the returned amounts meet the minimum expected values (to prevent slippage) require(ethWithdrawn >= min_eth, \"Factory: ETH_UNDERFLOW\"); require(tokenWithdrawn >= min_tokens, \"Factory: TOKEN_UNDERFLOW\"); // Burn the user's LP tokens using inherited _burn function _burn(msg.sender, amount); // Safely send ETH back to the user (bool success, ) = msg.sender.call{value: ethWithdrawn}(\"\"); require(success, \"Factory: ETH_TRANSFER_FAILED\"); // Ensure ETH transfer succeeds // Send tokens back to the user require(IERC20(token).transfer(msg.sender, tokenWithdrawn), \"Factory: TOKEN_TRANSFER_FAILED\"); // Emit the RemoveLiquidity event emit RemoveLiquidity(msg.sender, ethWithdrawn, tokenWithdrawn); // Return the actual amounts of ETH and tokens withdrawn return (ethWithdrawn, tokenWithdrawn); } Calculation principle of proportional extraction Uniswap V1 s\u1eed d\u1ee5ng nguy\u00ean t\u1eafc c\u1ed1t l\u00f5i l\u00e0 ph\u00e2n ph\u1ed1i theo t\u1ef7 l\u1ec7 : C\u00f4ng th\u1ee9c t\u00ednh: * S\u1ed1 ETH c\u00f3 th\u1ec3 r\u00fat = (S\u1ed1 l\u01b0\u1ee3ng LP token ng\u01b0\u1eddi d\u00f9ng n\u1eafm / T\u1ed5ng s\u1ed1 LP token trong pool) \u00d7 T\u1ed5ng l\u01b0\u1ee3ng ETH trong pool S\u1ed1 token c\u00f3 th\u1ec3 r\u00fat = (S\u1ed1 l\u01b0\u1ee3ng LP token ng\u01b0\u1eddi d\u00f9ng n\u1eafm / T\u1ed5ng s\u1ed1 LP token trong pool) \u00d7 T\u1ed5ng l\u01b0\u1ee3ng token trong pool V\u00ed d\u1ee5 c\u1ee5 th\u1ec3: Gi\u1ea3 s\u1eed tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i c\u1ee7a pool l\u00e0: * T\u1ed5ng c\u1ed9ng c\u00f3 1000 LP token * Pool ch\u1ee9a 10 ETH * Pool c\u00f3 20,000 USDC * M\u00ecnh \u0111ang n\u1eafm 100 LP token (t\u1ee9c l\u00e0 chi\u1ebfm 10% t\u1ed5ng pool) V\u1eady m\u00ecnh c\u00f3 th\u1ec3 r\u00fat: * ETH: 100 \u00f7 1000 \u00d7 10 = 1 ETH * USDC: 100 \u00f7 1000 \u00d7 20000 = 2000 USDC C\u01a1 ch\u1ebf n\u00e0y \u0111\u1ea3m b\u1ea3o r\u1eb1ng ng\u01b0\u1eddi cung c\u1ea5p thanh kho\u1ea3n s\u1ebd nh\u1eadn l\u1ea1i l\u01b0\u1ee3ng t\u00e0i s\u1ea3n t\u01b0\u01a1ng \u1ee9ng v\u1edbi t\u1ef7 l\u1ec7 \u0111\u00f3ng g\u00f3p c\u1ee7a m\u00ecnh, bao g\u1ed3m c\u1ea3 ph\u1ea7n ph\u00ed giao d\u1ecbch \u0111\u00e3 t\u00edch l\u0169y trong qu\u00e1 kh\u1ee9. \u2753T\u1ea1i sao ph\u1ea3i h\u1ee7y (burn) LP token? Nh\u01b0 \u0111\u1ec1 c\u1eadp \u1edf tr\u00ean, LP token l\u00e0 ch\u1ee9ng ch\u1ec9 th\u1ec3 hi\u1ec7n ph\u1ea7n s\u1edf h\u1eefu c\u1ee7a m\u00ecnh trong pool. Khi r\u00fat thanh kho\u1ea3n, LP token ph\u1ea3i \u0111\u01b0\u1ee3c ti\u00eau h\u1ee7y \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o t\u00ednh to\u00e1n ph\u1ea7n tr\u0103m s\u1edf h\u1eefu c\u00f2n l\u1ea1i c\u1ee7a c\u00e1c LP kh\u00e1c l\u00e0 ch\u00ednh x\u00e1c. Ngo\u00e0i ra ng\u0103n vi\u1ec7c LP token b\u1ecb t\u00e1i s\u1eed d\u1ee5ng sai m\u1ee5c \u0111\u00edch. Duy tr\u00ec t\u1ef7 l\u1ec7 gi\u1eefa t\u1ed5ng LP token v\u00e0 t\u1ed5ng t\u00e0i s\u1ea3n trong pool Slippage (Tr\u01b0\u1ee3t gi\u00e1) l\u00e0 g\u00ec? Slippage l\u00e0 s\u1ef1 ch\u00eanh l\u1ec7ch gi\u1eefa gi\u00e1 b\u1ea1n k\u1ef3 v\u1ecdng v\u00e0 gi\u00e1 th\u1ef1c t\u1ebf khi giao d\u1ecbch \u0111\u01b0\u1ee3c th\u1ef1c thi. Khi b\u1ea1n remove liquidity, slippage th\u01b0\u1eddng \u0111\u1ebfn t\u1eeb bi\u1ebfn \u0111\u1ed9ng gi\u00e1 \u0111\u1ed9t ng\u1ed9t trong th\u1eddi gian ch\u1edd giao d\u1ecbch x\u00e1c nh\u1eadn. C\u01a1 ch\u1ebf b\u1ea3o v\u1ec7 slippage ho\u1ea1t \u0111\u1ed9ng nh\u01b0 th\u1ebf n\u00e0o? B\u1ea1n ch\u1ecdn m\u1ee9c slippage tolerance (v\u00ed d\u1ee5: 5%) tr\u00ean Dapp Dapp s\u1ebd t\u00ednh to\u00e1n tr\u01b0\u1edbc min_eth v\u00e0 min_tokens d\u1ef1a theo gi\u00e1 hi\u1ec7n t\u1ea1i v\u00e0 m\u1ee9c slippage \u0111\u00f3 N\u1ebfu l\u01b0\u1ee3ng th\u1ef1c nh\u1eadn th\u1ea5p h\u01a1n m\u1ee9c t\u1ed1i thi\u1ec3u \u2192 giao d\u1ecbch s\u1ebd b\u1ecb revert (th\u1ea5t b\u1ea1i)","title":"What is a liquidity pool?"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/#what-is-a-liquidity-pool","text":"What is a liquidity pool? Uniswap ho\u1ea1t \u0111\u1ed9ng kh\u00f4ng gi\u1ed1ng s\u00e0n t\u1eadp trung (CEX). N\u00f3 kh\u00f4ng c\u00f3 order book. Thay v\u00e0o \u0111\u00f3, n\u00f3 d\u00f9ng m\u1ed9t th\u1ee9 g\u1ecdi l\u00e0 liquidity pool n\u01a1i m\u00e0 ng\u01b0\u1eddi d\u00f9ng ( liquidity provider) \u0111\u1ed5 c\u1ea3 ETH v\u00e0 token v\u00e0o \u0111\u1ec3 ng\u01b0\u1eddi kh\u00e1c swap qua l\u1ea1i.","title":"What is a liquidity pool?"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/#liquidity-pool-la-gi","text":"Liquidity Pool (LP) l\u00e0 m\u1ed9t smart contract ch\u1ee9a hai lo\u1ea1i t\u00e0i s\u1ea3n (vd: ETH v\u00e0 DAI). Ai c\u0169ng c\u00f3 th\u1ec3 swap qua l\u1ea1i gi\u1eefa 2 token n\u00e0y trong pool, kh\u00f4ng c\u1ea7n order book, kh\u00f4ng c\u1ea7n matching engine.","title":"Liquidity Pool l\u00e0 g\u00ec?"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/#lp-token-la-gi","text":"Khi th\u00eam thanh kho\u1ea3n v\u00e0o pool, Uniswap s\u1ebd mint ra LP token \u0111\u1ec3 ch\u1ee9ng nh\u1eadn r\u1eb1ng: \u201cYou now own a piece of the pool, homie.\u201d \ud83d\udcb8 LP token gi\u1ed1ng v\u00e9 x\u00e1c nh\u1eadn quy\u1ec1n s\u1edf h\u1eefu. T\u1ea5t nhi\u00ean LP c\u0169ng l\u00e0 token chu\u1ea9n ERC-20 n\u00ean b\u1ea1n c\u00f3 th\u1ec3 chuy\u1ec3n nh\u01b0\u1ee3ng, b\u00e1n, farm, ho\u1eb7c c\u1ea7m \u0111i th\u1ebf ch\u1ea5p n\u1ebfu protocol n\u00e0o \u0111\u00f3 cho ph\u00e9p. \u203c\ufe0f N\u1ebfu b\u1ea1n chuy\u1ec3n LP token cho ng\u01b0\u1eddi kh\u00e1c, t\u1ee9c l\u00e0 b\u1ea1n \u0111\u00e3 chuy\u1ec3n quy\u1ec1n s\u1edf h\u1eefu pool cho h\u1ecd lu\u00f4n. H\u1ecd c\u00f3 th\u1ec3 r\u00fat ETH v\u00e0 token ra thay b\u1ea1n \ud83e\udee0","title":"LP Token l\u00e0 g\u00ec?"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/#ai-la-liquidity-provider-lp-er","text":"L\u00e0 ng\u01b0\u1eddi ch\u01a1i ch\u1ecbu b\u1ecf ETH v\u00e0 token (c\u00f9ng gi\u00e1 tr\u1ecb) v\u00e0o pool. Khi swapper swap token trong pool \u2192 LP-er nh\u1eadn \u0111\u01b0\u1ee3c ph\u00ed giao d\u1ecbch (0.3%/swap tr\u00ean V1). /** * @notice Remove liquidity, burn LP tokens, and retrieve ETH and tokens proportionally * @param amount The amount of LP tokens to burn * @param min_eth The minimum amount of ETH expected to receive * @param min_tokens The minimum amount of tokens expected to receive * @param deadline The transaction deadline (timestamp) * @return The actual amounts of ETH and tokens withdrawn */ function removeLiquidity( uint256 amount, uint256 min_eth, uint256 min_tokens, uint256 deadline ) external returns (uint256, uint256) { // Validate input parameters require(amount > 0, \"Factory: INVALID_AMOUNT\"); // LP token amount must be greater than 0 require(deadline >= block.timestamp, \"Factory: DEADLINE_EXCEEDED\"); // Ensure the transaction hasn't expired // Get the total current liquidity uint256 totalLiquidity = totalSupply; require(totalLiquidity > 0, \"Factory: EMPTY_LIQUIDITY\"); // Ensure there is liquidity in the pool // Calculate the amount of ETH and tokens to return proportionally uint256 tokenReserve = IERC20(token).balanceOf(address(this)); // Get the current token balance in the contract uint256 ethWithdrawn = (amount * address(this).balance) / totalLiquidity; // Proportional ETH to return uint256 tokenWithdrawn = (amount * tokenReserve) / totalLiquidity; // Proportional token to return // Ensure the returned amounts meet the minimum expected values (to prevent slippage) require(ethWithdrawn >= min_eth, \"Factory: ETH_UNDERFLOW\"); require(tokenWithdrawn >= min_tokens, \"Factory: TOKEN_UNDERFLOW\"); // Burn the user's LP tokens using inherited _burn function _burn(msg.sender, amount); // Safely send ETH back to the user (bool success, ) = msg.sender.call{value: ethWithdrawn}(\"\"); require(success, \"Factory: ETH_TRANSFER_FAILED\"); // Ensure ETH transfer succeeds // Send tokens back to the user require(IERC20(token).transfer(msg.sender, tokenWithdrawn), \"Factory: TOKEN_TRANSFER_FAILED\"); // Emit the RemoveLiquidity event emit RemoveLiquidity(msg.sender, ethWithdrawn, tokenWithdrawn); // Return the actual amounts of ETH and tokens withdrawn return (ethWithdrawn, tokenWithdrawn); }","title":"Ai l\u00e0 Liquidity Provider (LP-er)?"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/#calculation-principle-of-proportional-extraction","text":"Uniswap V1 s\u1eed d\u1ee5ng nguy\u00ean t\u1eafc c\u1ed1t l\u00f5i l\u00e0 ph\u00e2n ph\u1ed1i theo t\u1ef7 l\u1ec7 : C\u00f4ng th\u1ee9c t\u00ednh: * S\u1ed1 ETH c\u00f3 th\u1ec3 r\u00fat = (S\u1ed1 l\u01b0\u1ee3ng LP token ng\u01b0\u1eddi d\u00f9ng n\u1eafm / T\u1ed5ng s\u1ed1 LP token trong pool) \u00d7 T\u1ed5ng l\u01b0\u1ee3ng ETH trong pool S\u1ed1 token c\u00f3 th\u1ec3 r\u00fat = (S\u1ed1 l\u01b0\u1ee3ng LP token ng\u01b0\u1eddi d\u00f9ng n\u1eafm / T\u1ed5ng s\u1ed1 LP token trong pool) \u00d7 T\u1ed5ng l\u01b0\u1ee3ng token trong pool V\u00ed d\u1ee5 c\u1ee5 th\u1ec3: Gi\u1ea3 s\u1eed tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i c\u1ee7a pool l\u00e0: * T\u1ed5ng c\u1ed9ng c\u00f3 1000 LP token * Pool ch\u1ee9a 10 ETH * Pool c\u00f3 20,000 USDC * M\u00ecnh \u0111ang n\u1eafm 100 LP token (t\u1ee9c l\u00e0 chi\u1ebfm 10% t\u1ed5ng pool) V\u1eady m\u00ecnh c\u00f3 th\u1ec3 r\u00fat: * ETH: 100 \u00f7 1000 \u00d7 10 = 1 ETH * USDC: 100 \u00f7 1000 \u00d7 20000 = 2000 USDC C\u01a1 ch\u1ebf n\u00e0y \u0111\u1ea3m b\u1ea3o r\u1eb1ng ng\u01b0\u1eddi cung c\u1ea5p thanh kho\u1ea3n s\u1ebd nh\u1eadn l\u1ea1i l\u01b0\u1ee3ng t\u00e0i s\u1ea3n t\u01b0\u01a1ng \u1ee9ng v\u1edbi t\u1ef7 l\u1ec7 \u0111\u00f3ng g\u00f3p c\u1ee7a m\u00ecnh, bao g\u1ed3m c\u1ea3 ph\u1ea7n ph\u00ed giao d\u1ecbch \u0111\u00e3 t\u00edch l\u0169y trong qu\u00e1 kh\u1ee9.","title":"Calculation principle of proportional extraction"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/#tai-sao-phai-huy-burn-lp-token","text":"Nh\u01b0 \u0111\u1ec1 c\u1eadp \u1edf tr\u00ean, LP token l\u00e0 ch\u1ee9ng ch\u1ec9 th\u1ec3 hi\u1ec7n ph\u1ea7n s\u1edf h\u1eefu c\u1ee7a m\u00ecnh trong pool. Khi r\u00fat thanh kho\u1ea3n, LP token ph\u1ea3i \u0111\u01b0\u1ee3c ti\u00eau h\u1ee7y \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o t\u00ednh to\u00e1n ph\u1ea7n tr\u0103m s\u1edf h\u1eefu c\u00f2n l\u1ea1i c\u1ee7a c\u00e1c LP kh\u00e1c l\u00e0 ch\u00ednh x\u00e1c. Ngo\u00e0i ra ng\u0103n vi\u1ec7c LP token b\u1ecb t\u00e1i s\u1eed d\u1ee5ng sai m\u1ee5c \u0111\u00edch. Duy tr\u00ec t\u1ef7 l\u1ec7 gi\u1eefa t\u1ed5ng LP token v\u00e0 t\u1ed5ng t\u00e0i s\u1ea3n trong pool","title":"\u2753T\u1ea1i sao ph\u1ea3i h\u1ee7y (burn) LP token?"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/#slippage-truot-gia-la-gi","text":"Slippage l\u00e0 s\u1ef1 ch\u00eanh l\u1ec7ch gi\u1eefa gi\u00e1 b\u1ea1n k\u1ef3 v\u1ecdng v\u00e0 gi\u00e1 th\u1ef1c t\u1ebf khi giao d\u1ecbch \u0111\u01b0\u1ee3c th\u1ef1c thi. Khi b\u1ea1n remove liquidity, slippage th\u01b0\u1eddng \u0111\u1ebfn t\u1eeb bi\u1ebfn \u0111\u1ed9ng gi\u00e1 \u0111\u1ed9t ng\u1ed9t trong th\u1eddi gian ch\u1edd giao d\u1ecbch x\u00e1c nh\u1eadn.","title":"Slippage (Tr\u01b0\u1ee3t gi\u00e1) l\u00e0 g\u00ec?"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/#co-che-bao-ve-slippage-hoat-ong-nhu-the-nao","text":"B\u1ea1n ch\u1ecdn m\u1ee9c slippage tolerance (v\u00ed d\u1ee5: 5%) tr\u00ean Dapp Dapp s\u1ebd t\u00ednh to\u00e1n tr\u01b0\u1edbc min_eth v\u00e0 min_tokens d\u1ef1a theo gi\u00e1 hi\u1ec7n t\u1ea1i v\u00e0 m\u1ee9c slippage \u0111\u00f3 N\u1ebfu l\u01b0\u1ee3ng th\u1ef1c nh\u1eadn th\u1ea5p h\u01a1n m\u1ee9c t\u1ed1i thi\u1ec3u \u2192 giao d\u1ecbch s\u1ebd b\u1ecb revert (th\u1ea5t b\u1ea1i)","title":"C\u01a1 ch\u1ebf b\u1ea3o v\u1ec7 slippage ho\u1ea1t \u0111\u1ed9ng nh\u01b0 th\u1ebf n\u00e0o?"},{"location":"collections/EVM%20/What%20Every%20Blockchain%20Developer%20Should%20Know%20About%20the%20Internals%20of%20the%20EVM/Part%201/","text":"What Every Blockchain Developer Should Know About the Internals of the EVM? Original link( b\u00e0i g\u1ed1c c\u1ee7a t\u00e1c gi\u1ea3): https://medium.com/@andrey_obruchkov/what-every-blockchain-developer-should-know-about-evm-internals-part-1-83a93c618257 M\u00ecnh ch\u1ec9 l\u00e0 ng\u01b0\u1eddi d\u00e0nh th\u1eddi gian \u0111\u1ecdc l\u1ea1i, noted nh\u01b0ng g\u00f3c nh\u00ecn c\u1ee7a m\u00ecnh. \u0110\u1ec3 \u1ee7ng h\u1ed9 t\u00e1c gi\u1ea3, c\u00e1c b\u1ea1n v\u1eabn n\u00ean v\u00e0o article \u0111\u1ec3 \u0111\u1ecdc ch\u00ednh nh\u00e9. M\u1ee5c ti\u00eau c\u1ee7a series n\u00e0y \u0111\u1ec3 gi\u00fap m\u1ecdi ng\u01b0\u1eddi kh\u00f4ng ch\u1ec9 h\u1ecdc framework, hay solidity syntax m\u00e0 c\u00f2n l\u00e0 \u0111\u00e0o s\u00e2u v\u1ec1 b\u00ean trong Ethereum Virtual Machine (EVM). Ph\u1ea7n core \u0111\u1ec3 handle c\u1ea3 smart contract.","title":"What Every Blockchain Developer Should Know About the Internals of the EVM?"},{"location":"collections/EVM%20/What%20Every%20Blockchain%20Developer%20Should%20Know%20About%20the%20Internals%20of%20the%20EVM/Part%201/#what-every-blockchain-developer-should-know-about-the-internals-of-the-evm","text":"Original link( b\u00e0i g\u1ed1c c\u1ee7a t\u00e1c gi\u1ea3): https://medium.com/@andrey_obruchkov/what-every-blockchain-developer-should-know-about-evm-internals-part-1-83a93c618257 M\u00ecnh ch\u1ec9 l\u00e0 ng\u01b0\u1eddi d\u00e0nh th\u1eddi gian \u0111\u1ecdc l\u1ea1i, noted nh\u01b0ng g\u00f3c nh\u00ecn c\u1ee7a m\u00ecnh. \u0110\u1ec3 \u1ee7ng h\u1ed9 t\u00e1c gi\u1ea3, c\u00e1c b\u1ea1n v\u1eabn n\u00ean v\u00e0o article \u0111\u1ec3 \u0111\u1ecdc ch\u00ednh nh\u00e9. M\u1ee5c ti\u00eau c\u1ee7a series n\u00e0y \u0111\u1ec3 gi\u00fap m\u1ecdi ng\u01b0\u1eddi kh\u00f4ng ch\u1ec9 h\u1ecdc framework, hay solidity syntax m\u00e0 c\u00f2n l\u00e0 \u0111\u00e0o s\u00e2u v\u1ec1 b\u00ean trong Ethereum Virtual Machine (EVM). Ph\u1ea7n core \u0111\u1ec3 handle c\u1ea3 smart contract.","title":"What Every Blockchain Developer Should Know About the Internals of the EVM?"},{"location":"collections/Layer_0/Polkadot/Blockchain-101-polkadot/","text":"B\u00e0i vi\u1ebft n\u00e0y s\u1ebd gi\u1edbi thi\u1ec7u tri\u1ebft l\u00fd thi\u1ebft k\u1ebf v\u00e0 ki\u1ebfn tr\u00fac c\u1ee7a blockchain Polkadot , \u0111\u1eb7c bi\u1ec7t l\u00e0 c\u00e1ch n\u00f3 h\u1ed7 tr\u1ee3 Rollups . Polkadot ra \u0111\u1eddi \u0111\u1ec3 gi\u1ea3i quy\u1ebft hai v\u1ea5n \u0111\u1ec1 kinh \u0111i\u1ec3n c\u1ee7a blockchain truy\u1ec1n th\u1ed1ng: state fragmentation (ph\u00e2n m\u1ea3nh tr\u1ea1ng th\u00e1i) v\u00e0 interoperability (kh\u1ea3 n\u0103ng t\u01b0\u01a1ng t\u00e1c) , b\u1eb1ng c\u00e1ch tri\u1ec3n khai m\u1ed9t relay chain t\u1ed1i gi\u1ea3n v\u00e0 h\u1ed7 tr\u1ee3 c\u00e1c Rollups c\u00f3 th\u1ec3 t\u00f9y bi\u1ebfn cao (tr\u01b0\u1edbc \u0111\u00e2y g\u1ecdi l\u00e0 Parachains). Logic c\u1ee7a Rollup \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a b\u1edfi runtime , v\u00e0 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng th\u00f4ng qua c\u00e1c c\u00f4ng c\u1ee5 nh\u01b0 Polkadot SDK v\u00e0 FRAME . \u0110\u1eb7c bi\u1ec7t, runtime c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c l\u01b0u tr\u1ef1c ti\u1ebfp on-chain , cho ph\u00e9p n\u00e2ng c\u1ea5p m\u00e0 kh\u00f4ng c\u1ea7n fork m\u1ed9t \u0111i\u1ec1u c\u1ef1c k\u1ef3 \u201cngon\u201d cho nh\u1eefng ai \u0111\u00e3 t\u1eebng kh\u1ed5 s\u1edf v\u00ec hard fork. M\u00ecnh recommend h\u1ebft m\u00ecnh cho b\u1ea5t k\u1ef3 ai mu\u1ed1n h\u1ecdc blockchain b\u00e0i b\u1ea3n n\u00ean b\u1eaft \u0111\u1ea7u h\u1ecdc Polkadot v\u00e0 n\u1ebfu \u0111\u01b0\u1ee3c th\u00ec join ecosystem c\u1ee7a Polkadot lu\u00f4n. Ri\u00eang m\u00ecnh hi\u1ec7n t\u1ea1i th\u00ec kh\u00f4ng.. \ud83e\udd72 T\u1ea5t nhi\u00ean l\u00e0 Polkadot v\u1eabn evolve li\u00ean t\u1ee5c, c\u00f2n m\u00ecnh th\u00ec\u2026 kh\u00f4ng catch up k\u1ecbp. Nh\u1eefng b\u00e0i vi\u1ebft n\u00e0y kh\u00f4ng ch\u1ec9 d\u00e0nh cho b\u1ea1n \u0111\u1ecdc m\u00e0 gi\u00fap ch\u00fang ta c\u00f9ng hi\u1ec3u r\u00f5 blockchain n\u00e0y. Enough intro r\u1ed3i ha =V Rollups Review: Let\u2019s rewind a bit T\u1ee5i m\u00ecnh \u0111\u00e3 n\u00f3i \u0111\u1ebfn kh\u00e1i ni\u1ec7m Rollups hay c\u00f2n g\u1ecdi l\u00e0 layer 2s (L2s). Hi\u1ec3u n\u00f4m na, m\u1ed9t Rollup l\u00e0 m\u1ed9t c\u00f4ng ngh\u1ec7 DLT (distributed ledger technology) m\u00e0 ph\u1ea7n consensus (\u0111\u1ed3ng thu\u1eadn) s\u1ebd \u0111\u01b0\u1ee3c delegate v\u1ec1 cho blockchain cha, hay c\u00f2n g\u1ecdi l\u00e0 L1 (layer 1). Ng\u01b0\u1eddi ta th\u01b0\u1eddng m\u00f4 t\u1ea3 Rollup ki\u1ec3u nh\u01b0: \u201cL2 inherits the security of L1\u201d n\u00f3i c\u00e1ch kh\u00e1c l\u00e0 b\u1ea3o m\u1eadt c\u1ee7a L2 theo L1 kh\u00f4ng bi\u1ebft c\u00f3 ph\u1ea3i ch\u1ec9 do b\u1ea3n th\u00e2n m\u00ecnh kh\u00f4ng nh\u01b0ng m\u1ed7i khi ai \u0111\u00f3 n\u00f3i v\u1ec1 Rollups l\u00e0 auto ngh\u0129 t\u1edbi Ethereum ecosystem . V\u00e0 c\u0169ng d\u1ec5 hi\u1ec3u th\u00f4i, v\u00ec danh s\u00e1ch Rollups tr\u00ean Ethereum r\u1ea5t l\u00e0 nhi\u1ec1u. Nh\u01b0ng s\u1ef1 th\u1eadt l\u00e0 Rollup l\u00e0 m\u1ed9t kh\u00e1i ni\u1ec7m t\u1ed5ng qu\u00e1t h\u01a1n nhi\u1ec1u. Th\u1eadm ch\u00ed Bitcoin c\u0169ng c\u00f3 L2 v\u00ed d\u1ee5 nh\u01b0 Rootstock hay Lightning Network v\u00e0 g\u1ea7n \u0111\u00e2y b\u00ean Solana c\u0169ng b\u1eaft \u0111\u1ea7u l\u1ed9 di\u1ec7n v\u00e0i m\u00f4 h\u00ecnh L2 . V\u1ea5n \u0111\u1ec1 l\u1edbn l\u00e0 c\u00e1c L1s \u0111\u1eddi \u0111\u1ea7u kh\u00f4ng sinh ra \u0111\u1ec3 ch\u01a1i v\u1edbi Rollups. V\u00ec n\u00f3 \u0111\u1ec1u \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf nh\u01b0 m\u1ed9t h\u1ec7 th\u1ed1ng \u0111\u1ed9c l\u1eadp v\u00e0 \u0111i\u1ec1u \u0111\u00f3 ho\u00e0n to\u00e0n h\u1ee3p l\u00fd \u1edf th\u1eddi \u0111i\u1ec3m \u0111\u00f3 \u2013 b\u1edfi concept Rollup c\u00f2n ch\u01b0a t\u1ed3n t\u1ea1i. Nh\u01b0ng \u0111i\u1ec1u n\u00e0y d\u1eabn \u0111\u1ebfn m\u1ed9t lo\u1ea1t h\u1ec7 qu\u1ea3, n\u1ed5i b\u1eadt nh\u1ea5t l\u00e0 State Fragmentation t\u1ee9c l\u00e0 m\u1ed7i L2 s\u1ebd c\u00f3 state ri\u00eang bi\u1ec7t, kh\u00f4ng \u0103n nh\u1eadp g\u00ec nhau. B\u1ea1n c\u00f3 th\u1ec3 h\u00ecnh dung m\u1ed7i Rollup nh\u01b0 m\u1ed9t v\u0169 tr\u1ee5 song song: d\u1eef li\u1ec7u, t\u00e0i s\u1ea3n, ng\u01b0\u1eddi d\u00f9ng\u2026 n\u1eb1m t\u00e1ch bi\u1ec7t ho\u00e0n to\u00e0n. V\u00e0 \u0111i\u1ec1u n\u00e0y k\u00e9o theo v\u1ea5n \u0111\u1ec1 l\u1edbn h\u01a1n Chuy\u1ec3n t\u00e0i s\u1ea3n t\u1eeb L2 n\u00e0y sang L2 kh\u00e1c c\u1ef1c k\u1ef3 kh\u00f3. M\u00e0 Rollups th\u00ec l\u1ea1i \u0111\u01b0\u1ee3c xem nh\u01b0 h\u1ec7 \u0111\u1ed9c l\u1eadp (so v\u1edbi nhau), n\u00ean kh\u00f4ng ai design interoperability ngay t\u1eeb \u0111\u1ea7u c\u1ea3 N\u1ebfu h\u1ed3i x\u01b0a ch\u00fang ta \u0111\u00e3 bi\u1ebft Rollup s\u1ebd quan tr\u1ecdng th\u1ebf n\u00e0y, t\u1ea1i sao kh\u00f4ng x\u00e2y lu\u00f4n m\u1ed9t blockchain sinh ra \u0111\u1ec3 ph\u1ee5c v\u1ee5 Rollups? M\u1ed9t n\u1ec1n t\u1ea3ng m\u00e0 native support Rollups, full interoperability?","title":"Blockchain 101 polkadot"},{"location":"collections/Layer_0/Polkadot/Blockchain-101-polkadot/#rollups-review-lets-rewind-a-bit","text":"T\u1ee5i m\u00ecnh \u0111\u00e3 n\u00f3i \u0111\u1ebfn kh\u00e1i ni\u1ec7m Rollups hay c\u00f2n g\u1ecdi l\u00e0 layer 2s (L2s). Hi\u1ec3u n\u00f4m na, m\u1ed9t Rollup l\u00e0 m\u1ed9t c\u00f4ng ngh\u1ec7 DLT (distributed ledger technology) m\u00e0 ph\u1ea7n consensus (\u0111\u1ed3ng thu\u1eadn) s\u1ebd \u0111\u01b0\u1ee3c delegate v\u1ec1 cho blockchain cha, hay c\u00f2n g\u1ecdi l\u00e0 L1 (layer 1). Ng\u01b0\u1eddi ta th\u01b0\u1eddng m\u00f4 t\u1ea3 Rollup ki\u1ec3u nh\u01b0: \u201cL2 inherits the security of L1\u201d n\u00f3i c\u00e1ch kh\u00e1c l\u00e0 b\u1ea3o m\u1eadt c\u1ee7a L2 theo L1 kh\u00f4ng bi\u1ebft c\u00f3 ph\u1ea3i ch\u1ec9 do b\u1ea3n th\u00e2n m\u00ecnh kh\u00f4ng nh\u01b0ng m\u1ed7i khi ai \u0111\u00f3 n\u00f3i v\u1ec1 Rollups l\u00e0 auto ngh\u0129 t\u1edbi Ethereum ecosystem . V\u00e0 c\u0169ng d\u1ec5 hi\u1ec3u th\u00f4i, v\u00ec danh s\u00e1ch Rollups tr\u00ean Ethereum r\u1ea5t l\u00e0 nhi\u1ec1u. Nh\u01b0ng s\u1ef1 th\u1eadt l\u00e0 Rollup l\u00e0 m\u1ed9t kh\u00e1i ni\u1ec7m t\u1ed5ng qu\u00e1t h\u01a1n nhi\u1ec1u. Th\u1eadm ch\u00ed Bitcoin c\u0169ng c\u00f3 L2 v\u00ed d\u1ee5 nh\u01b0 Rootstock hay Lightning Network v\u00e0 g\u1ea7n \u0111\u00e2y b\u00ean Solana c\u0169ng b\u1eaft \u0111\u1ea7u l\u1ed9 di\u1ec7n v\u00e0i m\u00f4 h\u00ecnh L2 . V\u1ea5n \u0111\u1ec1 l\u1edbn l\u00e0 c\u00e1c L1s \u0111\u1eddi \u0111\u1ea7u kh\u00f4ng sinh ra \u0111\u1ec3 ch\u01a1i v\u1edbi Rollups. V\u00ec n\u00f3 \u0111\u1ec1u \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf nh\u01b0 m\u1ed9t h\u1ec7 th\u1ed1ng \u0111\u1ed9c l\u1eadp v\u00e0 \u0111i\u1ec1u \u0111\u00f3 ho\u00e0n to\u00e0n h\u1ee3p l\u00fd \u1edf th\u1eddi \u0111i\u1ec3m \u0111\u00f3 \u2013 b\u1edfi concept Rollup c\u00f2n ch\u01b0a t\u1ed3n t\u1ea1i. Nh\u01b0ng \u0111i\u1ec1u n\u00e0y d\u1eabn \u0111\u1ebfn m\u1ed9t lo\u1ea1t h\u1ec7 qu\u1ea3, n\u1ed5i b\u1eadt nh\u1ea5t l\u00e0 State Fragmentation t\u1ee9c l\u00e0 m\u1ed7i L2 s\u1ebd c\u00f3 state ri\u00eang bi\u1ec7t, kh\u00f4ng \u0103n nh\u1eadp g\u00ec nhau. B\u1ea1n c\u00f3 th\u1ec3 h\u00ecnh dung m\u1ed7i Rollup nh\u01b0 m\u1ed9t v\u0169 tr\u1ee5 song song: d\u1eef li\u1ec7u, t\u00e0i s\u1ea3n, ng\u01b0\u1eddi d\u00f9ng\u2026 n\u1eb1m t\u00e1ch bi\u1ec7t ho\u00e0n to\u00e0n. V\u00e0 \u0111i\u1ec1u n\u00e0y k\u00e9o theo v\u1ea5n \u0111\u1ec1 l\u1edbn h\u01a1n Chuy\u1ec3n t\u00e0i s\u1ea3n t\u1eeb L2 n\u00e0y sang L2 kh\u00e1c c\u1ef1c k\u1ef3 kh\u00f3. M\u00e0 Rollups th\u00ec l\u1ea1i \u0111\u01b0\u1ee3c xem nh\u01b0 h\u1ec7 \u0111\u1ed9c l\u1eadp (so v\u1edbi nhau), n\u00ean kh\u00f4ng ai design interoperability ngay t\u1eeb \u0111\u1ea7u c\u1ea3 N\u1ebfu h\u1ed3i x\u01b0a ch\u00fang ta \u0111\u00e3 bi\u1ebft Rollup s\u1ebd quan tr\u1ecdng th\u1ebf n\u00e0y, t\u1ea1i sao kh\u00f4ng x\u00e2y lu\u00f4n m\u1ed9t blockchain sinh ra \u0111\u1ec3 ph\u1ee5c v\u1ee5 Rollups? M\u1ed9t n\u1ec1n t\u1ea3ng m\u00e0 native support Rollups, full interoperability?","title":"Rollups Review: Let\u2019s rewind a bit"},{"location":"collections/Layer_1/Avalanche/Avalanche-Warp-Messaging/","text":"","title":"Avalanche Warp Messaging"},{"location":"collections/Layer_1/Avalanche/Explaining%20Subnets%20to%20Grandma/","text":"Intro to Avalanche Subnets: Scalable, Custom Blockchains for Every Builder . Subnets basically cho ph\u00e9p b\u1ea1n t\u1ea1o blockchain ri\u00eang v\u1edbi lu\u1eadt ch\u01a1i t\u1ef1 ch\u1ecdn: d\u00f9ng gas token g\u00ec, bao nhi\u00eau validator, t\u1ed1c \u0111\u1ed9 x\u1eed l\u00fd giao d\u1ecbch nhanh hay ch\u1eadm, v.v 1. Gi\u1edbi thi\u1ec7u v\u1ec1 Avalanche Subnets \u2013 Khi blockchain c\u1ea7n scale th\u1ef1c s\u1ef1 S\u1ed1 li\u1ec7u \u2013 Ph\u1ea7n 1: V\u1ea5n \u0111\u1ec1 v\u1ec1 th\u00f4ng l\u01b0\u1ee3ng (Throughput) \u2022 17 TPS: s\u1ed1 giao d\u1ecbch m\u1ed7i gi\u00e2y m\u00e0 Ethereum x\u1eed l\u00fd \u0111\u01b0\u1ee3c. \u2022 4.500 TPS: t\u1ed1c \u0111\u1ed9 x\u1eed l\u00fd hi\u1ec7n t\u1ea1i c\u1ee7a Avalanche. \u2022 24.000 TPS: kh\u1ea3 n\u0103ng x\u1eed l\u00fd giao d\u1ecbch m\u1ed7i gi\u00e2y c\u1ee7a Visa. So v\u1edbi Ethereum, Avalanche r\u00f5 r\u00e0ng nhanh h\u01a1n v\u00e0 r\u1ebb h\u01a1n \u2013 nh\u01b0ng ch\u01b0a \u0111\u1ee7. \u0110\u1ec3 \u0111\u00e1p \u1ee9ng nhu c\u1ea7u th\u1ef1c t\u1ebf nh\u01b0 thanh to\u00e1n \u1edf quy m\u00f4 l\u1edbn (Visa x\u1eed l\u00fd t\u1edbi 24.000 TPS) ho\u1eb7c game c\u00f3 h\u00e0ng tri\u1ec7u user m\u1ed7i ng\u00e0y (nh\u01b0 Call of Duty v\u1edbi 1-3 tri\u1ec7u DAUs), th\u00ec con s\u1ed1 4.500 TPS c\u1ee7a Avalanche v\u1eabn l\u00e0 ch\u01b0a th\u1ea5m. S\u1ed1 li\u1ec7u \u2013 Ph\u1ea7n 2: V\u1ea5n \u0111\u1ec1 v\u1ec1 n\u01a1i \u0111\u1ec3 ph\u00e1t tri\u1ec3n (Dev environment) \u2022 10+: s\u1ed1 l\u01b0\u1ee3ng bridges \u0111ang k\u1ebft n\u1ed1i c\u00e1c chain kh\u00e1c \u0111\u1ebfn Avalanche. \u2022 35: s\u1ed1 l\u01b0\u1ee3ng blockchain hi\u1ec7n c\u00f3 tr\u00ean $50 tri\u1ec7u TVL (Total Value Locked). \u2022 131: s\u1ed1 l\u01b0\u1ee3ng dApp c\u00f3 h\u01a1n $50 tri\u1ec7u \u0111\u01b0\u1ee3c kho\u00e1 trong protocol c\u1ee7a h\u1ecd. Devs c\u1ea7n th\u00eam n\u01a1i \u0111\u1ec3 build, kh\u00f4ng ch\u1ec9 Ethereum hay Avalanche Crypto gi\u1edd \u0111\u00e3 \u0111a chu\u1ed7i (multi-chain) r\u00f5 r\u00e0ng, kh\u00f4ng c\u00f2n l\u00e0 l\u00fd thuy\u1ebft n\u1eefa. C\u00f3 h\u01a1n 35 chain v\u00e0 h\u01a1n 131 dApp v\u01b0\u1ee3t m\u1ed1c $50 tri\u1ec7u TVL, t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi m\u1ed9t th\u1ecb tr\u01b0\u1eddng h\u01a1n $50 t\u1ef7 USD. C\u00e1c dApp \u0111ang li\u00ean t\u1ee5c m\u1edf r\u1ed9ng sang c\u00e1c h\u1ec7 sinh th\u00e1i m\u1edbi, n\u01a1i c\u00f3 ph\u00ed gas r\u1ebb, giao d\u1ecbch nhanh, v\u00e0 m\u00f4i tr\u01b0\u1eddng linh ho\u1ea1t \u0111\u1ec3 dev tha h\u1ed3 s\u00e1ng t\u1ea1o. N\u1ebfu blockchain mu\u1ed1n ti\u1ebfn t\u1edbi \u0111\u1ea1i ch\u00fang (mainstream), th\u00ec vi\u1ec7c cung c\u1ea5p nhi\u1ec1u \u201c\u0111\u1ea5t di\u1ec5n\u201d h\u01a1n cho developer l\u00e0 \u0111i\u1ec1u b\u1eaft bu\u1ed9c. N\u1ebfu crypto mu\u1ed1n scale th\u1eadt s\u1ef1, c\u00e1c blockchain ph\u1ea3i scale. V\u00e0 n\u1ebfu mu\u1ed1n devs ti\u1ebfp t\u1ee5c x\u00e2y d\u1ef1ng nh\u1eefng \u1ee9ng d\u1ee5ng gas r\u1ebb, giao d\u1ecbch m\u01b0\u1ee3t cho ng\u01b0\u1eddi d\u00f9ng \u2013 th\u00ec h\u1ea1 t\u1ea7ng c\u1ea7n ph\u1ea3i \u0111\u00e1p \u1ee9ng \u0111\u01b0\u1ee3c. Avalanche hi\u1ec3u \u0111i\u1ec1u \u0111\u00f3. V\u00e0 \u0111\u00f3 l\u00e0 l\u00fd do Avalanche t\u1ea1o ra Subnets gi\u1ea3i ph\u00e1p m\u1edf r\u1ed9ng t\u00edch h\u1ee3p ngay trong l\u00f5i c\u1ee7a h\u1ea1 t\u1ea7ng. Subnets ch\u00ednh l\u00e0 l\u1eddi gi\u1ea3i k\u1ebft h\u1ee3p c\u1ea3 K\u1ebft lu\u1eadn #1 (c\u1ea7n throughput cao h\u01a1n) v\u00e0 K\u1ebft lu\u1eadn #2 (c\u1ea7n m\u00f4i tr\u01b0\u1eddng ph\u00e1t tri\u1ec3n m\u1edbi cho dev) th\u00e0nh m\u1ed9t c\u01a1 ch\u1ebf duy nh\u1ea5t v\u00e0 \u0111\u1eb7c bi\u1ec7t l\u00e0 c\u1ef1c k\u1ef3 d\u1ec5 kh\u1edfi t\u1ea1o. 2. AVALANCHE IS A SUBNET, SUBNETS ARE AVALANCHE Okay, gi\u1edd n\u00f3i s\u01a1 v\u1ec1 Avalanche tr\u01b0\u1edbc. Avalanche l\u00e0 m\u1ed9t m\u1ea1ng blockchain t\u01b0\u01a1ng th\u00edch v\u1edbi EVM t\u1ee9c l\u00e0 n\u00f3 ho\u1ea1t \u0111\u1ed9ng g\u1ea7n nh\u01b0 y chang Ethereum, nh\u01b0ng n\u00f3 kh\u00f4ng ch\u1ec9 l\u00e0 m\u1ed9t chain duy nh\u1ea5t, m\u00e0 \u0111\u01b0\u1ee3c c\u1ea5u th\u00e0nh t\u1eeb ba blockchain ri\u00eang bi\u1ec7t. C-Chain (Contract Chain): \u0110\u00e2y l\u00e0 n\u01a1i d\u00e0nh cho developer tri\u1ec3n khai smart contract b\u1eb1ng Solidity \u2013 ng\u00f4n ng\u1eef quen thu\u1ed9c b\u00ean Ethereum. M\u1ecdi dApp, NFT, DeFi protocol\u2026 \u0111\u1ec1u \u0111\u01b0\u1ee3c build tr\u00ean C-Chain. \ud83d\udee0 P-Chain (Platform Chain): P-Chain l\u00e0 n\u01a1i x\u1eed l\u00fd staking v\u00e0 consensus (theo c\u01a1 ch\u1ebf Proof of Stake), v\u00e0 \u0111\u1eb7c bi\u1ec7t: P-Chain ch\u00ednh l\u00e0 n\u01a1i t\u1ea1o ra v\u00e0 qu\u1ea3n l\u00fd Subnets X-Chain (Exchange Chain): X-Chain \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 chuy\u1ec3n v\u00e0 trao \u0111\u1ed5i c\u00e1c token native c\u1ee7a Avalanche Nh\u00ecn t\u1ed5ng th\u1ec3 th\u00ec c\u1ea5u tr\u00fac Avalanche s\u1ebd nh\u01b0 v\u1ea7y: S\u1ef1 k\u1ebft h\u1ee3p gi\u1eefa C-Chain, P-Chain v\u00e0 X-Chain t\u1ea1o n\u00ean \u201cPrimary Network\u201d Khi g\u1ed9p l\u1ea1i, ba chain C, P v\u00e0 X t\u1ea1o th\u00e0nh c\u00e1i m\u00e0 ta g\u1ecdi l\u00e0 Primary Network \u2013 ch\u00ednh l\u00e0 h\u00ecnh \u1ea3nh m\u00e0 nhi\u1ec1u ng\u01b0\u1eddi ngh\u0129 \u0111\u1ebfn khi nh\u1eafc \u0111\u1ebfn Avalanche. C\u1ea5u tr\u00fac ba l\u1edbp n\u00e0y gi\u00fap gi\u1ea3m t\u1eafc ngh\u1ebdn tr\u00ean C-Chain (n\u01a1i smart contract ho\u1ea1t \u0111\u1ed9ng ch\u00ednh) v\u00e0 g\u00f3p ph\u1ea7n gi\u1eef ph\u00ed gas c\u1ee7a Avalanche lu\u00f4n th\u1ea5p h\u01a1n nhi\u1ec1u so v\u1edbi Ethereum. \u0110i\u1ec1u n\u00e0y r\u1ea5t t\u1ed1t, nh\u01b0ng ch\u01b0a \u0111\u1ee7 v\u00e0 \u0111\u00e2y l\u00e0 l\u00fac Subnets xu\u1ea5t hi\u1ec7n M\u1ed9t Subnet trong h\u1ec7 Avalanche l\u00e0 m\u1ed9t m\u1ea1ng sovereign t\u1ee9c l\u00e0 \u0111\u1ed9c l\u1eadp, t\u1ef1 ch\u1ee7 v\u00e0 t\u1ef1 qu\u1ea3n . M\u1ed7i Subnet c\u00f3 th\u1ec3 \u0111\u1ecbnh ngh\u0129a lu\u1eadt ch\u01a1i ri\u00eang c\u1ee7a n\u00f3 t\u1eeb vi\u1ec7c d\u00f9ng gas token n\u00e0o, ai \u0111\u01b0\u1ee3c l\u00e0m validator, s\u1ed1 l\u01b0\u1ee3ng TPS t\u1ed1i \u0111a, t\u1edbi c\u1ea3 c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn (consensus mechanism). Th\u1ee9 duy nh\u1ea5t b\u1eaft bu\u1ed9c \u0111\u1ec3 m\u1ed9t Subnet \u0111\u01b0\u1ee3c xem l\u00e0 \u201cSubnet thu\u1ed9c Avalanche\u201d l\u00e0 C\u00e1c validator c\u1ee7a n\u00f3 ph\u1ea3i stake tr\u00ean Primary Network (th\u00f4ng qua P-Chain). N\u1ebfu b\u1ea1n c\u00f2n r\u1ed1i th\u00ec c\u1ee9 h\u00ecnh dung Subnets l\u00e0 h\u00ecnh ch\u1eef nh\u1eadt. Primary Network l\u00e0 h\u00ecnh vu\u00f4ng m\u1ed9t tr\u01b0\u1eddng h\u1ee3p \u0111\u1eb7c bi\u1ec7t c\u1ee7a h\u00ecnh ch\u1eef nh\u1eadt. T\u1ee9c l\u00e0 Primary Network ch\u1ec9 l\u00e0 m\u1ed9t lo\u1ea1i Subnet c\u1ee5 th\u1ec3, v\u1edbi b\u1ed9 rule ri\u00eang c\u1ee7a n\u00f3. Nh\u01b0ng c\u00e1c Subnet kh\u00e1c th\u00ec c\u00f3 th\u1ec3 \u201ck\u00e9o gi\u00e3n\u201d \u2013 gi\u1ed1ng nh\u01b0 nh\u1eefng h\u00ecnh ch\u1eef nh\u1eadt c\u00f3 chi\u1ec1u d\u00e0i, chi\u1ec1u r\u1ed9ng kh\u00e1c nhau v\u1eady. M\u1ed7i Subnet c\u00f3 th\u1ec3 t\u1ef1 quy\u1ebft \u0111\u1ecbnh gas token l\u00e0 g\u00ec, staking y\u00eau c\u1ea7u bao nhi\u00eau, consensus c\u00f3 c\u1ea7n permission hay kh\u00f4ng. Avalanche k\u1ef3 v\u1ecdng r\u1eb1ng ch\u00ednh s\u1ef1 t\u1ef1 do n\u00e0y s\u1ebd gi\u00fap developer x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c nh\u1eefng tr\u1ea3i nghi\u1ec7m t\u1ed1t h\u01a1n, \u0111\u1ee7 s\u1ee9c ph\u1ee5c v\u1ee5 h\u00e0ng tri\u1ec7u ng\u01b0\u1eddi d\u00f9ng nh\u01b0 c\u00e1c h\u1ec7 th\u1ed1ng Web2 hi\u1ec7n nay. Kh\u1ea3 n\u0103ng c\u1ee7a Subnet Avalanche x\u00e2y d\u1ef1ng to\u00e0n b\u1ed9 ki\u1ebfn tr\u00fac c\u1ee7a m\u00ecnh d\u1ef1a tr\u00ean Subnets, v\u00e0 ch\u00ednh Subnets l\u00e0 th\u1ee9 \u0111\u00e3 gi\u00fap Avalanche \u0111\u1ea1t \u0111\u01b0\u1ee3c t\u1ed1c \u0111\u1ed9 x\u1eed l\u00fd l\u00ean t\u1edbi 4.500 giao d\u1ecbch m\u1ed7i gi\u00e2y (TPS) v\u01b0\u1ee3t tr\u1ed9i so v\u1edbi Ethereum ch\u1ec9 c\u00f3 kho\u1ea3ng 17 TPS. . Trong l\u00fd thuy\u1ebft (v\u00e0 c\u1ea3 th\u1ef1c t\u1ebf v\u1edbi \u0111\u1ee7 \u0111i\u1ec1u ki\u1ec7n), m\u1ed9t Subnet ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 \u0111\u1ea1t 10.000 TPS n\u1ebfu \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf chu\u1ea9n, m\u00e0 kh\u00f4ng c\u1ea7n tu\u00e2n theo c\u00e1c lu\u1eadt l\u1ec7 c\u1ee9ng nh\u1eafc c\u1ee7a Primary Network. N\u00f3i \u0111\u01a1n gi\u1ea3n: Subnet gi\u1ed1ng nh\u01b0 m\u1ed9t phi\u00ean b\u1ea3n Avalanche ri\u00eang bi\u1ec7t, \u0111\u01b0\u1ee3c dev s\u1eed d\u1ee5ng \u0111\u1ec3 t\u1ea1o n\u00ean tr\u1ea3i nghi\u1ec7m blockchain ri\u00eang. Trong \u0111\u00f3, Subnet \u0111\u01b0\u1ee3c to\u00e0n quy\u1ec1n: \u2022 \u0111\u1ecbnh ngh\u0129a logic x\u1eed l\u00fd giao d\u1ecbch (execution logic), \u2022 ch\u1ecdn m\u00f4 h\u00ecnh ph\u00ed (fee regime), \u2022 qu\u1ea3n l\u00fd tr\u1ea1ng th\u00e1i (state), \u2022 ki\u1ec3m so\u00e1t h\u1ea1 t\u1ea7ng m\u1ea1ng (networking), \u2022 v\u00e0 c\u1ea3 thi\u1ebft l\u1eadp c\u01a1 ch\u1ebf b\u1ea3o m\u1eadt (security) nh\u01b0 m\u1ed9t blockchain \u0111\u1ed9c l\u1eadp ho\u00e0n to\u00e0n. T\u1ea5t nhi\u00ean Subnet v\u1eabn c\u00f3 m\u1ed9t m\u1ed1i li\u00ean k\u1ebft duy nh\u1ea5t v\u1edbi h\u1ec7 sinh th\u00e1i Avalanche \u0111\u00f3 l\u00e0 c\u00e1c validator c\u1ee7a Subnet ph\u1ea3i \u0111\u1ed3ng th\u1eddi x\u00e1c th\u1ef1c (validate) c\u1ea3 tr\u00ean Primary Network. . Khi nhi\u1ec1u dev mu\u1ed1n spin-up Subnet, h\u1ecd s\u1ebd tri\u1ec3n khai validator ri\u00eang \u0111\u1ec3 h\u1ed7 tr\u1ee3 Subnet c\u1ee7a m\u00ecnh (v\u00ec \u0111\u01b0\u1ee3c h\u01b0\u1edfng l\u1ee3i t\u1eeb token model ri\u00eang), \u0111i\u1ec1u n\u00e0y k\u00e9o th\u00eam validator m\u1edbi v\u1ec1 cho Primary Network t\u0103ng t\u00ednh ph\u00e2n t\u00e1n, \u0111\u1ed9 b\u1ea3o m\u1eadt to\u00e0n m\u1ea1ng. \u0110i\u1ec1u n\u00e0y c\u00f3 l\u1ee3i c\u1ea3 ba ph\u00eda. V\u00ec validator c\u1ee7a Subnet bu\u1ed9c ph\u1ea3i \u0111\u1ee7 n\u0103ng l\u1ef1c \u0111\u1ec3 x\u00e1c th\u1ef1c tr\u00ean Primary Network gi\u00fap Subnet c\u00f3 h\u1ec7 b\u1ea3o m\u1eadt \u0111\u00e1ng tin c\u1eady ngay t\u1eeb \u0111\u1ea7u. Th\u1ee9 hai l\u00e0 Khi nhi\u1ec1u dev mu\u1ed1n spin-up Subnet, h\u1ecd s\u1ebd tri\u1ec3n khai validator ri\u00eang \u0111\u1ec3 h\u1ed7 tr\u1ee3 Subnet c\u1ee7a m\u00ecnh (v\u00ec \u0111\u01b0\u1ee3c h\u01b0\u1edfng l\u1ee3i t\u1eeb token model ri\u00eang), \u0111i\u1ec1u n\u00e0y k\u00e9o th\u00eam validator m\u1edbi v\u1ec1 cho Primary Network. T\u1eb7ng t\u00ednh phi t\u1eadp trung cho to\u00e0n m\u1ea1ng. V\u00e0 Validator c\u00f3 th\u1ec3 nh\u1eadn th\u00eam reward b\u1eb1ng c\u00e1ch tham gia b\u1ea3o m\u1eadt cho c\u00e1c Subnets m\u1edbi (th\u01b0\u1eddng Subnet s\u1ebd ph\u00e1t token reward ri\u00eang theo c\u01a1 ch\u1ebf Proof-of-Stake \u0111\u1ec3 thu h\u00fat validator) Subnets trong h\u1ec7 sinh th\u00e1i Avalanche kh\u00e1 gi\u1ed1ng v\u1edbi Rollups trong Ethereum. Tuy nhi\u00ean, c\u00f3 m\u1ed9t \u0111i\u1ec3m kh\u00e1c bi\u1ec7t l\u00e0 Subnets kh\u00f4ng chia s\u1ebb execution (x\u1eed l\u00fd giao d\u1ecbch), storage (l\u01b0u tr\u1eef d\u1eef li\u1ec7u) hay networking (m\u1ea1ng l\u01b0\u1edbi) v\u1edbi Primary Network ho\u1eb7c b\u1ea5t k\u1ef3 Subnet n\u00e0o kh\u00e1c. Trong khi \u0111\u00f3, Rollups lu\u00f4n ph\u1ea3i \u0111\u1ed5 d\u1eef li\u1ec7u v\u1ec1 Ethereum mainnet \u0111\u1ec3 \u0111\u01b0\u1ee3c b\u1ea3o m\u1eadt v\u00e0 x\u00e1c nh\u1eadn cu\u1ed1i c\u00f9ng (finality). Ch\u00ednh \u0111i\u1ec1u n\u00e0y t\u1ea1o ra gi\u1edbi h\u1ea1n v\u1ec1 kh\u1ea3 n\u0103ng t\u01b0\u01a1ng t\u00e1c (interoperability) gi\u1eefa c\u00e1c Subnet nh\u01b0ng Avalanche Warp Messaging (AWM) \u0111ang \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n v\u00e0 h\u1ee9a h\u1eb9n s\u1ebd gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n n\u00e0y trong t\u01b0\u01a1ng lai g\u1ea7n. \u0110\u1ec3 gi\u1ea3i th\u00edch d\u1ec5 hi\u1ec3u h\u01a1n. Th\u00ec gi\u1edd t\u01b0\u1edfng t\u01b0\u1ee3ng Avalanche l\u00e0 ph\u1ea7n m\u1ec1m Microsoft Word. C\u00f2n Subnets th\u00ec gi\u1ed1ng nh\u01b0 c\u00e1c m\u1eabu template c\u00f3 s\u1eb5n trong Word v\u1eady. Thay v\u00ec b\u1eaft \u0111\u1ea7u t\u1eeb trang tr\u1eafng, ng\u01b0\u1eddi d\u00f9ng ch\u1ec9 c\u1ea7n ch\u1ecdn m\u1eabu \u2192 r\u1ed3i d\u1ec5 d\u00e0ng tu\u1ef3 ch\u1ec9nh theo m\u1ee5c \u0111\u00edch ri\u00eang. Vi\u1ec7c \u0111\u01a1n gi\u1ea3n ho\u00e1 qu\u00e1 tr\u00ecnh t\u1ea1o blockchain l\u00e0 c\u1ef1c k\u1ef3 quan tr\u1ecdng. SUBNET V\u00c0 NH\u1eeeNG TH\u1ee8 \u0110ANG \u0110\u01af\u1ee2C X\u00c2Y D\u1ef0NG M\u1ed9t Subnet l\u00e0 m\u00f4i tr\u01b0\u1eddng c\u1ef1c k\u1ef3 l\u00fd t\u01b0\u1edfng cho c\u00e1c d\u1ef1 \u00e1n mu\u1ed1n ki\u1ec3m so\u00e1t m\u1ed9t trong c\u00e1c y\u1ebfu t\u1ed1 sau \u0111\u00e2y: 1. Tokenomics: ch\u1ecdn xem ng\u01b0\u1eddi d\u00f9ng s\u1ebd d\u00f9ng token n\u00e0o \u0111\u1ec3 tr\u1ea3 gas 2. Block Space: ki\u1ec3m so\u00e1t m\u1ee9c TPS cao h\u01a1n ho\u1eb7c th\u1ea5p h\u01a1n Primary Network 3. Access: t\u1ea1o c\u00e1c h\u1ec7 th\u1ed1ng whitelist ho\u1eb7c permissioned \u0111\u1ec3 ai \u0111\u01b0\u1ee3c ph\u00e9p deploy smart contract 4. Execution (Virtual Machine): ch\u1ec9nh c\u00e1c th\u00f4ng s\u1ed1 x\u1eed l\u00fd giao d\u1ecbch, t\u1ee9c l\u00e0 vi\u1ebft l\u1ea1i lu\u1eadt ch\u01a1i c\u1ee7a blockchain M\u1ed9t v\u00e0i \u0111i\u1ec3m nh\u1ea5n n\u1ed5i b\u1eadt t\u1eeb Subnets: DeFi Kingdoms \u2013 ban \u0111\u1ea7u \u0111\u01b0\u1ee3c build tr\u00ean Harmony, nh\u01b0ng sau \u0111\u00f3 d\u1ef1 \u00e1n game Web3 n\u00e0y \u0111\u00e3 launch m\u1ed9t Subnet ri\u00eang tr\u00ean Avalanche t\u00ean l\u00e0 Crystalvale, \u0111\u1ec3 t\u1ed1i \u01b0u ho\u00e1 tr\u1ea3i nghi\u1ec7m ng\u01b0\u1eddi ch\u01a1i. Nh\u1edd v\u1eady, ng\u01b0\u1eddi d\u00f9ng \u0111\u01b0\u1ee3c ch\u01a1i game tr\u00ean m\u1ed9t blockchain \u0111\u01b0\u1ee3c t\u00f9y ch\u1ec9nh ri\u00eang cho gameplay. B\u1ea1n c\u00f3 th\u1ec3 xem qua JEWEL Contract Address (Avalanche) : 0x4f60a160d8c2dddaafe16fcc57566db84d674bd6 Crabada: Ng\u01b0\u1eddi ch\u01a1i Crabada kh\u00f4ng c\u1ea7n lo ph\u00ed gas cao hay ph\u1ea3i ch\u1edd giao d\u1ecbch confirm ch\u1eadm ch\u1ea1p tr\u00ean Primary Network Dexalot \u2013 m\u1ed9t s\u00e0n giao d\u1ecbch phi t\u1eadp trung (DEX) \u0111\u01b0\u1ee3c tri\u1ec3n khai d\u01b0\u1edbi d\u1ea1ng Subnet, cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng giao d\u1ecbch nhanh v\u1edbi ph\u00ed th\u1ea5p. NH\u01afNG M\u00c0\u2026 Lu\u00f4n lu\u00f4n c\u00f3 m\u1ed9t ch\u1eef \u201cnh\u01b0ng\u201d trong crypto. C\u00e1c Subnet kh\u00f4ng th\u1ec3 giao ti\u1ebfp v\u1edbi nhau m\u1ed9t c\u00e1ch native. T\u1ee9c l\u00e0, mu\u1ed1n chuy\u1ec3n t\u00e0i s\u1ea3n/liquidity gi\u1eefa c\u00e1c Subnet th\u00ec hi\u1ec7n t\u1ea1i v\u1eabn ph\u1ea3i d\u00f9ng bridge. \u0110i\u1ec1u n\u00e0y t\u1ea1o ra ma s\u00e1t v\u00e0 r\u1ee7i ro.( \u0111i\u1ec1u n\u00e0y s\u1ebd s\u1edbm thay \u0111\u1ed5i nh\u1edd v\u00e0o Avalanche Warp Messaging \u2013 AWM ) R\u1ee7i ro t\u1eadp trung l\u00e0 c\u00f3 th\u1eadt, \u0111\u1eb7c bi\u1ec7t khi build c\u00e1c Subnet theo ki\u1ec3u permissioned (t\u1ee9c l\u00e0 c\u00f3 whitelist, gi\u1edbi h\u1ea1n ai \u0111\u01b0\u1ee3c v\u00e0o). Subnet ph\u00e1t tri\u1ec3n kh\u00f4ng \u0111\u1ed3ng ngh\u0129a l\u00e0 h\u1ec7 Avalanche c\u0169ng ph\u00e1t tri\u1ec3n. V\u00ed d\u1ee5: m\u1ed9t Subnet c\u1ef1c th\u00e0nh c\u00f4ng v\u1eabn c\u00f3 th\u1ec3 \u201ct\u00e1ch bi\u1ec7t\u201d v\u1edbi h\u1ec7 sinh th\u00e1i Avalanche g\u1ed1c n\u1ebfu n\u00f3 kh\u00f4ng t\u00e1i \u0111\u1ea7u t\u01b0, kh\u00f4ng li\u00ean k\u1ebft tokenomics, hay kh\u00f4ng mang ng\u01b0\u1eddi d\u00f9ng v\u1ec1 cho m\u1ea1ng ch\u00ednh. Subnets \u0111ang ph\u1ea3i c\u1ea1nh tranh tr\u1ef1c ti\u1ebfp v\u1edbi c\u00e1c h\u1ec7 dAppchain kh\u00e1c nh\u01b0 Cosmos, Polkadot, hay c\u00e1c m\u00f4 h\u00ecnh RollApps (d\u1ea1ng app-specific rollup). \u0110\u00f3 l\u00e0 to\u00e0n b\u1ed9 l\u00fd thuy\u1ebft nhanh v\u1ec1 subnets . C\u00f3 th\u1ec3 ch\u00fang ta c\u0169ng s\u1ebd t\u00ecm hi\u1ec3u th\u00eam \u0111\u1ec3 so s\u00e1nh Subnets v\u1edbi: * Cosmos Appchains * Polkadot Parachains * Optimistic Superchains Nh\u01b0ng gi\u1eddi th\u00ec c\u1ea3m \u01a1n b\u1ea1n \u0111\u00e3 \u0111\u1ecdc \u0111\u1ebfn \u0111\u00e2y. \u0110\u00e2y l\u00e0 the Orginal link: https://lifi.substack.com/p/explaining-subnets-to-grandma","title":"Intro to Avalanche Subnets: Scalable, Custom Blockchains for Every Builder"},{"location":"collections/Layer_1/Avalanche/Explaining%20Subnets%20to%20Grandma/#intro-to-avalanche-subnets-scalable-custom-blockchains-for-every-builder","text":". Subnets basically cho ph\u00e9p b\u1ea1n t\u1ea1o blockchain ri\u00eang v\u1edbi lu\u1eadt ch\u01a1i t\u1ef1 ch\u1ecdn: d\u00f9ng gas token g\u00ec, bao nhi\u00eau validator, t\u1ed1c \u0111\u1ed9 x\u1eed l\u00fd giao d\u1ecbch nhanh hay ch\u1eadm, v.v","title":"Intro to Avalanche Subnets: Scalable, Custom Blockchains for Every Builder"},{"location":"collections/Layer_1/Avalanche/Explaining%20Subnets%20to%20Grandma/#1-gioi-thieu-ve-avalanche-subnets-khi-blockchain-can-scale-thuc-su","text":"S\u1ed1 li\u1ec7u \u2013 Ph\u1ea7n 1: V\u1ea5n \u0111\u1ec1 v\u1ec1 th\u00f4ng l\u01b0\u1ee3ng (Throughput) \u2022 17 TPS: s\u1ed1 giao d\u1ecbch m\u1ed7i gi\u00e2y m\u00e0 Ethereum x\u1eed l\u00fd \u0111\u01b0\u1ee3c. \u2022 4.500 TPS: t\u1ed1c \u0111\u1ed9 x\u1eed l\u00fd hi\u1ec7n t\u1ea1i c\u1ee7a Avalanche. \u2022 24.000 TPS: kh\u1ea3 n\u0103ng x\u1eed l\u00fd giao d\u1ecbch m\u1ed7i gi\u00e2y c\u1ee7a Visa. So v\u1edbi Ethereum, Avalanche r\u00f5 r\u00e0ng nhanh h\u01a1n v\u00e0 r\u1ebb h\u01a1n \u2013 nh\u01b0ng ch\u01b0a \u0111\u1ee7. \u0110\u1ec3 \u0111\u00e1p \u1ee9ng nhu c\u1ea7u th\u1ef1c t\u1ebf nh\u01b0 thanh to\u00e1n \u1edf quy m\u00f4 l\u1edbn (Visa x\u1eed l\u00fd t\u1edbi 24.000 TPS) ho\u1eb7c game c\u00f3 h\u00e0ng tri\u1ec7u user m\u1ed7i ng\u00e0y (nh\u01b0 Call of Duty v\u1edbi 1-3 tri\u1ec7u DAUs), th\u00ec con s\u1ed1 4.500 TPS c\u1ee7a Avalanche v\u1eabn l\u00e0 ch\u01b0a th\u1ea5m. S\u1ed1 li\u1ec7u \u2013 Ph\u1ea7n 2: V\u1ea5n \u0111\u1ec1 v\u1ec1 n\u01a1i \u0111\u1ec3 ph\u00e1t tri\u1ec3n (Dev environment) \u2022 10+: s\u1ed1 l\u01b0\u1ee3ng bridges \u0111ang k\u1ebft n\u1ed1i c\u00e1c chain kh\u00e1c \u0111\u1ebfn Avalanche. \u2022 35: s\u1ed1 l\u01b0\u1ee3ng blockchain hi\u1ec7n c\u00f3 tr\u00ean $50 tri\u1ec7u TVL (Total Value Locked). \u2022 131: s\u1ed1 l\u01b0\u1ee3ng dApp c\u00f3 h\u01a1n $50 tri\u1ec7u \u0111\u01b0\u1ee3c kho\u00e1 trong protocol c\u1ee7a h\u1ecd. Devs c\u1ea7n th\u00eam n\u01a1i \u0111\u1ec3 build, kh\u00f4ng ch\u1ec9 Ethereum hay Avalanche Crypto gi\u1edd \u0111\u00e3 \u0111a chu\u1ed7i (multi-chain) r\u00f5 r\u00e0ng, kh\u00f4ng c\u00f2n l\u00e0 l\u00fd thuy\u1ebft n\u1eefa. C\u00f3 h\u01a1n 35 chain v\u00e0 h\u01a1n 131 dApp v\u01b0\u1ee3t m\u1ed1c $50 tri\u1ec7u TVL, t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi m\u1ed9t th\u1ecb tr\u01b0\u1eddng h\u01a1n $50 t\u1ef7 USD. C\u00e1c dApp \u0111ang li\u00ean t\u1ee5c m\u1edf r\u1ed9ng sang c\u00e1c h\u1ec7 sinh th\u00e1i m\u1edbi, n\u01a1i c\u00f3 ph\u00ed gas r\u1ebb, giao d\u1ecbch nhanh, v\u00e0 m\u00f4i tr\u01b0\u1eddng linh ho\u1ea1t \u0111\u1ec3 dev tha h\u1ed3 s\u00e1ng t\u1ea1o. N\u1ebfu blockchain mu\u1ed1n ti\u1ebfn t\u1edbi \u0111\u1ea1i ch\u00fang (mainstream), th\u00ec vi\u1ec7c cung c\u1ea5p nhi\u1ec1u \u201c\u0111\u1ea5t di\u1ec5n\u201d h\u01a1n cho developer l\u00e0 \u0111i\u1ec1u b\u1eaft bu\u1ed9c. N\u1ebfu crypto mu\u1ed1n scale th\u1eadt s\u1ef1, c\u00e1c blockchain ph\u1ea3i scale. V\u00e0 n\u1ebfu mu\u1ed1n devs ti\u1ebfp t\u1ee5c x\u00e2y d\u1ef1ng nh\u1eefng \u1ee9ng d\u1ee5ng gas r\u1ebb, giao d\u1ecbch m\u01b0\u1ee3t cho ng\u01b0\u1eddi d\u00f9ng \u2013 th\u00ec h\u1ea1 t\u1ea7ng c\u1ea7n ph\u1ea3i \u0111\u00e1p \u1ee9ng \u0111\u01b0\u1ee3c. Avalanche hi\u1ec3u \u0111i\u1ec1u \u0111\u00f3. V\u00e0 \u0111\u00f3 l\u00e0 l\u00fd do Avalanche t\u1ea1o ra Subnets gi\u1ea3i ph\u00e1p m\u1edf r\u1ed9ng t\u00edch h\u1ee3p ngay trong l\u00f5i c\u1ee7a h\u1ea1 t\u1ea7ng. Subnets ch\u00ednh l\u00e0 l\u1eddi gi\u1ea3i k\u1ebft h\u1ee3p c\u1ea3 K\u1ebft lu\u1eadn #1 (c\u1ea7n throughput cao h\u01a1n) v\u00e0 K\u1ebft lu\u1eadn #2 (c\u1ea7n m\u00f4i tr\u01b0\u1eddng ph\u00e1t tri\u1ec3n m\u1edbi cho dev) th\u00e0nh m\u1ed9t c\u01a1 ch\u1ebf duy nh\u1ea5t v\u00e0 \u0111\u1eb7c bi\u1ec7t l\u00e0 c\u1ef1c k\u1ef3 d\u1ec5 kh\u1edfi t\u1ea1o.","title":"1. Gi\u1edbi thi\u1ec7u v\u1ec1 Avalanche Subnets \u2013 Khi blockchain c\u1ea7n scale th\u1ef1c s\u1ef1"},{"location":"collections/Layer_1/Avalanche/Explaining%20Subnets%20to%20Grandma/#2-avalanche-is-a-subnet-subnets-are-avalanche","text":"Okay, gi\u1edd n\u00f3i s\u01a1 v\u1ec1 Avalanche tr\u01b0\u1edbc. Avalanche l\u00e0 m\u1ed9t m\u1ea1ng blockchain t\u01b0\u01a1ng th\u00edch v\u1edbi EVM t\u1ee9c l\u00e0 n\u00f3 ho\u1ea1t \u0111\u1ed9ng g\u1ea7n nh\u01b0 y chang Ethereum, nh\u01b0ng n\u00f3 kh\u00f4ng ch\u1ec9 l\u00e0 m\u1ed9t chain duy nh\u1ea5t, m\u00e0 \u0111\u01b0\u1ee3c c\u1ea5u th\u00e0nh t\u1eeb ba blockchain ri\u00eang bi\u1ec7t. C-Chain (Contract Chain): \u0110\u00e2y l\u00e0 n\u01a1i d\u00e0nh cho developer tri\u1ec3n khai smart contract b\u1eb1ng Solidity \u2013 ng\u00f4n ng\u1eef quen thu\u1ed9c b\u00ean Ethereum. M\u1ecdi dApp, NFT, DeFi protocol\u2026 \u0111\u1ec1u \u0111\u01b0\u1ee3c build tr\u00ean C-Chain. \ud83d\udee0 P-Chain (Platform Chain): P-Chain l\u00e0 n\u01a1i x\u1eed l\u00fd staking v\u00e0 consensus (theo c\u01a1 ch\u1ebf Proof of Stake), v\u00e0 \u0111\u1eb7c bi\u1ec7t: P-Chain ch\u00ednh l\u00e0 n\u01a1i t\u1ea1o ra v\u00e0 qu\u1ea3n l\u00fd Subnets X-Chain (Exchange Chain): X-Chain \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 chuy\u1ec3n v\u00e0 trao \u0111\u1ed5i c\u00e1c token native c\u1ee7a Avalanche Nh\u00ecn t\u1ed5ng th\u1ec3 th\u00ec c\u1ea5u tr\u00fac Avalanche s\u1ebd nh\u01b0 v\u1ea7y: S\u1ef1 k\u1ebft h\u1ee3p gi\u1eefa C-Chain, P-Chain v\u00e0 X-Chain t\u1ea1o n\u00ean \u201cPrimary Network\u201d Khi g\u1ed9p l\u1ea1i, ba chain C, P v\u00e0 X t\u1ea1o th\u00e0nh c\u00e1i m\u00e0 ta g\u1ecdi l\u00e0 Primary Network \u2013 ch\u00ednh l\u00e0 h\u00ecnh \u1ea3nh m\u00e0 nhi\u1ec1u ng\u01b0\u1eddi ngh\u0129 \u0111\u1ebfn khi nh\u1eafc \u0111\u1ebfn Avalanche. C\u1ea5u tr\u00fac ba l\u1edbp n\u00e0y gi\u00fap gi\u1ea3m t\u1eafc ngh\u1ebdn tr\u00ean C-Chain (n\u01a1i smart contract ho\u1ea1t \u0111\u1ed9ng ch\u00ednh) v\u00e0 g\u00f3p ph\u1ea7n gi\u1eef ph\u00ed gas c\u1ee7a Avalanche lu\u00f4n th\u1ea5p h\u01a1n nhi\u1ec1u so v\u1edbi Ethereum. \u0110i\u1ec1u n\u00e0y r\u1ea5t t\u1ed1t, nh\u01b0ng ch\u01b0a \u0111\u1ee7 v\u00e0 \u0111\u00e2y l\u00e0 l\u00fac Subnets xu\u1ea5t hi\u1ec7n M\u1ed9t Subnet trong h\u1ec7 Avalanche l\u00e0 m\u1ed9t m\u1ea1ng sovereign t\u1ee9c l\u00e0 \u0111\u1ed9c l\u1eadp, t\u1ef1 ch\u1ee7 v\u00e0 t\u1ef1 qu\u1ea3n . M\u1ed7i Subnet c\u00f3 th\u1ec3 \u0111\u1ecbnh ngh\u0129a lu\u1eadt ch\u01a1i ri\u00eang c\u1ee7a n\u00f3 t\u1eeb vi\u1ec7c d\u00f9ng gas token n\u00e0o, ai \u0111\u01b0\u1ee3c l\u00e0m validator, s\u1ed1 l\u01b0\u1ee3ng TPS t\u1ed1i \u0111a, t\u1edbi c\u1ea3 c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn (consensus mechanism). Th\u1ee9 duy nh\u1ea5t b\u1eaft bu\u1ed9c \u0111\u1ec3 m\u1ed9t Subnet \u0111\u01b0\u1ee3c xem l\u00e0 \u201cSubnet thu\u1ed9c Avalanche\u201d l\u00e0 C\u00e1c validator c\u1ee7a n\u00f3 ph\u1ea3i stake tr\u00ean Primary Network (th\u00f4ng qua P-Chain). N\u1ebfu b\u1ea1n c\u00f2n r\u1ed1i th\u00ec c\u1ee9 h\u00ecnh dung Subnets l\u00e0 h\u00ecnh ch\u1eef nh\u1eadt. Primary Network l\u00e0 h\u00ecnh vu\u00f4ng m\u1ed9t tr\u01b0\u1eddng h\u1ee3p \u0111\u1eb7c bi\u1ec7t c\u1ee7a h\u00ecnh ch\u1eef nh\u1eadt. T\u1ee9c l\u00e0 Primary Network ch\u1ec9 l\u00e0 m\u1ed9t lo\u1ea1i Subnet c\u1ee5 th\u1ec3, v\u1edbi b\u1ed9 rule ri\u00eang c\u1ee7a n\u00f3. Nh\u01b0ng c\u00e1c Subnet kh\u00e1c th\u00ec c\u00f3 th\u1ec3 \u201ck\u00e9o gi\u00e3n\u201d \u2013 gi\u1ed1ng nh\u01b0 nh\u1eefng h\u00ecnh ch\u1eef nh\u1eadt c\u00f3 chi\u1ec1u d\u00e0i, chi\u1ec1u r\u1ed9ng kh\u00e1c nhau v\u1eady. M\u1ed7i Subnet c\u00f3 th\u1ec3 t\u1ef1 quy\u1ebft \u0111\u1ecbnh gas token l\u00e0 g\u00ec, staking y\u00eau c\u1ea7u bao nhi\u00eau, consensus c\u00f3 c\u1ea7n permission hay kh\u00f4ng. Avalanche k\u1ef3 v\u1ecdng r\u1eb1ng ch\u00ednh s\u1ef1 t\u1ef1 do n\u00e0y s\u1ebd gi\u00fap developer x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c nh\u1eefng tr\u1ea3i nghi\u1ec7m t\u1ed1t h\u01a1n, \u0111\u1ee7 s\u1ee9c ph\u1ee5c v\u1ee5 h\u00e0ng tri\u1ec7u ng\u01b0\u1eddi d\u00f9ng nh\u01b0 c\u00e1c h\u1ec7 th\u1ed1ng Web2 hi\u1ec7n nay.","title":"2. AVALANCHE IS A SUBNET, SUBNETS ARE AVALANCHE"},{"location":"collections/Layer_1/Avalanche/Explaining%20Subnets%20to%20Grandma/#kha-nang-cua-subnet","text":"Avalanche x\u00e2y d\u1ef1ng to\u00e0n b\u1ed9 ki\u1ebfn tr\u00fac c\u1ee7a m\u00ecnh d\u1ef1a tr\u00ean Subnets, v\u00e0 ch\u00ednh Subnets l\u00e0 th\u1ee9 \u0111\u00e3 gi\u00fap Avalanche \u0111\u1ea1t \u0111\u01b0\u1ee3c t\u1ed1c \u0111\u1ed9 x\u1eed l\u00fd l\u00ean t\u1edbi 4.500 giao d\u1ecbch m\u1ed7i gi\u00e2y (TPS) v\u01b0\u1ee3t tr\u1ed9i so v\u1edbi Ethereum ch\u1ec9 c\u00f3 kho\u1ea3ng 17 TPS. . Trong l\u00fd thuy\u1ebft (v\u00e0 c\u1ea3 th\u1ef1c t\u1ebf v\u1edbi \u0111\u1ee7 \u0111i\u1ec1u ki\u1ec7n), m\u1ed9t Subnet ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 \u0111\u1ea1t 10.000 TPS n\u1ebfu \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf chu\u1ea9n, m\u00e0 kh\u00f4ng c\u1ea7n tu\u00e2n theo c\u00e1c lu\u1eadt l\u1ec7 c\u1ee9ng nh\u1eafc c\u1ee7a Primary Network. N\u00f3i \u0111\u01a1n gi\u1ea3n: Subnet gi\u1ed1ng nh\u01b0 m\u1ed9t phi\u00ean b\u1ea3n Avalanche ri\u00eang bi\u1ec7t, \u0111\u01b0\u1ee3c dev s\u1eed d\u1ee5ng \u0111\u1ec3 t\u1ea1o n\u00ean tr\u1ea3i nghi\u1ec7m blockchain ri\u00eang. Trong \u0111\u00f3, Subnet \u0111\u01b0\u1ee3c to\u00e0n quy\u1ec1n: \u2022 \u0111\u1ecbnh ngh\u0129a logic x\u1eed l\u00fd giao d\u1ecbch (execution logic), \u2022 ch\u1ecdn m\u00f4 h\u00ecnh ph\u00ed (fee regime), \u2022 qu\u1ea3n l\u00fd tr\u1ea1ng th\u00e1i (state), \u2022 ki\u1ec3m so\u00e1t h\u1ea1 t\u1ea7ng m\u1ea1ng (networking), \u2022 v\u00e0 c\u1ea3 thi\u1ebft l\u1eadp c\u01a1 ch\u1ebf b\u1ea3o m\u1eadt (security) nh\u01b0 m\u1ed9t blockchain \u0111\u1ed9c l\u1eadp ho\u00e0n to\u00e0n. T\u1ea5t nhi\u00ean Subnet v\u1eabn c\u00f3 m\u1ed9t m\u1ed1i li\u00ean k\u1ebft duy nh\u1ea5t v\u1edbi h\u1ec7 sinh th\u00e1i Avalanche \u0111\u00f3 l\u00e0 c\u00e1c validator c\u1ee7a Subnet ph\u1ea3i \u0111\u1ed3ng th\u1eddi x\u00e1c th\u1ef1c (validate) c\u1ea3 tr\u00ean Primary Network. . Khi nhi\u1ec1u dev mu\u1ed1n spin-up Subnet, h\u1ecd s\u1ebd tri\u1ec3n khai validator ri\u00eang \u0111\u1ec3 h\u1ed7 tr\u1ee3 Subnet c\u1ee7a m\u00ecnh (v\u00ec \u0111\u01b0\u1ee3c h\u01b0\u1edfng l\u1ee3i t\u1eeb token model ri\u00eang), \u0111i\u1ec1u n\u00e0y k\u00e9o th\u00eam validator m\u1edbi v\u1ec1 cho Primary Network t\u0103ng t\u00ednh ph\u00e2n t\u00e1n, \u0111\u1ed9 b\u1ea3o m\u1eadt to\u00e0n m\u1ea1ng. \u0110i\u1ec1u n\u00e0y c\u00f3 l\u1ee3i c\u1ea3 ba ph\u00eda. V\u00ec validator c\u1ee7a Subnet bu\u1ed9c ph\u1ea3i \u0111\u1ee7 n\u0103ng l\u1ef1c \u0111\u1ec3 x\u00e1c th\u1ef1c tr\u00ean Primary Network gi\u00fap Subnet c\u00f3 h\u1ec7 b\u1ea3o m\u1eadt \u0111\u00e1ng tin c\u1eady ngay t\u1eeb \u0111\u1ea7u. Th\u1ee9 hai l\u00e0 Khi nhi\u1ec1u dev mu\u1ed1n spin-up Subnet, h\u1ecd s\u1ebd tri\u1ec3n khai validator ri\u00eang \u0111\u1ec3 h\u1ed7 tr\u1ee3 Subnet c\u1ee7a m\u00ecnh (v\u00ec \u0111\u01b0\u1ee3c h\u01b0\u1edfng l\u1ee3i t\u1eeb token model ri\u00eang), \u0111i\u1ec1u n\u00e0y k\u00e9o th\u00eam validator m\u1edbi v\u1ec1 cho Primary Network. T\u1eb7ng t\u00ednh phi t\u1eadp trung cho to\u00e0n m\u1ea1ng. V\u00e0 Validator c\u00f3 th\u1ec3 nh\u1eadn th\u00eam reward b\u1eb1ng c\u00e1ch tham gia b\u1ea3o m\u1eadt cho c\u00e1c Subnets m\u1edbi (th\u01b0\u1eddng Subnet s\u1ebd ph\u00e1t token reward ri\u00eang theo c\u01a1 ch\u1ebf Proof-of-Stake \u0111\u1ec3 thu h\u00fat validator) Subnets trong h\u1ec7 sinh th\u00e1i Avalanche kh\u00e1 gi\u1ed1ng v\u1edbi Rollups trong Ethereum. Tuy nhi\u00ean, c\u00f3 m\u1ed9t \u0111i\u1ec3m kh\u00e1c bi\u1ec7t l\u00e0 Subnets kh\u00f4ng chia s\u1ebb execution (x\u1eed l\u00fd giao d\u1ecbch), storage (l\u01b0u tr\u1eef d\u1eef li\u1ec7u) hay networking (m\u1ea1ng l\u01b0\u1edbi) v\u1edbi Primary Network ho\u1eb7c b\u1ea5t k\u1ef3 Subnet n\u00e0o kh\u00e1c. Trong khi \u0111\u00f3, Rollups lu\u00f4n ph\u1ea3i \u0111\u1ed5 d\u1eef li\u1ec7u v\u1ec1 Ethereum mainnet \u0111\u1ec3 \u0111\u01b0\u1ee3c b\u1ea3o m\u1eadt v\u00e0 x\u00e1c nh\u1eadn cu\u1ed1i c\u00f9ng (finality). Ch\u00ednh \u0111i\u1ec1u n\u00e0y t\u1ea1o ra gi\u1edbi h\u1ea1n v\u1ec1 kh\u1ea3 n\u0103ng t\u01b0\u01a1ng t\u00e1c (interoperability) gi\u1eefa c\u00e1c Subnet nh\u01b0ng Avalanche Warp Messaging (AWM) \u0111ang \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n v\u00e0 h\u1ee9a h\u1eb9n s\u1ebd gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n n\u00e0y trong t\u01b0\u01a1ng lai g\u1ea7n. \u0110\u1ec3 gi\u1ea3i th\u00edch d\u1ec5 hi\u1ec3u h\u01a1n. Th\u00ec gi\u1edd t\u01b0\u1edfng t\u01b0\u1ee3ng Avalanche l\u00e0 ph\u1ea7n m\u1ec1m Microsoft Word. C\u00f2n Subnets th\u00ec gi\u1ed1ng nh\u01b0 c\u00e1c m\u1eabu template c\u00f3 s\u1eb5n trong Word v\u1eady. Thay v\u00ec b\u1eaft \u0111\u1ea7u t\u1eeb trang tr\u1eafng, ng\u01b0\u1eddi d\u00f9ng ch\u1ec9 c\u1ea7n ch\u1ecdn m\u1eabu \u2192 r\u1ed3i d\u1ec5 d\u00e0ng tu\u1ef3 ch\u1ec9nh theo m\u1ee5c \u0111\u00edch ri\u00eang. Vi\u1ec7c \u0111\u01a1n gi\u1ea3n ho\u00e1 qu\u00e1 tr\u00ecnh t\u1ea1o blockchain l\u00e0 c\u1ef1c k\u1ef3 quan tr\u1ecdng.","title":"Kh\u1ea3 n\u0103ng c\u1ee7a Subnet"},{"location":"collections/Layer_1/Avalanche/Explaining%20Subnets%20to%20Grandma/#subnet-va-nhung-thu-ang-uoc-xay-dung","text":"M\u1ed9t Subnet l\u00e0 m\u00f4i tr\u01b0\u1eddng c\u1ef1c k\u1ef3 l\u00fd t\u01b0\u1edfng cho c\u00e1c d\u1ef1 \u00e1n mu\u1ed1n ki\u1ec3m so\u00e1t m\u1ed9t trong c\u00e1c y\u1ebfu t\u1ed1 sau \u0111\u00e2y: 1. Tokenomics: ch\u1ecdn xem ng\u01b0\u1eddi d\u00f9ng s\u1ebd d\u00f9ng token n\u00e0o \u0111\u1ec3 tr\u1ea3 gas 2. Block Space: ki\u1ec3m so\u00e1t m\u1ee9c TPS cao h\u01a1n ho\u1eb7c th\u1ea5p h\u01a1n Primary Network 3. Access: t\u1ea1o c\u00e1c h\u1ec7 th\u1ed1ng whitelist ho\u1eb7c permissioned \u0111\u1ec3 ai \u0111\u01b0\u1ee3c ph\u00e9p deploy smart contract 4. Execution (Virtual Machine): ch\u1ec9nh c\u00e1c th\u00f4ng s\u1ed1 x\u1eed l\u00fd giao d\u1ecbch, t\u1ee9c l\u00e0 vi\u1ebft l\u1ea1i lu\u1eadt ch\u01a1i c\u1ee7a blockchain M\u1ed9t v\u00e0i \u0111i\u1ec3m nh\u1ea5n n\u1ed5i b\u1eadt t\u1eeb Subnets: DeFi Kingdoms \u2013 ban \u0111\u1ea7u \u0111\u01b0\u1ee3c build tr\u00ean Harmony, nh\u01b0ng sau \u0111\u00f3 d\u1ef1 \u00e1n game Web3 n\u00e0y \u0111\u00e3 launch m\u1ed9t Subnet ri\u00eang tr\u00ean Avalanche t\u00ean l\u00e0 Crystalvale, \u0111\u1ec3 t\u1ed1i \u01b0u ho\u00e1 tr\u1ea3i nghi\u1ec7m ng\u01b0\u1eddi ch\u01a1i. Nh\u1edd v\u1eady, ng\u01b0\u1eddi d\u00f9ng \u0111\u01b0\u1ee3c ch\u01a1i game tr\u00ean m\u1ed9t blockchain \u0111\u01b0\u1ee3c t\u00f9y ch\u1ec9nh ri\u00eang cho gameplay. B\u1ea1n c\u00f3 th\u1ec3 xem qua JEWEL Contract Address (Avalanche) : 0x4f60a160d8c2dddaafe16fcc57566db84d674bd6 Crabada: Ng\u01b0\u1eddi ch\u01a1i Crabada kh\u00f4ng c\u1ea7n lo ph\u00ed gas cao hay ph\u1ea3i ch\u1edd giao d\u1ecbch confirm ch\u1eadm ch\u1ea1p tr\u00ean Primary Network Dexalot \u2013 m\u1ed9t s\u00e0n giao d\u1ecbch phi t\u1eadp trung (DEX) \u0111\u01b0\u1ee3c tri\u1ec3n khai d\u01b0\u1edbi d\u1ea1ng Subnet, cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng giao d\u1ecbch nhanh v\u1edbi ph\u00ed th\u1ea5p.","title":"SUBNET V\u00c0 NH\u1eeeNG TH\u1ee8 \u0110ANG \u0110\u01af\u1ee2C X\u00c2Y D\u1ef0NG"},{"location":"collections/Layer_1/Avalanche/Explaining%20Subnets%20to%20Grandma/#nhung-ma","text":"Lu\u00f4n lu\u00f4n c\u00f3 m\u1ed9t ch\u1eef \u201cnh\u01b0ng\u201d trong crypto. C\u00e1c Subnet kh\u00f4ng th\u1ec3 giao ti\u1ebfp v\u1edbi nhau m\u1ed9t c\u00e1ch native. T\u1ee9c l\u00e0, mu\u1ed1n chuy\u1ec3n t\u00e0i s\u1ea3n/liquidity gi\u1eefa c\u00e1c Subnet th\u00ec hi\u1ec7n t\u1ea1i v\u1eabn ph\u1ea3i d\u00f9ng bridge. \u0110i\u1ec1u n\u00e0y t\u1ea1o ra ma s\u00e1t v\u00e0 r\u1ee7i ro.( \u0111i\u1ec1u n\u00e0y s\u1ebd s\u1edbm thay \u0111\u1ed5i nh\u1edd v\u00e0o Avalanche Warp Messaging \u2013 AWM ) R\u1ee7i ro t\u1eadp trung l\u00e0 c\u00f3 th\u1eadt, \u0111\u1eb7c bi\u1ec7t khi build c\u00e1c Subnet theo ki\u1ec3u permissioned (t\u1ee9c l\u00e0 c\u00f3 whitelist, gi\u1edbi h\u1ea1n ai \u0111\u01b0\u1ee3c v\u00e0o). Subnet ph\u00e1t tri\u1ec3n kh\u00f4ng \u0111\u1ed3ng ngh\u0129a l\u00e0 h\u1ec7 Avalanche c\u0169ng ph\u00e1t tri\u1ec3n. V\u00ed d\u1ee5: m\u1ed9t Subnet c\u1ef1c th\u00e0nh c\u00f4ng v\u1eabn c\u00f3 th\u1ec3 \u201ct\u00e1ch bi\u1ec7t\u201d v\u1edbi h\u1ec7 sinh th\u00e1i Avalanche g\u1ed1c n\u1ebfu n\u00f3 kh\u00f4ng t\u00e1i \u0111\u1ea7u t\u01b0, kh\u00f4ng li\u00ean k\u1ebft tokenomics, hay kh\u00f4ng mang ng\u01b0\u1eddi d\u00f9ng v\u1ec1 cho m\u1ea1ng ch\u00ednh. Subnets \u0111ang ph\u1ea3i c\u1ea1nh tranh tr\u1ef1c ti\u1ebfp v\u1edbi c\u00e1c h\u1ec7 dAppchain kh\u00e1c nh\u01b0 Cosmos, Polkadot, hay c\u00e1c m\u00f4 h\u00ecnh RollApps (d\u1ea1ng app-specific rollup). \u0110\u00f3 l\u00e0 to\u00e0n b\u1ed9 l\u00fd thuy\u1ebft nhanh v\u1ec1 subnets . C\u00f3 th\u1ec3 ch\u00fang ta c\u0169ng s\u1ebd t\u00ecm hi\u1ec3u th\u00eam \u0111\u1ec3 so s\u00e1nh Subnets v\u1edbi: * Cosmos Appchains * Polkadot Parachains * Optimistic Superchains Nh\u01b0ng gi\u1eddi th\u00ec c\u1ea3m \u01a1n b\u1ea1n \u0111\u00e3 \u0111\u1ecdc \u0111\u1ebfn \u0111\u00e2y. \u0110\u00e2y l\u00e0 the Orginal link: https://lifi.substack.com/p/explaining-subnets-to-grandma","title":"NH\u01afNG M\u00c0\u2026"},{"location":"collections/Layer_1/Avalanche/develop-web3/","text":"How to develop Web3 applications on the Avalanche network","title":"How to develop Web3 applications on the Avalanche network"},{"location":"collections/Layer_1/Avalanche/develop-web3/#how-to-develop-web3-applications-on-the-avalanche-network","text":"","title":"How to develop Web3 applications on the Avalanche network"},{"location":"collections/Layer_1/Avalanche/protocol-overview-avalanche/","text":"Avalanche l\u00e0 m\u1ed9t m\u1ea1ng l\u01b0\u1edbi d\u1ecb th\u1ec3 (heterogeneous network) g\u1ed3m nhi\u1ec1u blockchain hi\u1ec7u n\u0103ng cao. \u0110i\u1ec3m n\u1ed5i b\u1eadt c\u1ee7a Avalanche n\u1eb1m \u1edf ki\u1ebfn tr\u00fac n\u1ec1n t\u1ea3ng c\u1ee7a n\u00f3: \u00e1p d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p horizontal scaling (m\u1edf r\u1ed9ng theo chi\u1ec1u ngang) \u0111\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t c\u1ea5u tr\u00fac multi-chain, n\u01a1i m\u1ed7i blockchain con c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u00f9y ch\u1ec9nh s\u00e2u v\u00e0 t\u01b0\u01a1ng t\u00e1c l\u1eabn nhau. Nh\u1eefng blockchain n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 L1s, tr\u01b0\u1edbc \u0111\u00e2y \u0111\u01b0\u1ee3c bi\u1ebft \u0111\u1ebfn v\u1edbi t\u00ean g\u1ecdi subnets . T\u00ednh t\u00f9y bi\u1ebfn cao c\u1ee7a Avalanche cho ph\u00e9p n\u1ec1n t\u1ea3ng n\u00e0y h\u1ed7 tr\u1ee3 \u0111a d\u1ea1ng c\u00e1c dev v\u00e0 tr\u01b0\u1eddng h\u1ee3p s\u1eed d\u1ee5ng \u0111\u1eb7c bi\u1ec7t l\u00e0 trong c\u00e1c l\u0129nh v\u1ef1c nh\u01b0: DeFi doanh nghi\u1ec7p/institutional, n\u01a1i c\u00e1c t\u1ed5 ch\u1ee9c c\u1ea7n c\u00e1c c\u01a1 ch\u1ebf ki\u1ec3m so\u00e1t quy\u1ec1n ri\u00eang t\u01b0 v\u00e0 truy c\u1eadp d\u1eef li\u1ec7u Gaming v\u00e0 c\u00e1c \u1ee9ng d\u1ee5ng h\u01b0\u1edbng \u0111\u1ebfn ng\u01b0\u1eddi d\u00f9ng \u0111\u1ea1i ch\u00fang (consumer verticals). S\u1ee9 m\u1ec7nh c\u1ed1t l\u00f5i c\u1ee7a Avalanche l\u00e0 \"token h\u00f3a m\u1ecdi lo\u1ea1i t\u00e0i s\u1ea3n tr\u00ean th\u1ebf gi\u1edbi\" v\u00e0 \u0111\u1ec3 hi\u1ec7n th\u1ef1c h\u00f3a \u0111i\u1ec1u \u0111\u00f3, Avalanche \u0111\u00e3 tri\u1ec3n khai c\u00e1c n\u1ed7 l\u1ef1c ph\u00e1t tri\u1ec3n kinh doanh (BD) r\u1ea5t m\u1ea1nh m\u1ebd, gi\u00fap h\u00e0ng lo\u1ea1t c\u00f4ng ty v\u00e0 t\u1ed5 ch\u1ee9c uy t\u00edn chuy\u1ec3n \u0111\u1ed5i ho\u1ea1t \u0111\u1ed9ng l\u00ean on-chain \u0111\u1ec3 th\u1eed nghi\u1ec7m c\u00e1c \u1ee9ng d\u1ee5ng crypto mang t\u00ednh \u0111\u1ed9t ph\u00e1 v\u00e0 c\u00f3 t\u00e1c \u0111\u1ed9ng l\u1edbn. Background Information \u0110\u01b0\u1ee3c ph\u00e1t tri\u1ec3n b\u1edfi Ava Labs , m\u1ea1ng ch\u00ednh (mainnet) c\u1ee7a Avalanche ch\u00ednh th\u1ee9c ra m\u1eaft v\u00e0o th\u00e1ng 9 n\u0103m 2020 v\u1edbi m\u1ed9t blockchain L1 t\u01b0\u01a1ng th\u00edch EVM hi\u1ec7u n\u0103ng cao, \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 C-Chain (vi\u1ebft t\u1eaft c\u1ee7a \u201ccontract chain\u201d) . C-Chain \u0111\u01b0\u1ee3c v\u1eadn h\u00e0nh b\u1eb1ng m\u1ed9t c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn cho ph\u00e9p th\u1eddi gian ho\u00e0n t\u1ea5t giao d\u1ecbch c\u1ef1c nhanh\u2014th\u01b0\u1eddng d\u01b0\u1edbi 2 gi\u00e2y. Nh\u1edd kh\u1ea3 n\u0103ng x\u1eed l\u00fd t\u1ed1c \u0111\u1ed9 cao v\u00e0 t\u01b0\u01a1ng th\u00edch EVM, C-Chain nhanh ch\u00f3ng \u0111\u01b0\u1ee3c \u0111\u00f3n nh\u1eadn v\u00e0 tr\u1edf th\u00e0nh m\u1ed9t trong nh\u1eefng EVM Alt-L1s ph\u1ee5c v\u1ee5 ho\u1ea1t \u0111\u1ed9ng DeFi, v\u1edbi t\u1ed5ng gi\u00e1 tr\u1ecb kh\u00f3a (TVL) \u0111\u1ea1t \u0111\u1ec9nh h\u01a1n 10 t\u1ef7 \u0111\u00f4 la trong giai \u0111o\u1ea1n 2021\u20132022. K\u1ec3 t\u1eeb \u0111\u00f3, Ava Labs \u0111\u1ecbnh h\u01b0\u1edbng Avalanche kh\u00f4ng \u0111\u01a1n thu\u1ea7n l\u00e0 m\u1ed9t \u201cEthereum clone\u201d m\u00e0 ph\u00e1t tri\u1ec3n th\u00e0nh m\u1ed9t l\u1edbp t\u01b0\u01a1ng t\u00e1c li\u00ean chu\u1ed7i (interoperability layer) b\u1eb1ng c\u00e1ch t\u1eadp trung ph\u00e1t tri\u1ec3n subnets, c\u00e1c blockchain t\u00f9y ch\u1ec9nh c\u00f3 th\u1ec3 ho\u1ea1t \u0111\u1ed9ng song song v\u1edbi M\u1ea1ng Ch\u00ednh (Primary Network). Subnets ch\u00ednh th\u1ee9c \u0111\u01b0\u1ee3c tri\u1ec3n khai t\u1eeb gi\u1eefa n\u0103m 2022, m\u1edf ra kh\u1ea3 n\u0103ng cho c\u00e1c nh\u00e0 ph\u00e1t tri\u1ec3n t\u1ea1o d\u1ef1ng blockchain ri\u00eang v\u1edbi m\u1ee9c \u0111\u1ed9 t\u00f9y ch\u1ec9nh cao: \u2022 Thi\u1ebft l\u1eadp logic th\u1ef1c thi ri\u00eang \u2022 Ch\u1ecdn token gas tu\u1ef3 \u00fd \u2022 Tu\u1ef3 ch\u1ec9nh c\u1ea5u tr\u00fac ph\u00ed giao d\u1ecbch \u2022 T\u1ef1 qu\u1ea3n l\u00fd b\u1ed9 x\u00e1c th\u1ef1c (validator set) \u0110\u1eb7c bi\u1ec7t, Avalanche c\u0169ng t\u00edch h\u1ee3p s\u1eb5n kh\u1ea3 n\u0103ng li\u00ean th\u00f4ng chu\u1ed7i (native interoperability) v\u00e0 m\u1ed9t trung t\u00e2m thanh kho\u1ea3n chung th\u00f4ng qua c\u01a1 ch\u1ebf Avalanche Warp Messaging v\u00e0 Teleporter. T\u1ed5ng quan H\u1ec7 sinh th\u00e1i Avalanche Chi\u1ebfn l\u01b0\u1ee3c ph\u00e1t tri\u1ec3n h\u1ec7 sinh th\u00e1i v\u00e0 c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh marketing c\u1ee7a Avalanche \u0111\u00e3 t\u1eadp trung nh\u1eafm \u0111\u1ebfn nh\u1eefng l\u0129nh v\u1ef1c tr\u1ecdng \u0111i\u1ec3m bao g\u1ed3m: \u2022 DeFi \u2022 T\u00e0i s\u1ea3n trong th\u1ebf gi\u1edbi th\u1ef1c (RWA) / Token h\u00f3a \u2022 Gaming the orginal link: https://www.galaxy.com/insights/research/protocol-overview-avalanche-2024","title":"Protocol overview avalanche"},{"location":"collections/Layer_1/Avalanche/protocol-overview-avalanche/#background-information","text":"\u0110\u01b0\u1ee3c ph\u00e1t tri\u1ec3n b\u1edfi Ava Labs , m\u1ea1ng ch\u00ednh (mainnet) c\u1ee7a Avalanche ch\u00ednh th\u1ee9c ra m\u1eaft v\u00e0o th\u00e1ng 9 n\u0103m 2020 v\u1edbi m\u1ed9t blockchain L1 t\u01b0\u01a1ng th\u00edch EVM hi\u1ec7u n\u0103ng cao, \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 C-Chain (vi\u1ebft t\u1eaft c\u1ee7a \u201ccontract chain\u201d) . C-Chain \u0111\u01b0\u1ee3c v\u1eadn h\u00e0nh b\u1eb1ng m\u1ed9t c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn cho ph\u00e9p th\u1eddi gian ho\u00e0n t\u1ea5t giao d\u1ecbch c\u1ef1c nhanh\u2014th\u01b0\u1eddng d\u01b0\u1edbi 2 gi\u00e2y. Nh\u1edd kh\u1ea3 n\u0103ng x\u1eed l\u00fd t\u1ed1c \u0111\u1ed9 cao v\u00e0 t\u01b0\u01a1ng th\u00edch EVM, C-Chain nhanh ch\u00f3ng \u0111\u01b0\u1ee3c \u0111\u00f3n nh\u1eadn v\u00e0 tr\u1edf th\u00e0nh m\u1ed9t trong nh\u1eefng EVM Alt-L1s ph\u1ee5c v\u1ee5 ho\u1ea1t \u0111\u1ed9ng DeFi, v\u1edbi t\u1ed5ng gi\u00e1 tr\u1ecb kh\u00f3a (TVL) \u0111\u1ea1t \u0111\u1ec9nh h\u01a1n 10 t\u1ef7 \u0111\u00f4 la trong giai \u0111o\u1ea1n 2021\u20132022. K\u1ec3 t\u1eeb \u0111\u00f3, Ava Labs \u0111\u1ecbnh h\u01b0\u1edbng Avalanche kh\u00f4ng \u0111\u01a1n thu\u1ea7n l\u00e0 m\u1ed9t \u201cEthereum clone\u201d m\u00e0 ph\u00e1t tri\u1ec3n th\u00e0nh m\u1ed9t l\u1edbp t\u01b0\u01a1ng t\u00e1c li\u00ean chu\u1ed7i (interoperability layer) b\u1eb1ng c\u00e1ch t\u1eadp trung ph\u00e1t tri\u1ec3n subnets, c\u00e1c blockchain t\u00f9y ch\u1ec9nh c\u00f3 th\u1ec3 ho\u1ea1t \u0111\u1ed9ng song song v\u1edbi M\u1ea1ng Ch\u00ednh (Primary Network). Subnets ch\u00ednh th\u1ee9c \u0111\u01b0\u1ee3c tri\u1ec3n khai t\u1eeb gi\u1eefa n\u0103m 2022, m\u1edf ra kh\u1ea3 n\u0103ng cho c\u00e1c nh\u00e0 ph\u00e1t tri\u1ec3n t\u1ea1o d\u1ef1ng blockchain ri\u00eang v\u1edbi m\u1ee9c \u0111\u1ed9 t\u00f9y ch\u1ec9nh cao: \u2022 Thi\u1ebft l\u1eadp logic th\u1ef1c thi ri\u00eang \u2022 Ch\u1ecdn token gas tu\u1ef3 \u00fd \u2022 Tu\u1ef3 ch\u1ec9nh c\u1ea5u tr\u00fac ph\u00ed giao d\u1ecbch \u2022 T\u1ef1 qu\u1ea3n l\u00fd b\u1ed9 x\u00e1c th\u1ef1c (validator set) \u0110\u1eb7c bi\u1ec7t, Avalanche c\u0169ng t\u00edch h\u1ee3p s\u1eb5n kh\u1ea3 n\u0103ng li\u00ean th\u00f4ng chu\u1ed7i (native interoperability) v\u00e0 m\u1ed9t trung t\u00e2m thanh kho\u1ea3n chung th\u00f4ng qua c\u01a1 ch\u1ebf Avalanche Warp Messaging v\u00e0 Teleporter.","title":"Background Information"},{"location":"collections/Layer_1/Avalanche/protocol-overview-avalanche/#tong-quan-he-sinh-thai-avalanche","text":"Chi\u1ebfn l\u01b0\u1ee3c ph\u00e1t tri\u1ec3n h\u1ec7 sinh th\u00e1i v\u00e0 c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh marketing c\u1ee7a Avalanche \u0111\u00e3 t\u1eadp trung nh\u1eafm \u0111\u1ebfn nh\u1eefng l\u0129nh v\u1ef1c tr\u1ecdng \u0111i\u1ec3m bao g\u1ed3m: \u2022 DeFi \u2022 T\u00e0i s\u1ea3n trong th\u1ebf gi\u1edbi th\u1ef1c (RWA) / Token h\u00f3a \u2022 Gaming the orginal link: https://www.galaxy.com/insights/research/protocol-overview-avalanche-2024","title":"T\u1ed5ng quan H\u1ec7 sinh th\u00e1i Avalanche"},{"location":"collections/Modular_blockchain/Celestia/Explore%20data%20availability%20solutions%20in%20the%20Rollup%20ecosystem/","text":"B\u00e0i vi\u1ebft n\u00e0y nh\u1eb1m gi\u1edbi thi\u1ec7u vai tr\u00f2 quan tr\u1ecdng c\u1ee7a \u201cdata availability\u201d (DA) trong h\u1ec7 sinh th\u00e1i Rollup, v\u00e0 c\u00e1ch m\u00e0 c\u00e1c gi\u1ea3i ph\u00e1p DA d\u1ea1ng m\u00f4-\u0111un (nh\u01b0 Celestia, EigenDA, v\u00e0 Avail) \u0111ang g\u00f3p ph\u1ea7n n\u00e2ng cao kh\u1ea3 n\u0103ng t\u01b0\u01a1ng t\u00e1c (interoperability) v\u00e0 t\u00ednh b\u1ec1n v\u1eefng (maintainability) c\u1ee7a c\u00e1c Rollup. H\u1ec7 sinh th\u00e1i Rollup \u0111\u1ea1i di\u1ec7n cho m\u1ed9t b\u01b0\u1edbc ti\u1ebfn l\u1edbn trong thi\u1ebft k\u1ebf blockchain hi\u1ec7n \u0111\u1ea1i \u2014 cho ph\u00e9p nhi\u1ec1u m\u1ea1ng rollup v\u1eadn h\u00e0nh hi\u1ec7u qu\u1ea3 trong c\u00f9ng m\u1ed9t h\u1ec7 sinh th\u00e1i th\u1ed1ng nh\u1ea5t. Khi Rollup ng\u00e0y c\u00e0ng chi\u1ebfm l\u0129nh trung t\u00e2m c\u00e1c th\u1ea3o lu\u1eadn v\u1ec1 m\u1edf r\u1ed9ng quy m\u00f4 (scaling) cho Ethereum v\u00e0 c\u00e1c l\u1edbp n\u1ec1n t\u1ea3ng kh\u00e1c, c\u00f3 m\u1ed9t tr\u1ee5 c\u1ed9t k\u1ef9 thu\u1eadt \u00edt \u0111\u01b0\u1ee3c nh\u1eafc \u0111\u1ebfn nh\u01b0ng c\u1ea7n thi\u1ebft \u0111\u00f3 l\u00e0 Data Availability (DA). Kh\u00f4ng c\u00f3 m\u1ed9t l\u1edbp DA \u0111\u00e1ng tin c\u1eady, c\u00f3 th\u1ec3 m\u1edf r\u1ed9ng v\u00e0 chi ph\u00ed t\u1ed1i \u01b0u, Rollup kh\u00f4ng th\u1ec3 \u0111\u1ea3m b\u1ea3o \u0111\u01b0\u1ee3c t\u00ednh trustless khi th\u1ef1c thi, c\u0169ng nh\u01b0 kh\u00f4ng th\u1ec3 \u0111\u1ea1t \u0111\u1ebfn composability quy m\u00f4 l\u1edbn. Trong b\u1ed1i c\u1ea3nh \u0111\u00f3, c\u00e1c gi\u1ea3i ph\u00e1p DA m\u00f4-\u0111un nh\u01b0 Celestia, EigenDA, v\u00e0 Avail \u0111ang gi\u1eef vai tr\u00f2 trung t\u00e2m trong vi\u1ec7c gi\u00fap Rollup t\u01b0\u01a1ng t\u00e1c l\u1eabn nhau (interoperable) v\u00e0 d\u1ec5 b\u1ea3o tr\u00ec (maintainable) theo c\u00e1ch v\u1eeba an to\u00e0n, v\u1eeba ti\u1ebft ki\u1ec7m chi ph\u00ed. M\u1ee5c ti\u00eau l\u00e0 cung c\u1ea5p cho developers, researchers v\u00e0 protocol designers m\u1ed9t c\u00e1i nh\u00ecn r\u00f5 r\u00e0ng v\u1ec1: * \u0110\u1ed9ng l\u1ef1c k\u1ef9 thu\u1eadt d\u1eabn \u0111\u1ebfn nhu c\u1ea7u v\u1ec1 DA * Nh\u1eefng \u0111\u00e1nh \u0111\u1ed5i ki\u1ebfn tr\u00fac khi t\u00edch h\u1ee3p DA m\u00f4-\u0111un * V\u00e0 chi\u1ebfn l\u01b0\u1ee3c tri\u1ec3n khai l\u1edbp DA nh\u01b0 Celestia trong t\u1ea7m nh\u00ecn c\u1ee7a Rollup Hub T\u1ed5ng quan ki\u1ebfn tr\u00fac blockchain L\u1edbp Data Availability (DA) l\u00e0 m\u1ed9t th\u00e0nh ph\u1ea7n quan tr\u1ecdng, g\u1eafn li\u1ec1n v\u1edbi hai tr\u01b0\u1eddng ph\u00e1i ki\u1ebfn tr\u00fac blockchain \u0111\u1ed1i l\u1eadp: Trong giai \u0111o\u1ea1n \u0111\u1ea7u, c\u00e1c blockchain \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng theo m\u00f4 h\u00ecnh monolithic, c\u00f2n g\u1ecdi l\u00e0 \u201cchain t\u00edch h\u1ee3p\u201d. \u1ede m\u00f4 h\u00ecnh n\u00e0y, m\u1ed9t blockchain \u0111\u01a1n l\u1ebb ch\u1ecbu tr\u00e1ch nhi\u1ec7m to\u00e0n b\u1ed9 c\u00e1c ch\u1ee9c n\u0103ng c\u1ed1t l\u00f5i: \u2022 Consensus (\u0111\u1ed3ng thu\u1eadn) \u2022 Data Availability (kh\u1ea3 d\u1ee5ng d\u1eef li\u1ec7u) \u2022 Execution (th\u1ef1c thi giao d\u1ecbch) \u2022 Settlement (x\u00e1c nh\u1eadn tr\u1ea1ng th\u00e1i cu\u1ed1i c\u00f9ng) M\u1eb7c d\u00f9 c\u00e1ch thi\u1ebft k\u1ebf n\u00e0y gi\u00fap \u0111\u01a1n gi\u1ea3n ho\u00e1 vi\u1ec7c \u0111\u1ed3ng b\u1ed9 h\u00f3a v\u00e0 t\u01b0\u01a1ng t\u00e1c n\u1ed9i b\u1ed9, nh\u01b0ng n\u00f3 g\u1eb7p ph\u1ea3i nhi\u1ec1u h\u1ea1n ch\u1ebf nh\u01b0 l\u00e0 c\u00e0ng m\u1edf r\u1ed9ng quy m\u00f4, y\u00eau c\u1ea7u ph\u1ea7n c\u1ee9ng c\u1ee7a validator c\u00e0ng cao. T\u00ecnh tr\u1ea1ng state bloat (ph\u00ecnh to tr\u1ea1ng th\u00e1i) v\u00e0 state contention (c\u1ea1nh tranh truy c\u1eadp d\u1eef li\u1ec7u) l\u00e0m gi\u1ea3m hi\u1ec7u su\u1ea5t... \u0110\u1ec3 v\u01b0\u1ee3t qua gi\u1edbi h\u1ea1n tr\u00ean, c\u1ed9ng \u0111\u1ed3ng ph\u00e1t tri\u1ec3n d\u1ea7n chuy\u1ec3n sang ki\u1ebfn tr\u00fac modular. M\u00f4 h\u00ecnh modular t\u00e1ch ri\u00eang c\u00e1c l\u1edbp ch\u1ee9c n\u0103ng (nh\u01b0 consensus, execution, DA, settlement) \u2192 cho ph\u00e9p c\u00e1c chain: \u2022 Ho\u1ea1t \u0111\u1ed9ng song song v\u00e0 \u0111\u1ed9c l\u1eadp \u2022 T\u1ef1 duy tr\u00ec ch\u1ee7 quy\u1ec1n v\u1ec1 logic, governance, n\u00e2ng c\u1ea5p Nh\u1edd \u0111\u00f3, ki\u1ebfn tr\u00fac n\u00e0y n\u00e2ng cao kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng, \u0111\u1ed3ng th\u1eddi m\u1edf ra kh\u00f4ng gian s\u00e1ng t\u1ea1o l\u1edbn h\u01a1n cho developer. Reference [1] Orginial link: https://medium.com/tokamak-network [2] https://blog.celestia.org/modular-vs-monolithic-a-beginners-guide/ [3] https://www.symbolic.capital/writing/a-deep-dive-into-data-availability-the-promises-and-challenges-of-scaling-web3#other-da-players","title":"Explore data availability solutions in the Rollup ecosystem"},{"location":"collections/Modular_blockchain/Celestia/Explore%20data%20availability%20solutions%20in%20the%20Rollup%20ecosystem/#tong-quan-kien-truc-blockchain","text":"L\u1edbp Data Availability (DA) l\u00e0 m\u1ed9t th\u00e0nh ph\u1ea7n quan tr\u1ecdng, g\u1eafn li\u1ec1n v\u1edbi hai tr\u01b0\u1eddng ph\u00e1i ki\u1ebfn tr\u00fac blockchain \u0111\u1ed1i l\u1eadp: Trong giai \u0111o\u1ea1n \u0111\u1ea7u, c\u00e1c blockchain \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng theo m\u00f4 h\u00ecnh monolithic, c\u00f2n g\u1ecdi l\u00e0 \u201cchain t\u00edch h\u1ee3p\u201d. \u1ede m\u00f4 h\u00ecnh n\u00e0y, m\u1ed9t blockchain \u0111\u01a1n l\u1ebb ch\u1ecbu tr\u00e1ch nhi\u1ec7m to\u00e0n b\u1ed9 c\u00e1c ch\u1ee9c n\u0103ng c\u1ed1t l\u00f5i: \u2022 Consensus (\u0111\u1ed3ng thu\u1eadn) \u2022 Data Availability (kh\u1ea3 d\u1ee5ng d\u1eef li\u1ec7u) \u2022 Execution (th\u1ef1c thi giao d\u1ecbch) \u2022 Settlement (x\u00e1c nh\u1eadn tr\u1ea1ng th\u00e1i cu\u1ed1i c\u00f9ng) M\u1eb7c d\u00f9 c\u00e1ch thi\u1ebft k\u1ebf n\u00e0y gi\u00fap \u0111\u01a1n gi\u1ea3n ho\u00e1 vi\u1ec7c \u0111\u1ed3ng b\u1ed9 h\u00f3a v\u00e0 t\u01b0\u01a1ng t\u00e1c n\u1ed9i b\u1ed9, nh\u01b0ng n\u00f3 g\u1eb7p ph\u1ea3i nhi\u1ec1u h\u1ea1n ch\u1ebf nh\u01b0 l\u00e0 c\u00e0ng m\u1edf r\u1ed9ng quy m\u00f4, y\u00eau c\u1ea7u ph\u1ea7n c\u1ee9ng c\u1ee7a validator c\u00e0ng cao. T\u00ecnh tr\u1ea1ng state bloat (ph\u00ecnh to tr\u1ea1ng th\u00e1i) v\u00e0 state contention (c\u1ea1nh tranh truy c\u1eadp d\u1eef li\u1ec7u) l\u00e0m gi\u1ea3m hi\u1ec7u su\u1ea5t... \u0110\u1ec3 v\u01b0\u1ee3t qua gi\u1edbi h\u1ea1n tr\u00ean, c\u1ed9ng \u0111\u1ed3ng ph\u00e1t tri\u1ec3n d\u1ea7n chuy\u1ec3n sang ki\u1ebfn tr\u00fac modular. M\u00f4 h\u00ecnh modular t\u00e1ch ri\u00eang c\u00e1c l\u1edbp ch\u1ee9c n\u0103ng (nh\u01b0 consensus, execution, DA, settlement) \u2192 cho ph\u00e9p c\u00e1c chain: \u2022 Ho\u1ea1t \u0111\u1ed9ng song song v\u00e0 \u0111\u1ed9c l\u1eadp \u2022 T\u1ef1 duy tr\u00ec ch\u1ee7 quy\u1ec1n v\u1ec1 logic, governance, n\u00e2ng c\u1ea5p Nh\u1edd \u0111\u00f3, ki\u1ebfn tr\u00fac n\u00e0y n\u00e2ng cao kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng, \u0111\u1ed3ng th\u1eddi m\u1edf ra kh\u00f4ng gian s\u00e1ng t\u1ea1o l\u1edbn h\u01a1n cho developer.","title":"T\u1ed5ng quan ki\u1ebfn tr\u00fac blockchain"},{"location":"collections/Modular_blockchain/Celestia/Explore%20data%20availability%20solutions%20in%20the%20Rollup%20ecosystem/#reference","text":"[1] Orginial link: https://medium.com/tokamak-network [2] https://blog.celestia.org/modular-vs-monolithic-a-beginners-guide/ [3] https://www.symbolic.capital/writing/a-deep-dive-into-data-availability-the-promises-and-challenges-of-scaling-web3#other-da-players","title":"Reference"},{"location":"collections/Modular_blockchain/Celestia/Exploring_celestia_core/","text":"Exploring Celestia's Core Technologies Web3 Industry Research Conference Sharing Link: https://www.youtube.com/watch?v=O2KHor155dY Bu\u1ed5i seminar \u0111\u01b0\u1ee3c t\u1ed5 ch\u1ee9c b\u1edfi nh\u00f3m nghi\u00ean c\u1ee9u Web3. Di\u1ec5n gi\u1ea3 l\u00e0 anh Hoyt \u2014 technical partner t\u1ea1i W3.Hitchhiker. W3 l\u00e0 m\u1ed9t qu\u1ef9 \u0111\u1ea7u t\u01b0 v\u00e0 nh\u00f3m nghi\u00ean c\u1ee9u nh\u1ecf, c\u00e1c th\u00e0nh vi\u00ean ch\u1ee7 y\u1ebfu \u0111\u1ebfn t\u1eeb c\u00e1c t\u1ed5 ch\u1ee9c t\u00e0i ch\u00ednh truy\u1ec1n th\u1ed1ng, c\u00f4ng ty internet l\u1edbn v\u00e0 ng\u00e0nh game. H\u1ecd kh\u00f4ng ph\u1ea3i \u0111\u1ed9i d\u1ef1 \u00e1n Celestia, nh\u01b0ng mang \u0111\u1ebfn bu\u1ed5i chia s\u1ebb v\u1edbi g\u00f3c nh\u00ecn \u0111\u1ed9c l\u1eadp \u0111\u1ec3 l\u00e0m r\u00f5 m\u1ed9t s\u1ed1 hi\u1ec3u nh\u1ea7m ph\u1ed5 bi\u1ebfn v\u1ec1 Celestia, \u0111\u1eb7c bi\u1ec7t l\u00e0 v\u1ec1 \u201cdata availability\u201d. Celestia l\u00e0 g\u00ec? Celestia l\u00e0 m\u1ed9t public blockchain t\u1eadp trung v\u00e0o modularity (t\u00ednh m\u00f4-\u0111un). Thay v\u00ec t\u00edch h\u1ee3p m\u1ecdi ch\u1ee9c n\u0103ng nh\u01b0 consensus, execution, settlement v\u00e0o c\u00f9ng m\u1ed9t chain (nh\u01b0 Ethereum hay Avalanche), Celestia t\u00e1ch ch\u00fang ra l\u00e0m t\u1eebng th\u00e0nh ph\u1ea7n ri\u00eang bi\u1ec7t. M\u1ed7i chain trong h\u1ec7 sinh th\u00e1i ch\u1ec9 l\u00e0m m\u1ed9t vi\u1ec7c c\u1ee5 th\u1ec3. Data Availability l\u00e0 g\u00ec v\u00e0 v\u00ec sao l\u1ea1i quan tr\u1ecdng? Nhi\u1ec1u ng\u01b0\u1eddi ngh\u0129 \u0111\u01a1n gi\u1ea3n: d\u1eef li\u1ec7u ph\u1ea3i lu\u00f4n c\u00f3 th\u1ec3 t\u1ea3i v\u1ec1 b\u1ea5t c\u1ee9 l\u00fac n\u00e0o. Nh\u01b0ng \u0111\u00f3 kh\u00f4ng ph\u1ea3i l\u00e0 \u0111\u1ecbnh ngh\u0129a trong Celestia. V\u1edbi Celestia, data availability ngh\u0129a l\u00e0 d\u1eef li\u1ec7u kh\u00f4ng b\u1ecb che gi\u1ea5u b\u1edfi block producer. \u0110\u00e2y l\u00e0 \u0111i\u1ec3m m\u1ea5u ch\u1ed1t gi\u00fap c\u00e1c light node c\u00f3 th\u1ec3 x\u00e1c th\u1ef1c t\u00ednh to\u00e0n v\u1eb9n c\u1ee7a d\u1eef li\u1ec7u m\u00e0 kh\u00f4ng c\u1ea7n l\u01b0u tr\u1eef to\u00e0n b\u1ed9 chain. Vi\u1ec7c t\u00e1ch r\u1eddi c\u00e1c ch\u1ee9c n\u0103ng gi\u00fap c\u00e1c nh\u00f3m dev c\u00f3 th\u1ec3 t\u1eadp trung v\u00e0o ph\u1ea7n vi\u1ec7c chuy\u00ean m\u00f4n c\u1ee7a m\u00ecnh v\u00e0 \u0111\u1ea9y nhanh t\u1ed1c \u0111\u1ed9 \u0111\u1ed5i m\u1edbi. \u0110i\u1ec1u n\u00e0y kh\u00e1c v\u1edbi Ethereum, n\u01a1i m\u00e0 m\u1ecdi upgrade \u0111\u1ec1u ph\u1ea3i th\u00f4ng qua quy tr\u00ecnh d\u00e0i. Ethereum gi\u1ea3 \u0111\u1ecbnh \u0111a s\u1ed1 node l\u00e0 trung th\u1ef1c, v\u00e0 d\u1ef1a v\u00e0o c\u00e1c full node \u0111\u1ec3 duy tr\u00ec b\u1ea3o m\u1eadt. Celestia th\u00ec \u0111i h\u01b0\u1edbng ng\u01b0\u1ee3c l\u1ea1i: gi\u1ea3 \u0111\u1ecbnh \u0111a s\u1ed1 c\u00f3 th\u1ec3 kh\u00f4ng trung th\u1ef1c, v\u00e0 ch\u1ec9 c\u1ea7n m\u1ed9t v\u00e0i full node th\u00e0nh th\u1eadt l\u00e0 \u0111\u00e3 \u0111\u1ee7 \u0111\u1ec3 b\u1ea3o v\u1ec7 m\u1ea1ng nh\u1edd c\u01a1 ch\u1ebf data sampling.","title":"Exploring Celestia's Core Technologies"},{"location":"collections/Modular_blockchain/Celestia/Exploring_celestia_core/#exploring-celestias-core-technologies","text":"Web3 Industry Research Conference Sharing Link: https://www.youtube.com/watch?v=O2KHor155dY Bu\u1ed5i seminar \u0111\u01b0\u1ee3c t\u1ed5 ch\u1ee9c b\u1edfi nh\u00f3m nghi\u00ean c\u1ee9u Web3. Di\u1ec5n gi\u1ea3 l\u00e0 anh Hoyt \u2014 technical partner t\u1ea1i W3.Hitchhiker. W3 l\u00e0 m\u1ed9t qu\u1ef9 \u0111\u1ea7u t\u01b0 v\u00e0 nh\u00f3m nghi\u00ean c\u1ee9u nh\u1ecf, c\u00e1c th\u00e0nh vi\u00ean ch\u1ee7 y\u1ebfu \u0111\u1ebfn t\u1eeb c\u00e1c t\u1ed5 ch\u1ee9c t\u00e0i ch\u00ednh truy\u1ec1n th\u1ed1ng, c\u00f4ng ty internet l\u1edbn v\u00e0 ng\u00e0nh game. H\u1ecd kh\u00f4ng ph\u1ea3i \u0111\u1ed9i d\u1ef1 \u00e1n Celestia, nh\u01b0ng mang \u0111\u1ebfn bu\u1ed5i chia s\u1ebb v\u1edbi g\u00f3c nh\u00ecn \u0111\u1ed9c l\u1eadp \u0111\u1ec3 l\u00e0m r\u00f5 m\u1ed9t s\u1ed1 hi\u1ec3u nh\u1ea7m ph\u1ed5 bi\u1ebfn v\u1ec1 Celestia, \u0111\u1eb7c bi\u1ec7t l\u00e0 v\u1ec1 \u201cdata availability\u201d.","title":"Exploring Celestia's Core Technologies"},{"location":"collections/Modular_blockchain/Celestia/Exploring_celestia_core/#celestia-la-gi","text":"Celestia l\u00e0 m\u1ed9t public blockchain t\u1eadp trung v\u00e0o modularity (t\u00ednh m\u00f4-\u0111un). Thay v\u00ec t\u00edch h\u1ee3p m\u1ecdi ch\u1ee9c n\u0103ng nh\u01b0 consensus, execution, settlement v\u00e0o c\u00f9ng m\u1ed9t chain (nh\u01b0 Ethereum hay Avalanche), Celestia t\u00e1ch ch\u00fang ra l\u00e0m t\u1eebng th\u00e0nh ph\u1ea7n ri\u00eang bi\u1ec7t. M\u1ed7i chain trong h\u1ec7 sinh th\u00e1i ch\u1ec9 l\u00e0m m\u1ed9t vi\u1ec7c c\u1ee5 th\u1ec3.","title":"Celestia l\u00e0 g\u00ec?"},{"location":"collections/Modular_blockchain/Celestia/Exploring_celestia_core/#data-availability-la-gi-va-vi-sao-lai-quan-trong","text":"Nhi\u1ec1u ng\u01b0\u1eddi ngh\u0129 \u0111\u01a1n gi\u1ea3n: d\u1eef li\u1ec7u ph\u1ea3i lu\u00f4n c\u00f3 th\u1ec3 t\u1ea3i v\u1ec1 b\u1ea5t c\u1ee9 l\u00fac n\u00e0o. Nh\u01b0ng \u0111\u00f3 kh\u00f4ng ph\u1ea3i l\u00e0 \u0111\u1ecbnh ngh\u0129a trong Celestia. V\u1edbi Celestia, data availability ngh\u0129a l\u00e0 d\u1eef li\u1ec7u kh\u00f4ng b\u1ecb che gi\u1ea5u b\u1edfi block producer. \u0110\u00e2y l\u00e0 \u0111i\u1ec3m m\u1ea5u ch\u1ed1t gi\u00fap c\u00e1c light node c\u00f3 th\u1ec3 x\u00e1c th\u1ef1c t\u00ednh to\u00e0n v\u1eb9n c\u1ee7a d\u1eef li\u1ec7u m\u00e0 kh\u00f4ng c\u1ea7n l\u01b0u tr\u1eef to\u00e0n b\u1ed9 chain. Vi\u1ec7c t\u00e1ch r\u1eddi c\u00e1c ch\u1ee9c n\u0103ng gi\u00fap c\u00e1c nh\u00f3m dev c\u00f3 th\u1ec3 t\u1eadp trung v\u00e0o ph\u1ea7n vi\u1ec7c chuy\u00ean m\u00f4n c\u1ee7a m\u00ecnh v\u00e0 \u0111\u1ea9y nhanh t\u1ed1c \u0111\u1ed9 \u0111\u1ed5i m\u1edbi. \u0110i\u1ec1u n\u00e0y kh\u00e1c v\u1edbi Ethereum, n\u01a1i m\u00e0 m\u1ecdi upgrade \u0111\u1ec1u ph\u1ea3i th\u00f4ng qua quy tr\u00ecnh d\u00e0i. Ethereum gi\u1ea3 \u0111\u1ecbnh \u0111a s\u1ed1 node l\u00e0 trung th\u1ef1c, v\u00e0 d\u1ef1a v\u00e0o c\u00e1c full node \u0111\u1ec3 duy tr\u00ec b\u1ea3o m\u1eadt. Celestia th\u00ec \u0111i h\u01b0\u1edbng ng\u01b0\u1ee3c l\u1ea1i: gi\u1ea3 \u0111\u1ecbnh \u0111a s\u1ed1 c\u00f3 th\u1ec3 kh\u00f4ng trung th\u1ef1c, v\u00e0 ch\u1ec9 c\u1ea7n m\u1ed9t v\u00e0i full node th\u00e0nh th\u1eadt l\u00e0 \u0111\u00e3 \u0111\u1ee7 \u0111\u1ec3 b\u1ea3o v\u1ec7 m\u1ea1ng nh\u1edd c\u01a1 ch\u1ebf data sampling.","title":"Data Availability l\u00e0 g\u00ec v\u00e0 v\u00ec sao l\u1ea1i quan tr\u1ecdng?"},{"location":"collections/Modular_blockchain/Celestia/Is%20modular%20blockchain%20design%20the%20future%3F/","text":"Is modular blockchain design the future? How to use modularity may be a way to break through the impossible triangle? Original link: https://amberlabs.substack.com/p/is-modular-design-the-future","title":"Is modular blockchain design the future?"},{"location":"collections/Modular_blockchain/Celestia/Is%20modular%20blockchain%20design%20the%20future%3F/#is-modular-blockchain-design-the-future","text":"How to use modularity may be a way to break through the impossible triangle? Original link: https://amberlabs.substack.com/p/is-modular-design-the-future","title":"Is modular blockchain design the future?"},{"location":"collections/Modular_blockchain/Celestia/Modular_world/","text":"The Modular World An article on the novel functionalities of Celestia and the future of the modular world: https://rainandcoffee.substack.com/p/the-modular-world B\u00e0i vi\u1ebft n\u00e0y m\u00ecnh ch\u1ec9 translate l\u1ea1i v\u1edbi m\u1ee5c d\u00edch research v\u00e0 h\u1ecdc h\u1ecfi th\u00eam. B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam t\u1eeb b\u00e0i g\u1ed1c nh\u00e9. 1. Preface V\u00e0o n\u0103m 2019, khi Maven11 \u0111\u1ea7u t\u01b0 v\u00e0o LazyLedger (hi\u1ec7n t\u1ea1i l\u00e0 Celestia), thu\u1eadt ng\u1eef \u201cmodular\u201d v\u1eabn ch\u01b0a \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\u00e3i trong l\u0129nh v\u1ef1c thi\u1ebft k\u1ebf blockchain. Trong v\u00f2ng m\u1ed9t n\u0103m qua, kh\u00e1i ni\u1ec7m n\u00e0y \u0111\u00e3 d\u1ea7n tr\u1edf n\u00ean ph\u1ed5 bi\u1ebfn h\u01a1\u2014 nh\u1edd v\u00e0o nh\u1eefng ng\u01b0\u1eddi nh\u01b0 polynya , nhi\u1ec1u \u0111\u1ed9i ng\u0169 Layer 2, r\u1ea5t nhi\u1ec1u dev trong c\u1ed9ng \u0111\u1ed3ng, v\u00e0 t\u1ea5t nhi\u00ean c\u1ea3 Celestia Labs \u0111\u00e3 \u0111\u1eb7t ra thu\u1eadt ng\u1eef n\u00e0y trong b\u00e0i blog \u0111\u1ea7u ti\u00ean c\u1ee7a h\u1ecd v\u1edbi LazyLedger, khi n\u00f3i v\u1ec1 vi\u1ec7c t\u00e1ch r\u1eddi consensus v\u00e0 execution. N\u1ed9i dung n\u00e0y s\u1ebd mang \u0111\u1ebfn m\u1ed9t g\u00f3c nh\u00ecn r\u00f5 r\u00e0ng h\u01a1n v\u1ec1 to\u00e0n c\u1ea3nh c\u1ee7a modular blockchains m\u00e0 ch\u00fang ta h\u00ecnh dung, c\u00e1c l\u1edbp (layers) v\u00e0 giao th\u1ee9c (protocols) c\u1ea5u th\u00e0nh n\u00ean h\u1ec7 sinh th\u00e1i \u0111\u00f3, v\u00e0 l\u00fd do t\u1ea1i sao tin r\u1eb1ng Celestia \u0111ang m\u1edf ra nh\u1eefng t\u00ednh n\u0103ng \u0111\u1ed9t ph\u00e1 ch\u01b0a t\u1eebng c\u00f3 trong ng\u00e0nh. 2. V\u1ec1 Architecture Hi\u1ec7n nay, h\u1ea7u h\u1ebft c\u00e1c blockchain \u0111ang ho\u1ea1t \u0111\u1ed9ng c\u00f4ng khai \u0111\u1ec1u mang c\u1ea5u tr\u00fac monolithic t\u1ee9c l\u00e0 \u201cnguy\u00ean kh\u1ed1i\u201d. Ngh\u0129a l\u00e0 m\u1ed9t chain \u0111\u01a1n l\u1ebb t\u1ef1 \u0111\u1ea3m nh\u1eadn c\u1ea3 ba ch\u1ee9c n\u0103ng: data availability, settlement, v\u00e0 execution. D\u00f9 c\u00f3 m\u1ed9t v\u00e0i bi\u1ebfn th\u1ec3 nh\u1ea5t \u0111\u1ecbnh trong c\u00e1ch c\u00e1c chain t\u1ed5 ch\u1ee9c v\u00ed d\u1ee5 nh\u01b0 rollups tr\u00ean Ethereum hay subnets tr\u00ean Avalanche cho th\u1ea5y c\u00f3 y\u1ebfu t\u1ed1 m\u00f4-\u0111un \u1edf \u0111\u00e2u \u0111\u00f3, th\u00ec nh\u00ecn chung, ch\u00fang v\u1eabn kh\u00f4ng \u0111\u01b0\u1ee3c xem l\u00e0 \u201cmodular blockchain\u201d \u0111\u00fang ngh\u0129a. 2.1 V\u1eady \u201cmodular\u201d ngh\u0129a l\u00e0 g\u00ec? \u0110\u1ec3 tr\u00e1nh hi\u1ec3u nh\u1ea7m, ch\u00fang ta c\u1ea7n l\u00e0m r\u00f5: khi n\u00f3i \u201cmodular\u201d, ch\u00fang t\u00f4i mu\u1ed1n n\u00f3i \u0111\u1ebfn m\u1ed9t h\u1ec7 th\u1ed1ng trong \u0111\u00f3 c\u00e1c l\u1edbp v\u1ed1n th\u01b0\u1eddng \u0111\u01b0\u1ee3c t\u00edch h\u1ee3p l\u1ea1i \u0111\u01b0\u1ee3c t\u00e1ch ri\u00eang (decoupled) . C\u1ee5 th\u1ec3 l\u00e0 \u00edt nh\u1ea5t m\u1ed9t trong ba th\u00e0nh ph\u1ea7n ch\u00ednh (execution, consensus, data availability) kh\u00f4ng c\u00f2n n\u1eb1m trong c\u00f9ng m\u1ed9t chain n\u1eefa. V\u00ed d\u1ee5: Rollups l\u00e0 m\u00f4 h\u00ecnh modular v\u00ec ch\u00fang ch\u1ec9 \u0111\u1ea3m nh\u1eadn ph\u1ea7n execution, trong khi Ethereum v\u1edbi t\u01b0 c\u00e1ch m\u1ed9t chain nguy\u00ean kh\u1ed1i v\u1eabn ch\u1ecbu tr\u00e1ch nhi\u1ec7m cho consensus v\u00e0 data availability. 2.2 Celestia \u2014 Modular Cho n\u00ean Celestia ch\u00ednh l\u00e0 m\u1ed9t blockchain m\u00f4-\u0111un \u0111\u00fang ngh\u0129a. N\u00f3 ch\u1ec9 \u0111\u1ea3m nh\u1eadn data availability v\u00e0 consensus, c\u00f2n execution v\u00e0 settlement \u0111\u01b0\u1ee3c chuy\u1ec3n cho c\u00e1c l\u1edbp b\u00ean ngo\u00e0i v\u00ed d\u1ee5 nh\u01b0 rollups ho\u1eb7c c\u00e1c app-specific chains. Nh\u1eefng l\u1edbp n\u00e0y c\u0169ng \u0111\u01b0\u1ee3c xem l\u00e0 m\u00f4-\u0111un, v\u00ec m\u1ed7i b\u00ean ch\u1ec9 ph\u1ee5 tr\u00e1ch m\u1ed9t ph\u1ea7n ch\u1ee9c n\u0103ng ri\u00eang bi\u1ec7t. Ng\u01b0\u1ee3c l\u1ea1i, Ethereum d\u00f9 c\u00f3 t\u00edch h\u1ee3p rollups v\u1eabn l\u00e0 m\u1ed9t chain monolithic, v\u00ec b\u1ea3n th\u00e2n n\u00f3 v\u1eabn c\u00f3 th\u1ec3 t\u1ef1 x\u1eed l\u00fd execution. Rollups ch\u1ec9 l\u00e0 \u201cb\u1ed5 sung\u201d ch\u1ee9 kh\u00f4ng ph\u1ea3i \u201cthay th\u1ebf\u201d. Cho n\u00ean, d\u00f9 rollups mang t\u00ednh modular, Ethereum hi\u1ec7n t\u1ea1i v\u1eabn v\u1eadn h\u00e0nh nh\u01b0 m\u1ed9t chain nguy\u00ean kh\u1ed1i. 2.3 C\u00f2n Polkadot v\u00e0 Avalanche th\u00ec sao? V\u1edbi Avalanche kh\u00f4ng h\u1eb3n l\u00e0 modular, m\u00e0 l\u00e0 h\u1ec7 th\u1ed1ng c\u00e1c m\u1ea1ng t\u00e1ch r\u1eddi (subnets) , m\u1ed7i c\u00e1i \u0111\u1ec1u c\u00f3 kh\u1ea3 n\u0103ng x\u1eed l\u00fd to\u00e0n b\u1ed9 ch\u1ee9c n\u0103ng blockchain. T\u1ee9c l\u00e0 n\u00f3 scale theo chi\u1ec1u ngang b\u1eb1ng c\u00e1ch nh\u00e2n b\u1ea3n c\u00e1c chain nguy\u00ean kh\u1ed1i ch\u1ee9 kh\u00f4ng t\u00e1ch ri\u00eang t\u1eebng ch\u1ee9c n\u0103ng. V\u1edbi Polkadot th\u00ec l\u1ea1i c\u00f3 n\u00e9t gi\u1ed1ng rollups h\u01a1n c\u00e1c parachains ch\u1ec9 lo execution, c\u00f2n consensus v\u00e0 data availability \u0111\u01b0\u1ee3c \u0111\u1ea3m nh\u1eadn b\u1edfi relay chain. Tuy nhi\u00ean, relay chain v\u1eabn tham gia x\u00e1c th\u1ef1c t\u00ednh h\u1ee3p l\u1ec7 c\u1ee7a c\u00e1c giao d\u1ecbch, m\u00f4 h\u00ecnh n\u00e0y kh\u00f4ng ph\u1ea3i ho\u00e0n to\u00e0n t\u00e1ch r\u1eddi nh\u01b0 Celestia. 2.4 V\u1ea5n \u0111\u1ec1 c\u1ee7a m\u00f4 h\u00ecnh monolithic C\u00e0ng v\u1ec1 sau, c\u00e1c chain nguy\u00ean kh\u1ed1i c\u00e0ng \u0111\u1ed1i m\u1eb7t v\u1edbi v\u1ea5n \u0111\u1ec1 t\u1eafc ngh\u1ebdn v\u00e0 thi\u1ebfu hi\u1ec7u qu\u1ea3 . N\u1ebfu t\u1ea5t c\u1ea3 m\u1ecdi th\u1ee9 t\u1eeb app DeFi, NFT, game, DAO\u2026 \u2014 \u0111\u1ec1u ch\u1ea1y chung m\u1ed9t chain, th\u00ec ph\u00ed s\u1ebd cao, t\u1ed1c \u0111\u1ed9 x\u1eed l\u00fd ch\u1eadm, v\u00e0 tr\u1ea3i nghi\u1ec7m ng\u01b0\u1eddi d\u00f9ng ng\u00e0y c\u00e0ng t\u1ec7. Ch\u00ednh v\u00ec v\u1eady, ng\u00e0y c\u00e0ng c\u00f3 nhi\u1ec1u blockchain \u0111i theo h\u01b0\u1edbng t\u00e1ch nh\u1ecf c\u1ea5u tr\u00fac chain . Ethereum l\u00e0 v\u00ed d\u1ee5 r\u00f5 nh\u1ea5t sau The Merge chuy\u1ec3n sang Proof-of-Stake, h\u1ecd c\u00f2n c\u00f3 k\u1ebf ho\u1ea1ch tri\u1ec3n khai sharding chia blockchain th\u00e0nh c\u00e1c ph\u1ea7n nh\u1ecf, m\u1ed7i shard chuy\u00ean x\u1eed l\u00fd data availability. Khi k\u1ebft h\u1ee3p c\u00f9ng rollups, \u0111\u00e2y l\u00e0 l\u1eddi gi\u1ea3i m\u00e0 c\u1ed9ng \u0111\u1ed3ng Ethereum \u0111\u1eb7t c\u01b0\u1ee3c \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 m\u1edf r\u1ed9ng. \u0110\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n c\u00e1ch m\u00e0 c\u00e1c ki\u1ebfn tr\u00fac \u201cmodular\u201d v\u1eadn h\u00e0nh trong th\u1ef1c t\u1ebf, ch\u00fang ta h\u00e3y c\u00f9ng ph\u00e1c ho\u1ea1 s\u01a1 \u0111\u1ed3 ki\u1ebfn tr\u00fac c\u1ee7a m\u1ed9t s\u1ed1 blockchain l\u1edbn hi\u1ec7n nay t\u1eeb Ethereum, Avalanche, Cosmos \u0111\u1ebfn Celestia \u0111\u1ec3 th\u1ea5y r\u00f5 s\u1ef1 kh\u00e1c bi\u1ec7t v\u1ec1 c\u00e1ch t\u00e1ch l\u1edbp (decoupling) trong h\u1ec7 th\u1ed1ng. 3.So s\u00e1nh Ki\u1ebfn tr\u00fac: T\u1eeb Monolithic \u0111\u1ebfn Modular 3.1 Ethereum: T\u1eeb Monolithic \u0111\u1ebfn Sharded Settlement Layer Hi\u1ec7n t\u1ea1i, Ethereum v\u1eabn l\u00e0 m\u1ed9t chain nguy\u00ean kh\u1ed1i (monolithic) : t\u1ef1 \u0111\u1ea3m nh\u1eadn consensus, execution, data availability, settlement . Tuy nhi\u00ean, m\u1ed9t ph\u1ea7n execution \u0111\u00e3 \u0111\u01b0\u1ee3c \u201coutsource\u201d sang c\u00e1c rollups L2 , sau \u0111\u00f3 t\u1ed5ng h\u1ee3p (batch) d\u1eef li\u1ec7u v\u00e0 \u0111\u1ea9y v\u1ec1 Ethereum \u0111\u1ec3 x\u00e1c th\u1ef1c v\u00e0 l\u01b0u tr\u1eef. Trong t\u01b0\u01a1ng lai, v\u1edbi sharding, Ethereum s\u1ebd c\u00f3 ki\u1ebfn tr\u00fac nh\u01b0 sau: Ethereum mainnet tr\u1edf th\u00e0nh l\u1edbp settlement th\u1ed1ng nh\u1ea5t (unified settlement layer) C\u00e1c shard s\u1ebd \u0111\u00f3ng vai tr\u00f2 m\u00f4i tr\u01b0\u1eddng data availability d\u00e0nh cho rollups. M\u1ed7i validator ch\u1ec9 l\u01b0u tr\u1eef d\u1eef li\u1ec7u c\u1ee7a shard m\u00ecnh ph\u1ee5 tr\u00e1ch, thay v\u00ec to\u00e0n b\u1ed9 chain \u2192 cho ph\u00e9p ch\u1ea1y light node nh\u01b0 Celestia. Ethereum v\u1eabn gi\u1eef vai tr\u00f2 trust anchor , nh\u01b0ng s\u1ebd gi\u1ea3m g\u00e1nh n\u1eb7ng DA v\u00e0 execution xu\u1ed1ng c\u00e1c t\u1ea7ng d\u01b0\u1edbi (rollup + shard). 3.2 Avalanche: Horizontal Scaling v\u1edbi Subnets Avalanche m\u1edf r\u1ed9ng quy m\u00f4 qua m\u00f4 h\u00ecnh subnet t\u1ee9c l\u00e0 c\u00e1c blockchain m\u1edbi c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u1ea1o d\u1ec5 d\u00e0ng , m\u1ed7i c\u00e1i \u0111\u01b0\u1ee3c x\u00e1c th\u1ef1c b\u1edfi m\u1ed9t nh\u00f3m validator ri\u00eang bi\u1ec7t. M\u1ed7i subnet l\u00e0 m\u1ed9t chain \u0111\u1ed9c l\u1eadp : t\u1ef1 x\u1eed l\u00fd consensus, execution v\u00e0 data availability. Subnet c\u00f3 th\u1ec3 ch\u1ecdn token gas ri\u00eang (v\u00ed d\u1ee5: JEWEL cho subnet DefiKingdoms). M\u1ed7i chain ch\u1ec9 \u0111\u01b0\u1ee3c x\u00e1c th\u1ef1c b\u1edfi m\u1ed9t subnet duy nh\u1ea5t. Avalanche kh\u00f4ng th\u1eadt s\u1ef1 modular v\u00ec m\u1ed7i subnet v\u1eabn l\u00e0 m\u1ed9t monolithic chain nh\u1ecf, kh\u00f4ng c\u00f3 t\u00e1ch l\u1edbp r\u00f5 r\u00e0ng. 3.3 Cosmos: Modular t\u1eeb l\u1edbp Application Cosmos kh\u00f4ng modular ki\u1ec3u ki\u1ebfn tr\u00fac \u201clayered\u201d, m\u00e0 modular \u1edf l\u1edbp application layer: D\u00f9ng Tendermint (ho\u1eb7c Optimint) \u0111\u1ec3 x\u1eed l\u00fd consensus + networking DApp kh\u00f4ng deploy v\u00e0o m\u1ed9t VM nh\u01b0 Ethereum, m\u00e0 vi\u1ebft ri\u00eang th\u00e0nh m\u1ed9t Cosmos SDK chain \u0111\u1ed9c l\u1eadp ABCI (Application Blockchain Interface) l\u00e0 c\u1ea7u n\u1ed1i gi\u1eefa logic \u1ee9ng d\u1ee5ng v\u00e0 consensus engine Cosmos chains v\u00ec v\u1eady c\u00f3 th\u1ec3: * \u0110\u1ecbnh ngh\u0129a transaction & state logic t\u00f9y \u00fd * K\u1ebft n\u1ed1i v\u1edbi nhau qua IBC \u0111\u1ec3 trao \u0111\u1ed5i d\u1eef li\u1ec7u/liquidity * Tri\u1ec3n khai nhanh m\u1ed9t chain chuy\u00ean bi\u1ec7t, v\u1edbi t\u00ednh n\u0103ng \u0111\u1ed9c \u0111\u00e1o -> \u0110\u00e2y l\u00e0 m\u00f4 h\u00ecnh modular v\u1ec1 m\u1eb7t logic \u1ee9ng d\u1ee5ng, kh\u00f4ng ph\u1ea3i modular v\u1ec1 h\u1ea1 t\u1ea7ng nh\u01b0 Celestia. 3.4 Celestia: Shared DA + Consensus cho Modular Stack Cu\u1ed1i c\u00f9ng, ta \u0111\u1ebfn v\u1edbi Celestia m\u1ed9t blockchain kh\u00f4ng ch\u1ea1y \u1ee9ng d\u1ee5ng, m\u00e0 ch\u1ec9 cung c\u1ea5p: * Data Availability Layer * Consensus Layer Celestia \u0111\u00f3ng vai tr\u00f2 l\u00e0 l\u1edbp n\u1ec1n t\u1ea3ng d\u00f9ng chung (shared base layer) cho h\u00e0ng lo\u1ea1t rollups \u1edf t\u1ea7ng tr\u00ean. H\u1ec7 sinh th\u00e1i Celestia c\u00f3 th\u1ec3 c\u00f3: H\u1ec7 sinh th\u00e1i Celestia c\u00f3 th\u1ec3 c\u00f3: \u2022 C\u00e1c sovereign rollups \u0111\u1ed9c l\u1eadp, kh\u00f4ng c\u1ea7n settlement layer \u2022 M\u1ed9t s\u1ed1 settlement layers trung gian gi\u00fap k\u1ebft n\u1ed1i thanh kho\u1ea3n v\u00e0 bridge gi\u1eefa rollups \u2022 C\u00e1c rollups t\u00f9y ch\u1ecdn m\u00f4i tr\u01b0\u1eddng execution ri\u00eang, tu\u1ef3 v\u00e0o use case (game, DeFi, social\u2026) Nh\u01b0 v\u1eady b\u1ea1n c\u00f3 th\u1ec3 hi\u1ec3u Celestia \u0111\u00f3ng vai tr\u00f2 l\u00e0 l\u1edbp \u0111\u1ed3ng thu\u1eadn (consensus) v\u00e0 ph\u00e2n ph\u1ed1i d\u1eef li\u1ec7u (data availability) d\u00f9ng chung cho to\u00e0n b\u1ed9 c\u00e1c lo\u1ea1i rollups kh\u00e1c nhau trong m\u00f4 h\u00ecnh modular stack. Ph\u00eda tr\u00ean Celestia, c\u00f3 th\u1ec3 s\u1ebd xu\u1ea5t hi\u1ec7n m\u1ed9t s\u1ed1 l\u1edbp settlement trung gian \u2013 l\u00e0m nhi\u1ec7m v\u1ee5 k\u1ebft n\u1ed1i, cung c\u1ea5p thanh kho\u1ea3n v\u00e0 x\u1eed l\u00fd vi\u1ec7c chuy\u1ec3n giao tr\u1ea1ng th\u00e1i gi\u1eefa c\u00e1c rollups. Sau khi \u0111\u00e3 ph\u00e2n t\u00edch c\u00e1c ki\u1ebfn tr\u00fac blockchain v\u1edbi m\u1ee9c \u0111\u1ed9 modularity kh\u00e1c nhau t\u1eeb monolithic, semi-modular \u0111\u1ebfn fully modular th\u00ec gi\u1edd \u0111\u1ebfn v\u1edbi n\u1ed9i dung v\u1edbi m\u00f4 h\u00ecnh ho\u00e0n to\u00e0n m\u00f4-\u0111un nh\u01b0 Celestia, ch\u00fang ta th\u1ef1c s\u1ef1 c\u00f3 th\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u g\u00ec m\u1edbi? 4. Shared Security M\u1ed9t trong nh\u1eefng \u01b0u \u0111i\u1ec3m d\u1ec5 th\u1ea5y c\u1ee7a c\u00e1c blockchain monolithic l\u00e0 m\u1ecdi ng\u01b0\u1eddi d\u00f9ng, \u1ee9ng d\u1ee5ng v\u00e0 rollup v\u1eadn h\u00e0nh tr\u00ean \u0111\u00f3 \u0111\u1ec1u th\u1eeba h\u01b0\u1edfng chung l\u1edbp b\u1ea3o m\u1eadt g\u1ed1c c\u1ee7a h\u1ec7 th\u1ed1ng. V\u1eady \u0111i\u1ec1u n\u00e0y s\u1ebd v\u1eadn h\u00e0nh nh\u01b0 th\u1ebf n\u00e0o trong m\u1ed9t ki\u1ebfn tr\u00fac modular nh\u01b0 Celestia? C\u00e2u tr\u1ea3 l\u1eddi kh\u00e1 \u0111\u01a1n gi\u1ea3n Celestia cung c\u1ea5p ch\u00ednh l\u1edbp d\u1eef li\u1ec7u s\u1eb5n c\u00f3 (data availability layer) l\u00e0 y\u1ebfu t\u1ed1 c\u1ed1t l\u00f5i gi\u00fap c\u00e1c chain c\u00f3 th\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c shared security m\u1ed9t c\u00e1ch t\u1ef1 nhi\u00ean. Trong m\u1ecdi tr\u01b0\u1eddng h\u1ee3p, b\u1ea5t c\u1ee9 layer n\u00e0o s\u1eed d\u1ee5ng Celestia \u0111\u1ec1u ph\u1ea3i c\u00f4ng b\u1ed1 to\u00e0n b\u1ed9 d\u1eef li\u1ec7u giao d\u1ecbch l\u00ean DA layer \u0111\u1ec3 ch\u1ee9ng minh r\u1eb1ng d\u1eef li\u1ec7u th\u1ef1c s\u1ef1 \u0111\u00e3 \u0111\u01b0\u1ee3c xu\u1ea5t b\u1ea3n (v\u00e0 kh\u00f4ng b\u1ecb che gi\u1ea5u). \u0110i\u1ec1u n\u00e0y t\u1ea1o ra m\u1ed9t \u201ctr\u01b0\u1eddng th\u00f4ng tin chung\u201d \u0111\u1ec3 quan s\u00e1t, k\u1ebft n\u1ed1i v\u00e0 chia s\u1ebb d\u1eef li\u1ec7u. Vi\u1ec7c n\u00e0y c\u0169ng \u0111\u01a1n gi\u1ea3n ho\u00e1 qu\u00e1 tr\u00ecnh fork (c\u1ea3 soft fork l\u1eabn hard fork) , b\u1edfi v\u00ec m\u1ecdi d\u1eef li\u1ec7u v\u00e0 tr\u1ea1ng th\u00e1i \u0111\u1ec1u \u0111\u01b0\u1ee3c c\u00f4ng b\u1ed1 c\u00f4ng khai, minh b\u1ea1ch tr\u00ean DA layer. Celestia cho ph\u00e9p tri\u1ec3n khai c\u00e1c execution layer mang t\u00ednh th\u1eed nghi\u1ec7m , ho\u1ea1t \u0111\u1ed9ng song song m\u00e0 kh\u00f4ng c\u1ea7n ph\u1ea3i d\u1ef1a v\u00e0o m\u1ed9t l\u1edbp settlement c\u1ed1 \u0111\u1ecbnh. Nh\u01b0ng c\u00e1c layer \u0111\u00f3 v\u1eabn k\u1ebf th\u1eeba t\u00ednh an to\u00e0n t\u1eeb l\u1edbp DA d\u00f9ng chung T\u00ednh ch\u1ea5t permissionless c\u1ee7a modularity cho ph\u00e9p b\u1ea5t k\u1ef3 dev n\u00e0o c\u0169ng c\u00f3 th\u1ec3 kh\u1edfi ch\u1ea1y execution layer m\u1edbi m\u00e0 kh\u00f4ng c\u1ea7n xin ph\u00e9p, kh\u00f4ng b\u1ecb r\u00e0o c\u1ea3n k\u1ef9 thu\u1eadt, v\u00e0 ho\u00e0n to\u00e0n tu\u1ef3 ch\u1ecdn stack ph\u00f9 h\u1ee3p.","title":"The Modular World"},{"location":"collections/Modular_blockchain/Celestia/Modular_world/#the-modular-world","text":"An article on the novel functionalities of Celestia and the future of the modular world: https://rainandcoffee.substack.com/p/the-modular-world B\u00e0i vi\u1ebft n\u00e0y m\u00ecnh ch\u1ec9 translate l\u1ea1i v\u1edbi m\u1ee5c d\u00edch research v\u00e0 h\u1ecdc h\u1ecfi th\u00eam. B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam t\u1eeb b\u00e0i g\u1ed1c nh\u00e9.","title":"The Modular World"},{"location":"collections/Modular_blockchain/Celestia/Modular_world/#1-preface","text":"V\u00e0o n\u0103m 2019, khi Maven11 \u0111\u1ea7u t\u01b0 v\u00e0o LazyLedger (hi\u1ec7n t\u1ea1i l\u00e0 Celestia), thu\u1eadt ng\u1eef \u201cmodular\u201d v\u1eabn ch\u01b0a \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\u00e3i trong l\u0129nh v\u1ef1c thi\u1ebft k\u1ebf blockchain. Trong v\u00f2ng m\u1ed9t n\u0103m qua, kh\u00e1i ni\u1ec7m n\u00e0y \u0111\u00e3 d\u1ea7n tr\u1edf n\u00ean ph\u1ed5 bi\u1ebfn h\u01a1\u2014 nh\u1edd v\u00e0o nh\u1eefng ng\u01b0\u1eddi nh\u01b0 polynya , nhi\u1ec1u \u0111\u1ed9i ng\u0169 Layer 2, r\u1ea5t nhi\u1ec1u dev trong c\u1ed9ng \u0111\u1ed3ng, v\u00e0 t\u1ea5t nhi\u00ean c\u1ea3 Celestia Labs \u0111\u00e3 \u0111\u1eb7t ra thu\u1eadt ng\u1eef n\u00e0y trong b\u00e0i blog \u0111\u1ea7u ti\u00ean c\u1ee7a h\u1ecd v\u1edbi LazyLedger, khi n\u00f3i v\u1ec1 vi\u1ec7c t\u00e1ch r\u1eddi consensus v\u00e0 execution. N\u1ed9i dung n\u00e0y s\u1ebd mang \u0111\u1ebfn m\u1ed9t g\u00f3c nh\u00ecn r\u00f5 r\u00e0ng h\u01a1n v\u1ec1 to\u00e0n c\u1ea3nh c\u1ee7a modular blockchains m\u00e0 ch\u00fang ta h\u00ecnh dung, c\u00e1c l\u1edbp (layers) v\u00e0 giao th\u1ee9c (protocols) c\u1ea5u th\u00e0nh n\u00ean h\u1ec7 sinh th\u00e1i \u0111\u00f3, v\u00e0 l\u00fd do t\u1ea1i sao tin r\u1eb1ng Celestia \u0111ang m\u1edf ra nh\u1eefng t\u00ednh n\u0103ng \u0111\u1ed9t ph\u00e1 ch\u01b0a t\u1eebng c\u00f3 trong ng\u00e0nh.","title":"1. Preface"},{"location":"collections/Modular_blockchain/Celestia/Modular_world/#2-ve-architecture","text":"Hi\u1ec7n nay, h\u1ea7u h\u1ebft c\u00e1c blockchain \u0111ang ho\u1ea1t \u0111\u1ed9ng c\u00f4ng khai \u0111\u1ec1u mang c\u1ea5u tr\u00fac monolithic t\u1ee9c l\u00e0 \u201cnguy\u00ean kh\u1ed1i\u201d. Ngh\u0129a l\u00e0 m\u1ed9t chain \u0111\u01a1n l\u1ebb t\u1ef1 \u0111\u1ea3m nh\u1eadn c\u1ea3 ba ch\u1ee9c n\u0103ng: data availability, settlement, v\u00e0 execution. D\u00f9 c\u00f3 m\u1ed9t v\u00e0i bi\u1ebfn th\u1ec3 nh\u1ea5t \u0111\u1ecbnh trong c\u00e1ch c\u00e1c chain t\u1ed5 ch\u1ee9c v\u00ed d\u1ee5 nh\u01b0 rollups tr\u00ean Ethereum hay subnets tr\u00ean Avalanche cho th\u1ea5y c\u00f3 y\u1ebfu t\u1ed1 m\u00f4-\u0111un \u1edf \u0111\u00e2u \u0111\u00f3, th\u00ec nh\u00ecn chung, ch\u00fang v\u1eabn kh\u00f4ng \u0111\u01b0\u1ee3c xem l\u00e0 \u201cmodular blockchain\u201d \u0111\u00fang ngh\u0129a.","title":"2. V\u1ec1 Architecture"},{"location":"collections/Modular_blockchain/Celestia/Modular_world/#21-vay-modular-nghia-la-gi","text":"\u0110\u1ec3 tr\u00e1nh hi\u1ec3u nh\u1ea7m, ch\u00fang ta c\u1ea7n l\u00e0m r\u00f5: khi n\u00f3i \u201cmodular\u201d, ch\u00fang t\u00f4i mu\u1ed1n n\u00f3i \u0111\u1ebfn m\u1ed9t h\u1ec7 th\u1ed1ng trong \u0111\u00f3 c\u00e1c l\u1edbp v\u1ed1n th\u01b0\u1eddng \u0111\u01b0\u1ee3c t\u00edch h\u1ee3p l\u1ea1i \u0111\u01b0\u1ee3c t\u00e1ch ri\u00eang (decoupled) . C\u1ee5 th\u1ec3 l\u00e0 \u00edt nh\u1ea5t m\u1ed9t trong ba th\u00e0nh ph\u1ea7n ch\u00ednh (execution, consensus, data availability) kh\u00f4ng c\u00f2n n\u1eb1m trong c\u00f9ng m\u1ed9t chain n\u1eefa. V\u00ed d\u1ee5: Rollups l\u00e0 m\u00f4 h\u00ecnh modular v\u00ec ch\u00fang ch\u1ec9 \u0111\u1ea3m nh\u1eadn ph\u1ea7n execution, trong khi Ethereum v\u1edbi t\u01b0 c\u00e1ch m\u1ed9t chain nguy\u00ean kh\u1ed1i v\u1eabn ch\u1ecbu tr\u00e1ch nhi\u1ec7m cho consensus v\u00e0 data availability.","title":"2.1 V\u1eady \u201cmodular\u201d ngh\u0129a l\u00e0 g\u00ec?"},{"location":"collections/Modular_blockchain/Celestia/Modular_world/#22-celestia-modular","text":"Cho n\u00ean Celestia ch\u00ednh l\u00e0 m\u1ed9t blockchain m\u00f4-\u0111un \u0111\u00fang ngh\u0129a. N\u00f3 ch\u1ec9 \u0111\u1ea3m nh\u1eadn data availability v\u00e0 consensus, c\u00f2n execution v\u00e0 settlement \u0111\u01b0\u1ee3c chuy\u1ec3n cho c\u00e1c l\u1edbp b\u00ean ngo\u00e0i v\u00ed d\u1ee5 nh\u01b0 rollups ho\u1eb7c c\u00e1c app-specific chains. Nh\u1eefng l\u1edbp n\u00e0y c\u0169ng \u0111\u01b0\u1ee3c xem l\u00e0 m\u00f4-\u0111un, v\u00ec m\u1ed7i b\u00ean ch\u1ec9 ph\u1ee5 tr\u00e1ch m\u1ed9t ph\u1ea7n ch\u1ee9c n\u0103ng ri\u00eang bi\u1ec7t. Ng\u01b0\u1ee3c l\u1ea1i, Ethereum d\u00f9 c\u00f3 t\u00edch h\u1ee3p rollups v\u1eabn l\u00e0 m\u1ed9t chain monolithic, v\u00ec b\u1ea3n th\u00e2n n\u00f3 v\u1eabn c\u00f3 th\u1ec3 t\u1ef1 x\u1eed l\u00fd execution. Rollups ch\u1ec9 l\u00e0 \u201cb\u1ed5 sung\u201d ch\u1ee9 kh\u00f4ng ph\u1ea3i \u201cthay th\u1ebf\u201d. Cho n\u00ean, d\u00f9 rollups mang t\u00ednh modular, Ethereum hi\u1ec7n t\u1ea1i v\u1eabn v\u1eadn h\u00e0nh nh\u01b0 m\u1ed9t chain nguy\u00ean kh\u1ed1i.","title":"2.2 Celestia \u2014 Modular"},{"location":"collections/Modular_blockchain/Celestia/Modular_world/#23-con-polkadot-va-avalanche-thi-sao","text":"V\u1edbi Avalanche kh\u00f4ng h\u1eb3n l\u00e0 modular, m\u00e0 l\u00e0 h\u1ec7 th\u1ed1ng c\u00e1c m\u1ea1ng t\u00e1ch r\u1eddi (subnets) , m\u1ed7i c\u00e1i \u0111\u1ec1u c\u00f3 kh\u1ea3 n\u0103ng x\u1eed l\u00fd to\u00e0n b\u1ed9 ch\u1ee9c n\u0103ng blockchain. T\u1ee9c l\u00e0 n\u00f3 scale theo chi\u1ec1u ngang b\u1eb1ng c\u00e1ch nh\u00e2n b\u1ea3n c\u00e1c chain nguy\u00ean kh\u1ed1i ch\u1ee9 kh\u00f4ng t\u00e1ch ri\u00eang t\u1eebng ch\u1ee9c n\u0103ng. V\u1edbi Polkadot th\u00ec l\u1ea1i c\u00f3 n\u00e9t gi\u1ed1ng rollups h\u01a1n c\u00e1c parachains ch\u1ec9 lo execution, c\u00f2n consensus v\u00e0 data availability \u0111\u01b0\u1ee3c \u0111\u1ea3m nh\u1eadn b\u1edfi relay chain. Tuy nhi\u00ean, relay chain v\u1eabn tham gia x\u00e1c th\u1ef1c t\u00ednh h\u1ee3p l\u1ec7 c\u1ee7a c\u00e1c giao d\u1ecbch, m\u00f4 h\u00ecnh n\u00e0y kh\u00f4ng ph\u1ea3i ho\u00e0n to\u00e0n t\u00e1ch r\u1eddi nh\u01b0 Celestia.","title":"2.3 C\u00f2n Polkadot v\u00e0 Avalanche th\u00ec sao?"},{"location":"collections/Modular_blockchain/Celestia/Modular_world/#24-van-e-cua-mo-hinh-monolithic","text":"C\u00e0ng v\u1ec1 sau, c\u00e1c chain nguy\u00ean kh\u1ed1i c\u00e0ng \u0111\u1ed1i m\u1eb7t v\u1edbi v\u1ea5n \u0111\u1ec1 t\u1eafc ngh\u1ebdn v\u00e0 thi\u1ebfu hi\u1ec7u qu\u1ea3 . N\u1ebfu t\u1ea5t c\u1ea3 m\u1ecdi th\u1ee9 t\u1eeb app DeFi, NFT, game, DAO\u2026 \u2014 \u0111\u1ec1u ch\u1ea1y chung m\u1ed9t chain, th\u00ec ph\u00ed s\u1ebd cao, t\u1ed1c \u0111\u1ed9 x\u1eed l\u00fd ch\u1eadm, v\u00e0 tr\u1ea3i nghi\u1ec7m ng\u01b0\u1eddi d\u00f9ng ng\u00e0y c\u00e0ng t\u1ec7. Ch\u00ednh v\u00ec v\u1eady, ng\u00e0y c\u00e0ng c\u00f3 nhi\u1ec1u blockchain \u0111i theo h\u01b0\u1edbng t\u00e1ch nh\u1ecf c\u1ea5u tr\u00fac chain . Ethereum l\u00e0 v\u00ed d\u1ee5 r\u00f5 nh\u1ea5t sau The Merge chuy\u1ec3n sang Proof-of-Stake, h\u1ecd c\u00f2n c\u00f3 k\u1ebf ho\u1ea1ch tri\u1ec3n khai sharding chia blockchain th\u00e0nh c\u00e1c ph\u1ea7n nh\u1ecf, m\u1ed7i shard chuy\u00ean x\u1eed l\u00fd data availability. Khi k\u1ebft h\u1ee3p c\u00f9ng rollups, \u0111\u00e2y l\u00e0 l\u1eddi gi\u1ea3i m\u00e0 c\u1ed9ng \u0111\u1ed3ng Ethereum \u0111\u1eb7t c\u01b0\u1ee3c \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 m\u1edf r\u1ed9ng. \u0110\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n c\u00e1ch m\u00e0 c\u00e1c ki\u1ebfn tr\u00fac \u201cmodular\u201d v\u1eadn h\u00e0nh trong th\u1ef1c t\u1ebf, ch\u00fang ta h\u00e3y c\u00f9ng ph\u00e1c ho\u1ea1 s\u01a1 \u0111\u1ed3 ki\u1ebfn tr\u00fac c\u1ee7a m\u1ed9t s\u1ed1 blockchain l\u1edbn hi\u1ec7n nay t\u1eeb Ethereum, Avalanche, Cosmos \u0111\u1ebfn Celestia \u0111\u1ec3 th\u1ea5y r\u00f5 s\u1ef1 kh\u00e1c bi\u1ec7t v\u1ec1 c\u00e1ch t\u00e1ch l\u1edbp (decoupling) trong h\u1ec7 th\u1ed1ng.","title":"2.4 V\u1ea5n \u0111\u1ec1 c\u1ee7a m\u00f4 h\u00ecnh monolithic"},{"location":"collections/Modular_blockchain/Celestia/Modular_world/#3so-sanh-kien-truc-tu-monolithic-en-modular","text":"","title":"3.So s\u00e1nh Ki\u1ebfn tr\u00fac: T\u1eeb Monolithic \u0111\u1ebfn Modular"},{"location":"collections/Modular_blockchain/Celestia/Modular_world/#31-ethereum-tu-monolithic-en-sharded-settlement-layer","text":"Hi\u1ec7n t\u1ea1i, Ethereum v\u1eabn l\u00e0 m\u1ed9t chain nguy\u00ean kh\u1ed1i (monolithic) : t\u1ef1 \u0111\u1ea3m nh\u1eadn consensus, execution, data availability, settlement . Tuy nhi\u00ean, m\u1ed9t ph\u1ea7n execution \u0111\u00e3 \u0111\u01b0\u1ee3c \u201coutsource\u201d sang c\u00e1c rollups L2 , sau \u0111\u00f3 t\u1ed5ng h\u1ee3p (batch) d\u1eef li\u1ec7u v\u00e0 \u0111\u1ea9y v\u1ec1 Ethereum \u0111\u1ec3 x\u00e1c th\u1ef1c v\u00e0 l\u01b0u tr\u1eef. Trong t\u01b0\u01a1ng lai, v\u1edbi sharding, Ethereum s\u1ebd c\u00f3 ki\u1ebfn tr\u00fac nh\u01b0 sau: Ethereum mainnet tr\u1edf th\u00e0nh l\u1edbp settlement th\u1ed1ng nh\u1ea5t (unified settlement layer) C\u00e1c shard s\u1ebd \u0111\u00f3ng vai tr\u00f2 m\u00f4i tr\u01b0\u1eddng data availability d\u00e0nh cho rollups. M\u1ed7i validator ch\u1ec9 l\u01b0u tr\u1eef d\u1eef li\u1ec7u c\u1ee7a shard m\u00ecnh ph\u1ee5 tr\u00e1ch, thay v\u00ec to\u00e0n b\u1ed9 chain \u2192 cho ph\u00e9p ch\u1ea1y light node nh\u01b0 Celestia. Ethereum v\u1eabn gi\u1eef vai tr\u00f2 trust anchor , nh\u01b0ng s\u1ebd gi\u1ea3m g\u00e1nh n\u1eb7ng DA v\u00e0 execution xu\u1ed1ng c\u00e1c t\u1ea7ng d\u01b0\u1edbi (rollup + shard).","title":"3.1 Ethereum: T\u1eeb Monolithic \u0111\u1ebfn Sharded Settlement Layer"},{"location":"collections/Modular_blockchain/Celestia/Modular_world/#32-avalanche-horizontal-scaling-voi-subnets","text":"Avalanche m\u1edf r\u1ed9ng quy m\u00f4 qua m\u00f4 h\u00ecnh subnet t\u1ee9c l\u00e0 c\u00e1c blockchain m\u1edbi c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u1ea1o d\u1ec5 d\u00e0ng , m\u1ed7i c\u00e1i \u0111\u01b0\u1ee3c x\u00e1c th\u1ef1c b\u1edfi m\u1ed9t nh\u00f3m validator ri\u00eang bi\u1ec7t. M\u1ed7i subnet l\u00e0 m\u1ed9t chain \u0111\u1ed9c l\u1eadp : t\u1ef1 x\u1eed l\u00fd consensus, execution v\u00e0 data availability. Subnet c\u00f3 th\u1ec3 ch\u1ecdn token gas ri\u00eang (v\u00ed d\u1ee5: JEWEL cho subnet DefiKingdoms). M\u1ed7i chain ch\u1ec9 \u0111\u01b0\u1ee3c x\u00e1c th\u1ef1c b\u1edfi m\u1ed9t subnet duy nh\u1ea5t. Avalanche kh\u00f4ng th\u1eadt s\u1ef1 modular v\u00ec m\u1ed7i subnet v\u1eabn l\u00e0 m\u1ed9t monolithic chain nh\u1ecf, kh\u00f4ng c\u00f3 t\u00e1ch l\u1edbp r\u00f5 r\u00e0ng.","title":"3.2 Avalanche: Horizontal Scaling v\u1edbi Subnets"},{"location":"collections/Modular_blockchain/Celestia/Modular_world/#33-cosmos-modular-tu-lop-application","text":"Cosmos kh\u00f4ng modular ki\u1ec3u ki\u1ebfn tr\u00fac \u201clayered\u201d, m\u00e0 modular \u1edf l\u1edbp application layer: D\u00f9ng Tendermint (ho\u1eb7c Optimint) \u0111\u1ec3 x\u1eed l\u00fd consensus + networking DApp kh\u00f4ng deploy v\u00e0o m\u1ed9t VM nh\u01b0 Ethereum, m\u00e0 vi\u1ebft ri\u00eang th\u00e0nh m\u1ed9t Cosmos SDK chain \u0111\u1ed9c l\u1eadp ABCI (Application Blockchain Interface) l\u00e0 c\u1ea7u n\u1ed1i gi\u1eefa logic \u1ee9ng d\u1ee5ng v\u00e0 consensus engine Cosmos chains v\u00ec v\u1eady c\u00f3 th\u1ec3: * \u0110\u1ecbnh ngh\u0129a transaction & state logic t\u00f9y \u00fd * K\u1ebft n\u1ed1i v\u1edbi nhau qua IBC \u0111\u1ec3 trao \u0111\u1ed5i d\u1eef li\u1ec7u/liquidity * Tri\u1ec3n khai nhanh m\u1ed9t chain chuy\u00ean bi\u1ec7t, v\u1edbi t\u00ednh n\u0103ng \u0111\u1ed9c \u0111\u00e1o -> \u0110\u00e2y l\u00e0 m\u00f4 h\u00ecnh modular v\u1ec1 m\u1eb7t logic \u1ee9ng d\u1ee5ng, kh\u00f4ng ph\u1ea3i modular v\u1ec1 h\u1ea1 t\u1ea7ng nh\u01b0 Celestia.","title":"3.3 Cosmos: Modular t\u1eeb l\u1edbp Application"},{"location":"collections/Modular_blockchain/Celestia/Modular_world/#34-celestia-shared-da-consensus-cho-modular-stack","text":"Cu\u1ed1i c\u00f9ng, ta \u0111\u1ebfn v\u1edbi Celestia m\u1ed9t blockchain kh\u00f4ng ch\u1ea1y \u1ee9ng d\u1ee5ng, m\u00e0 ch\u1ec9 cung c\u1ea5p: * Data Availability Layer * Consensus Layer Celestia \u0111\u00f3ng vai tr\u00f2 l\u00e0 l\u1edbp n\u1ec1n t\u1ea3ng d\u00f9ng chung (shared base layer) cho h\u00e0ng lo\u1ea1t rollups \u1edf t\u1ea7ng tr\u00ean. H\u1ec7 sinh th\u00e1i Celestia c\u00f3 th\u1ec3 c\u00f3: H\u1ec7 sinh th\u00e1i Celestia c\u00f3 th\u1ec3 c\u00f3: \u2022 C\u00e1c sovereign rollups \u0111\u1ed9c l\u1eadp, kh\u00f4ng c\u1ea7n settlement layer \u2022 M\u1ed9t s\u1ed1 settlement layers trung gian gi\u00fap k\u1ebft n\u1ed1i thanh kho\u1ea3n v\u00e0 bridge gi\u1eefa rollups \u2022 C\u00e1c rollups t\u00f9y ch\u1ecdn m\u00f4i tr\u01b0\u1eddng execution ri\u00eang, tu\u1ef3 v\u00e0o use case (game, DeFi, social\u2026) Nh\u01b0 v\u1eady b\u1ea1n c\u00f3 th\u1ec3 hi\u1ec3u Celestia \u0111\u00f3ng vai tr\u00f2 l\u00e0 l\u1edbp \u0111\u1ed3ng thu\u1eadn (consensus) v\u00e0 ph\u00e2n ph\u1ed1i d\u1eef li\u1ec7u (data availability) d\u00f9ng chung cho to\u00e0n b\u1ed9 c\u00e1c lo\u1ea1i rollups kh\u00e1c nhau trong m\u00f4 h\u00ecnh modular stack. Ph\u00eda tr\u00ean Celestia, c\u00f3 th\u1ec3 s\u1ebd xu\u1ea5t hi\u1ec7n m\u1ed9t s\u1ed1 l\u1edbp settlement trung gian \u2013 l\u00e0m nhi\u1ec7m v\u1ee5 k\u1ebft n\u1ed1i, cung c\u1ea5p thanh kho\u1ea3n v\u00e0 x\u1eed l\u00fd vi\u1ec7c chuy\u1ec3n giao tr\u1ea1ng th\u00e1i gi\u1eefa c\u00e1c rollups. Sau khi \u0111\u00e3 ph\u00e2n t\u00edch c\u00e1c ki\u1ebfn tr\u00fac blockchain v\u1edbi m\u1ee9c \u0111\u1ed9 modularity kh\u00e1c nhau t\u1eeb monolithic, semi-modular \u0111\u1ebfn fully modular th\u00ec gi\u1edd \u0111\u1ebfn v\u1edbi n\u1ed9i dung v\u1edbi m\u00f4 h\u00ecnh ho\u00e0n to\u00e0n m\u00f4-\u0111un nh\u01b0 Celestia, ch\u00fang ta th\u1ef1c s\u1ef1 c\u00f3 th\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u g\u00ec m\u1edbi?","title":"3.4 Celestia: Shared DA + Consensus cho Modular Stack"},{"location":"collections/Modular_blockchain/Celestia/Modular_world/#4-shared-security","text":"M\u1ed9t trong nh\u1eefng \u01b0u \u0111i\u1ec3m d\u1ec5 th\u1ea5y c\u1ee7a c\u00e1c blockchain monolithic l\u00e0 m\u1ecdi ng\u01b0\u1eddi d\u00f9ng, \u1ee9ng d\u1ee5ng v\u00e0 rollup v\u1eadn h\u00e0nh tr\u00ean \u0111\u00f3 \u0111\u1ec1u th\u1eeba h\u01b0\u1edfng chung l\u1edbp b\u1ea3o m\u1eadt g\u1ed1c c\u1ee7a h\u1ec7 th\u1ed1ng. V\u1eady \u0111i\u1ec1u n\u00e0y s\u1ebd v\u1eadn h\u00e0nh nh\u01b0 th\u1ebf n\u00e0o trong m\u1ed9t ki\u1ebfn tr\u00fac modular nh\u01b0 Celestia? C\u00e2u tr\u1ea3 l\u1eddi kh\u00e1 \u0111\u01a1n gi\u1ea3n Celestia cung c\u1ea5p ch\u00ednh l\u1edbp d\u1eef li\u1ec7u s\u1eb5n c\u00f3 (data availability layer) l\u00e0 y\u1ebfu t\u1ed1 c\u1ed1t l\u00f5i gi\u00fap c\u00e1c chain c\u00f3 th\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c shared security m\u1ed9t c\u00e1ch t\u1ef1 nhi\u00ean. Trong m\u1ecdi tr\u01b0\u1eddng h\u1ee3p, b\u1ea5t c\u1ee9 layer n\u00e0o s\u1eed d\u1ee5ng Celestia \u0111\u1ec1u ph\u1ea3i c\u00f4ng b\u1ed1 to\u00e0n b\u1ed9 d\u1eef li\u1ec7u giao d\u1ecbch l\u00ean DA layer \u0111\u1ec3 ch\u1ee9ng minh r\u1eb1ng d\u1eef li\u1ec7u th\u1ef1c s\u1ef1 \u0111\u00e3 \u0111\u01b0\u1ee3c xu\u1ea5t b\u1ea3n (v\u00e0 kh\u00f4ng b\u1ecb che gi\u1ea5u). \u0110i\u1ec1u n\u00e0y t\u1ea1o ra m\u1ed9t \u201ctr\u01b0\u1eddng th\u00f4ng tin chung\u201d \u0111\u1ec3 quan s\u00e1t, k\u1ebft n\u1ed1i v\u00e0 chia s\u1ebb d\u1eef li\u1ec7u. Vi\u1ec7c n\u00e0y c\u0169ng \u0111\u01a1n gi\u1ea3n ho\u00e1 qu\u00e1 tr\u00ecnh fork (c\u1ea3 soft fork l\u1eabn hard fork) , b\u1edfi v\u00ec m\u1ecdi d\u1eef li\u1ec7u v\u00e0 tr\u1ea1ng th\u00e1i \u0111\u1ec1u \u0111\u01b0\u1ee3c c\u00f4ng b\u1ed1 c\u00f4ng khai, minh b\u1ea1ch tr\u00ean DA layer. Celestia cho ph\u00e9p tri\u1ec3n khai c\u00e1c execution layer mang t\u00ednh th\u1eed nghi\u1ec7m , ho\u1ea1t \u0111\u1ed9ng song song m\u00e0 kh\u00f4ng c\u1ea7n ph\u1ea3i d\u1ef1a v\u00e0o m\u1ed9t l\u1edbp settlement c\u1ed1 \u0111\u1ecbnh. Nh\u01b0ng c\u00e1c layer \u0111\u00f3 v\u1eabn k\u1ebf th\u1eeba t\u00ednh an to\u00e0n t\u1eeb l\u1edbp DA d\u00f9ng chung T\u00ednh ch\u1ea5t permissionless c\u1ee7a modularity cho ph\u00e9p b\u1ea5t k\u1ef3 dev n\u00e0o c\u0169ng c\u00f3 th\u1ec3 kh\u1edfi ch\u1ea1y execution layer m\u1edbi m\u00e0 kh\u00f4ng c\u1ea7n xin ph\u00e9p, kh\u00f4ng b\u1ecb r\u00e0o c\u1ea3n k\u1ef9 thu\u1eadt, v\u00e0 ho\u00e0n to\u00e0n tu\u1ef3 ch\u1ecdn stack ph\u00f9 h\u1ee3p.","title":"4. Shared Security"},{"location":"collections/Modular_blockchain/Celestia/The%20importance%20of%20data%20availability/","text":"Modular blockchain: The importance of data availability Trong Web3, \u201ccomposability\u201d t\u1ea1m d\u1ecbch l\u00e0 t\u00ednh l\u1eafp gh\u00e9p.B\u1ea5t k\u1ef3 h\u1ec7 th\u1ed1ng n\u00e0o khi ph\u00e1t tri\u1ec3n \u0111\u1ebfn m\u1ed9t ng\u01b0\u1ee1ng \u0111\u1ee7 l\u1edbn \u0111\u1ec1u c\u1ea7n chuy\u00ean m\u00f4n ho\u00e1 (specialization) v\u00e0 ph\u00e2n m\u1ea3nh ch\u1ee9c n\u0103ng (disassembly) \u0111\u1ec3 scale. V\u00e0 blockchain c\u0169ng kh\u00f4ng ngo\u1ea1i l\u1ec7. 1. Blockchain stack: G\u1ed3m nh\u1eefng l\u1edbp n\u00e0o? M\u1ed9t blockchain \u0111\u1ea7y \u0111\u1ee7 c\u00f3 th\u1ec3 chia th\u00e0nh 4 l\u1edbp ch\u00ednh: 1. Data Availability (DA) \u2013 L\u1edbp l\u01b0u tr\u1eef & ph\u00e2n ph\u1ed1i d\u1eef li\u1ec7u 2. Consensus \u2013 L\u1edbp \u0111\u1ed3ng thu\u1eadn, quy\u1ebft \u0111\u1ecbnh \u0111i\u1ec1u g\u00ec l\u00e0 \u201cs\u1ef1 th\u1eadt\u201d 3. Settlement \u2013 L\u1edbp x\u00e1c nh\u1eadn & ghi nh\u1eadn c\u00e1c tr\u1ea1ng th\u00e1i cu\u1ed1i c\u00f9ng 4. Execution \u2013 L\u1edbp x\u1eed l\u00fd giao d\u1ecbch, t\u00ednh to\u00e1n logic h\u1ee3p \u0111\u1ed3ng Trong ki\u1ebfn tr\u00fac monolithic (nguy\u00ean kh\u1ed1i), c\u1ea3 b\u1ed1n l\u1edbp n\u00e0y \u0111\u01b0\u1ee3c t\u00edch h\u1ee3p v\u00e0 x\u1eed l\u00fd trong c\u00f9ng m\u1ed9t m\u1ea1ng duy nh\u1ea5t. T\u1ee9c l\u00e0 m\u1ed7i node \u0111\u1ec1u ph\u1ea3i x\u1eed l\u00fd t\u1eeb x\u00e1c th\u1ef1c d\u1eef li\u1ec7u cho \u0111\u1ebfn th\u1ef1c thi giao d\u1ecbch. 1.1 Monolithic blockchains are inevitably reaching bottlenecks Khi kh\u1ed1i l\u01b0\u1ee3ng giao d\u1ecbch gia t\u0103ng, c\u00e1c blockchain nguy\u00ean kh\u1ed1i b\u1eaft \u0111\u1ea7u \u0111\u1ed1i m\u1eb7t v\u1edbi nh\u1eefng \u0111i\u1ec3m ngh\u1ebdn r\u00f5 r\u1ec7t. Hi\u1ec7n t\u1ea1i, ng\u01b0\u1eddi d\u00f9ng v\u00ec cam k\u1ebft v\u1edbi t\u1ea7m nh\u00ecn phi t\u1eadp trung v\u1eabn ch\u1ea5p nh\u1eadn ph\u00ed giao d\u1ecbch cao c\u1ee7a Ethereum c\u0169ng nh\u01b0 t\u1ed1c \u0111\u1ed9 x\u1eed l\u00fd ch\u1eadm h\u01a1n nhi\u1ec1u so v\u1edbi c\u00e1c h\u1ec7 th\u1ed1ng t\u1eadp trung nh\u01b0 Visa. C\u1ed1t l\u00f5i c\u1ee7a \u0111i\u1ec3m ngh\u1ebdn n\u00e0y n\u1eb1m \u1edf vi\u1ec7c t\u00edch t\u1ee5 d\u1eef li\u1ec7u. Do t\u00ednh b\u1ea5t bi\u1ebfn c\u1ee7a blockchain, kh\u1ea3 n\u0103ng d\u1eef li\u1ec7u lu\u00f4n s\u1eb5n c\u00f3 (data availability) tr\u1edf th\u00e0nh \u0111i\u1ec1u ki\u1ec7n ti\u00ean quy\u1ebft kh\u00f4ng th\u1ec3 th\u01b0\u01a1ng l\u01b0\u1ee3ng n\u1ebfu mu\u1ed1n m\u1edf r\u1ed9ng h\u1ec7 th\u1ed1ng. V\u00e0 v\u00ec m\u1ee5c ti\u00eau cu\u1ed1i c\u00f9ng l\u00e0 ph\u1ed5 c\u1eadp blockchain \u0111\u1ebfn \u0111\u1ea1i ch\u00fang, ki\u1ebfn tr\u00fac nguy\u00ean kh\u1ed1i bu\u1ed9c ph\u1ea3i ti\u1ebfn h\u00f3a th\u00e0nh ki\u1ebfn tr\u00fac m\u00f4-\u0111un. X\u00e9t theo l\u1ed9 tr\u00ecnh ph\u00e1t tri\u1ec3n c\u1ee7a Ethereum, Vitalik Buterin \u0111\u00e3 kh\u1eb3ng \u0111\u1ecbnh r\u1eb1ng h\u1ec7 sinh th\u00e1i Ethereum s\u1ebd xoay quanh c\u00e1c gi\u1ea3i ph\u00e1p rollup . \u0110\u00e2y l\u00e0 nh\u1eefng gi\u1ea3i ph\u00e1p m\u1edf r\u1ed9ng t\u00e1ch l\u1edbp th\u1ef1c thi (execution) ra kh\u1ecfi m\u1ea1ng ch\u00ednh, th\u1ef1c hi\u1ec7n x\u1eed l\u00fd off-chain nh\u01b0ng v\u1eabn l\u01b0u tr\u1eef m\u1ed9t ph\u1ea7n d\u1eef li\u1ec7u giao d\u1ecbch on-chain. Th\u00f4ng l\u01b0\u1ee3ng c\u1ee7a rollup t\u0103ng tuy\u1ebfn t\u00ednh ngh\u0129a l\u00e0 c\u00e0ng nhi\u1ec1u giao d\u1ecbch, c\u00e0ng c\u1ea7n nhi\u1ec1u d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c broadcast v\u1ec1 mainnet. V\u00ec v\u1eady, \u0111i\u1ec3m ngh\u1ebdn l\u1edbn nh\u1ea5t c\u1ee7a rollup l\u1ea1i ch\u00ednh l\u00e0 b\u0103ng th\u00f4ng c\u1ee7a l\u1edbp data availability tr\u00ean m\u1ea1ng c\u01a1 s\u1edf. \u0110\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 n\u00e0y, b\u01b0\u1edbc \u0111i \u0111\u1ea7u ti\u00ean trong k\u1ebf ho\u1ea1ch m\u1edf r\u1ed9ng d\u00e0i h\u1ea1n c\u1ee7a Ethereum, sharding, \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf nh\u1eb1m gi\u00fap c\u00e1c chu\u1ed7i shard \u0111\u1ea3m nhi\u1ec7m vi\u1ec7c cung c\u1ea5p data availability. Modular Blockchain l\u00e0 g\u00ec? M\u1ed9t m\u1ea1ng blockchain \u0111\u01b0\u1ee3c xem l\u00e0 modular khi n\u00f3 t\u00e1ch v\u00e0 chuy\u1ec3n giao m\u1ed9t ho\u1eb7c nhi\u1ec1u ch\u1ee9c n\u0103ng c\u1ed1t l\u00f5i sang c\u00e1c th\u00e0nh ph\u1ea7n kh\u00e1c. K\u1ec3 t\u1eeb khi ra m\u1eaft testnet v\u00e0o th\u00e1ng 5/2022, Celestia \u0111\u00e3 tr\u1edf th\u00e0nh t\u00e2m \u0111i\u1ec3m trong c\u1ed9ng \u0111\u1ed3ng blockchain, \u0111\u01b0\u1ee3c ph\u00e2n t\u00edch v\u00e0 so s\u00e1nh nhi\u1ec1u v\u1edbi Ethereum. \u0110\u00e2y l\u00e0 m\u1ea1ng blockchain m\u00f4-\u0111un \u0111\u1ea7u ti\u00ean \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf chuy\u00ean bi\u1ec7t, t\u1eadp trung ho\u00e0n to\u00e0n v\u00e0o vi\u1ec7c x\u1eed l\u00fd \u0111\u1ed3ng thu\u1eadn v\u00e0 cung c\u1ea5p d\u1eef li\u1ec7u, ch\u1ee9 kh\u00f4ng x\u1eed l\u00fd logic giao d\u1ecbch. V\u00e0o ng\u00e0y 20 th\u00e1ng 10, Celestia g\u1ecdi v\u1ed1n th\u00e0nh c\u00f4ng 55 tri\u1ec7u USD trong v\u00f2ng Series A & B, v\u1edbi s\u1ef1 d\u1eabn d\u1eaft c\u1ee7a Bain Capital Crypto v\u00e0 Polychain Capital. V\u1edbi v\u00f2ng g\u1ecdi v\u1ed1n n\u00e0y, Celestia ch\u00ednh th\u1ee9c tr\u1edf th\u00e0nh unicorn v\u1edbi \u0111\u1ecbnh gi\u00e1 1 t\u1ef7 USD. 2.1 Celestia ho\u1ea1t \u0111\u1ed9ng nh\u01b0 th\u1ebf n\u00e0o? Celestia s\u1eed d\u1ee5ng Tendermint l\u00e0m giao th\u1ee9c \u0111\u1ed3ng thu\u1eadn v\u00e0 \u0111\u00f3ng vai tr\u00f2 nh\u01b0 m\u1ed9t l\u1edbp data availability + consensus c\u00f3 th\u1ec3 c\u1eafm v\u00e0o (pluggable). 2.2 C\u00e1c t\u00ednh n\u0103ng n\u1ed5i b\u1eadt c\u1ee7a Celestia 2.2.1 Decentralization Nh\u1edd ch\u1ec9 t\u1eadp trung v\u00e0o data availability, Celestia cho ph\u00e9p c\u00e1c light node s\u1eed d\u1ee5ng k\u1ef9 thu\u1eadt data availability sampling (DAS) ch\u1ec9 c\u1ea7n t\u1ea3i xu\u1ed1ng m\u1ed9t ph\u1ea7n ng\u1eabu nhi\u00ean c\u1ee7a block thay v\u00ec to\u00e0n b\u1ed9. \u0110i\u1ec1u n\u00e0y gi\u00fap: \u2022 Ch\u1ea1y node nh\u1eb9 tr\u00ean c\u1ea3 \u0111i\u1ec7n tho\u1ea1i di \u0111\u1ed9ng \u2022 M\u1edf r\u1ed9ng m\u1ea1ng l\u01b0\u1edbi node d\u1ec5 d\u00e0ng h\u01a1n \u2022 Gi\u1ea3m r\u00e0o c\u1ea3n v\u1eadn h\u00e0nh m\u1ea1ng l\u01b0\u1edbi 2.2.2 Scalability (Kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng) \u0110i\u1ec3m ngh\u1ebdn l\u1edbn nh\u1ea5t trong blockchain ch\u00ednh l\u00e0 state bloat \u2013 d\u1eef li\u1ec7u tr\u1ea1ng th\u00e1i ph\u00ecnh to theo th\u1eddi gian. Celestia t\u00e1ch b\u1ea1ch vi\u1ec7c \u201cki\u1ec3m tra h\u1ee3p l\u1ec7\u201d ra kh\u1ecfi \u201cl\u01b0u tr\u1eef d\u1eef li\u1ec7u\u201d, ngh\u0129a l\u00e0: \u2022 Ch\u1ec9 c\u1ea7n c\u00f3 light node x\u00e1c minh DA l\u00e0 \u0111\u1ee7 \u2022 C\u00e0ng nhi\u1ec1u node tham gia sampling, block space c\u00e0ng t\u0103ng tuy\u1ebfn t\u00ednh 2.2.3 Security (B\u1ea3o m\u1eadt) B\u1ea3o m\u1eadt c\u1ee7a Celestia ph\u1ee5 thu\u1ed9c v\u00e0o s\u1ed1 l\u01b0\u1ee3ng light node tham gia sampling. C\u00e0ng nhi\u1ec1u node, c\u00e0ng kh\u00f3 \u0111\u1ec3 \u1ea9n d\u1eef li\u1ec7u ho\u1eb7c gian l\u1eadn. \u2022 C\u01a1 ch\u1ebf sampling gi\u00fap ch\u1ed1ng \u201cdata withholding\u201d (gi\u1ea5u block) \u2022 Kh\u1ea3 n\u0103ng ch\u1ea1y node d\u1ec5 d\u00e0ng \u2192 t\u0103ng decentralization \u2192 t\u0103ng b\u1ea3o m\u1eadt 2.3 Nh\u1eefng l\u1ee3i th\u1ebf c\u1ee7a Modular Blockchain Ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 tri\u1ec3n khai execution layer ri\u00eang d\u1ef1a tr\u00ean Celestia, t\u1eadn d\u1ee5ng kh\u1ea3 n\u0103ng cung c\u1ea5p d\u1eef li\u1ec7u c\u1ee7a n\u00f3. Celestia kh\u00f4ng r\u00e0ng bu\u1ed9c v\u1edbi EVM m\u1edf ra kh\u00f4ng gian thi\u1ebft k\u1ebf r\u1ed9ng h\u01a1n cho c\u00e1c m\u00e1y \u1ea3o kh\u00e1c nh\u01b0: MoveVM, CosmWasm, FuelVM, LLVM-based VM Chi ph\u00ed x\u00e1c minh tr\u00ean Celestia t\u0103ng d\u01b0\u1edbi tuy\u1ebfn t\u00ednh khi throughput t\u0103ng v\u00ec: \u2022 DAS ch\u1ec9 y\u00eau c\u1ea7u node t\u1ea3i m\u1ed9t ph\u1ea7n nh\u1ecf d\u1eef li\u1ec7u block \u2022 D\u1eef li\u1ec7u c\u1ea7n x\u00e1c minh kh\u00f4ng t\u0103ng theo t\u1ed5ng block size \u2192 Gi\u1ea3m \u0111\u00e1ng k\u1ec3 chi ph\u00ed x\u00e1c minh, duy tr\u00ec kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng d\u00e0i h\u1ea1n. B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc k\u1ef9 h\u01a1n trong ph\u1ea7n gi\u1ea3i th\u00edch v\u1ec1 Modular World","title":"Modular blockchain: The importance of data availability"},{"location":"collections/Modular_blockchain/Celestia/The%20importance%20of%20data%20availability/#modular-blockchain-the-importance-of-data-availability","text":"Trong Web3, \u201ccomposability\u201d t\u1ea1m d\u1ecbch l\u00e0 t\u00ednh l\u1eafp gh\u00e9p.B\u1ea5t k\u1ef3 h\u1ec7 th\u1ed1ng n\u00e0o khi ph\u00e1t tri\u1ec3n \u0111\u1ebfn m\u1ed9t ng\u01b0\u1ee1ng \u0111\u1ee7 l\u1edbn \u0111\u1ec1u c\u1ea7n chuy\u00ean m\u00f4n ho\u00e1 (specialization) v\u00e0 ph\u00e2n m\u1ea3nh ch\u1ee9c n\u0103ng (disassembly) \u0111\u1ec3 scale. V\u00e0 blockchain c\u0169ng kh\u00f4ng ngo\u1ea1i l\u1ec7.","title":"Modular blockchain: The importance of data availability"},{"location":"collections/Modular_blockchain/Celestia/The%20importance%20of%20data%20availability/#1-blockchain-stack-gom-nhung-lop-nao","text":"M\u1ed9t blockchain \u0111\u1ea7y \u0111\u1ee7 c\u00f3 th\u1ec3 chia th\u00e0nh 4 l\u1edbp ch\u00ednh: 1. Data Availability (DA) \u2013 L\u1edbp l\u01b0u tr\u1eef & ph\u00e2n ph\u1ed1i d\u1eef li\u1ec7u 2. Consensus \u2013 L\u1edbp \u0111\u1ed3ng thu\u1eadn, quy\u1ebft \u0111\u1ecbnh \u0111i\u1ec1u g\u00ec l\u00e0 \u201cs\u1ef1 th\u1eadt\u201d 3. Settlement \u2013 L\u1edbp x\u00e1c nh\u1eadn & ghi nh\u1eadn c\u00e1c tr\u1ea1ng th\u00e1i cu\u1ed1i c\u00f9ng 4. Execution \u2013 L\u1edbp x\u1eed l\u00fd giao d\u1ecbch, t\u00ednh to\u00e1n logic h\u1ee3p \u0111\u1ed3ng Trong ki\u1ebfn tr\u00fac monolithic (nguy\u00ean kh\u1ed1i), c\u1ea3 b\u1ed1n l\u1edbp n\u00e0y \u0111\u01b0\u1ee3c t\u00edch h\u1ee3p v\u00e0 x\u1eed l\u00fd trong c\u00f9ng m\u1ed9t m\u1ea1ng duy nh\u1ea5t. T\u1ee9c l\u00e0 m\u1ed7i node \u0111\u1ec1u ph\u1ea3i x\u1eed l\u00fd t\u1eeb x\u00e1c th\u1ef1c d\u1eef li\u1ec7u cho \u0111\u1ebfn th\u1ef1c thi giao d\u1ecbch.","title":"1. Blockchain stack: G\u1ed3m nh\u1eefng l\u1edbp n\u00e0o?"},{"location":"collections/Modular_blockchain/Celestia/The%20importance%20of%20data%20availability/#11-monolithic-blockchains-are-inevitably-reaching-bottlenecks","text":"Khi kh\u1ed1i l\u01b0\u1ee3ng giao d\u1ecbch gia t\u0103ng, c\u00e1c blockchain nguy\u00ean kh\u1ed1i b\u1eaft \u0111\u1ea7u \u0111\u1ed1i m\u1eb7t v\u1edbi nh\u1eefng \u0111i\u1ec3m ngh\u1ebdn r\u00f5 r\u1ec7t. Hi\u1ec7n t\u1ea1i, ng\u01b0\u1eddi d\u00f9ng v\u00ec cam k\u1ebft v\u1edbi t\u1ea7m nh\u00ecn phi t\u1eadp trung v\u1eabn ch\u1ea5p nh\u1eadn ph\u00ed giao d\u1ecbch cao c\u1ee7a Ethereum c\u0169ng nh\u01b0 t\u1ed1c \u0111\u1ed9 x\u1eed l\u00fd ch\u1eadm h\u01a1n nhi\u1ec1u so v\u1edbi c\u00e1c h\u1ec7 th\u1ed1ng t\u1eadp trung nh\u01b0 Visa. C\u1ed1t l\u00f5i c\u1ee7a \u0111i\u1ec3m ngh\u1ebdn n\u00e0y n\u1eb1m \u1edf vi\u1ec7c t\u00edch t\u1ee5 d\u1eef li\u1ec7u. Do t\u00ednh b\u1ea5t bi\u1ebfn c\u1ee7a blockchain, kh\u1ea3 n\u0103ng d\u1eef li\u1ec7u lu\u00f4n s\u1eb5n c\u00f3 (data availability) tr\u1edf th\u00e0nh \u0111i\u1ec1u ki\u1ec7n ti\u00ean quy\u1ebft kh\u00f4ng th\u1ec3 th\u01b0\u01a1ng l\u01b0\u1ee3ng n\u1ebfu mu\u1ed1n m\u1edf r\u1ed9ng h\u1ec7 th\u1ed1ng. V\u00e0 v\u00ec m\u1ee5c ti\u00eau cu\u1ed1i c\u00f9ng l\u00e0 ph\u1ed5 c\u1eadp blockchain \u0111\u1ebfn \u0111\u1ea1i ch\u00fang, ki\u1ebfn tr\u00fac nguy\u00ean kh\u1ed1i bu\u1ed9c ph\u1ea3i ti\u1ebfn h\u00f3a th\u00e0nh ki\u1ebfn tr\u00fac m\u00f4-\u0111un. X\u00e9t theo l\u1ed9 tr\u00ecnh ph\u00e1t tri\u1ec3n c\u1ee7a Ethereum, Vitalik Buterin \u0111\u00e3 kh\u1eb3ng \u0111\u1ecbnh r\u1eb1ng h\u1ec7 sinh th\u00e1i Ethereum s\u1ebd xoay quanh c\u00e1c gi\u1ea3i ph\u00e1p rollup . \u0110\u00e2y l\u00e0 nh\u1eefng gi\u1ea3i ph\u00e1p m\u1edf r\u1ed9ng t\u00e1ch l\u1edbp th\u1ef1c thi (execution) ra kh\u1ecfi m\u1ea1ng ch\u00ednh, th\u1ef1c hi\u1ec7n x\u1eed l\u00fd off-chain nh\u01b0ng v\u1eabn l\u01b0u tr\u1eef m\u1ed9t ph\u1ea7n d\u1eef li\u1ec7u giao d\u1ecbch on-chain. Th\u00f4ng l\u01b0\u1ee3ng c\u1ee7a rollup t\u0103ng tuy\u1ebfn t\u00ednh ngh\u0129a l\u00e0 c\u00e0ng nhi\u1ec1u giao d\u1ecbch, c\u00e0ng c\u1ea7n nhi\u1ec1u d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c broadcast v\u1ec1 mainnet. V\u00ec v\u1eady, \u0111i\u1ec3m ngh\u1ebdn l\u1edbn nh\u1ea5t c\u1ee7a rollup l\u1ea1i ch\u00ednh l\u00e0 b\u0103ng th\u00f4ng c\u1ee7a l\u1edbp data availability tr\u00ean m\u1ea1ng c\u01a1 s\u1edf. \u0110\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 n\u00e0y, b\u01b0\u1edbc \u0111i \u0111\u1ea7u ti\u00ean trong k\u1ebf ho\u1ea1ch m\u1edf r\u1ed9ng d\u00e0i h\u1ea1n c\u1ee7a Ethereum, sharding, \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf nh\u1eb1m gi\u00fap c\u00e1c chu\u1ed7i shard \u0111\u1ea3m nhi\u1ec7m vi\u1ec7c cung c\u1ea5p data availability.","title":"1.1 Monolithic blockchains are inevitably reaching bottlenecks"},{"location":"collections/Modular_blockchain/Celestia/The%20importance%20of%20data%20availability/#modular-blockchain-la-gi","text":"M\u1ed9t m\u1ea1ng blockchain \u0111\u01b0\u1ee3c xem l\u00e0 modular khi n\u00f3 t\u00e1ch v\u00e0 chuy\u1ec3n giao m\u1ed9t ho\u1eb7c nhi\u1ec1u ch\u1ee9c n\u0103ng c\u1ed1t l\u00f5i sang c\u00e1c th\u00e0nh ph\u1ea7n kh\u00e1c. K\u1ec3 t\u1eeb khi ra m\u1eaft testnet v\u00e0o th\u00e1ng 5/2022, Celestia \u0111\u00e3 tr\u1edf th\u00e0nh t\u00e2m \u0111i\u1ec3m trong c\u1ed9ng \u0111\u1ed3ng blockchain, \u0111\u01b0\u1ee3c ph\u00e2n t\u00edch v\u00e0 so s\u00e1nh nhi\u1ec1u v\u1edbi Ethereum. \u0110\u00e2y l\u00e0 m\u1ea1ng blockchain m\u00f4-\u0111un \u0111\u1ea7u ti\u00ean \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf chuy\u00ean bi\u1ec7t, t\u1eadp trung ho\u00e0n to\u00e0n v\u00e0o vi\u1ec7c x\u1eed l\u00fd \u0111\u1ed3ng thu\u1eadn v\u00e0 cung c\u1ea5p d\u1eef li\u1ec7u, ch\u1ee9 kh\u00f4ng x\u1eed l\u00fd logic giao d\u1ecbch. V\u00e0o ng\u00e0y 20 th\u00e1ng 10, Celestia g\u1ecdi v\u1ed1n th\u00e0nh c\u00f4ng 55 tri\u1ec7u USD trong v\u00f2ng Series A & B, v\u1edbi s\u1ef1 d\u1eabn d\u1eaft c\u1ee7a Bain Capital Crypto v\u00e0 Polychain Capital. V\u1edbi v\u00f2ng g\u1ecdi v\u1ed1n n\u00e0y, Celestia ch\u00ednh th\u1ee9c tr\u1edf th\u00e0nh unicorn v\u1edbi \u0111\u1ecbnh gi\u00e1 1 t\u1ef7 USD.","title":"Modular Blockchain l\u00e0 g\u00ec?"},{"location":"collections/Modular_blockchain/Celestia/The%20importance%20of%20data%20availability/#21-celestia-hoat-ong-nhu-the-nao","text":"Celestia s\u1eed d\u1ee5ng Tendermint l\u00e0m giao th\u1ee9c \u0111\u1ed3ng thu\u1eadn v\u00e0 \u0111\u00f3ng vai tr\u00f2 nh\u01b0 m\u1ed9t l\u1edbp data availability + consensus c\u00f3 th\u1ec3 c\u1eafm v\u00e0o (pluggable).","title":"2.1 Celestia ho\u1ea1t \u0111\u1ed9ng nh\u01b0 th\u1ebf n\u00e0o?"},{"location":"collections/Modular_blockchain/Celestia/The%20importance%20of%20data%20availability/#22-cac-tinh-nang-noi-bat-cua-celestia","text":"","title":"2.2 C\u00e1c t\u00ednh n\u0103ng n\u1ed5i b\u1eadt c\u1ee7a Celestia"},{"location":"collections/Modular_blockchain/Celestia/The%20importance%20of%20data%20availability/#221-decentralization","text":"Nh\u1edd ch\u1ec9 t\u1eadp trung v\u00e0o data availability, Celestia cho ph\u00e9p c\u00e1c light node s\u1eed d\u1ee5ng k\u1ef9 thu\u1eadt data availability sampling (DAS) ch\u1ec9 c\u1ea7n t\u1ea3i xu\u1ed1ng m\u1ed9t ph\u1ea7n ng\u1eabu nhi\u00ean c\u1ee7a block thay v\u00ec to\u00e0n b\u1ed9. \u0110i\u1ec1u n\u00e0y gi\u00fap: \u2022 Ch\u1ea1y node nh\u1eb9 tr\u00ean c\u1ea3 \u0111i\u1ec7n tho\u1ea1i di \u0111\u1ed9ng \u2022 M\u1edf r\u1ed9ng m\u1ea1ng l\u01b0\u1edbi node d\u1ec5 d\u00e0ng h\u01a1n \u2022 Gi\u1ea3m r\u00e0o c\u1ea3n v\u1eadn h\u00e0nh m\u1ea1ng l\u01b0\u1edbi","title":"2.2.1 Decentralization"},{"location":"collections/Modular_blockchain/Celestia/The%20importance%20of%20data%20availability/#222-scalability-kha-nang-mo-rong","text":"\u0110i\u1ec3m ngh\u1ebdn l\u1edbn nh\u1ea5t trong blockchain ch\u00ednh l\u00e0 state bloat \u2013 d\u1eef li\u1ec7u tr\u1ea1ng th\u00e1i ph\u00ecnh to theo th\u1eddi gian. Celestia t\u00e1ch b\u1ea1ch vi\u1ec7c \u201cki\u1ec3m tra h\u1ee3p l\u1ec7\u201d ra kh\u1ecfi \u201cl\u01b0u tr\u1eef d\u1eef li\u1ec7u\u201d, ngh\u0129a l\u00e0: \u2022 Ch\u1ec9 c\u1ea7n c\u00f3 light node x\u00e1c minh DA l\u00e0 \u0111\u1ee7 \u2022 C\u00e0ng nhi\u1ec1u node tham gia sampling, block space c\u00e0ng t\u0103ng tuy\u1ebfn t\u00ednh","title":"2.2.2 Scalability (Kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng)"},{"location":"collections/Modular_blockchain/Celestia/The%20importance%20of%20data%20availability/#223-security-bao-mat","text":"B\u1ea3o m\u1eadt c\u1ee7a Celestia ph\u1ee5 thu\u1ed9c v\u00e0o s\u1ed1 l\u01b0\u1ee3ng light node tham gia sampling. C\u00e0ng nhi\u1ec1u node, c\u00e0ng kh\u00f3 \u0111\u1ec3 \u1ea9n d\u1eef li\u1ec7u ho\u1eb7c gian l\u1eadn. \u2022 C\u01a1 ch\u1ebf sampling gi\u00fap ch\u1ed1ng \u201cdata withholding\u201d (gi\u1ea5u block) \u2022 Kh\u1ea3 n\u0103ng ch\u1ea1y node d\u1ec5 d\u00e0ng \u2192 t\u0103ng decentralization \u2192 t\u0103ng b\u1ea3o m\u1eadt","title":"2.2.3 Security (B\u1ea3o m\u1eadt)"},{"location":"collections/Modular_blockchain/Celestia/The%20importance%20of%20data%20availability/#23-nhung-loi-the-cua-modular-blockchain","text":"Ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 tri\u1ec3n khai execution layer ri\u00eang d\u1ef1a tr\u00ean Celestia, t\u1eadn d\u1ee5ng kh\u1ea3 n\u0103ng cung c\u1ea5p d\u1eef li\u1ec7u c\u1ee7a n\u00f3. Celestia kh\u00f4ng r\u00e0ng bu\u1ed9c v\u1edbi EVM m\u1edf ra kh\u00f4ng gian thi\u1ebft k\u1ebf r\u1ed9ng h\u01a1n cho c\u00e1c m\u00e1y \u1ea3o kh\u00e1c nh\u01b0: MoveVM, CosmWasm, FuelVM, LLVM-based VM Chi ph\u00ed x\u00e1c minh tr\u00ean Celestia t\u0103ng d\u01b0\u1edbi tuy\u1ebfn t\u00ednh khi throughput t\u0103ng v\u00ec: \u2022 DAS ch\u1ec9 y\u00eau c\u1ea7u node t\u1ea3i m\u1ed9t ph\u1ea7n nh\u1ecf d\u1eef li\u1ec7u block \u2022 D\u1eef li\u1ec7u c\u1ea7n x\u00e1c minh kh\u00f4ng t\u0103ng theo t\u1ed5ng block size \u2192 Gi\u1ea3m \u0111\u00e1ng k\u1ec3 chi ph\u00ed x\u00e1c minh, duy tr\u00ec kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng d\u00e0i h\u1ea1n. B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc k\u1ef9 h\u01a1n trong ph\u1ea7n gi\u1ea3i th\u00edch v\u1ec1 Modular World","title":"2.3 Nh\u1eefng l\u1ee3i th\u1ebf c\u1ee7a Modular Blockchain"},{"location":"collections/Modular_blockchain/Celestia/review-mammothon-demo-day-2024/","text":"mammothon-demo-day 2024 https://medium.com/cumulo-pro/mammothon-demo-day-1f3be5c0d7d3","title":"mammothon-demo-day 2024"},{"location":"collections/Modular_blockchain/Celestia/review-mammothon-demo-day-2024/#mammothon-demo-day-2024","text":"https://medium.com/cumulo-pro/mammothon-demo-day-1f3be5c0d7d3","title":"mammothon-demo-day 2024"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/00-Welcome-to-camp-Mamo/","text":"Welcome To Camp Mamo! M\u1ee5c ti\u00eau c\u1ee7a n\u00e0y \u0111\u1ec3 research v\u00e0 t\u1ea5t nhi\u00ean c\u00e1c b\u1ea1n c\u0169ng s\u1ebd ph\u1ea3i h\u1ecdc c\u00e1ch tr\u1ea3 l\u1eddi nh\u1eefng c\u00e2u h\u1ecfi sau What is one key issue Celestia aims to fix regarding blockchain application development? What is a primary challenge with user data on traditional blockchains that Celestia's private DA addresses? How does Celestia's data availability (DA) solution address the scalability issues faced by blockchains like Bitcoin? which of the following best summarizes the key benefits developers gain by building with Celestia ? Trong Camp-mamo, s\u1ebd c\u00f3 2 parts: Part 1: \u1ede part n\u00e0y b\u1ea1n s\u1ebd deep dive v\u1ec1 Mammoth Blocks, Private DA v\u00e0 Lazy Bridging. Part 2: S\u1ebd v\u1ec1 Full Stack control. M\u1ed9t trong l\u1eddi khuy\u00ean trong qu\u00e1 tr\u00ecnh h\u1ecdc \u0111\u00f3 l\u00e0 Don't just do the work, Share it, build in public, post your progress, and look at what others are building T\u00e0i li\u1ec7u Handbook: https://docs.google.com/document/d/1t-gsuy1x7del2oFGvUOZBvgByCyWJyxNnVmfSt0KbSM/edit?tab=t.0#heading=h.cbm095newoc4 FORK REPO CAMP MAMO: https://github.com/celestiaorg/campmamo-demos Link h\u1ecdc: https://www.encodeclub.com/programmes/camp-mamo","title":"Welcome To Camp Mamo!"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/00-Welcome-to-camp-Mamo/#welcome-to-camp-mamo","text":"M\u1ee5c ti\u00eau c\u1ee7a n\u00e0y \u0111\u1ec3 research v\u00e0 t\u1ea5t nhi\u00ean c\u00e1c b\u1ea1n c\u0169ng s\u1ebd ph\u1ea3i h\u1ecdc c\u00e1ch tr\u1ea3 l\u1eddi nh\u1eefng c\u00e2u h\u1ecfi sau What is one key issue Celestia aims to fix regarding blockchain application development? What is a primary challenge with user data on traditional blockchains that Celestia's private DA addresses? How does Celestia's data availability (DA) solution address the scalability issues faced by blockchains like Bitcoin? which of the following best summarizes the key benefits developers gain by building with Celestia ? Trong Camp-mamo, s\u1ebd c\u00f3 2 parts: Part 1: \u1ede part n\u00e0y b\u1ea1n s\u1ebd deep dive v\u1ec1 Mammoth Blocks, Private DA v\u00e0 Lazy Bridging. Part 2: S\u1ebd v\u1ec1 Full Stack control. M\u1ed9t trong l\u1eddi khuy\u00ean trong qu\u00e1 tr\u00ecnh h\u1ecdc \u0111\u00f3 l\u00e0 Don't just do the work, Share it, build in public, post your progress, and look at what others are building T\u00e0i li\u1ec7u Handbook: https://docs.google.com/document/d/1t-gsuy1x7del2oFGvUOZBvgByCyWJyxNnVmfSt0KbSM/edit?tab=t.0#heading=h.cbm095newoc4 FORK REPO CAMP MAMO: https://github.com/celestiaorg/campmamo-demos Link h\u1ecdc: https://www.encodeclub.com/programmes/camp-mamo","title":"Welcome To Camp Mamo!"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/01-Celestia_Da_DAS_Blobs/","text":"DA, DAS, and Blobs \u2014 Celestia Lesson \ud83d\udce6\ud83e\udde0 \ud83c\udfaf Target: H\u1ecdc t\u1eeb ch\u00ednh nh\u1eefng nh\u00e0 s\u00e1ng l\u1eadp Celestia \u2014 Mustafa, Ismail v\u00e0 John v\u1ec1 Data Availability (DA), Data Availability Sampling (DAS), v\u00e0 Blobs. C\u00f9ng nhau b\u00f3c t\u00e1ch Web3 app th\u1eadt ra l\u00e0 g\u00ec, v\u00e0 l\u00e0m sao Celestia trao cho b\u1ea1n full-stack control \u0111\u1ec3 t\u1ef1 do x\u00e2y d\u1ef1ng theo c\u00e1ch c\u1ee7a m\u00ecnh. B\u00e0i h\u1ecdc n\u00e0y s\u1ebd gi\u00fap b\u1ea1n th\u1ea5u hi\u1ec3u ki\u1ebfn tr\u00fac b\u00ean trong c\u1ee7a Celestia , \u0111\u1eb7c bi\u1ec7t l\u00e0 ba y\u1ebfu t\u1ed1 then ch\u1ed1t: Data Availability , Data Availability Sampling (DAS) , v\u00e0 Blobs Celestia c\u00f3 th\u1ec3 l\u00e0m cho \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n ? \"In the academic sense, Celestia provides a highly scalable verifiable data availability layer that allows your application to be built in a way users know they have the data needed to audit correctness.\" \u2014 John, Celestia Labs V\u00e0 \u0111\u00e2y l\u00e0 c\u00e2u h\u1ecfi b\u1ea1n c\u1ea7n t\u1ef1 tr\u1ea3 l\u1eddi sau bu\u1ed5i h\u1ecdc: \u201cFull-stack control\u201d tr\u00ean Celestia th\u1ef1c s\u1ef1 ngh\u0129a l\u00e0 g\u00ec \u0111\u1ed1i v\u1edbi developer? Kh\u00f3 kh\u0103n ch\u00ednh khi t\u1ef1 tri\u1ec3n khai m\u1ed9t Layer 1 blockchain so v\u1edbi x\u00e2y d\u1ef1ng tr\u00ean Celestia l\u00e0 g\u00ec? V\u1eady th\u00ec th\u1ebf n\u00e0o g\u1ecdi l\u00e0 Full Stack? Full stack control ngh\u0129a l\u00e0 m\u00ecnh c\u00f3 th\u1ec3 t\u1ea1o applications cho b\u1ea3n th\u00e2n b\u1eb1ng b\u1ea5t k\u00ec ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh n\u00e0o m\u00ecnh mu\u1ed1n. B\u1ea1n c\u0169ng c\u00f3 th\u1ec3 t\u1ef1 x\u00e2y d\u1ef1ng m\u00f4 h\u00ecnh t\u1ea1o doanh thu (revenue) cho \u1ee9ng d\u1ee5ng \u0111\u00f3. N\u1ebfu so s\u00e1nh v\u1edbi Ethereum hay Solana, b\u1ea1n s\u1ebd th\u1ea5y m\u00ecnh b\u1ecb gi\u1edbi h\u1ea1n \u1edf m\u1ed9t s\u1ed1 kh\u00eda c\u1ea1nh nh\u1ea5t \u0111\u1ecbnh. V\u00ed d\u1ee5, tr\u00ean Ethereum b\u1ea1n b\u1eaft bu\u1ed9c ph\u1ea3i s\u1eed d\u1ee5ng EVM v\u00e0 ng\u00f4n ng\u1eef Solidity. Celestia cho ph\u00e9p b\u1ea1n custom ho\u00e1 full-stack, t\u1ee9c l\u00e0 t\u1eeb A \u0111\u1ebfn Z mu\u1ed1n ch\u1ec9nh g\u00ec trong h\u1ea1 t\u1ea7ng c\u0169ng \u0111\u01b0\u1ee3c. B\u1ea1n c\u00f3 th\u1ec3 t\u1ef1 build v\u00e0 deploy nh\u1eefng \u1ee9ng d\u1ee5ng unstoppable. T\u1eeb t\u1ea7ng consensus (ai x\u00e1c th\u1ef1c), \u0111\u1ebfn data availability (d\u1eef li\u1ec7u c\u00f3 s\u1eb5n cho ai v\u00e0 nh\u01b0 th\u1ebf n\u00e0o), t\u1edbi c\u1ea3 execution environment (VM) N\u00f3i t\u00f3m l\u1ea1i b\u1ea1n c\u00f3 th\u1ec3 hi\u1ec3u key Features c\u1ee7a Celestia n\u1eb1m \u1edf Modular Design b\u1eb1ng c\u00e1ch c\u00e1c dev c\u00f3 th\u1ec3 t\u1ef1 thi\u1ebft k\u1ebf execution layer sao cho kh\u1edbp v\u1edbi nhu c\u1ea7u \u1ee9ng d\u1ee5ng c\u1ee7a m\u00ecnh. Hay n\u00f3i \u0111\u00fang h\u01a1n l\u00e0 Developer Freedom , \u0110i\u1ec1u n\u00e0y m\u1edf ra m\u1ed9t kh\u00f4ng gian ph\u00e1t tri\u1ec3n c\u1ef1c k\u1ef3 linh ho\u1ea1t. V\u1eady data Availability l\u00e0 g\u00ec? Data Availability (DA) tr\u1ea3 l\u1eddi cho c\u00e2u h\u1ecfi c\u1ef1c k\u1ef3 quan tr\u1ecdng: \u201cD\u1eef li\u1ec7u c\u1ee7a block n\u00e0y \u0111\u00e3 \u0111\u01b0\u1ee3c c\u00f4ng b\u1ed1 public hay ch\u01b0a?\u201d \"It\u2019s the property that, in a blockchain network, the data of the block \u2014 meaning the transactions inside the block \u2014 has been fully published to the network.\" \u2014 Ismail, Celestia N\u00f3i \u0111\u01a1n gi\u1ea3n, Data Availability (DA) l\u00e0 \u0111\u1ea3m b\u1ea3o r\u1eb1ng to\u00e0n b\u1ed9 d\u1eef li\u1ec7u trong m\u1ed9t block \u0111\u1eb7c bi\u1ec7t l\u00e0 c\u00e1c giao d\u1ecbch b\u00ean trong \u0111\u00e3 \u0111\u01b0\u1ee3c c\u00f4ng b\u1ed1 c\u00f4ng khai v\u00e0 \u0111\u1ea7y \u0111\u1ee7 cho to\u00e0n m\u1ea1ng l\u01b0\u1edbi. Trong c\u00e1c \u1ee9ng d\u1ee5ng web2 truy\u1ec1n th\u1ed1ng, vi\u1ec7c x\u1eed l\u00fd v\u00e0 l\u01b0u tr\u1eef d\u1eef li\u1ec7u quy m\u00f4 l\u1edbn l\u00e0 \u0111i\u1ec1u t\u1ea5t y\u1ebfu. \u0110\u1ec3 \u0111\u00e1p \u1ee9ng \u0111i\u1ec1u \u0111\u00f3, c\u00e1c c\u00f4ng ty cloud nh\u01b0 AWS, Google Cloud hay Azure \u0111\u00e3 x\u00e2y d\u1ef1ng nh\u1eefng server warehouses kh\u1ed5ng l\u1ed3 \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o d\u1eef li\u1ec7u lu\u00f4n s\u1eb5n s\u00e0ng cho m\u1ecdi t\u00e1c v\u1ee5. M\u1ed9t t\u00ecnh hu\u1ed1ng t\u01b0\u01a1ng t\u1ef1 \u0111ang di\u1ec5n ra v\u1edbi blockchain. Nh\u01b0ng thay v\u00ec l\u01b0u tr\u1eef \u0111\u01a1n thu\u1ea7n, blockchain c\u1ea7n \u0111\u1ea3m b\u1ea3o r\u1eb1ng d\u1eef li\u1ec7u giao d\u1ecbch \u0111\u01b0\u1ee3c c\u00f4ng b\u1ed1 m\u1ed9t c\u00e1ch c\u00f4ng khai v\u00e0 c\u00f3 th\u1ec3 x\u00e1c minh \u0111\u01b0\u1ee3c . \u0110\u00e2y ch\u00ednh l\u00e0 l\u00fd do v\u00ec sao Data Availability tr\u1edf th\u00e0nh m\u1ed9t trong nh\u1eefng \u0111i\u1ec3m ngh\u1ebdn nghi\u00eam tr\u1ecdng nh\u1ea5t trong vi\u1ec7c m\u1edf r\u1ed9ng blockchain \u0111\u1eb7c bi\u1ec7t l\u00e0 v\u1edbi c\u00e1c gi\u1ea3i ph\u00e1p nh\u01b0 rollups hay layer 2s . What is the Data Availability Problem? Rollups gi\u00fap m\u1edf r\u1ed9ng quy m\u00f4 blockchain b\u1eb1ng c\u00e1ch gi\u1eef ph\u1ea7n d\u1eef li\u1ec7u tr\u00ean-chain \u1edf L1, trong khi \u0111\u1ea9y ph\u1ea7n th\u1ef1c thi (execution) xu\u1ed1ng L2 cho nh\u1eb9 g\u00e1nh. Tuy nhi\u00ean, v\u00ec d\u1eef li\u1ec7u v\u1eabn c\u1ea7n \u0111\u01b0\u1ee3c post l\u00ean L1, n\u00ean b\u0103ng th\u00f4ng d\u1eef li\u1ec7u c\u1ee7a L1 tr\u1edf th\u00e0nh \u0111i\u1ec3m ngh\u1ebdn. Mu\u1ed1n scale m\u1ea1nh, ch\u00fang ta bu\u1ed9c ph\u1ea3i n\u00e2ng th\u00f4ng l\u01b0\u1ee3ng d\u1eef li\u1ec7u (data throughput) \u1edf L1. H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng flow sau: M\u1ed9t publisher post d\u1eef li\u1ec7u l\u00ean m\u1ea1ng, k\u00e8m theo m\u1ed9t commitment \u0111\u1ea1i di\u1ec7n cho d\u1eef li\u1ec7u \u0111\u00f3 (c\u00f3 th\u1ec3 l\u00e0 Merkle root, KZG commitment, etc.), k\u00fd hi\u1ec7u l\u00e0 C . Commitment C \u0111\u01b0\u1ee3c lan truy\u1ec1n \u0111\u1ebfn c\u00e1c validator trong m\u1ea1ng. C\u00e1c validator ch\u1ea1y h\u00e0m isAvailable(C) \u0111\u1ec3 check xem d\u1eef li\u1ec7u c\u00f3 available kh\u00f4ng (c\u00f3 \u0111\u1ee7, kh\u00f4ng b\u1ecb m\u1ea5t, kh\u00f4ng b\u1ecb gi\u1eef l\u1ea1i\u2026). V\u1ea5n \u0111\u1ec1 \u1edf ch\u1ed7 l\u00e0m sao \u0111\u1ec3 validator bi\u1ebft ch\u1eafc l\u00e0 c\u00f3 th\u1ec3 t\u1ea3i h\u1ebft to\u00e0n b\u1ed9 d\u1eef li\u1ec7u, m\u00e0 kh\u00f4ng th\u1ef1c s\u1ef1 ph\u1ea3i t\u1ea3i h\u1ebft? N\u1ebfu thi\u1ebfu DA, c\u00e1c block producers ho\u1eb7c validators c\u00f3 th\u1ec3 xu\u1ea5t b\u1ea3n block m\u00e0 kh\u00f4ng c\u00f4ng khai to\u00e0n b\u1ed9 d\u1eef li\u1ec7u b\u00ean trong. \u0110i\u1ec1u n\u00e0y t\u1ea1o ra r\u1ee7i ro c\u1ef1c l\u1edbn g\u1ecdi l\u00e0 data withholding attack . Khi \u0111\u00f3: C\u00e1c node kh\u00f4ng th\u1ec3 sync l\u00ean tr\u1ea1ng th\u00e1i m\u1edbi \u1ee8ng d\u1ee5ng c\u00f3 th\u1ec3 b\u1ecb d\u1eebng ho\u1ea1t \u0111\u1ed9ng Nghi\u00eam tr\u1ecdng h\u01a1n, k\u1ebb t\u1ea5n c\u00f4ng c\u00f3 th\u1ec3 r\u00fat ti\u1ec1n ho\u1eb7c thao t\u00fang h\u1ec7 th\u1ed1ng V\u1ea5n \u0111\u1ec1 n\u00e0y ph\u1ed5 bi\u1ebfn trong c\u00e1c gi\u1ea3i ph\u00e1p L2 nh\u01b0 rollups hay validiums. V\u1edbi rollups ho\u1eb7c c\u00e1c blockchain layer 2, DA s\u1ebd \u0111\u00f3ng vai tr\u00f2 c\u1ea7u n\u1ed1i b\u1ea3o m\u1eadt (security anchor) v\u1ec1 layer 1 ho\u1eb7c base layer. B\u1eb1ng c\u00e1ch publishing full transaction data l\u00ean base layer nh\u01b0 Ethereum ho\u1eb7c Celestia, c\u00e1c rollups c\u00f3 th\u1ec3 \u0111\u1ea3m b\u1ea3o r\u1eb1ng m\u1ecdi giao d\u1ecbch \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ki\u1ec3m ch\u1ee9ng v\u00e0 kh\u00f4i ph\u1ee5c b\u1ea5t c\u1ee9 l\u00fac n\u00e0o. S\u1ef1 kh\u00e1c bi\u1ec7t gi\u1eefa Data Storage v\u00e0 Data Availability trong blockchain. M\u1ee5c ti\u00eau c\u1ee7a data storage l\u00e0 \u0111\u1ec3 m\u00ecnh l\u01b0u tr\u1eef l\u00e2u d\u00e0i \u0111\u1ec3 c\u00f3 th\u1ec3 truy c\u1eadp l\u1ea1i khi c\u1ea7n, k\u1ec3 c\u1ea3 c\u00e1c block c\u0169. Trong khi Data Availability, ng\u01b0\u1eddi d\u00f9ng kh\u00f4ng c\u1ea7n truy xu\u1ea5t qu\u00e1 kh\u1ee9 m\u00e0 ch\u1ec9 c\u1ea7n x\u00e1c minh d\u1eef li\u1ec7u m\u1edbi nh\u1ea5t (v\u00ed d\u1ee5: Block 5).\u0110\u1ea3m b\u1ea3o to\u00e0n b\u1ed9 d\u1eef li\u1ec7u trong block m\u1edbi \u0111\u01b0\u1ee3c c\u00f4ng b\u1ed1 \u0111\u00fang v\u00e0 \u0111\u1ea7y \u0111\u1ee7 t\u1ea1i th\u1eddi \u0111i\u1ec3m ph\u00e1t h\u00e0nh. N\u00f3i t\u00f3m l\u1ea1i th\u00ec Celestia cung c\u1ea5p m\u1ed9t DA layer \u0111\u1ee7 l\u1edbn v\u00e0 \u0111\u1ee7 r\u1ebb \u0111\u1ec3 gi\u1ea3i quy\u1ebft \u0111i\u1ec3m ngh\u1ebdn m\u1edf r\u1ed9ng cho c\u00e1c rollup v\u00e0 dApp. Thay v\u00ec ph\u1ea3i lo g\u00e1nh n\u1eb7ng chi ph\u00ed \u0111\u1ec3 c\u00f4ng b\u1ed1 d\u1eef li\u1ec7u l\u00ean Ethereum hay c\u00e1c L1 Celestia l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u \u0111\u00f3 nh\u1edd c\u00f4ng ngh\u1ec7 Data Availability Sampling (DAS) cho ph\u00e9p c\u00e1c light node (m\u00e1y nh\u1eb9) v\u1eabn c\u00f3 th\u1ec3 x\u00e1c minh r\u1eb1ng to\u00e0n b\u1ed9 d\u1eef li\u1ec7u trong block \u0111\u00e3 \u0111\u01b0\u1ee3c c\u00f4ng b\u1ed1 \u0111\u1ea7y \u0111\u1ee7. What is data availability sampling? How does Data Availability Sampling (DAS) benefit light nodes on Celestia? Tr\u01b0\u1edbc \u0111\u00f3 b\u1ea1n s\u1ebd c\u1ea7n hi\u1ec3u ch\u00fat v\u1ec1 c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn c\u1ee7a Ethereum , ph\u00e2n bi\u1ec7t \u0111\u01b0\u1ee3c Full node v\u00e0 Light node , R\u00f5 \u0111\u01b0\u1ee3c kh\u00e1i ni\u1ec7m Data Availability hay c\u00f2n g\u1ecdi l\u00e0 Data Publicatio trong context l\u00e0 Rollup. > Data Availability Sampling is a technique that empowers light nodes to have guarantees similar to those of full nodes when it comes to data availability. Data Availability Sampling kh\u00f4ng d\u1ef1a v\u00e0o \u201cni\u1ec1m tin\u201d v\u00e0o validator n\u1eefa. Data availability sampling (DAS) l\u00e0 m\u1ed9t c\u01a1 ch\u1ebf gi\u00fap light nodes x\u00e1c minh t\u00ednh s\u1eb5n c\u00f3 c\u1ee7a d\u1eef li\u1ec7u m\u00e0 kh\u00f4ng c\u1ea7n ph\u1ea3i t\u1ea3i to\u00e0n b\u1ed9 d\u1eef li\u1ec7u c\u1ee7a m\u1ed9t block. Light node s\u1ebd th\u1ef1c hi\u1ec7n nhi\u1ec1u v\u00f2ng sampling ng\u1eabu nhi\u00ean. M\u1ed7i v\u00f2ng sampling ch\u1ec9 ki\u1ec3m tra m\u1ed9t ph\u1ea7n nh\u1ecf d\u1eef li\u1ec7u trong block. C\u00e0ng sampling nhi\u1ec1u, node c\u00e0ng t\u1ef1 tin r\u1eb1ng d\u1eef li\u1ec7u c\u1ee7a block \u0111ang th\u1ef1c s\u1ef1 t\u1ed3n t\u1ea1i. Trong thi\u1ebft k\u1ebf blockchain nh\u01b0 Celestia , c\u01a1 ch\u1ebf DAS gi\u00fap light nodes kh\u00f4ng ch\u1ec9 \u0111\u1ecdc d\u1eef li\u1ec7u hi\u1ec7u qu\u1ea3 m\u00e0 c\u00f2n g\u00f3p ph\u1ea7n b\u1ea3o m\u1eadt v\u00e0 m\u1edf r\u1ed9ng m\u1ea1ng l\u01b0\u1edbi, v\u1edbi chi ph\u00ed ph\u1ea7n c\u1ee9ng r\u1ebb h\u01a1n nhi\u1ec1u so v\u1edbi full nodes. C\u00e1ch ho\u1ea1t \u0111\u1ed9ng c\u1ee7a DAS r\u1ea5t th\u00f4ng minh: * Publisher s\u1ebd \u0111\u0103ng t\u1ea3i d\u1eef li\u1ec7u d\u01b0\u1edbi d\u1ea1ng \u0111\u00e3 \u0111\u01b0\u1ee3c erasure-coded * C\u00e1c validator s\u1ebd randomly sampling \u0111\u1ec3 ch\u1ecdn ng\u1eabu nhi\u00ean m\u1ed9t s\u1ed1 ph\u1ea7n nh\u1ecf trong d\u1eef li\u1ec7u v\u00e0 th\u1eed t\u1ea3i v\u1ec1. * N\u1ebfu c\u00e1c ph\u1ea7n \u0111\u01b0\u1ee3c sample \u0111\u1ec1u t\u1ea3i v\u1ec1 th\u00e0nh c\u00f4ng th\u00ec k\u1ebft lu\u1eadn r\u1eb1ng to\u00e0n b\u1ed9 block \u0111\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c kh\u00f4i ph\u1ee5c, t\u1ee9c l\u00e0 d\u1eef li\u1ec7u available. DAS c\u00f3 th\u1ec3 detect \u0111\u01b0\u1ee3c data withholding . Gi\u1ea3 s\u1eed k\u1ebb x\u1ea5u (publisher gian l\u1eadn) \u0111\u1ecbnh gi\u1ea5u d\u1eef li\u1ec7u. \u0110\u1ec3 th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c ki\u1ec3u t\u1ea5n c\u00f4ng n\u00e0y, h\u1ecd ph\u1ea3i gi\u1ea5u h\u01a1n m\u1ed9t n\u1eeda l\u01b0\u1ee3ng data . V\u00ec n\u1ebfu ch\u1ec9 c\u00f3 d\u01b0\u1edbi 50% b\u1ecb m\u1ea5t, th\u00ec c\u00e1c validator v\u1eabn c\u00f3 th\u1ec3 kh\u00f4i ph\u1ee5c to\u00e0n b\u1ed9 d\u1eef li\u1ec7u g\u1ed1c t\u1eeb ph\u1ea7n c\u00f2n l\u1ea1i nh\u1edd erasure coding. Gi\u1edd h\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng validator ch\u1ea1y DAS: N\u1ebfu d\u1eef li\u1ec7u b\u1ecb gi\u1ea5u m\u1ed9t ph\u1ea7n l\u1edbn th\u00ec c\u00f3 kh\u1ea3 n\u0103ng sampling s\u1ebd th\u1ea5t b\u1ea1i v\u00e0 DAS ph\u00e1t hi\u1ec7n b\u1ea5t th\u01b0\u1eddng. N\u1ebfu sampling th\u00e0nh c\u00f4ng nhi\u1ec1u l\u1ea7n \u2192 c\u00f3 c\u01a1 s\u1edf \u0111\u1ec3 tin r\u1eb1ng to\u00e0n b\u1ed9 d\u1eef li\u1ec7u \u0111\u00e3 \u0111\u01b0\u1ee3c public Gi\u1ea3 s\u1eed m\u1ed9t validator th\u1ef1c hi\u1ec7n n l\u1ea7n sampling \u2013 t\u1ee9c l\u00e0 th\u1eed t\u1ea3i v\u1ec1 ng\u1eabu nhi\u00ean n m\u1ea3nh d\u1eef li\u1ec7u kh\u00e1c nhau. N\u1ebfu k\u1ebb x\u1ea5u \u0111ang gi\u1ea5u h\u01a1n m\u1ed9t n\u1eeda d\u1eef li\u1ec7u , th\u00ec m\u1ed7i l\u1ea7n sampling c\u00f3 50% kh\u1ea3 n\u0103ng tr\u00fang ngay v\u00e0o ph\u1ea7n b\u1ecb gi\u1ea5u. V\u1eady x\u00e1c su\u1ea5t \u0111\u1ec3 kh\u00f4ng ph\u00e1t hi\u1ec7n g\u00ec sau n l\u1ea7n sampling s\u1ebd l\u00e0: \u2192 (1/2)^n T\u1ee9c l\u00e0 x\u00e1c su\u1ea5t ph\u00e1t hi\u1ec7n \u0111\u01b0\u1ee3c gian l\u1eadn (data withholding) l\u00e0: \u2192 1 - (1/2)^n \ud83d\udd0d V\u1edbi ch\u1ec9 n = 20 , x\u00e1c su\u1ea5t n\u00e0y \u0111\u00e3 l\u00ean t\u1edbi ~ 99.9999% \u2013 g\u1ea7n nh\u01b0 l\u00e0 ch\u1eafc c\u00fa. N\u00f3i c\u00e1ch kh\u00e1c: ch\u1ec9 c\u1ea7n m\u1ed9t light node ch\u1ea1y 20 l\u1ea7n sampling l\u00e0 g\u1ea7n nh\u01b0 b\u1eaft b\u00e0i ngay n\u1ebfu c\u00f3 ai \u0111\u00f3 \u0111\u1ecbnh gi\u1ea5u data. L\u1ee3i \u00edch c\u1ee7a DAS l\u00e0 Gi\u1ea3m ph\u1ee5 thu\u1ed9c v\u00e0o validator v\u00e0 d\u1ec5 m\u1edf r\u1ed9ng quy m\u00f4 . B\u1ea1n c\u00f3 th\u1ec3 xem gi\u1ea3i th\u00edch nhanh v\u1ec1 Availability Sampling (DAS) explainer trong 5 ph\u00fat: https://www.youtube.com/watch?v=9Y5rc8OC6yE M\u00ecnh c\u00f3 v\u00ed d\u1ee5. B\u1ea1n c\u00f3 hai \u0111\u1ed3ng xu. M\u1ed9t \u0111\u1ed3ng lu\u00f4n lu\u00f4n ra m\u1eb7t ng\u1eeda (heads) M\u1ed9t \u0111\u1ed3ng ra ng\u1eeda ho\u1eb7c s\u1ea5p (heads/tails) v\u1edbi x\u00e1c su\u1ea5t 50/50 Gi\u1edd m\u00ecnh \u0111\u01b0a b\u1ea1n m\u1ed9t trong hai \u0111\u1ed3ng \u0111\u00f3, nh\u01b0ng kh\u00f4ng n\u00f3i l\u00e0 \u0111\u1ed3ng n\u00e0o. L\u00e0m sao \u0111\u1ec3 b\u1ea1n bi\u1ebft m\u00ecnh \u0111ang c\u1ea7m \u0111\u1ed3ng n\u00e0o? \u0110\u01a1n gi\u1ea3n: c\u1ee9 tung nhi\u1ec1u l\u1ea7n l\u00e0 bi\u1ebft. N\u00ean c\u00e0ng tung m\u00e0 th\u1ea5y to\u00e0n ra ng\u1eeda, b\u1ea1n c\u00e0ng c\u00f3 c\u01a1 s\u1edf tin r\u1eb1ng m\u00ecnh \u0111ang c\u1ea7m \u0111\u1ed3ng \u0111\u1eb7c bi\u1ec7t \u0111\u00f3. Tung kho\u1ea3ng 20 l\u1ea7n, n\u1ebfu v\u1eabn ra ng\u1eeda ho\u00e0i, th\u00ec b\u1ea1n \u0111\u00e3 g\u1ea7n nh\u01b0 ch\u1eafc ch\u1eafn 99.9999% l\u00e0 \u0111ang c\u1ea7m \u0111\u1ed3ng xu g\u00ec. V\u00e0 \u0111\u00e2y ch\u00ednh l\u00e0 c\u00e1ch Data Availability Sampling (DAS) ho\u1ea1t \u0111\u1ed9ng. Trong blockchain, c\u00f3 hai lo\u1ea1i block: Block \u0111\u1ea7y \u0111\u1ee7 d\u1eef li\u1ec7u (t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi \u0111\u1ed3ng \u201cra ng\u1eeda-only\u201d) Block thi\u1ebfu d\u1eef li\u1ec7u (gi\u1ed1ng nh\u01b0 \u0111\u1ed3ng 50/50 \u2013 c\u00f3 th\u1ec3 l\u1eeba b\u1ea1n b\u1ea5t c\u1ee9 l\u00fac n\u00e0o) Khi m\u1ed9t block producer (ng\u01b0\u1eddi t\u1ea1o block) g\u1eedi block cho b\u1ea1n, b\u1ea1n c\u1ea7n x\u00e1c \u0111\u1ecbnh li\u1ec7u block n\u00e0y c\u00f3 th\u1eadt s\u1ef1 \u0111\u1ea7y \u0111\u1ee7 d\u1eef li\u1ec7u hay kh\u00f4ng. L\u00e0m sao bi\u1ebft \u0111\u01b0\u1ee3c? B\u1ea1n sampling block \u0111\u00f3 nhi\u1ec1u l\u1ea7n c\u0169ng gi\u1ed1ng nh\u01b0 b\u1ea1n tung xu. Data availability committee l\u00e0 g\u00ec ? Data Availability Committees (DACs) l\u00e0 nh\u1eefng b\u00ean \u0111\u01b0\u1ee3c \u1ee7y th\u00e1c (trusted parties) \u0111\u1ec3 \u0111\u1ea3m nhi\u1ec7m vai tr\u00f2 cung c\u1ea5p ho\u1eb7c x\u00e1c nh\u1eadn t\u00ednh s\u1eb5n c\u00f3 c\u1ee7a d\u1eef li\u1ec7u (data availability) . Trong m\u1ed9t s\u1ed1 h\u1ec7 th\u1ed1ng, DAC c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c d\u00f9ng thay th\u1ebf cho, ho\u1eb7c k\u1ebft h\u1ee3p c\u00f9ng v\u1edbi Data Availability Sampling (DAS). M\u1ee9c \u0111\u1ed9 b\u1ea3o m\u1eadt c\u1ee7a DAC ph\u1ee5 thu\u1ed9c v\u00e0o c\u00e1ch b\u1ea1n thi\u1ebft k\u1ebf n\u00f3. V\u00ed d\u1ee5, Ethereum hi\u1ec7n \u0111ang s\u1eed d\u1ee5ng c\u00e1c nh\u00f3m validator \u0111\u01b0\u1ee3c ch\u1ecdn ng\u1eabu nhi\u00ean (randomly sampled) \u0111\u1ec3 x\u00e1c nh\u1eadn data availability cho c\u00e1c light node \u0111\u00e2y c\u0169ng l\u00e0 m\u1ed9t d\u1ea1ng bi\u1ebfn th\u1ec3 c\u1ee7a DAC. Trong m\u1ed9t s\u1ed1 m\u00f4 h\u00ecnh Validium , DAC \u0111\u00f3ng vai tr\u00f2 l\u00e0 nh\u00f3m node \u0111\u00e1ng tin c\u1eady c\u00f3 nhi\u1ec7m v\u1ee5 l\u01b0u tr\u1eef b\u1ea3n sao d\u1eef li\u1ec7u \u1edf ch\u1ebf \u0111\u1ed9 offchain . Khi c\u00f3 tranh ch\u1ea5p x\u1ea3y ra, DAC ph\u1ea3i c\u00f4ng khai d\u1eef li\u1ec7u \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1. C\u00e1c th\u00e0nh vi\u00ean DAC th\u01b0\u1eddng ph\u1ea3i \u0111\u0103ng t\u1ea3i cam k\u1ebft (attestation) on-chain \u0111\u1ec3 ch\u1ee9ng minh r\u1eb1ng d\u1eef li\u1ec7u \u0111\u00e3 s\u1eb5n s\u00e0ng. What is the difference between data availability in celestia and data availability committee? It is basicallly is who the participants of nodes attesting to the data availabe. what is the fundamental difference in trust assumptions between a Data Availability Committee (DAC) and a Data Availability Layer like Celestia? Trong qu\u00e1 tr\u00ecnh ph\u00e1t tri\u1ec3n blockchain scalable, m\u1ed9t c\u00e2u h\u1ecfi l\u1edbn th\u01b0\u1eddng \u0111\u01b0\u1ee3c \u0111\u1eb7t ra: \u201cLi\u1ec7u ch\u00fang ta c\u00f3 th\u1ec3 ch\u1ec9 ch\u1ecdn m\u1ed9t c\u01a1 ch\u1ebf \u0111\u1ea3m b\u1ea3o t\u00ednh s\u1eb5n s\u00e0ng d\u1eef li\u1ec7u ho\u1eb7c Committee, ho\u1eb7c Data Availability Sampling (DAS) thay v\u00ec ph\u1ea3i k\u1ebft h\u1ee3p c\u1ea3 hai?\u201d C\u00e2u tr\u1ea3 l\u1eddi h\u1ee3p l\u00fd nh\u1ea5t l\u1ea1i ch\u00ednh l\u00e0 c\u1ea3 hai \u0111\u1ec1u c\u1ea7n thi\u1ebft. C\u00f9ng b\u00f3c t\u00e1ch l\u00fd do t\u1ea1i sao kh\u00f4ng n\u00ean ch\u1ec9 d\u1ef1a v\u00e0o committee, v\u00e0 c\u0169ng kh\u00f4ng th\u1ec3 ho\u00e0n to\u00e0n ch\u1ec9 d\u00f9ng DAS. Khi ch\u1ec9 d\u00f9ng Committee : b\u1ea1n ch\u1ecdn ra m\u1ed9t nh\u00f3m node c\u00f3 tr\u00e1ch nhi\u1ec7m \u201cb\u1ea3o ch\u1ee9ng\u201d r\u1eb1ng d\u1eef li\u1ec7u trong m\u1ed9t block l\u00e0 \u0111\u00e3 \u0111\u01b0\u1ee3c c\u00f4ng b\u1ed1 v\u00e0 ai c\u0169ng c\u00f3 th\u1ec3 truy c\u1eadp. Tuy nhi\u00ean, vi\u1ec7c \u0111\u1eb7t ni\u1ec1m tin v\u00e0o m\u1ed9t nh\u00f3m ng\u01b0\u1eddi d\u00f9 l\u00e0 validator, trusted party hay stake-based c\u0169ng \u0111\u1ed3ng ngh\u0129a v\u1edbi vi\u1ec7c ch\u1ea5p nh\u1eadn r\u1ee7i ro. N\u1ebfu ph\u1ea7n l\u1edbn committee \u0111\u1ed3ng \u00fd v\u1edbi m\u1ed9t block sai ho\u1eb7c b\u1ecb t\u1ea5n c\u00f4ng \u0111\u1ec3 l\u00e0m v\u1eady th\u00ec h\u1ec7 th\u1ed1ng kh\u00f4ng c\u00f2n c\u00e1ch n\u00e0o \u0111\u1ec3 ki\u1ec3m tra \u0111\u1ed9c l\u1eadp xem d\u1eef li\u1ec7u \u0111\u00f3 l\u00e0 th\u1eadt hay gi\u1ea3. M\u1ed9t v\u1ea5n \u0111\u1ec1 kh\u00e1c l\u00e0 ng\u01b0\u1ee1ng \u0111\u1ed3ng thu\u1eadn (threshold): b\u1ea1n ph\u1ea3i \u0111\u1eb7t ra t\u1ef7 l\u1ec7 bao nhi\u00eau ph\u1ea7n tr\u0103m committee c\u1ea7n ch\u1ea5p thu\u1eadn d\u1eef li\u1ec7u \u0111\u1ec3 chain ch\u1ea5p nh\u1eadn n\u00f3. N\u1ebfu \u0111\u1eb7t ng\u01b0\u1ee1ng cao, th\u00ec khi s\u1ed1 validator online gi\u1ea3m (do l\u1ed7i m\u1ea1ng, t\u1ea5n c\u00f4ng, downtime), h\u1ec7 th\u1ed1ng s\u1ebd b\u1ecb t\u00ea li\u1ec7t. N\u1ebfu ng\u01b0\u1ee1ng th\u1ea5p, th\u00ec attacker ch\u1ec9 c\u1ea7n l\u00e0m s\u1eadp m\u1ed9t s\u1ed1 node l\u00e0 c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng \u0111i\u1ec1u khi\u1ec3n ph\u1ea7n c\u00f2n l\u1ea1i \u0111\u1ec3 \u0111\u01b0a d\u1eef li\u1ec7u gi\u1ea3 v\u00e0o. C\u00f2n khi ch\u1ec9 d\u00f9ng DAS : DAS cho ph\u00e9p b\u1ea5t k\u1ef3 ai trong m\u1ea1ng (d\u00f9 l\u00e0 light node) c\u0169ng c\u00f3 th\u1ec3 sampling m\u1ed9t ph\u1ea7n nh\u1ecf d\u1eef li\u1ec7u trong block \u0111\u1ec3 t\u1ef1 x\u00e1c minh r\u1eb1ng to\u00e0n b\u1ed9 block \u0111\u00f3 l\u00e0 h\u1ee3p l\u1ec7. Nh\u01b0ng DAS, \u00edt nh\u1ea5t l\u00e0 \u1edf th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i, v\u1eabn l\u00e0 c\u00f4ng ngh\u1ec7 r\u1ea5t m\u1edbi v\u00e0 c\u00f2n \u0111ang ph\u00e1t tri\u1ec3n. Nhi\u1ec1u th\u00e0nh ph\u1ea7n c\u1ee7a n\u00f3 m\u1edbi ch\u1ec9 \u0111\u01b0\u1ee3c \u0111\u1ec1 xu\u1ea5t v\u00e0 th\u1eed nghi\u1ec7m trong v\u00e0i n\u0103m g\u1ea7n \u0111\u00e2y. M\u1ed9t b\u1ea5t l\u1ee3i kh\u00e1c l\u00e0 \u0111\u1ed9 tr\u1ec5 (latency) : DAS c\u1ea7n nhi\u1ec1u b\u01b0\u1edbc sampling v\u00e0 ki\u1ec3m tra ph\u00e2n t\u00e1n h\u01a1n so v\u1edbi vi\u1ec7c ch\u1ec9 ch\u1edd m\u1ed9t s\u1ed1 node \u0111\u00e1ng tin x\u00e1c minh. V\u1edbi c\u00e1c h\u1ec7 th\u1ed1ng y\u00eau c\u1ea7u th\u1eddi gian x\u00e1c nh\u1eadn c\u1ef1c nhanh, committee v\u1eabn c\u00f3 l\u1ee3i th\u1ebf v\u1ec1 t\u1ed1c \u0111\u1ed9. Blobs Ri\u00eang ph\u1ea7n n\u00e0y, c\u1ea3m \u01a1n L2Beat \u0111\u00e3 minh ho\u1ea1 gi\u00fap m\u00ecnh hi\u1ec3u s\u00e2u h\u01a1n v\u1ec1 ph\u1ea7n n\u00e0y. \u0110\u1ec3 gi\u1ea3i th\u00edch th\u00ec Blobs l\u00e0 d\u1eef li\u1ec7u m\u00e0 m\u1ed9t rollup c\u00f4ng b\u1ed1 l\u00ean Layer 1 ho\u1eb7c l\u1edbp Data Availability (DA) c\u1ee7a n\u00f3 . D\u1eef li\u1ec7u n\u00e0y bao g\u1ed3m c\u00e1c giao d\u1ecbch L2 \u0111\u00e3 \u0111\u01b0\u1ee3c \u201ccu\u1ed9n l\u1ea1i\u201d (rolled up), k\u00e8m theo m\u1ed9t s\u1ed1 metadata li\u00ean quan. Blobs \u0111\u01b0\u1ee3c gi\u1edbi thi\u1ec7u nh\u01b0 m\u1ed9t lo\u1ea1i giao d\u1ecbch m\u1edbi tr\u00ean Ethereum th\u00f4ng qua \u0111\u1ec1 xu\u1ea5t EIP-4844 , v\u1edbi m\u1ee5c ti\u00eau ch\u00ednh l\u00e0 t\u0103ng kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng cho rollups. \u0110i\u1ec3m \u0111\u1eb7c bi\u1ec7t l\u00e0 blobs kh\u00f4ng t\u1ed3n t\u1ea1i v\u0129nh vi\u1ec5n m\u00e0 \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef m\u1ed9t c\u00e1ch t\u1ea1m th\u1eddi tr\u00ean Beacon Chain c\u1ee7a Ethereum, \u0111\u1ee7 l\u00e2u \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o t\u00ednh kh\u1ea3 d\u1ee5ng d\u1eef li\u1ec7u (data availability), nh\u01b0ng kh\u00f4ng c\u1ea7n gi\u1eef l\u00e2u d\u00e0i nh\u01b0 c\u00e1c d\u1eef li\u1ec7u l\u01b0u tr\u1eef truy\u1ec1n th\u1ed1ng. Tr\u00ean Celestia , blobs l\u00e0 d\u1eef li\u1ec7u do ng\u01b0\u1eddi d\u00f9ng g\u1eedi l\u00ean, nh\u01b0ng kh\u00f4ng l\u00e0m thay \u0111\u1ed5i tr\u1ea1ng th\u00e1i c\u1ee7a blockchain (non-state-altering data) . M\u1ed7i blob g\u1ed3m hai th\u00e0nh ph\u1ea7n ch\u00ednh: Ph\u1ea7n d\u1eef li\u1ec7u g\u1ed1c (raw bytes) : m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng nh\u1ecb ph\u00e2n ch\u1ee9a n\u1ed9i dung th\u1ef1c t\u1ebf do ng\u01b0\u1eddi d\u00f9ng cung c\u1ea5p. Namespace : \u0111\u1ecbnh danh cho \u1ee9ng d\u1ee5ng c\u1ee5 th\u1ec3 m\u00e0 blob n\u00e0y thu\u1ed9c v\u1ec1. \u0110i\u1ec1u n\u00e0y cho ph\u00e9p nhi\u1ec1u \u1ee9ng d\u1ee5ng kh\u00e1c nhau c\u00f9ng s\u1eed d\u1ee5ng chung Celestia m\u00e0 v\u1eabn t\u00e1ch bi\u1ec7t d\u1eef li\u1ec7u m\u1ed9t c\u00e1ch r\u00f5 r\u00e0ng. V\u1edbi thi\u1ebft k\u1ebf n\u00e0y, Celestia kh\u00f4ng ch\u1ec9 \u0111\u00f3ng vai tr\u00f2 l\u00e0 DA layer c\u00f3 kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng , m\u00e0 c\u00f2n l\u00e0 data publishing layer cho c\u00e1c \u1ee9ng d\u1ee5ng modular: t\u1eeb rollups, games, \u0111\u1ebfn c\u00e1c AI agent hay \u1ee9ng d\u1ee5ng m\u1ea1ng x\u00e3 h\u1ed9i phi t\u1eadp trung. T\u1ea5t c\u1ea3 d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c \u0111\u0103ng l\u00ean Celestia d\u01b0\u1edbi d\u1ea1ng blob s\u1ebd \u0111\u01b0\u1ee3c chia nh\u1ecf th\u00e0nh c\u00e1c ph\u1ea7n c\u00f3 k\u00edch th\u01b0\u1edbc c\u1ed1 \u0111\u1ecbnh, g\u1ecdi l\u00e0 shares . M\u1ed7i blob \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp th\u00e0nh m\u1ed9t ma tr\u1eadn k\u00edch th\u01b0\u1edbc k \u00d7 k , v\u1edbi k hi\u1ec7n t\u1ea1i l\u00e0 64 , t\u1ee9c l\u00e0 m\u1ed7i blob g\u1ed3m t\u1ed5ng c\u1ed9ng 4096 shares . C\u00e1c h\u00e0ng v\u00e0 c\u1ed9t c\u1ee7a ma tr\u1eadn shares s\u1ebd \u0111\u01b0\u1ee3c m\u00e3 ho\u00e1 b\u1eb1ng k\u1ef9 thu\u1eadt erasure coding , nh\u1eb1m t\u1ea1o th\u00eam d\u1eef li\u1ec7u d\u01b0 th\u1eeba ph\u1ee5c v\u1ee5 cho vi\u1ec7c kh\u00f4i ph\u1ee5c (recovery). K\u1ebft qu\u1ea3 l\u00e0, ta c\u00f3 m\u1ed9t ma tr\u1eadn m\u1edbi k\u00edch th\u01b0\u1edbc 2k \u00d7 2k, t\u1ee9c 128 \u00d7 128 shares, \u0111\u1ee7 \u0111\u1ec3 h\u1ed7 tr\u1ee3 Data Availability Sampling (DAS) hi\u1ec7u qu\u1ea3. \u0110\u1ec3 \u0111\u1ea3m b\u1ea3o t\u00ednh x\u00e1c minh (verifiability), to\u00e0n b\u1ed9 ma tr\u1eadn sau khi erasure-code s\u1ebd \u0111\u01b0\u1ee3c cam k\u1ebft (committed) b\u1eb1ng m\u1ed9t c\u1ea5u tr\u00fac c\u00e2y Merkle \u0111\u1eb7c bi\u1ec7t c\u00f3 t\u00ean l\u00e0 Namespaced Merkle Tree (NMT) . Kh\u00e1c v\u1edbi Merkle tree th\u00f4ng th\u01b0\u1eddng, trong NMT: M\u1ed7i node trong c\u00e2y kh\u00f4ng ch\u1ec9 ch\u1ee9a hash c\u1ee7a con m\u00e0 c\u00f2n l\u01b0u th\u00eam ph\u1ea1m vi namespace bao tr\u00f9m t\u1ea5t c\u1ea3 node con c\u1ee7a n\u00f3. \u0110i\u1ec1u n\u00e0y cho ph\u00e9p c\u00e1c \u1ee9ng d\u1ee5ng truy v\u1ea5n ch\u00ednh x\u00e1c blob thu\u1ed9c namespace ri\u00eang c\u1ee7a m\u00ecnh, m\u00e0 kh\u00f4ng c\u1ea7n x\u1eed l\u00fd to\u00e0n b\u1ed9 c\u00e2y. \u0110\u1ed3ng th\u1eddi v\u1eabn gi\u1eef nguy\u00ean c\u00e1c t\u00ednh n\u0103ng nh\u01b0 inclusion proof hay range proof t\u01b0\u01a1ng t\u1ef1 Merkle tree truy\u1ec1n th\u1ed1ng Cu\u1ed1i c\u00f9ng, t\u1eeb c\u00e1c root c\u1ee7a t\u1eebng h\u00e0ng v\u00e0 c\u1ed9t trong ma tr\u1eadn erasure-coded, Celestia t\u00ednh to\u00e1n ra m\u1ed9t data root duy nh\u1ea5t, g\u1ecdi l\u00e0 availableDataRoot . \u0110\u00e2y ch\u00ednh l\u00e0 g\u1ed1c c\u1ee7a c\u00e2y Merkle t\u1ed5ng th\u1ec3 , d\u00f9ng \u0111\u1ec3 cam k\u1ebft to\u00e0n b\u1ed9 d\u1eef li\u1ec7u \u0111\u00e3 \u0111\u01b0\u1ee3c chia nh\u1ecf, m\u00e3 ho\u00e1 v\u00e0 t\u1ed5 ch\u1ee9c trong block. Root n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o block header , \u0111\u00f3ng vai tr\u00f2 nh\u01b0 ch\u1ee9ng th\u1ef1c (commitment) cho to\u00e0n b\u1ed9 d\u1eef li\u1ec7u d\u1ea1ng share trong ma tr\u1eadn. Nh\u1edd \u0111\u00f3, b\u1ea5t k\u1ef3 share n\u00e0o trong ma tr\u1eadn \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ch\u1ee9ng minh (prove) l\u00e0 m\u1ed9t ph\u1ea7n h\u1ee3p l\u1ec7 c\u1ee7a block data, b\u1eb1ng c\u00e1ch d\u1eabn ng\u01b0\u1ee3c l\u00ean t\u1eeb leaf \u2192 row/column root \u2192 availableDataRoot. \u0110\u1ec3 \u0111\u1ea3m b\u1ea3o data availability (D\u1eef li\u1ec7u th\u1ef1c s\u1ef1 t\u1ed3n t\u1ea1i v\u00e0 ai c\u0169ng c\u00f3 th\u1ec3 truy c\u1eadp) , Celestia cho ph\u00e9p light node (ki\u1ec3u node nh\u1eb9, kh\u00f4ng c\u1ea7n l\u01b0u to\u00e0n b\u1ed9 d\u1eef li\u1ec7u) th\u1ef1c hi\u1ec7n m\u1ed9t k\u1ef9 thu\u1eadt g\u1ecdi l\u00e0 sampling tr\u00ean m\u1ed9t ma tr\u1eadn d\u1eef li\u1ec7u si\u00eau to kh\u1ed5ng l\u1ed3 c\u1ee5 th\u1ec3 l\u00e0 ma tr\u1eadn 2k x 2k (ch\u00ednh x\u00e1c l\u00e0 2,048 x 2,048 \u00f4 d\u1eef li\u1ec7u). M\u1ed7i light node s\u1ebd random ch\u1ecdn v\u00e0i t\u1ecda \u0111\u1ed9 b\u1ea5t k\u1ef3 trong ma tr\u1eadn m\u1edf r\u1ed9ng \u0111\u00f3 , sau \u0111\u00f3 y\u00eau c\u1ea7u d\u1eef li\u1ec7u t\u01b0\u01a1ng \u1ee9ng c\u00f9ng v\u1edbi Merkle proof (b\u1eb1ng ch\u1ee9ng d\u1eef li\u1ec7u kh\u00f4ng b\u1ecb ch\u1ec9nh s\u1eeda) t\u1eeb full node. Hi\u1ec7n t\u1ea1i, \u0111\u1ec3 \u201cch\u1ed1t k\u00e8o\u201d r\u1eb1ng m\u1ed9t block d\u1eef li\u1ec7u c\u00f3 s\u1eb5n, m\u1ed7i light node ph\u1ea3i th\u1ef1c hi\u1ec7n \u00edt nh\u1ea5t 16 l\u1ea7n sampling. N\u1ebfu block c\u00f3 v\u1ea5n \u0111\u1ec1 (thi\u1ebfu d\u1eef li\u1ec7u), v\u1edbi x\u00e1c su\u1ea5t 99%, light node s\u1ebd ph\u00e1t hi\u1ec7n ra \u0111i\u1ec1u \u0111\u00f3 trong qu\u00e1 tr\u00ecnh sampling. Ta c\u00f3 th\u1ec3 \u0111\u1ecdc k\u1ef9 h\u01a1n trong paper Fraud and Data Availability Proofs","title":"DA, DAS, and Blobs \u2014 Celestia Lesson \ud83d\udce6\ud83e\udde0"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/01-Celestia_Da_DAS_Blobs/#da-das-and-blobs-celestia-lesson","text":"\ud83c\udfaf Target: H\u1ecdc t\u1eeb ch\u00ednh nh\u1eefng nh\u00e0 s\u00e1ng l\u1eadp Celestia \u2014 Mustafa, Ismail v\u00e0 John v\u1ec1 Data Availability (DA), Data Availability Sampling (DAS), v\u00e0 Blobs. C\u00f9ng nhau b\u00f3c t\u00e1ch Web3 app th\u1eadt ra l\u00e0 g\u00ec, v\u00e0 l\u00e0m sao Celestia trao cho b\u1ea1n full-stack control \u0111\u1ec3 t\u1ef1 do x\u00e2y d\u1ef1ng theo c\u00e1ch c\u1ee7a m\u00ecnh. B\u00e0i h\u1ecdc n\u00e0y s\u1ebd gi\u00fap b\u1ea1n th\u1ea5u hi\u1ec3u ki\u1ebfn tr\u00fac b\u00ean trong c\u1ee7a Celestia , \u0111\u1eb7c bi\u1ec7t l\u00e0 ba y\u1ebfu t\u1ed1 then ch\u1ed1t: Data Availability , Data Availability Sampling (DAS) , v\u00e0 Blobs","title":"DA, DAS, and Blobs \u2014 Celestia Lesson \ud83d\udce6\ud83e\udde0"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/01-Celestia_Da_DAS_Blobs/#celestia-co-the-lam-cho-ung-dung-cua-ban","text":"\"In the academic sense, Celestia provides a highly scalable verifiable data availability layer that allows your application to be built in a way users know they have the data needed to audit correctness.\" \u2014 John, Celestia Labs V\u00e0 \u0111\u00e2y l\u00e0 c\u00e2u h\u1ecfi b\u1ea1n c\u1ea7n t\u1ef1 tr\u1ea3 l\u1eddi sau bu\u1ed5i h\u1ecdc: \u201cFull-stack control\u201d tr\u00ean Celestia th\u1ef1c s\u1ef1 ngh\u0129a l\u00e0 g\u00ec \u0111\u1ed1i v\u1edbi developer? Kh\u00f3 kh\u0103n ch\u00ednh khi t\u1ef1 tri\u1ec3n khai m\u1ed9t Layer 1 blockchain so v\u1edbi x\u00e2y d\u1ef1ng tr\u00ean Celestia l\u00e0 g\u00ec?","title":"Celestia c\u00f3 th\u1ec3 l\u00e0m cho \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n ?"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/01-Celestia_Da_DAS_Blobs/#vay-thi-the-nao-goi-la-full-stack","text":"Full stack control ngh\u0129a l\u00e0 m\u00ecnh c\u00f3 th\u1ec3 t\u1ea1o applications cho b\u1ea3n th\u00e2n b\u1eb1ng b\u1ea5t k\u00ec ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh n\u00e0o m\u00ecnh mu\u1ed1n. B\u1ea1n c\u0169ng c\u00f3 th\u1ec3 t\u1ef1 x\u00e2y d\u1ef1ng m\u00f4 h\u00ecnh t\u1ea1o doanh thu (revenue) cho \u1ee9ng d\u1ee5ng \u0111\u00f3. N\u1ebfu so s\u00e1nh v\u1edbi Ethereum hay Solana, b\u1ea1n s\u1ebd th\u1ea5y m\u00ecnh b\u1ecb gi\u1edbi h\u1ea1n \u1edf m\u1ed9t s\u1ed1 kh\u00eda c\u1ea1nh nh\u1ea5t \u0111\u1ecbnh. V\u00ed d\u1ee5, tr\u00ean Ethereum b\u1ea1n b\u1eaft bu\u1ed9c ph\u1ea3i s\u1eed d\u1ee5ng EVM v\u00e0 ng\u00f4n ng\u1eef Solidity. Celestia cho ph\u00e9p b\u1ea1n custom ho\u00e1 full-stack, t\u1ee9c l\u00e0 t\u1eeb A \u0111\u1ebfn Z mu\u1ed1n ch\u1ec9nh g\u00ec trong h\u1ea1 t\u1ea7ng c\u0169ng \u0111\u01b0\u1ee3c. B\u1ea1n c\u00f3 th\u1ec3 t\u1ef1 build v\u00e0 deploy nh\u1eefng \u1ee9ng d\u1ee5ng unstoppable. T\u1eeb t\u1ea7ng consensus (ai x\u00e1c th\u1ef1c), \u0111\u1ebfn data availability (d\u1eef li\u1ec7u c\u00f3 s\u1eb5n cho ai v\u00e0 nh\u01b0 th\u1ebf n\u00e0o), t\u1edbi c\u1ea3 execution environment (VM) N\u00f3i t\u00f3m l\u1ea1i b\u1ea1n c\u00f3 th\u1ec3 hi\u1ec3u key Features c\u1ee7a Celestia n\u1eb1m \u1edf Modular Design b\u1eb1ng c\u00e1ch c\u00e1c dev c\u00f3 th\u1ec3 t\u1ef1 thi\u1ebft k\u1ebf execution layer sao cho kh\u1edbp v\u1edbi nhu c\u1ea7u \u1ee9ng d\u1ee5ng c\u1ee7a m\u00ecnh. Hay n\u00f3i \u0111\u00fang h\u01a1n l\u00e0 Developer Freedom , \u0110i\u1ec1u n\u00e0y m\u1edf ra m\u1ed9t kh\u00f4ng gian ph\u00e1t tri\u1ec3n c\u1ef1c k\u1ef3 linh ho\u1ea1t.","title":"V\u1eady th\u00ec th\u1ebf n\u00e0o g\u1ecdi l\u00e0 Full Stack?"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/01-Celestia_Da_DAS_Blobs/#vay-data-availability-la-gi","text":"Data Availability (DA) tr\u1ea3 l\u1eddi cho c\u00e2u h\u1ecfi c\u1ef1c k\u1ef3 quan tr\u1ecdng: \u201cD\u1eef li\u1ec7u c\u1ee7a block n\u00e0y \u0111\u00e3 \u0111\u01b0\u1ee3c c\u00f4ng b\u1ed1 public hay ch\u01b0a?\u201d \"It\u2019s the property that, in a blockchain network, the data of the block \u2014 meaning the transactions inside the block \u2014 has been fully published to the network.\" \u2014 Ismail, Celestia N\u00f3i \u0111\u01a1n gi\u1ea3n, Data Availability (DA) l\u00e0 \u0111\u1ea3m b\u1ea3o r\u1eb1ng to\u00e0n b\u1ed9 d\u1eef li\u1ec7u trong m\u1ed9t block \u0111\u1eb7c bi\u1ec7t l\u00e0 c\u00e1c giao d\u1ecbch b\u00ean trong \u0111\u00e3 \u0111\u01b0\u1ee3c c\u00f4ng b\u1ed1 c\u00f4ng khai v\u00e0 \u0111\u1ea7y \u0111\u1ee7 cho to\u00e0n m\u1ea1ng l\u01b0\u1edbi. Trong c\u00e1c \u1ee9ng d\u1ee5ng web2 truy\u1ec1n th\u1ed1ng, vi\u1ec7c x\u1eed l\u00fd v\u00e0 l\u01b0u tr\u1eef d\u1eef li\u1ec7u quy m\u00f4 l\u1edbn l\u00e0 \u0111i\u1ec1u t\u1ea5t y\u1ebfu. \u0110\u1ec3 \u0111\u00e1p \u1ee9ng \u0111i\u1ec1u \u0111\u00f3, c\u00e1c c\u00f4ng ty cloud nh\u01b0 AWS, Google Cloud hay Azure \u0111\u00e3 x\u00e2y d\u1ef1ng nh\u1eefng server warehouses kh\u1ed5ng l\u1ed3 \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o d\u1eef li\u1ec7u lu\u00f4n s\u1eb5n s\u00e0ng cho m\u1ecdi t\u00e1c v\u1ee5. M\u1ed9t t\u00ecnh hu\u1ed1ng t\u01b0\u01a1ng t\u1ef1 \u0111ang di\u1ec5n ra v\u1edbi blockchain. Nh\u01b0ng thay v\u00ec l\u01b0u tr\u1eef \u0111\u01a1n thu\u1ea7n, blockchain c\u1ea7n \u0111\u1ea3m b\u1ea3o r\u1eb1ng d\u1eef li\u1ec7u giao d\u1ecbch \u0111\u01b0\u1ee3c c\u00f4ng b\u1ed1 m\u1ed9t c\u00e1ch c\u00f4ng khai v\u00e0 c\u00f3 th\u1ec3 x\u00e1c minh \u0111\u01b0\u1ee3c . \u0110\u00e2y ch\u00ednh l\u00e0 l\u00fd do v\u00ec sao Data Availability tr\u1edf th\u00e0nh m\u1ed9t trong nh\u1eefng \u0111i\u1ec3m ngh\u1ebdn nghi\u00eam tr\u1ecdng nh\u1ea5t trong vi\u1ec7c m\u1edf r\u1ed9ng blockchain \u0111\u1eb7c bi\u1ec7t l\u00e0 v\u1edbi c\u00e1c gi\u1ea3i ph\u00e1p nh\u01b0 rollups hay layer 2s . What is the Data Availability Problem? Rollups gi\u00fap m\u1edf r\u1ed9ng quy m\u00f4 blockchain b\u1eb1ng c\u00e1ch gi\u1eef ph\u1ea7n d\u1eef li\u1ec7u tr\u00ean-chain \u1edf L1, trong khi \u0111\u1ea9y ph\u1ea7n th\u1ef1c thi (execution) xu\u1ed1ng L2 cho nh\u1eb9 g\u00e1nh. Tuy nhi\u00ean, v\u00ec d\u1eef li\u1ec7u v\u1eabn c\u1ea7n \u0111\u01b0\u1ee3c post l\u00ean L1, n\u00ean b\u0103ng th\u00f4ng d\u1eef li\u1ec7u c\u1ee7a L1 tr\u1edf th\u00e0nh \u0111i\u1ec3m ngh\u1ebdn. Mu\u1ed1n scale m\u1ea1nh, ch\u00fang ta bu\u1ed9c ph\u1ea3i n\u00e2ng th\u00f4ng l\u01b0\u1ee3ng d\u1eef li\u1ec7u (data throughput) \u1edf L1. H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng flow sau: M\u1ed9t publisher post d\u1eef li\u1ec7u l\u00ean m\u1ea1ng, k\u00e8m theo m\u1ed9t commitment \u0111\u1ea1i di\u1ec7n cho d\u1eef li\u1ec7u \u0111\u00f3 (c\u00f3 th\u1ec3 l\u00e0 Merkle root, KZG commitment, etc.), k\u00fd hi\u1ec7u l\u00e0 C . Commitment C \u0111\u01b0\u1ee3c lan truy\u1ec1n \u0111\u1ebfn c\u00e1c validator trong m\u1ea1ng. C\u00e1c validator ch\u1ea1y h\u00e0m isAvailable(C) \u0111\u1ec3 check xem d\u1eef li\u1ec7u c\u00f3 available kh\u00f4ng (c\u00f3 \u0111\u1ee7, kh\u00f4ng b\u1ecb m\u1ea5t, kh\u00f4ng b\u1ecb gi\u1eef l\u1ea1i\u2026). V\u1ea5n \u0111\u1ec1 \u1edf ch\u1ed7 l\u00e0m sao \u0111\u1ec3 validator bi\u1ebft ch\u1eafc l\u00e0 c\u00f3 th\u1ec3 t\u1ea3i h\u1ebft to\u00e0n b\u1ed9 d\u1eef li\u1ec7u, m\u00e0 kh\u00f4ng th\u1ef1c s\u1ef1 ph\u1ea3i t\u1ea3i h\u1ebft? N\u1ebfu thi\u1ebfu DA, c\u00e1c block producers ho\u1eb7c validators c\u00f3 th\u1ec3 xu\u1ea5t b\u1ea3n block m\u00e0 kh\u00f4ng c\u00f4ng khai to\u00e0n b\u1ed9 d\u1eef li\u1ec7u b\u00ean trong. \u0110i\u1ec1u n\u00e0y t\u1ea1o ra r\u1ee7i ro c\u1ef1c l\u1edbn g\u1ecdi l\u00e0 data withholding attack . Khi \u0111\u00f3: C\u00e1c node kh\u00f4ng th\u1ec3 sync l\u00ean tr\u1ea1ng th\u00e1i m\u1edbi \u1ee8ng d\u1ee5ng c\u00f3 th\u1ec3 b\u1ecb d\u1eebng ho\u1ea1t \u0111\u1ed9ng Nghi\u00eam tr\u1ecdng h\u01a1n, k\u1ebb t\u1ea5n c\u00f4ng c\u00f3 th\u1ec3 r\u00fat ti\u1ec1n ho\u1eb7c thao t\u00fang h\u1ec7 th\u1ed1ng V\u1ea5n \u0111\u1ec1 n\u00e0y ph\u1ed5 bi\u1ebfn trong c\u00e1c gi\u1ea3i ph\u00e1p L2 nh\u01b0 rollups hay validiums. V\u1edbi rollups ho\u1eb7c c\u00e1c blockchain layer 2, DA s\u1ebd \u0111\u00f3ng vai tr\u00f2 c\u1ea7u n\u1ed1i b\u1ea3o m\u1eadt (security anchor) v\u1ec1 layer 1 ho\u1eb7c base layer. B\u1eb1ng c\u00e1ch publishing full transaction data l\u00ean base layer nh\u01b0 Ethereum ho\u1eb7c Celestia, c\u00e1c rollups c\u00f3 th\u1ec3 \u0111\u1ea3m b\u1ea3o r\u1eb1ng m\u1ecdi giao d\u1ecbch \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ki\u1ec3m ch\u1ee9ng v\u00e0 kh\u00f4i ph\u1ee5c b\u1ea5t c\u1ee9 l\u00fac n\u00e0o. S\u1ef1 kh\u00e1c bi\u1ec7t gi\u1eefa Data Storage v\u00e0 Data Availability trong blockchain. M\u1ee5c ti\u00eau c\u1ee7a data storage l\u00e0 \u0111\u1ec3 m\u00ecnh l\u01b0u tr\u1eef l\u00e2u d\u00e0i \u0111\u1ec3 c\u00f3 th\u1ec3 truy c\u1eadp l\u1ea1i khi c\u1ea7n, k\u1ec3 c\u1ea3 c\u00e1c block c\u0169. Trong khi Data Availability, ng\u01b0\u1eddi d\u00f9ng kh\u00f4ng c\u1ea7n truy xu\u1ea5t qu\u00e1 kh\u1ee9 m\u00e0 ch\u1ec9 c\u1ea7n x\u00e1c minh d\u1eef li\u1ec7u m\u1edbi nh\u1ea5t (v\u00ed d\u1ee5: Block 5).\u0110\u1ea3m b\u1ea3o to\u00e0n b\u1ed9 d\u1eef li\u1ec7u trong block m\u1edbi \u0111\u01b0\u1ee3c c\u00f4ng b\u1ed1 \u0111\u00fang v\u00e0 \u0111\u1ea7y \u0111\u1ee7 t\u1ea1i th\u1eddi \u0111i\u1ec3m ph\u00e1t h\u00e0nh. N\u00f3i t\u00f3m l\u1ea1i th\u00ec Celestia cung c\u1ea5p m\u1ed9t DA layer \u0111\u1ee7 l\u1edbn v\u00e0 \u0111\u1ee7 r\u1ebb \u0111\u1ec3 gi\u1ea3i quy\u1ebft \u0111i\u1ec3m ngh\u1ebdn m\u1edf r\u1ed9ng cho c\u00e1c rollup v\u00e0 dApp. Thay v\u00ec ph\u1ea3i lo g\u00e1nh n\u1eb7ng chi ph\u00ed \u0111\u1ec3 c\u00f4ng b\u1ed1 d\u1eef li\u1ec7u l\u00ean Ethereum hay c\u00e1c L1 Celestia l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u \u0111\u00f3 nh\u1edd c\u00f4ng ngh\u1ec7 Data Availability Sampling (DAS) cho ph\u00e9p c\u00e1c light node (m\u00e1y nh\u1eb9) v\u1eabn c\u00f3 th\u1ec3 x\u00e1c minh r\u1eb1ng to\u00e0n b\u1ed9 d\u1eef li\u1ec7u trong block \u0111\u00e3 \u0111\u01b0\u1ee3c c\u00f4ng b\u1ed1 \u0111\u1ea7y \u0111\u1ee7.","title":"V\u1eady data Availability l\u00e0 g\u00ec?"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/01-Celestia_Da_DAS_Blobs/#what-is-data-availability-sampling","text":"How does Data Availability Sampling (DAS) benefit light nodes on Celestia? Tr\u01b0\u1edbc \u0111\u00f3 b\u1ea1n s\u1ebd c\u1ea7n hi\u1ec3u ch\u00fat v\u1ec1 c\u01a1 ch\u1ebf \u0111\u1ed3ng thu\u1eadn c\u1ee7a Ethereum , ph\u00e2n bi\u1ec7t \u0111\u01b0\u1ee3c Full node v\u00e0 Light node , R\u00f5 \u0111\u01b0\u1ee3c kh\u00e1i ni\u1ec7m Data Availability hay c\u00f2n g\u1ecdi l\u00e0 Data Publicatio trong context l\u00e0 Rollup.","title":"What is data availability sampling?"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/01-Celestia_Da_DAS_Blobs/#data-availability-sampling-is-a-technique-that-empowers-light-nodes-to-have-guarantees-similar-to-those-of-full-nodes-when-it-comes-to-data-availability","text":"Data Availability Sampling kh\u00f4ng d\u1ef1a v\u00e0o \u201cni\u1ec1m tin\u201d v\u00e0o validator n\u1eefa. Data availability sampling (DAS) l\u00e0 m\u1ed9t c\u01a1 ch\u1ebf gi\u00fap light nodes x\u00e1c minh t\u00ednh s\u1eb5n c\u00f3 c\u1ee7a d\u1eef li\u1ec7u m\u00e0 kh\u00f4ng c\u1ea7n ph\u1ea3i t\u1ea3i to\u00e0n b\u1ed9 d\u1eef li\u1ec7u c\u1ee7a m\u1ed9t block. Light node s\u1ebd th\u1ef1c hi\u1ec7n nhi\u1ec1u v\u00f2ng sampling ng\u1eabu nhi\u00ean. M\u1ed7i v\u00f2ng sampling ch\u1ec9 ki\u1ec3m tra m\u1ed9t ph\u1ea7n nh\u1ecf d\u1eef li\u1ec7u trong block. C\u00e0ng sampling nhi\u1ec1u, node c\u00e0ng t\u1ef1 tin r\u1eb1ng d\u1eef li\u1ec7u c\u1ee7a block \u0111ang th\u1ef1c s\u1ef1 t\u1ed3n t\u1ea1i. Trong thi\u1ebft k\u1ebf blockchain nh\u01b0 Celestia , c\u01a1 ch\u1ebf DAS gi\u00fap light nodes kh\u00f4ng ch\u1ec9 \u0111\u1ecdc d\u1eef li\u1ec7u hi\u1ec7u qu\u1ea3 m\u00e0 c\u00f2n g\u00f3p ph\u1ea7n b\u1ea3o m\u1eadt v\u00e0 m\u1edf r\u1ed9ng m\u1ea1ng l\u01b0\u1edbi, v\u1edbi chi ph\u00ed ph\u1ea7n c\u1ee9ng r\u1ebb h\u01a1n nhi\u1ec1u so v\u1edbi full nodes. C\u00e1ch ho\u1ea1t \u0111\u1ed9ng c\u1ee7a DAS r\u1ea5t th\u00f4ng minh: * Publisher s\u1ebd \u0111\u0103ng t\u1ea3i d\u1eef li\u1ec7u d\u01b0\u1edbi d\u1ea1ng \u0111\u00e3 \u0111\u01b0\u1ee3c erasure-coded * C\u00e1c validator s\u1ebd randomly sampling \u0111\u1ec3 ch\u1ecdn ng\u1eabu nhi\u00ean m\u1ed9t s\u1ed1 ph\u1ea7n nh\u1ecf trong d\u1eef li\u1ec7u v\u00e0 th\u1eed t\u1ea3i v\u1ec1. * N\u1ebfu c\u00e1c ph\u1ea7n \u0111\u01b0\u1ee3c sample \u0111\u1ec1u t\u1ea3i v\u1ec1 th\u00e0nh c\u00f4ng th\u00ec k\u1ebft lu\u1eadn r\u1eb1ng to\u00e0n b\u1ed9 block \u0111\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c kh\u00f4i ph\u1ee5c, t\u1ee9c l\u00e0 d\u1eef li\u1ec7u available. DAS c\u00f3 th\u1ec3 detect \u0111\u01b0\u1ee3c data withholding . Gi\u1ea3 s\u1eed k\u1ebb x\u1ea5u (publisher gian l\u1eadn) \u0111\u1ecbnh gi\u1ea5u d\u1eef li\u1ec7u. \u0110\u1ec3 th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c ki\u1ec3u t\u1ea5n c\u00f4ng n\u00e0y, h\u1ecd ph\u1ea3i gi\u1ea5u h\u01a1n m\u1ed9t n\u1eeda l\u01b0\u1ee3ng data . V\u00ec n\u1ebfu ch\u1ec9 c\u00f3 d\u01b0\u1edbi 50% b\u1ecb m\u1ea5t, th\u00ec c\u00e1c validator v\u1eabn c\u00f3 th\u1ec3 kh\u00f4i ph\u1ee5c to\u00e0n b\u1ed9 d\u1eef li\u1ec7u g\u1ed1c t\u1eeb ph\u1ea7n c\u00f2n l\u1ea1i nh\u1edd erasure coding. Gi\u1edd h\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng validator ch\u1ea1y DAS: N\u1ebfu d\u1eef li\u1ec7u b\u1ecb gi\u1ea5u m\u1ed9t ph\u1ea7n l\u1edbn th\u00ec c\u00f3 kh\u1ea3 n\u0103ng sampling s\u1ebd th\u1ea5t b\u1ea1i v\u00e0 DAS ph\u00e1t hi\u1ec7n b\u1ea5t th\u01b0\u1eddng. N\u1ebfu sampling th\u00e0nh c\u00f4ng nhi\u1ec1u l\u1ea7n \u2192 c\u00f3 c\u01a1 s\u1edf \u0111\u1ec3 tin r\u1eb1ng to\u00e0n b\u1ed9 d\u1eef li\u1ec7u \u0111\u00e3 \u0111\u01b0\u1ee3c public Gi\u1ea3 s\u1eed m\u1ed9t validator th\u1ef1c hi\u1ec7n n l\u1ea7n sampling \u2013 t\u1ee9c l\u00e0 th\u1eed t\u1ea3i v\u1ec1 ng\u1eabu nhi\u00ean n m\u1ea3nh d\u1eef li\u1ec7u kh\u00e1c nhau. N\u1ebfu k\u1ebb x\u1ea5u \u0111ang gi\u1ea5u h\u01a1n m\u1ed9t n\u1eeda d\u1eef li\u1ec7u , th\u00ec m\u1ed7i l\u1ea7n sampling c\u00f3 50% kh\u1ea3 n\u0103ng tr\u00fang ngay v\u00e0o ph\u1ea7n b\u1ecb gi\u1ea5u. V\u1eady x\u00e1c su\u1ea5t \u0111\u1ec3 kh\u00f4ng ph\u00e1t hi\u1ec7n g\u00ec sau n l\u1ea7n sampling s\u1ebd l\u00e0: \u2192 (1/2)^n T\u1ee9c l\u00e0 x\u00e1c su\u1ea5t ph\u00e1t hi\u1ec7n \u0111\u01b0\u1ee3c gian l\u1eadn (data withholding) l\u00e0: \u2192 1 - (1/2)^n \ud83d\udd0d V\u1edbi ch\u1ec9 n = 20 , x\u00e1c su\u1ea5t n\u00e0y \u0111\u00e3 l\u00ean t\u1edbi ~ 99.9999% \u2013 g\u1ea7n nh\u01b0 l\u00e0 ch\u1eafc c\u00fa. N\u00f3i c\u00e1ch kh\u00e1c: ch\u1ec9 c\u1ea7n m\u1ed9t light node ch\u1ea1y 20 l\u1ea7n sampling l\u00e0 g\u1ea7n nh\u01b0 b\u1eaft b\u00e0i ngay n\u1ebfu c\u00f3 ai \u0111\u00f3 \u0111\u1ecbnh gi\u1ea5u data. L\u1ee3i \u00edch c\u1ee7a DAS l\u00e0 Gi\u1ea3m ph\u1ee5 thu\u1ed9c v\u00e0o validator v\u00e0 d\u1ec5 m\u1edf r\u1ed9ng quy m\u00f4 . B\u1ea1n c\u00f3 th\u1ec3 xem gi\u1ea3i th\u00edch nhanh v\u1ec1 Availability Sampling (DAS) explainer trong 5 ph\u00fat: https://www.youtube.com/watch?v=9Y5rc8OC6yE M\u00ecnh c\u00f3 v\u00ed d\u1ee5. B\u1ea1n c\u00f3 hai \u0111\u1ed3ng xu. M\u1ed9t \u0111\u1ed3ng lu\u00f4n lu\u00f4n ra m\u1eb7t ng\u1eeda (heads) M\u1ed9t \u0111\u1ed3ng ra ng\u1eeda ho\u1eb7c s\u1ea5p (heads/tails) v\u1edbi x\u00e1c su\u1ea5t 50/50 Gi\u1edd m\u00ecnh \u0111\u01b0a b\u1ea1n m\u1ed9t trong hai \u0111\u1ed3ng \u0111\u00f3, nh\u01b0ng kh\u00f4ng n\u00f3i l\u00e0 \u0111\u1ed3ng n\u00e0o. L\u00e0m sao \u0111\u1ec3 b\u1ea1n bi\u1ebft m\u00ecnh \u0111ang c\u1ea7m \u0111\u1ed3ng n\u00e0o? \u0110\u01a1n gi\u1ea3n: c\u1ee9 tung nhi\u1ec1u l\u1ea7n l\u00e0 bi\u1ebft. N\u00ean c\u00e0ng tung m\u00e0 th\u1ea5y to\u00e0n ra ng\u1eeda, b\u1ea1n c\u00e0ng c\u00f3 c\u01a1 s\u1edf tin r\u1eb1ng m\u00ecnh \u0111ang c\u1ea7m \u0111\u1ed3ng \u0111\u1eb7c bi\u1ec7t \u0111\u00f3. Tung kho\u1ea3ng 20 l\u1ea7n, n\u1ebfu v\u1eabn ra ng\u1eeda ho\u00e0i, th\u00ec b\u1ea1n \u0111\u00e3 g\u1ea7n nh\u01b0 ch\u1eafc ch\u1eafn 99.9999% l\u00e0 \u0111ang c\u1ea7m \u0111\u1ed3ng xu g\u00ec. V\u00e0 \u0111\u00e2y ch\u00ednh l\u00e0 c\u00e1ch Data Availability Sampling (DAS) ho\u1ea1t \u0111\u1ed9ng. Trong blockchain, c\u00f3 hai lo\u1ea1i block: Block \u0111\u1ea7y \u0111\u1ee7 d\u1eef li\u1ec7u (t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi \u0111\u1ed3ng \u201cra ng\u1eeda-only\u201d) Block thi\u1ebfu d\u1eef li\u1ec7u (gi\u1ed1ng nh\u01b0 \u0111\u1ed3ng 50/50 \u2013 c\u00f3 th\u1ec3 l\u1eeba b\u1ea1n b\u1ea5t c\u1ee9 l\u00fac n\u00e0o) Khi m\u1ed9t block producer (ng\u01b0\u1eddi t\u1ea1o block) g\u1eedi block cho b\u1ea1n, b\u1ea1n c\u1ea7n x\u00e1c \u0111\u1ecbnh li\u1ec7u block n\u00e0y c\u00f3 th\u1eadt s\u1ef1 \u0111\u1ea7y \u0111\u1ee7 d\u1eef li\u1ec7u hay kh\u00f4ng. L\u00e0m sao bi\u1ebft \u0111\u01b0\u1ee3c? B\u1ea1n sampling block \u0111\u00f3 nhi\u1ec1u l\u1ea7n c\u0169ng gi\u1ed1ng nh\u01b0 b\u1ea1n tung xu.","title":"&gt; Data Availability Sampling is a technique that empowers light nodes to have guarantees similar to those of full nodes when it comes to data availability."},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/01-Celestia_Da_DAS_Blobs/#data-availability-committee-la-gi","text":"Data Availability Committees (DACs) l\u00e0 nh\u1eefng b\u00ean \u0111\u01b0\u1ee3c \u1ee7y th\u00e1c (trusted parties) \u0111\u1ec3 \u0111\u1ea3m nhi\u1ec7m vai tr\u00f2 cung c\u1ea5p ho\u1eb7c x\u00e1c nh\u1eadn t\u00ednh s\u1eb5n c\u00f3 c\u1ee7a d\u1eef li\u1ec7u (data availability) . Trong m\u1ed9t s\u1ed1 h\u1ec7 th\u1ed1ng, DAC c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c d\u00f9ng thay th\u1ebf cho, ho\u1eb7c k\u1ebft h\u1ee3p c\u00f9ng v\u1edbi Data Availability Sampling (DAS). M\u1ee9c \u0111\u1ed9 b\u1ea3o m\u1eadt c\u1ee7a DAC ph\u1ee5 thu\u1ed9c v\u00e0o c\u00e1ch b\u1ea1n thi\u1ebft k\u1ebf n\u00f3. V\u00ed d\u1ee5, Ethereum hi\u1ec7n \u0111ang s\u1eed d\u1ee5ng c\u00e1c nh\u00f3m validator \u0111\u01b0\u1ee3c ch\u1ecdn ng\u1eabu nhi\u00ean (randomly sampled) \u0111\u1ec3 x\u00e1c nh\u1eadn data availability cho c\u00e1c light node \u0111\u00e2y c\u0169ng l\u00e0 m\u1ed9t d\u1ea1ng bi\u1ebfn th\u1ec3 c\u1ee7a DAC. Trong m\u1ed9t s\u1ed1 m\u00f4 h\u00ecnh Validium , DAC \u0111\u00f3ng vai tr\u00f2 l\u00e0 nh\u00f3m node \u0111\u00e1ng tin c\u1eady c\u00f3 nhi\u1ec7m v\u1ee5 l\u01b0u tr\u1eef b\u1ea3n sao d\u1eef li\u1ec7u \u1edf ch\u1ebf \u0111\u1ed9 offchain . Khi c\u00f3 tranh ch\u1ea5p x\u1ea3y ra, DAC ph\u1ea3i c\u00f4ng khai d\u1eef li\u1ec7u \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1. C\u00e1c th\u00e0nh vi\u00ean DAC th\u01b0\u1eddng ph\u1ea3i \u0111\u0103ng t\u1ea3i cam k\u1ebft (attestation) on-chain \u0111\u1ec3 ch\u1ee9ng minh r\u1eb1ng d\u1eef li\u1ec7u \u0111\u00e3 s\u1eb5n s\u00e0ng.","title":"Data availability committee l\u00e0 g\u00ec ?"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/01-Celestia_Da_DAS_Blobs/#what-is-the-difference-between-data-availability-in-celestia-and-data-availability-committee","text":"It is basicallly is who the participants of nodes attesting to the data availabe. what is the fundamental difference in trust assumptions between a Data Availability Committee (DAC) and a Data Availability Layer like Celestia? Trong qu\u00e1 tr\u00ecnh ph\u00e1t tri\u1ec3n blockchain scalable, m\u1ed9t c\u00e2u h\u1ecfi l\u1edbn th\u01b0\u1eddng \u0111\u01b0\u1ee3c \u0111\u1eb7t ra: \u201cLi\u1ec7u ch\u00fang ta c\u00f3 th\u1ec3 ch\u1ec9 ch\u1ecdn m\u1ed9t c\u01a1 ch\u1ebf \u0111\u1ea3m b\u1ea3o t\u00ednh s\u1eb5n s\u00e0ng d\u1eef li\u1ec7u ho\u1eb7c Committee, ho\u1eb7c Data Availability Sampling (DAS) thay v\u00ec ph\u1ea3i k\u1ebft h\u1ee3p c\u1ea3 hai?\u201d C\u00e2u tr\u1ea3 l\u1eddi h\u1ee3p l\u00fd nh\u1ea5t l\u1ea1i ch\u00ednh l\u00e0 c\u1ea3 hai \u0111\u1ec1u c\u1ea7n thi\u1ebft. C\u00f9ng b\u00f3c t\u00e1ch l\u00fd do t\u1ea1i sao kh\u00f4ng n\u00ean ch\u1ec9 d\u1ef1a v\u00e0o committee, v\u00e0 c\u0169ng kh\u00f4ng th\u1ec3 ho\u00e0n to\u00e0n ch\u1ec9 d\u00f9ng DAS. Khi ch\u1ec9 d\u00f9ng Committee : b\u1ea1n ch\u1ecdn ra m\u1ed9t nh\u00f3m node c\u00f3 tr\u00e1ch nhi\u1ec7m \u201cb\u1ea3o ch\u1ee9ng\u201d r\u1eb1ng d\u1eef li\u1ec7u trong m\u1ed9t block l\u00e0 \u0111\u00e3 \u0111\u01b0\u1ee3c c\u00f4ng b\u1ed1 v\u00e0 ai c\u0169ng c\u00f3 th\u1ec3 truy c\u1eadp. Tuy nhi\u00ean, vi\u1ec7c \u0111\u1eb7t ni\u1ec1m tin v\u00e0o m\u1ed9t nh\u00f3m ng\u01b0\u1eddi d\u00f9 l\u00e0 validator, trusted party hay stake-based c\u0169ng \u0111\u1ed3ng ngh\u0129a v\u1edbi vi\u1ec7c ch\u1ea5p nh\u1eadn r\u1ee7i ro. N\u1ebfu ph\u1ea7n l\u1edbn committee \u0111\u1ed3ng \u00fd v\u1edbi m\u1ed9t block sai ho\u1eb7c b\u1ecb t\u1ea5n c\u00f4ng \u0111\u1ec3 l\u00e0m v\u1eady th\u00ec h\u1ec7 th\u1ed1ng kh\u00f4ng c\u00f2n c\u00e1ch n\u00e0o \u0111\u1ec3 ki\u1ec3m tra \u0111\u1ed9c l\u1eadp xem d\u1eef li\u1ec7u \u0111\u00f3 l\u00e0 th\u1eadt hay gi\u1ea3. M\u1ed9t v\u1ea5n \u0111\u1ec1 kh\u00e1c l\u00e0 ng\u01b0\u1ee1ng \u0111\u1ed3ng thu\u1eadn (threshold): b\u1ea1n ph\u1ea3i \u0111\u1eb7t ra t\u1ef7 l\u1ec7 bao nhi\u00eau ph\u1ea7n tr\u0103m committee c\u1ea7n ch\u1ea5p thu\u1eadn d\u1eef li\u1ec7u \u0111\u1ec3 chain ch\u1ea5p nh\u1eadn n\u00f3. N\u1ebfu \u0111\u1eb7t ng\u01b0\u1ee1ng cao, th\u00ec khi s\u1ed1 validator online gi\u1ea3m (do l\u1ed7i m\u1ea1ng, t\u1ea5n c\u00f4ng, downtime), h\u1ec7 th\u1ed1ng s\u1ebd b\u1ecb t\u00ea li\u1ec7t. N\u1ebfu ng\u01b0\u1ee1ng th\u1ea5p, th\u00ec attacker ch\u1ec9 c\u1ea7n l\u00e0m s\u1eadp m\u1ed9t s\u1ed1 node l\u00e0 c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng \u0111i\u1ec1u khi\u1ec3n ph\u1ea7n c\u00f2n l\u1ea1i \u0111\u1ec3 \u0111\u01b0a d\u1eef li\u1ec7u gi\u1ea3 v\u00e0o. C\u00f2n khi ch\u1ec9 d\u00f9ng DAS : DAS cho ph\u00e9p b\u1ea5t k\u1ef3 ai trong m\u1ea1ng (d\u00f9 l\u00e0 light node) c\u0169ng c\u00f3 th\u1ec3 sampling m\u1ed9t ph\u1ea7n nh\u1ecf d\u1eef li\u1ec7u trong block \u0111\u1ec3 t\u1ef1 x\u00e1c minh r\u1eb1ng to\u00e0n b\u1ed9 block \u0111\u00f3 l\u00e0 h\u1ee3p l\u1ec7. Nh\u01b0ng DAS, \u00edt nh\u1ea5t l\u00e0 \u1edf th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i, v\u1eabn l\u00e0 c\u00f4ng ngh\u1ec7 r\u1ea5t m\u1edbi v\u00e0 c\u00f2n \u0111ang ph\u00e1t tri\u1ec3n. Nhi\u1ec1u th\u00e0nh ph\u1ea7n c\u1ee7a n\u00f3 m\u1edbi ch\u1ec9 \u0111\u01b0\u1ee3c \u0111\u1ec1 xu\u1ea5t v\u00e0 th\u1eed nghi\u1ec7m trong v\u00e0i n\u0103m g\u1ea7n \u0111\u00e2y. M\u1ed9t b\u1ea5t l\u1ee3i kh\u00e1c l\u00e0 \u0111\u1ed9 tr\u1ec5 (latency) : DAS c\u1ea7n nhi\u1ec1u b\u01b0\u1edbc sampling v\u00e0 ki\u1ec3m tra ph\u00e2n t\u00e1n h\u01a1n so v\u1edbi vi\u1ec7c ch\u1ec9 ch\u1edd m\u1ed9t s\u1ed1 node \u0111\u00e1ng tin x\u00e1c minh. V\u1edbi c\u00e1c h\u1ec7 th\u1ed1ng y\u00eau c\u1ea7u th\u1eddi gian x\u00e1c nh\u1eadn c\u1ef1c nhanh, committee v\u1eabn c\u00f3 l\u1ee3i th\u1ebf v\u1ec1 t\u1ed1c \u0111\u1ed9.","title":"What is the difference between data availability in celestia and data availability committee?"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/01-Celestia_Da_DAS_Blobs/#blobs","text":"","title":"Blobs"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/01-Celestia_Da_DAS_Blobs/#rieng-phan-nay-cam-on-l2beat-a-minh-hoa-giup-minh-hieu-sau-hon-ve-phan-nay","text":"\u0110\u1ec3 gi\u1ea3i th\u00edch th\u00ec Blobs l\u00e0 d\u1eef li\u1ec7u m\u00e0 m\u1ed9t rollup c\u00f4ng b\u1ed1 l\u00ean Layer 1 ho\u1eb7c l\u1edbp Data Availability (DA) c\u1ee7a n\u00f3 . D\u1eef li\u1ec7u n\u00e0y bao g\u1ed3m c\u00e1c giao d\u1ecbch L2 \u0111\u00e3 \u0111\u01b0\u1ee3c \u201ccu\u1ed9n l\u1ea1i\u201d (rolled up), k\u00e8m theo m\u1ed9t s\u1ed1 metadata li\u00ean quan. Blobs \u0111\u01b0\u1ee3c gi\u1edbi thi\u1ec7u nh\u01b0 m\u1ed9t lo\u1ea1i giao d\u1ecbch m\u1edbi tr\u00ean Ethereum th\u00f4ng qua \u0111\u1ec1 xu\u1ea5t EIP-4844 , v\u1edbi m\u1ee5c ti\u00eau ch\u00ednh l\u00e0 t\u0103ng kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng cho rollups. \u0110i\u1ec3m \u0111\u1eb7c bi\u1ec7t l\u00e0 blobs kh\u00f4ng t\u1ed3n t\u1ea1i v\u0129nh vi\u1ec5n m\u00e0 \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef m\u1ed9t c\u00e1ch t\u1ea1m th\u1eddi tr\u00ean Beacon Chain c\u1ee7a Ethereum, \u0111\u1ee7 l\u00e2u \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o t\u00ednh kh\u1ea3 d\u1ee5ng d\u1eef li\u1ec7u (data availability), nh\u01b0ng kh\u00f4ng c\u1ea7n gi\u1eef l\u00e2u d\u00e0i nh\u01b0 c\u00e1c d\u1eef li\u1ec7u l\u01b0u tr\u1eef truy\u1ec1n th\u1ed1ng. Tr\u00ean Celestia , blobs l\u00e0 d\u1eef li\u1ec7u do ng\u01b0\u1eddi d\u00f9ng g\u1eedi l\u00ean, nh\u01b0ng kh\u00f4ng l\u00e0m thay \u0111\u1ed5i tr\u1ea1ng th\u00e1i c\u1ee7a blockchain (non-state-altering data) . M\u1ed7i blob g\u1ed3m hai th\u00e0nh ph\u1ea7n ch\u00ednh: Ph\u1ea7n d\u1eef li\u1ec7u g\u1ed1c (raw bytes) : m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng nh\u1ecb ph\u00e2n ch\u1ee9a n\u1ed9i dung th\u1ef1c t\u1ebf do ng\u01b0\u1eddi d\u00f9ng cung c\u1ea5p. Namespace : \u0111\u1ecbnh danh cho \u1ee9ng d\u1ee5ng c\u1ee5 th\u1ec3 m\u00e0 blob n\u00e0y thu\u1ed9c v\u1ec1. \u0110i\u1ec1u n\u00e0y cho ph\u00e9p nhi\u1ec1u \u1ee9ng d\u1ee5ng kh\u00e1c nhau c\u00f9ng s\u1eed d\u1ee5ng chung Celestia m\u00e0 v\u1eabn t\u00e1ch bi\u1ec7t d\u1eef li\u1ec7u m\u1ed9t c\u00e1ch r\u00f5 r\u00e0ng. V\u1edbi thi\u1ebft k\u1ebf n\u00e0y, Celestia kh\u00f4ng ch\u1ec9 \u0111\u00f3ng vai tr\u00f2 l\u00e0 DA layer c\u00f3 kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng , m\u00e0 c\u00f2n l\u00e0 data publishing layer cho c\u00e1c \u1ee9ng d\u1ee5ng modular: t\u1eeb rollups, games, \u0111\u1ebfn c\u00e1c AI agent hay \u1ee9ng d\u1ee5ng m\u1ea1ng x\u00e3 h\u1ed9i phi t\u1eadp trung. T\u1ea5t c\u1ea3 d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c \u0111\u0103ng l\u00ean Celestia d\u01b0\u1edbi d\u1ea1ng blob s\u1ebd \u0111\u01b0\u1ee3c chia nh\u1ecf th\u00e0nh c\u00e1c ph\u1ea7n c\u00f3 k\u00edch th\u01b0\u1edbc c\u1ed1 \u0111\u1ecbnh, g\u1ecdi l\u00e0 shares . M\u1ed7i blob \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp th\u00e0nh m\u1ed9t ma tr\u1eadn k\u00edch th\u01b0\u1edbc k \u00d7 k , v\u1edbi k hi\u1ec7n t\u1ea1i l\u00e0 64 , t\u1ee9c l\u00e0 m\u1ed7i blob g\u1ed3m t\u1ed5ng c\u1ed9ng 4096 shares . C\u00e1c h\u00e0ng v\u00e0 c\u1ed9t c\u1ee7a ma tr\u1eadn shares s\u1ebd \u0111\u01b0\u1ee3c m\u00e3 ho\u00e1 b\u1eb1ng k\u1ef9 thu\u1eadt erasure coding , nh\u1eb1m t\u1ea1o th\u00eam d\u1eef li\u1ec7u d\u01b0 th\u1eeba ph\u1ee5c v\u1ee5 cho vi\u1ec7c kh\u00f4i ph\u1ee5c (recovery). K\u1ebft qu\u1ea3 l\u00e0, ta c\u00f3 m\u1ed9t ma tr\u1eadn m\u1edbi k\u00edch th\u01b0\u1edbc 2k \u00d7 2k, t\u1ee9c 128 \u00d7 128 shares, \u0111\u1ee7 \u0111\u1ec3 h\u1ed7 tr\u1ee3 Data Availability Sampling (DAS) hi\u1ec7u qu\u1ea3. \u0110\u1ec3 \u0111\u1ea3m b\u1ea3o t\u00ednh x\u00e1c minh (verifiability), to\u00e0n b\u1ed9 ma tr\u1eadn sau khi erasure-code s\u1ebd \u0111\u01b0\u1ee3c cam k\u1ebft (committed) b\u1eb1ng m\u1ed9t c\u1ea5u tr\u00fac c\u00e2y Merkle \u0111\u1eb7c bi\u1ec7t c\u00f3 t\u00ean l\u00e0 Namespaced Merkle Tree (NMT) . Kh\u00e1c v\u1edbi Merkle tree th\u00f4ng th\u01b0\u1eddng, trong NMT: M\u1ed7i node trong c\u00e2y kh\u00f4ng ch\u1ec9 ch\u1ee9a hash c\u1ee7a con m\u00e0 c\u00f2n l\u01b0u th\u00eam ph\u1ea1m vi namespace bao tr\u00f9m t\u1ea5t c\u1ea3 node con c\u1ee7a n\u00f3. \u0110i\u1ec1u n\u00e0y cho ph\u00e9p c\u00e1c \u1ee9ng d\u1ee5ng truy v\u1ea5n ch\u00ednh x\u00e1c blob thu\u1ed9c namespace ri\u00eang c\u1ee7a m\u00ecnh, m\u00e0 kh\u00f4ng c\u1ea7n x\u1eed l\u00fd to\u00e0n b\u1ed9 c\u00e2y. \u0110\u1ed3ng th\u1eddi v\u1eabn gi\u1eef nguy\u00ean c\u00e1c t\u00ednh n\u0103ng nh\u01b0 inclusion proof hay range proof t\u01b0\u01a1ng t\u1ef1 Merkle tree truy\u1ec1n th\u1ed1ng Cu\u1ed1i c\u00f9ng, t\u1eeb c\u00e1c root c\u1ee7a t\u1eebng h\u00e0ng v\u00e0 c\u1ed9t trong ma tr\u1eadn erasure-coded, Celestia t\u00ednh to\u00e1n ra m\u1ed9t data root duy nh\u1ea5t, g\u1ecdi l\u00e0 availableDataRoot . \u0110\u00e2y ch\u00ednh l\u00e0 g\u1ed1c c\u1ee7a c\u00e2y Merkle t\u1ed5ng th\u1ec3 , d\u00f9ng \u0111\u1ec3 cam k\u1ebft to\u00e0n b\u1ed9 d\u1eef li\u1ec7u \u0111\u00e3 \u0111\u01b0\u1ee3c chia nh\u1ecf, m\u00e3 ho\u00e1 v\u00e0 t\u1ed5 ch\u1ee9c trong block. Root n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o block header , \u0111\u00f3ng vai tr\u00f2 nh\u01b0 ch\u1ee9ng th\u1ef1c (commitment) cho to\u00e0n b\u1ed9 d\u1eef li\u1ec7u d\u1ea1ng share trong ma tr\u1eadn. Nh\u1edd \u0111\u00f3, b\u1ea5t k\u1ef3 share n\u00e0o trong ma tr\u1eadn \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ch\u1ee9ng minh (prove) l\u00e0 m\u1ed9t ph\u1ea7n h\u1ee3p l\u1ec7 c\u1ee7a block data, b\u1eb1ng c\u00e1ch d\u1eabn ng\u01b0\u1ee3c l\u00ean t\u1eeb leaf \u2192 row/column root \u2192 availableDataRoot. \u0110\u1ec3 \u0111\u1ea3m b\u1ea3o data availability (D\u1eef li\u1ec7u th\u1ef1c s\u1ef1 t\u1ed3n t\u1ea1i v\u00e0 ai c\u0169ng c\u00f3 th\u1ec3 truy c\u1eadp) , Celestia cho ph\u00e9p light node (ki\u1ec3u node nh\u1eb9, kh\u00f4ng c\u1ea7n l\u01b0u to\u00e0n b\u1ed9 d\u1eef li\u1ec7u) th\u1ef1c hi\u1ec7n m\u1ed9t k\u1ef9 thu\u1eadt g\u1ecdi l\u00e0 sampling tr\u00ean m\u1ed9t ma tr\u1eadn d\u1eef li\u1ec7u si\u00eau to kh\u1ed5ng l\u1ed3 c\u1ee5 th\u1ec3 l\u00e0 ma tr\u1eadn 2k x 2k (ch\u00ednh x\u00e1c l\u00e0 2,048 x 2,048 \u00f4 d\u1eef li\u1ec7u). M\u1ed7i light node s\u1ebd random ch\u1ecdn v\u00e0i t\u1ecda \u0111\u1ed9 b\u1ea5t k\u1ef3 trong ma tr\u1eadn m\u1edf r\u1ed9ng \u0111\u00f3 , sau \u0111\u00f3 y\u00eau c\u1ea7u d\u1eef li\u1ec7u t\u01b0\u01a1ng \u1ee9ng c\u00f9ng v\u1edbi Merkle proof (b\u1eb1ng ch\u1ee9ng d\u1eef li\u1ec7u kh\u00f4ng b\u1ecb ch\u1ec9nh s\u1eeda) t\u1eeb full node. Hi\u1ec7n t\u1ea1i, \u0111\u1ec3 \u201cch\u1ed1t k\u00e8o\u201d r\u1eb1ng m\u1ed9t block d\u1eef li\u1ec7u c\u00f3 s\u1eb5n, m\u1ed7i light node ph\u1ea3i th\u1ef1c hi\u1ec7n \u00edt nh\u1ea5t 16 l\u1ea7n sampling. N\u1ebfu block c\u00f3 v\u1ea5n \u0111\u1ec1 (thi\u1ebfu d\u1eef li\u1ec7u), v\u1edbi x\u00e1c su\u1ea5t 99%, light node s\u1ebd ph\u00e1t hi\u1ec7n ra \u0111i\u1ec1u \u0111\u00f3 trong qu\u00e1 tr\u00ecnh sampling. Ta c\u00f3 th\u1ec3 \u0111\u1ecdc k\u1ef9 h\u01a1n trong paper Fraud and Data Availability Proofs","title":"Ri\u00eang ph\u1ea7n n\u00e0y, c\u1ea3m \u01a1n L2Beat \u0111\u00e3 minh ho\u1ea1 gi\u00fap m\u00ecnh hi\u1ec3u s\u00e2u h\u01a1n v\u1ec1 ph\u1ea7n n\u00e0y."},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/02-mammoth-blocks/","text":"MAMMOTH BLOCKS = MAMMOTH UNLOCKS M\u1ee5c ti\u00eau c\u1ee7a b\u00e0i h\u1ecdc n\u00e0y: Tr\u1ea3 l\u1eddi c\u00e2u h\u1ecfi: \"How do Celestia's 'mammoth blocks' benefit developers compared to traditional small blocks?\" 1. Mammoth Blocks = B\u0103ng th\u00f4ng si\u00eau to kh\u1ed5ng l\u1ed3 Celestia c\u00f3 kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng \u1ea5n t\u01b0\u1ee3ng nh\u1edd b\u0103ng th\u00f4ng x\u1eed l\u00fd block c\u1ef1c kh\u1ee7ng. T\u1eeb gi\u1edbi h\u1ea1n 8MB/block tr\u00ean mainnet hi\u1ec7n t\u1ea1i, Celestia \u0111\u00e3 m\u1edf r\u1ed9ng l\u00ean 128MB tr\u00ean testnet mamo-1 , v\u00e0 \u0111ang h\u01b0\u1edbng \u0111\u1ebfn m\u1ee5c ti\u00eau 1GB/block trong t\u01b0\u01a1ng lai g\u1ea7n. V\u1edbi t\u1ed1c \u0111\u1ed9 x\u1eed l\u00fd kho\u1ea3ng 21.33MB m\u1ed7i gi\u00e2y , Celestia \u0111ang thi\u1ebft l\u1eadp m\u1ed9t chu\u1ea9n m\u1edbi cho h\u1ea1 t\u1ea7ng blockchain modular. \u0110i\u1ec1u n\u00e0y m\u1edf ra c\u00e1nh c\u1eeda m\u1edbi cho dev: Kh\u00f4ng c\u00f2n b\u1ecb b\u00f3p ngh\u1eb9t b\u1edfi block size truy\u1ec1n th\u1ed1ng. C\u00f3 th\u1ec3 x\u00e2y c\u00e1c \u1ee9ng d\u1ee5ng full on-chain ph\u1ee9c t\u1ea1p nh\u01b0: M\u1ea1ng x\u00e3 h\u1ed9i l\u01b0u tr\u1eef to\u00e0n b\u1ed9 d\u1eef li\u1ec7u on-chain Prediction markets Advanced DeFi protocols 2. Nh\u1eefng kh\u00e1i ni\u1ec7m b\u1ea1n c\u1ea7n bi\u1ebft: \ud83e\uddf1 Mammoth Blocks Celestia h\u1ed7 tr\u1ee3 block c\u1ef1c l\u1edbn (t\u1eeb 128MB tr\u1edf l\u00ean), l\u00fd t\u01b0\u1edfng cho c\u00e1c \u1ee9ng d\u1ee5ng stateful c\u00f3 t\u1ea7n su\u1ea5t t\u01b0\u01a1ng t\u00e1c cao, y\u00eau c\u1ea7u l\u01b0u tr\u1eef d\u00e0y \u0111\u1eb7c. \ud83d\ude80 Vacuum Protocol Giao th\u1ee9c truy\u1ec1n t\u1ea3i d\u1eef li\u1ec7u th\u1ebf h\u1ec7 m\u1edbi. Thay v\u00ec truy\u1ec1n d\u1eef li\u1ec7u theo ki\u1ec3u push/gossip truy\u1ec1n th\u1ed1ng, Vacuum s\u1eed d\u1ee5ng m\u00f4 h\u00ecnh pull-based . Node ch\u1ec9 nh\u1eadn data khi y\u00eau c\u1ea7u , gi\u00fap gi\u1ea3m latency v\u00e0 t\u1ed1i \u01b0u b\u0103ng th\u00f4ng. S\u1eed d\u1ee5ng lazy gossiping : ch\u1ec9 g\u1eedi d\u1eef li\u1ec7u khi \u0111\u01b0\u1ee3c h\u1ecfi \u2192 ti\u1ebft ki\u1ec7m c\u1ef1c m\u1ea1nh. K\u1ebft h\u1ee3p v\u1edbi VACs (Validator Availability Certificates) \u0111\u1ec3 pipeline d\u1eef li\u1ec7u tr\u01b0\u1edbc c\u1ea3 khi block \u0111\u01b0\u1ee3c t\u1ea1o. Truy\u1ec1n d\u1eef li\u1ec7u ki\u1ec3u \"prep tr\u01b0\u1edbc, race sau\" \u2192 t\u1ed1c \u0111\u1ed9 kh\u1ee7ng m\u00e0 v\u1eabn m\u1edf r\u1ed9ng t\u1ed1t. \u0110\u1eb7c bi\u1ec7t, Vacuum kh\u00f4ng c\u1ea7n bi\u1ebft tr\u01b0\u1edbc topology m\u1ea1ng \u2192 linh ho\u1ea1t m\u1ecdi t\u00ecnh hu\u1ed1ng. \u23e9 FBSS \u2013 Fast Blocks, Slow Squares M\u1ed9t b\u01b0\u1edbc \u0111\u1ed9t ph\u00e1 v\u1ec1 ki\u1ebfn tr\u00fac: T\u00e1ch block production ra kh\u1ecfi square construction. Trong thi\u1ebft k\u1ebf truy\u1ec1n th\u1ed1ng, block v\u00e0 square l\u00e0 1. Nh\u01b0ng \u0111i\u1ec1u \u0111\u00f3 khi\u1ebfn block time b\u1ecb k\u00e9o d\u00e0i v\u00ec c\u1ea7n th\u1eddi gian \u0111\u1ec3 x\u00e2y square \u0111\u1ee7 l\u1edbn \u0111\u1ec3 sampling hi\u1ec7u qu\u1ea3. V\u1edbi FBSS : C\u00f3 th\u1ec3 t\u1ea1o block si\u00eau nhanh (sub-second block time) Square v\u1eabn \u0111\u01b0\u1ee3c x\u1eed l\u00fd, nh\u01b0ng trong chu tr\u00ecnh ri\u00eang, ch\u1eadm h\u01a1n (30s+) Light client h\u01b0\u1edfng l\u1ee3i \u2192 ch\u1ec9 c\u1ea7n x\u1eed l\u00fd \u00edt d\u1eef li\u1ec7u khi sampling Hi\u1ec7n t\u1ea1i, FBSS ch\u01b0a \u0111\u01b0\u1ee3c tri\u1ec3n khai full-stack trong Mammoth Mini, nh\u01b0ng team \u0111\u00e3 simulate b\u1eb1ng c\u00e1ch d\u00f9ng Merkle tree \u0111\u01a1n gi\u1ea3n c\u1ee7a txs \u0111\u1ec3 commit block. \ud83e\uddec Based Rollups Rollup c\u00f3 th\u1ec3 t\u1eadn d\u1ee5ng Celestia \u0111\u1ec3 sequencing \u2192 k\u1ebf th\u1eeba finality nhanh \u2192 gi\u1ea3m latency, t\u0103ng UX c\u1ef1c m\u1ea1nh. C\u1ef1c k\u1ef3 ph\u00f9 h\u1ee3p cho game, DeFi real-time ho\u1eb7c social. \ud83d\udd0d Verification > Trust Light node kh\u00f4ng c\u1ea7n trust ai. H\u1ecd c\u00f3 th\u1ec3 t\u1ef1 verify data availability qua sampling, thay v\u00ec ch\u1ea1y full node. \u0110i\u1ec1u n\u00e0y m\u1edf ra t\u01b0\u01a1ng lai n\u01a1i b\u1ea1n c\u00f3 th\u1ec3 verify blockchain t\u1eeb... \u0111i\u1ec7n tho\u1ea1i. 3. Mamo-1 l\u00e0 g\u00ec? mamo-1 l\u00e0 public testnet m\u1edbi c\u1ee7a Celestia, \u0111\u01b0\u1ee3c d\u1ef1ng l\u00ean trong \u0111\u00fang 3 tu\u1ea7n. \u0110\u00e2y kh\u00f4ng ph\u1ea3i b\u1ea3n demo l\u00fd thuy\u1ebft, m\u00e0 l\u00e0 m\u00f4 ph\u1ecfng th\u1ef1c chi\u1ebfn \u0111\u1ec3: \u0110\u1ea9y th\u00f4ng l\u01b0\u1ee3ng l\u00ean c\u1ef1c h\u1ea1n Test kh\u1ea3 n\u0103ng ch\u1ecbu t\u1ea3i m\u1ea1ng l\u01b0\u1edbi Ph\u00e1t hi\u1ec7n bottleneck T\u1ed1i \u01b0u performance th\u1ef1c t\u1ebf Th\u00f4ng s\u1ed1: Block size: 128MB Block interval: 6s Throughput: \\~21.33MB/s \u2192 Nhanh h\u01a1n mainnet hi\u1ec7n t\u1ea1i (8MB/block) t\u1edbi 16 l\u1ea7n . 4. Vacuum Protocol Explained Vacuum l\u00e0 giao th\u1ee9c truy\u1ec1n block v\u1edbi: Lazy gossip : ch\u1ec9 g\u1eedi khi \u0111\u01b0\u1ee3c h\u1ecfi \u2192 ti\u1ebft ki\u1ec7m c\u1ef1c m\u1ea1nh VACs : Validator b\u00e1o tr\u01b0\u1edbc \u0111\u00e3 nh\u1eadn blob data \u2192 gi\u00fap proposer t\u1ed1i \u01b0u pipeline t\u1ea1o block C\u01a1 ch\u1ebf Pull-Based Broadcast Tree (PBBT): M\u1ed9t d\u1ea1ng c\u00e2y truy\u1ec1n d\u1eef li\u1ec7u theo m\u00f4 h\u00ecnh pull Gi\u00fap ph\u1ee5c h\u1ed3i block nhanh v\u00e0 hi\u1ec7u qu\u1ea3 Vacuum gi\u1ed1ng v\u1edbi DAG-based protocols \u1edf t\u01b0 duy pipeline, nh\u01b0ng \u0111\u01a1n gi\u1ea3n v\u00e0 hi\u1ec7u qu\u1ea3 h\u01a1n, kh\u00f4ng c\u1ea7n bi\u1ebft topology m\u1ea1ng nh\u01b0 Turbine (Solana). JIT Routing (Just-In-Time) Khi truy\u1ec1n blob, h\u1ec7 th\u1ed1ng s\u1ebd t\u1ef1 kh\u00e1m ph\u00e1 tuy\u1ebfn \u0111\u01b0\u1eddng t\u1ed1i \u01b0u d\u1ef1a tr\u00ean: Latency Congestion Trust level gi\u1eefa peers \u2192 Kh\u00e1c v\u1edbi AOT (Ahead-of-Time) routing c\u1ee9ng nh\u1eafc, JIT routing c\u1ef1c k\u1ef3 linh ho\u1ea1t v\u00e0 ph\u00f9 h\u1ee3p v\u1edbi Web3 environments \u0111\u1ea7y bi\u1ebfn \u0111\u1ed9ng. C\u1ea3nh b\u00e1o: Lazy gossip tuy hi\u1ec7u qu\u1ea3, nh\u01b0ng c\u0169ng mang l\u1ea1i m\u1ed9t ch\u00fat latency. \u0110\u00e2y l\u00e0 trade-off c\u00f3 ch\u1ee7 \u0111\u00edch: hy sinh t\u1ed1c \u0111\u1ed9 t\u1ee9c th\u00ec \u0111\u1ec3 \u0111\u1ed5i l\u1ea5y kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng \u1ed5n \u0111\u1ecbnh, b\u0103ng th\u00f4ng m\u1ea1nh v\u00e0 ho\u1ea1t \u0111\u1ed9ng t\u1ed1t trong m\u1ea1ng kh\u00f4ng \u0111\u1ed3ng \u0111\u1ec1u . \u0110\u1ecdc th\u00eam v\u1ec1 Vacuum t\u1ea1i \u0111\u00e2y 5. V\u00ec sao dev n\u00ean quan t\u00e2m \u0111\u1ebfn mamo-1? Rollups c\u00f3 th\u1ec3 x\u1eed l\u00fd block l\u00ean t\u1edbi 32MB C\u00f3 th\u1ec3 t\u1ea1o block permissionless Light node c\u00f3 th\u1ec3 verify t\u1eeb tr\u00ecnh duy\u1ec7t ho\u1eb7c mobile Dev kh\u00f4ng c\u1ea7n lo chuy\u1ec7n scaling hay infra n\u1eefa, ch\u1ec9 c\u1ea7n t\u1eadp trung build s\u1ea3n ph\u1ea9m . T\u00f3m l\u1ea1i: Celestia \u0111ang \u0111\u1ecbnh ngh\u0129a l\u1ea1i c\u00e1ch blockchain m\u1edf r\u1ed9ng b\u1eb1ng: Mammoth Blocks Vacuum Protocol FBSS Based Rollups Trustless light clients V\u1edbi mamo-1 testnet, dev c\u00f3 th\u1ec3 h\u00ecnh dung ch\u00ednh x\u00e1c nh\u1eefng g\u00ec Celestia c\u00f3 th\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c trong th\u1ef1c t\u1ebf. \u0110\u00e2y kh\u00f4ng c\u00f2n l\u00e0 l\u1eddi h\u1ee9a \u2013 n\u00f3 \u0111ang x\u1ea3y ra. Advanced: Who has the fastest block propagation? C\u1ea3 Solana, Monad v\u00e0 Celestia \u0111\u1ec1u chia block th\u00e0nh c\u00e1c m\u1ea3nh nh\u1ecf \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a (erasure coded) r\u1ed3i ph\u00e2n ph\u1ed1i cho validators kh\u00f4ng ph\u1ea3i leader. Solana v\u00e0 Monad d\u00f9ng c\u01a1 ch\u1ebf push \u2014 leader ch\u1ee7 \u0111\u1ed9ng g\u1eedi block t\u1edbi validators, \u01b0u ti\u00ean t\u1ed1c \u0111\u1ed9 finality b\u1eb1ng c\u00e1ch \u0111\u1ec3 nh\u1eefng validator c\u00f3 stake cao nh\u1eadn data s\u1edbm v\u00e0 b\u1eaft \u0111\u1ea7u x\u00e1c minh ngay. Ng\u01b0\u1ee3c l\u1ea1i, Celestia v\u1edbi giao th\u1ee9c Vacuum! ch\u1ecdn c\u00e1ch pull \u2014 c\u00e1c validator t\u1ef1 y\u00eau c\u1ea7u ph\u1ea7n d\u1eef li\u1ec7u c\u00f2n thi\u1ebfu, gi\u00fap gi\u1ea3m t\u1ea3i cho proposer (ch\u1ec9 c\u1ea7n upload ~1x dung l\u01b0\u1ee3ng block), t\u1ed1i \u01b0u cho throughput thay v\u00ec t\u1ed1c \u0111\u1ed9 finality. C\u1ea5u tr\u00fac chung c\u1ee7a data pipeline: M\u1ed7i m\u1ea1ng blockchain th\u01b0\u1eddng c\u00f3 2 pha x\u1eed l\u00fd d\u1eef li\u1ec7u: (1) Preparation \u2013 giai \u0111o\u1ea1n chu\u1ea9n b\u1ecb tr\u01b0\u1edbc khi block \u0111\u01b0\u1ee3c t\u1ea1o (2) Dissemination \u2013 giai \u0111o\u1ea1n ph\u00e2n ph\u1ed1i d\u1eef li\u1ec7u sau khi block \u0111\u01b0\u1ee3c t\u1ea1o \u1ede pha chu\u1ea9n b\u1ecb, Solana d\u00f9ng h\u1ec7 th\u1ed1ng Gulfstream k\u1ebft h\u1ee3p v\u1edbi swQOS. \u0110i\u1ec3m \u0111\u1eb7c bi\u1ec7t l\u00e0 Solana kh\u00f4ng c\u00f3 global mempool nh\u01b0 c\u00e1c chain kh\u00e1c \u2014 thay v\u00e0o \u0111\u00f3, m\u1ed7i leader duy tr\u00ec m\u1ed9t local mempool ri\u00eang. \u0110i\u1ec1u n\u00e0y gi\u00fap tr\u00e1nh \u0111\u01b0\u1ee3c overhead t\u1eeb vi\u1ec7c gossip nhi\u1ec1u hop trong mempool l\u1edbn, t\u1eeb \u0111\u00f3 gi\u1eef cho m\u1ea1ng lu\u00f4n \u1edf t\u1ed1c \u0111\u1ed9 cao m\u00e0 kh\u00f4ng overload node. \u1ee8ng d\u1ee5ng s\u1ebd g\u1eedi transaction \u0111\u1ebfn RPC node, sau \u0111\u00f3 node n\u00e0y s\u1ebd g\u1eedi tr\u1ef1c ti\u1ebfp (ch\u1ec9 1 hop) t\u1edbi m\u1ed9t v\u00e0i leader k\u1ebf ti\u1ebfp qua Gulfstream. Do l\u1ecbch tr\u00ecnh leader \u0111\u01b0\u1ee3c bi\u1ebft tr\u01b0\u1edbc, n\u00ean validator n\u00e0o c\u0169ng c\u00f3 th\u1ec3 ch\u1ee7 \u0111\u1ed9ng route tx t\u1edbi leader s\u1eafp t\u1edbi. \u0110\u1ec3 ch\u1ed1ng spam, leader s\u1ebd \u01b0u ti\u00ean x\u1eed l\u00fd tx \u0111\u1ebfn t\u1eeb validators c\u00f3 stake cao h\u01a1n \u0111\u00f3 ch\u00ednh l\u00e0 logic c\u1ee7a swQOS (stake-weighted Quality of Service). Khi b\u01b0\u1edbc v\u00e0o pha ph\u00e2n ph\u1ed1i, Solana d\u00f9ng Turbine \u2014 m\u1ed9t engine truy\u1ec1n block theo m\u00f4 h\u00ecnh c\u00e2y (tree-based fanout). Trong khi leader \u0111ang build block, d\u1eef li\u1ec7u block \u0111\u01b0\u1ee3c chia th\u00e0nh c\u00e1c m\u1ea3nh nh\u1ecf g\u1ecdi l\u00e0 shreds (~1280 bytes m\u1ed7i shred), sau \u0111\u00f3 g\u1eedi \u0111i. \u0110i\u1ec1u n\u00e0y cho ph\u00e9p c\u00e1c b\u01b0\u1edbc verify v\u00e0 voting \u0111\u01b0\u1ee3c pipeline lu\u00f4n khi block ch\u01b0a build xong. C\u1ee5 th\u1ec3: Leader g\u1eedi shreds \u0111\u1ebfn root node th\u00ec root chia validators th\u00e0nh c\u00e1c t\u1ea7ng d\u1ef1a theo stake \u2192 nh\u1eefng validator c\u00f3 stake cao nh\u1eadn shred tr\u01b0\u1edbc, sau \u0111\u00f3 forward xu\u1ed1ng t\u1ea7ng d\u01b0\u1edbi. V\u1edbi fanout m\u1eb7c \u0111\u1ecbnh l\u00e0 200, ph\u1ea7n l\u1edbn validator s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c d\u1eef li\u1ec7u ch\u1ec9 sau 2\u20133 hops (leader \u2192 root \u2192 L1 \u2192 L2). Celestia l\u1ea1i ch\u1ecdn h\u01b0\u1edbng ti\u1ebfp c\u1eadn kh\u00e1c l\u00e0 t\u1ed1i \u01b0u cho throughput thay v\u00ec latency. Kh\u00f4ng gi\u1ed1ng nh\u01b0 Turbine (Solana) hay RaptorCast (Monad) \u0111\u1ec1u l\u00e0 c\u01a1 ch\u1ebf push . Celestia d\u00f9ng Vacuum! , m\u1ed9t m\u00f4 h\u00ecnh pull-based, cho ph\u00e9p thi\u1ebft l\u1eadp li\u00ean l\u1ea1c ki\u1ec3u just-in-time gi\u1eefa c\u00e1c node. \u1ede pha chu\u1ea9n b\u1ecb, thay v\u00ec g\u1eedi full txs, validators tr\u00ean Celestia s\u1ebd sync mempool th\u00f4ng qua m\u1ed9t lo\u1ea1i ch\u1ee9ng ch\u1ec9 t\u00ean l\u00e0 VAC (Validator Availability Certificate). \u0110\u00e2y l\u00e0 l\u1eddi h\u1ee9a c\u1ee7a validator r\u1eb1ng h\u1ecd \u0111ang gi\u1eef m\u1ed9t tx n\u00e0o \u0111\u00f3 v\u00e0 s\u1ebd \u0111\u1ea3m b\u1ea3o tx \u0111\u00f3 c\u00f3 s\u1eb5n \u0111\u1ebfn m\u1ed9t \u0111\u1ed9 cao block nh\u1ea5t \u0111\u1ecbnh. VAC ho\u1ea1t \u0111\u1ed9ng nh\u01b0 m\u1ed9t d\u1ea1ng pre-announcement: thay v\u00ec \u0111\u1ea9y tx ra m\u1ea1ng, validator ch\u1ec9 c\u1ea7n ph\u00e1t t\u00e1n VACs \u0111\u1ec3 th\u00f4ng b\u00e1o \u201ctao \u0111ang gi\u1eef tx n\u00e0y, \u0111\u1ee9a n\u00e0o c\u1ea7n th\u00ec h\u1ecfi\u201d . Vi\u1ec7c n\u00e0y gi\u00fap m\u1ea1ng bi\u1ebft nhanh c\u00e1c tx quan tr\u1ecdng m\u00e0 kh\u00f4ng b\u1ecb ng\u1eadp v\u00ec payload l\u1edbn. \u1ede th\u1eddi \u0111i\u1ec3m Data Retrieval, khi node c\u1ea7n d\u1eef li\u1ec7u, n\u00f3 ch\u1ee7 \u0111\u1ed9ng \u0111i xin. Khi m\u1ed9t node th\u1ea5y VAC t\u1eeb validator kh\u00e1c m\u00e0 n\u00f3 ch\u01b0a c\u00f3 d\u1eef li\u1ec7u, n\u00f3 s\u1ebd quy\u1ebft \u0111\u1ecbnh c\u00f3 n\u00ean \u0111i fetch hay kh\u00f4ng. Ch\u00ednh s\u00e1ch c\u1ee7a Vacuum! l\u00e0 lu\u00f4n l\u1ea5y \u00edt nh\u1ea5t VAC \u0111\u1ea7u ti\u00ean (tx quan tr\u1ecdng nh\u1ea5t) t\u1eeb m\u1ed7i validator m\u1edbi th\u1ea5y l\u1ea7n \u0111\u1ea7u. C\u00f2n c\u00e1c VAC ti\u1ebfp theo th\u00ec ch\u1ec9 fetch n\u1ebfu node c\u00f2n \u0111\u1ee7 b\u0103ng th\u00f4ng, ho\u1eb7c n\u1ebfu tx \u0111\u00f3 quan tr\u1ecdng h\u01a1n nh\u1eefng tx n\u00f3 \u0111ang \u0111\u1ecbnh drop. \u0110\u1ec3 l\u1ea5y d\u1eef li\u1ec7u, node g\u1eedi m\u1ed9t y\u00eau c\u1ea7u c\u00f3 t\u00ean \u2018WantBlob\u2019 \u0111\u1ebfn peer \u0111ang gi\u1eef blob. Peer s\u1ebd g\u1eedi l\u1ea1i blob \u0111\u00f3, chia th\u00e0nh t\u1eebng chunk nh\u1ecf. \u0110i\u1ec1u th\u00fa v\u1ecb l\u00e0 ngay khi node b\u1eaft \u0111\u1ea7u t\u1ea3i blob v\u1ec1, n\u00f3 s\u1ebd gossip VAC \u0111\u00f3 ra cho nh\u1eefng node kh\u00e1c, t\u1ea1o ra m\u1ed9t chu\u1ed7i fetch pipeline theo nhu c\u1ea7u. M\u00f4 h\u00ecnh lazy gossiping ki\u1ec3u n\u00e0y tr\u00e1nh \u0111\u01b0\u1ee3c vi\u1ec7c truy\u1ec1n d\u1eef li\u1ec7u tr\u00f9ng l\u1eb7p, gi\u00fap m\u1ed7i tx ch\u1ec9 ch\u1ea3y qua m\u1ea1ng \u0111\u00fang m\u1ed9t l\u1ea7n, theo tuy\u1ebfn \u0111\u01b0\u1eddng t\u1ed1i \u01b0u v\u1eeba ti\u1ebft ki\u1ec7m, v\u1eeba t\u0103ng throughput. V\u00ec mempool \u0111\u00e3 \u0111\u01b0\u1ee3c sync k\u1ef9 nh\u1edd VACs t\u1eeb tr\u01b0\u1edbc, n\u00ean khi leader chu\u1ea9n b\u1ecb t\u1ea1o block, ph\u1ea7n l\u1edbn d\u1eef li\u1ec7u \u0111\u00e3 n\u1eb1m s\u1eb5n \u1edf c\u00e1c validator. Leader l\u00fac n\u00e0y ch\u1ec9 c\u1ea7n broadcast m\u1ed9t compact block c\u1ef1c nh\u1eb9, g\u1ea7n nh\u01b0 kh\u00f4ng t\u1ed1n b\u0103ng th\u00f4ng. Compact block g\u1ed3m 3 ph\u1ea7n ch\u00ednh: Cam k\u1ebft (commitment) v\u1edbi danh s\u00e1ch txs trong block Bitmap th\u1ec3 hi\u1ec7n nh\u1eefng tx n\u00e0o leader c\u00f3 th\u1ec3 cung c\u1ea5p n\u1ebfu c\u1ea7n Metadata \u0111\u1ec3 mapping chunk so v\u1edbi d\u1eef li\u1ec7u th\u1ef1c Sau khi nh\u1eadn compact block, c\u00e1c validator s\u1ebd check xem m\u00ecnh c\u00f3 \u0111\u1ee7 data ch\u01b0a. N\u1ebfu thi\u1ebfu, h\u1ecd y\u00eau c\u1ea7u ph\u1ea7n parity data c\u00f2n thi\u1ebfu \u0111\u1ec3 reconstruct l\u1ea1i block. V\u00ec m\u1ed7i node \u0111\u00e3 c\u00f3 \u0111\u1ee7 d\u1eef li\u1ec7u t\u1eeb tr\u01b0\u1edbc. L\u00fac n\u00e0y, leader kh\u00f4ng c\u1ea7n truy\u1ec1n g\u00ec th\u00eam ngo\u00e0i compact block. \u0110\u00e2y l\u00e0 actual black magic c\u1ee7a Vacuum!","title":"MAMMOTH BLOCKS = MAMMOTH UNLOCKS"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/02-mammoth-blocks/#mammoth-blocks-mammoth-unlocks","text":"","title":"MAMMOTH BLOCKS = MAMMOTH UNLOCKS"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/02-mammoth-blocks/#muc-tieu-cua-bai-hoc-nay","text":"Tr\u1ea3 l\u1eddi c\u00e2u h\u1ecfi: \"How do Celestia's 'mammoth blocks' benefit developers compared to traditional small blocks?\"","title":"M\u1ee5c ti\u00eau c\u1ee7a b\u00e0i h\u1ecdc n\u00e0y:"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/02-mammoth-blocks/#1-mammoth-blocks-bang-thong-sieu-to-khong-lo","text":"Celestia c\u00f3 kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng \u1ea5n t\u01b0\u1ee3ng nh\u1edd b\u0103ng th\u00f4ng x\u1eed l\u00fd block c\u1ef1c kh\u1ee7ng. T\u1eeb gi\u1edbi h\u1ea1n 8MB/block tr\u00ean mainnet hi\u1ec7n t\u1ea1i, Celestia \u0111\u00e3 m\u1edf r\u1ed9ng l\u00ean 128MB tr\u00ean testnet mamo-1 , v\u00e0 \u0111ang h\u01b0\u1edbng \u0111\u1ebfn m\u1ee5c ti\u00eau 1GB/block trong t\u01b0\u01a1ng lai g\u1ea7n. V\u1edbi t\u1ed1c \u0111\u1ed9 x\u1eed l\u00fd kho\u1ea3ng 21.33MB m\u1ed7i gi\u00e2y , Celestia \u0111ang thi\u1ebft l\u1eadp m\u1ed9t chu\u1ea9n m\u1edbi cho h\u1ea1 t\u1ea7ng blockchain modular. \u0110i\u1ec1u n\u00e0y m\u1edf ra c\u00e1nh c\u1eeda m\u1edbi cho dev: Kh\u00f4ng c\u00f2n b\u1ecb b\u00f3p ngh\u1eb9t b\u1edfi block size truy\u1ec1n th\u1ed1ng. C\u00f3 th\u1ec3 x\u00e2y c\u00e1c \u1ee9ng d\u1ee5ng full on-chain ph\u1ee9c t\u1ea1p nh\u01b0: M\u1ea1ng x\u00e3 h\u1ed9i l\u01b0u tr\u1eef to\u00e0n b\u1ed9 d\u1eef li\u1ec7u on-chain Prediction markets Advanced DeFi protocols","title":"1. Mammoth Blocks = B\u0103ng th\u00f4ng si\u00eau to kh\u1ed5ng l\u1ed3"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/02-mammoth-blocks/#2-nhung-khai-niem-ban-can-biet","text":"","title":"2. Nh\u1eefng kh\u00e1i ni\u1ec7m b\u1ea1n c\u1ea7n bi\u1ebft:"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/02-mammoth-blocks/#mammoth-blocks","text":"Celestia h\u1ed7 tr\u1ee3 block c\u1ef1c l\u1edbn (t\u1eeb 128MB tr\u1edf l\u00ean), l\u00fd t\u01b0\u1edfng cho c\u00e1c \u1ee9ng d\u1ee5ng stateful c\u00f3 t\u1ea7n su\u1ea5t t\u01b0\u01a1ng t\u00e1c cao, y\u00eau c\u1ea7u l\u01b0u tr\u1eef d\u00e0y \u0111\u1eb7c.","title":"\ud83e\uddf1 Mammoth Blocks"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/02-mammoth-blocks/#vacuum-protocol","text":"Giao th\u1ee9c truy\u1ec1n t\u1ea3i d\u1eef li\u1ec7u th\u1ebf h\u1ec7 m\u1edbi. Thay v\u00ec truy\u1ec1n d\u1eef li\u1ec7u theo ki\u1ec3u push/gossip truy\u1ec1n th\u1ed1ng, Vacuum s\u1eed d\u1ee5ng m\u00f4 h\u00ecnh pull-based . Node ch\u1ec9 nh\u1eadn data khi y\u00eau c\u1ea7u , gi\u00fap gi\u1ea3m latency v\u00e0 t\u1ed1i \u01b0u b\u0103ng th\u00f4ng. S\u1eed d\u1ee5ng lazy gossiping : ch\u1ec9 g\u1eedi d\u1eef li\u1ec7u khi \u0111\u01b0\u1ee3c h\u1ecfi \u2192 ti\u1ebft ki\u1ec7m c\u1ef1c m\u1ea1nh. K\u1ebft h\u1ee3p v\u1edbi VACs (Validator Availability Certificates) \u0111\u1ec3 pipeline d\u1eef li\u1ec7u tr\u01b0\u1edbc c\u1ea3 khi block \u0111\u01b0\u1ee3c t\u1ea1o. Truy\u1ec1n d\u1eef li\u1ec7u ki\u1ec3u \"prep tr\u01b0\u1edbc, race sau\" \u2192 t\u1ed1c \u0111\u1ed9 kh\u1ee7ng m\u00e0 v\u1eabn m\u1edf r\u1ed9ng t\u1ed1t. \u0110\u1eb7c bi\u1ec7t, Vacuum kh\u00f4ng c\u1ea7n bi\u1ebft tr\u01b0\u1edbc topology m\u1ea1ng \u2192 linh ho\u1ea1t m\u1ecdi t\u00ecnh hu\u1ed1ng.","title":"\ud83d\ude80 Vacuum Protocol"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/02-mammoth-blocks/#fbss-fast-blocks-slow-squares","text":"M\u1ed9t b\u01b0\u1edbc \u0111\u1ed9t ph\u00e1 v\u1ec1 ki\u1ebfn tr\u00fac: T\u00e1ch block production ra kh\u1ecfi square construction. Trong thi\u1ebft k\u1ebf truy\u1ec1n th\u1ed1ng, block v\u00e0 square l\u00e0 1. Nh\u01b0ng \u0111i\u1ec1u \u0111\u00f3 khi\u1ebfn block time b\u1ecb k\u00e9o d\u00e0i v\u00ec c\u1ea7n th\u1eddi gian \u0111\u1ec3 x\u00e2y square \u0111\u1ee7 l\u1edbn \u0111\u1ec3 sampling hi\u1ec7u qu\u1ea3. V\u1edbi FBSS : C\u00f3 th\u1ec3 t\u1ea1o block si\u00eau nhanh (sub-second block time) Square v\u1eabn \u0111\u01b0\u1ee3c x\u1eed l\u00fd, nh\u01b0ng trong chu tr\u00ecnh ri\u00eang, ch\u1eadm h\u01a1n (30s+) Light client h\u01b0\u1edfng l\u1ee3i \u2192 ch\u1ec9 c\u1ea7n x\u1eed l\u00fd \u00edt d\u1eef li\u1ec7u khi sampling Hi\u1ec7n t\u1ea1i, FBSS ch\u01b0a \u0111\u01b0\u1ee3c tri\u1ec3n khai full-stack trong Mammoth Mini, nh\u01b0ng team \u0111\u00e3 simulate b\u1eb1ng c\u00e1ch d\u00f9ng Merkle tree \u0111\u01a1n gi\u1ea3n c\u1ee7a txs \u0111\u1ec3 commit block.","title":"\u23e9 FBSS \u2013 Fast Blocks, Slow Squares"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/02-mammoth-blocks/#based-rollups","text":"Rollup c\u00f3 th\u1ec3 t\u1eadn d\u1ee5ng Celestia \u0111\u1ec3 sequencing \u2192 k\u1ebf th\u1eeba finality nhanh \u2192 gi\u1ea3m latency, t\u0103ng UX c\u1ef1c m\u1ea1nh. C\u1ef1c k\u1ef3 ph\u00f9 h\u1ee3p cho game, DeFi real-time ho\u1eb7c social.","title":"\ud83e\uddec Based Rollups"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/02-mammoth-blocks/#verification-trust","text":"Light node kh\u00f4ng c\u1ea7n trust ai. H\u1ecd c\u00f3 th\u1ec3 t\u1ef1 verify data availability qua sampling, thay v\u00ec ch\u1ea1y full node. \u0110i\u1ec1u n\u00e0y m\u1edf ra t\u01b0\u01a1ng lai n\u01a1i b\u1ea1n c\u00f3 th\u1ec3 verify blockchain t\u1eeb... \u0111i\u1ec7n tho\u1ea1i.","title":"\ud83d\udd0d Verification &gt; Trust"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/02-mammoth-blocks/#3-mamo-1-la-gi","text":"mamo-1 l\u00e0 public testnet m\u1edbi c\u1ee7a Celestia, \u0111\u01b0\u1ee3c d\u1ef1ng l\u00ean trong \u0111\u00fang 3 tu\u1ea7n. \u0110\u00e2y kh\u00f4ng ph\u1ea3i b\u1ea3n demo l\u00fd thuy\u1ebft, m\u00e0 l\u00e0 m\u00f4 ph\u1ecfng th\u1ef1c chi\u1ebfn \u0111\u1ec3: \u0110\u1ea9y th\u00f4ng l\u01b0\u1ee3ng l\u00ean c\u1ef1c h\u1ea1n Test kh\u1ea3 n\u0103ng ch\u1ecbu t\u1ea3i m\u1ea1ng l\u01b0\u1edbi Ph\u00e1t hi\u1ec7n bottleneck T\u1ed1i \u01b0u performance th\u1ef1c t\u1ebf","title":"3. Mamo-1 l\u00e0 g\u00ec?"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/02-mammoth-blocks/#thong-so","text":"Block size: 128MB Block interval: 6s Throughput: \\~21.33MB/s \u2192 Nhanh h\u01a1n mainnet hi\u1ec7n t\u1ea1i (8MB/block) t\u1edbi 16 l\u1ea7n .","title":"Th\u00f4ng s\u1ed1:"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/02-mammoth-blocks/#4-vacuum-protocol-explained","text":"Vacuum l\u00e0 giao th\u1ee9c truy\u1ec1n block v\u1edbi: Lazy gossip : ch\u1ec9 g\u1eedi khi \u0111\u01b0\u1ee3c h\u1ecfi \u2192 ti\u1ebft ki\u1ec7m c\u1ef1c m\u1ea1nh VACs : Validator b\u00e1o tr\u01b0\u1edbc \u0111\u00e3 nh\u1eadn blob data \u2192 gi\u00fap proposer t\u1ed1i \u01b0u pipeline t\u1ea1o block","title":"4. Vacuum Protocol Explained"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/02-mammoth-blocks/#co-che-pull-based-broadcast-tree-pbbt","text":"M\u1ed9t d\u1ea1ng c\u00e2y truy\u1ec1n d\u1eef li\u1ec7u theo m\u00f4 h\u00ecnh pull Gi\u00fap ph\u1ee5c h\u1ed3i block nhanh v\u00e0 hi\u1ec7u qu\u1ea3 Vacuum gi\u1ed1ng v\u1edbi DAG-based protocols \u1edf t\u01b0 duy pipeline, nh\u01b0ng \u0111\u01a1n gi\u1ea3n v\u00e0 hi\u1ec7u qu\u1ea3 h\u01a1n, kh\u00f4ng c\u1ea7n bi\u1ebft topology m\u1ea1ng nh\u01b0 Turbine (Solana).","title":"C\u01a1 ch\u1ebf Pull-Based Broadcast Tree (PBBT):"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/02-mammoth-blocks/#jit-routing-just-in-time","text":"Khi truy\u1ec1n blob, h\u1ec7 th\u1ed1ng s\u1ebd t\u1ef1 kh\u00e1m ph\u00e1 tuy\u1ebfn \u0111\u01b0\u1eddng t\u1ed1i \u01b0u d\u1ef1a tr\u00ean: Latency Congestion Trust level gi\u1eefa peers \u2192 Kh\u00e1c v\u1edbi AOT (Ahead-of-Time) routing c\u1ee9ng nh\u1eafc, JIT routing c\u1ef1c k\u1ef3 linh ho\u1ea1t v\u00e0 ph\u00f9 h\u1ee3p v\u1edbi Web3 environments \u0111\u1ea7y bi\u1ebfn \u0111\u1ed9ng. C\u1ea3nh b\u00e1o: Lazy gossip tuy hi\u1ec7u qu\u1ea3, nh\u01b0ng c\u0169ng mang l\u1ea1i m\u1ed9t ch\u00fat latency. \u0110\u00e2y l\u00e0 trade-off c\u00f3 ch\u1ee7 \u0111\u00edch: hy sinh t\u1ed1c \u0111\u1ed9 t\u1ee9c th\u00ec \u0111\u1ec3 \u0111\u1ed5i l\u1ea5y kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng \u1ed5n \u0111\u1ecbnh, b\u0103ng th\u00f4ng m\u1ea1nh v\u00e0 ho\u1ea1t \u0111\u1ed9ng t\u1ed1t trong m\u1ea1ng kh\u00f4ng \u0111\u1ed3ng \u0111\u1ec1u . \u0110\u1ecdc th\u00eam v\u1ec1 Vacuum t\u1ea1i \u0111\u00e2y","title":"JIT Routing (Just-In-Time)"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/02-mammoth-blocks/#5-vi-sao-dev-nen-quan-tam-en-mamo-1","text":"Rollups c\u00f3 th\u1ec3 x\u1eed l\u00fd block l\u00ean t\u1edbi 32MB C\u00f3 th\u1ec3 t\u1ea1o block permissionless Light node c\u00f3 th\u1ec3 verify t\u1eeb tr\u00ecnh duy\u1ec7t ho\u1eb7c mobile Dev kh\u00f4ng c\u1ea7n lo chuy\u1ec7n scaling hay infra n\u1eefa, ch\u1ec9 c\u1ea7n t\u1eadp trung build s\u1ea3n ph\u1ea9m .","title":"5. V\u00ec sao dev n\u00ean quan t\u00e2m \u0111\u1ebfn mamo-1?"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/02-mammoth-blocks/#tom-lai","text":"Celestia \u0111ang \u0111\u1ecbnh ngh\u0129a l\u1ea1i c\u00e1ch blockchain m\u1edf r\u1ed9ng b\u1eb1ng: Mammoth Blocks Vacuum Protocol FBSS Based Rollups Trustless light clients V\u1edbi mamo-1 testnet, dev c\u00f3 th\u1ec3 h\u00ecnh dung ch\u00ednh x\u00e1c nh\u1eefng g\u00ec Celestia c\u00f3 th\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c trong th\u1ef1c t\u1ebf. \u0110\u00e2y kh\u00f4ng c\u00f2n l\u00e0 l\u1eddi h\u1ee9a \u2013 n\u00f3 \u0111ang x\u1ea3y ra. Advanced: Who has the fastest block propagation? C\u1ea3 Solana, Monad v\u00e0 Celestia \u0111\u1ec1u chia block th\u00e0nh c\u00e1c m\u1ea3nh nh\u1ecf \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a (erasure coded) r\u1ed3i ph\u00e2n ph\u1ed1i cho validators kh\u00f4ng ph\u1ea3i leader. Solana v\u00e0 Monad d\u00f9ng c\u01a1 ch\u1ebf push \u2014 leader ch\u1ee7 \u0111\u1ed9ng g\u1eedi block t\u1edbi validators, \u01b0u ti\u00ean t\u1ed1c \u0111\u1ed9 finality b\u1eb1ng c\u00e1ch \u0111\u1ec3 nh\u1eefng validator c\u00f3 stake cao nh\u1eadn data s\u1edbm v\u00e0 b\u1eaft \u0111\u1ea7u x\u00e1c minh ngay. Ng\u01b0\u1ee3c l\u1ea1i, Celestia v\u1edbi giao th\u1ee9c Vacuum! ch\u1ecdn c\u00e1ch pull \u2014 c\u00e1c validator t\u1ef1 y\u00eau c\u1ea7u ph\u1ea7n d\u1eef li\u1ec7u c\u00f2n thi\u1ebfu, gi\u00fap gi\u1ea3m t\u1ea3i cho proposer (ch\u1ec9 c\u1ea7n upload ~1x dung l\u01b0\u1ee3ng block), t\u1ed1i \u01b0u cho throughput thay v\u00ec t\u1ed1c \u0111\u1ed9 finality. C\u1ea5u tr\u00fac chung c\u1ee7a data pipeline: M\u1ed7i m\u1ea1ng blockchain th\u01b0\u1eddng c\u00f3 2 pha x\u1eed l\u00fd d\u1eef li\u1ec7u: (1) Preparation \u2013 giai \u0111o\u1ea1n chu\u1ea9n b\u1ecb tr\u01b0\u1edbc khi block \u0111\u01b0\u1ee3c t\u1ea1o (2) Dissemination \u2013 giai \u0111o\u1ea1n ph\u00e2n ph\u1ed1i d\u1eef li\u1ec7u sau khi block \u0111\u01b0\u1ee3c t\u1ea1o \u1ede pha chu\u1ea9n b\u1ecb, Solana d\u00f9ng h\u1ec7 th\u1ed1ng Gulfstream k\u1ebft h\u1ee3p v\u1edbi swQOS. \u0110i\u1ec3m \u0111\u1eb7c bi\u1ec7t l\u00e0 Solana kh\u00f4ng c\u00f3 global mempool nh\u01b0 c\u00e1c chain kh\u00e1c \u2014 thay v\u00e0o \u0111\u00f3, m\u1ed7i leader duy tr\u00ec m\u1ed9t local mempool ri\u00eang. \u0110i\u1ec1u n\u00e0y gi\u00fap tr\u00e1nh \u0111\u01b0\u1ee3c overhead t\u1eeb vi\u1ec7c gossip nhi\u1ec1u hop trong mempool l\u1edbn, t\u1eeb \u0111\u00f3 gi\u1eef cho m\u1ea1ng lu\u00f4n \u1edf t\u1ed1c \u0111\u1ed9 cao m\u00e0 kh\u00f4ng overload node. \u1ee8ng d\u1ee5ng s\u1ebd g\u1eedi transaction \u0111\u1ebfn RPC node, sau \u0111\u00f3 node n\u00e0y s\u1ebd g\u1eedi tr\u1ef1c ti\u1ebfp (ch\u1ec9 1 hop) t\u1edbi m\u1ed9t v\u00e0i leader k\u1ebf ti\u1ebfp qua Gulfstream. Do l\u1ecbch tr\u00ecnh leader \u0111\u01b0\u1ee3c bi\u1ebft tr\u01b0\u1edbc, n\u00ean validator n\u00e0o c\u0169ng c\u00f3 th\u1ec3 ch\u1ee7 \u0111\u1ed9ng route tx t\u1edbi leader s\u1eafp t\u1edbi. \u0110\u1ec3 ch\u1ed1ng spam, leader s\u1ebd \u01b0u ti\u00ean x\u1eed l\u00fd tx \u0111\u1ebfn t\u1eeb validators c\u00f3 stake cao h\u01a1n \u0111\u00f3 ch\u00ednh l\u00e0 logic c\u1ee7a swQOS (stake-weighted Quality of Service). Khi b\u01b0\u1edbc v\u00e0o pha ph\u00e2n ph\u1ed1i, Solana d\u00f9ng Turbine \u2014 m\u1ed9t engine truy\u1ec1n block theo m\u00f4 h\u00ecnh c\u00e2y (tree-based fanout). Trong khi leader \u0111ang build block, d\u1eef li\u1ec7u block \u0111\u01b0\u1ee3c chia th\u00e0nh c\u00e1c m\u1ea3nh nh\u1ecf g\u1ecdi l\u00e0 shreds (~1280 bytes m\u1ed7i shred), sau \u0111\u00f3 g\u1eedi \u0111i. \u0110i\u1ec1u n\u00e0y cho ph\u00e9p c\u00e1c b\u01b0\u1edbc verify v\u00e0 voting \u0111\u01b0\u1ee3c pipeline lu\u00f4n khi block ch\u01b0a build xong. C\u1ee5 th\u1ec3: Leader g\u1eedi shreds \u0111\u1ebfn root node th\u00ec root chia validators th\u00e0nh c\u00e1c t\u1ea7ng d\u1ef1a theo stake \u2192 nh\u1eefng validator c\u00f3 stake cao nh\u1eadn shred tr\u01b0\u1edbc, sau \u0111\u00f3 forward xu\u1ed1ng t\u1ea7ng d\u01b0\u1edbi. V\u1edbi fanout m\u1eb7c \u0111\u1ecbnh l\u00e0 200, ph\u1ea7n l\u1edbn validator s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c d\u1eef li\u1ec7u ch\u1ec9 sau 2\u20133 hops (leader \u2192 root \u2192 L1 \u2192 L2). Celestia l\u1ea1i ch\u1ecdn h\u01b0\u1edbng ti\u1ebfp c\u1eadn kh\u00e1c l\u00e0 t\u1ed1i \u01b0u cho throughput thay v\u00ec latency. Kh\u00f4ng gi\u1ed1ng nh\u01b0 Turbine (Solana) hay RaptorCast (Monad) \u0111\u1ec1u l\u00e0 c\u01a1 ch\u1ebf push . Celestia d\u00f9ng Vacuum! , m\u1ed9t m\u00f4 h\u00ecnh pull-based, cho ph\u00e9p thi\u1ebft l\u1eadp li\u00ean l\u1ea1c ki\u1ec3u just-in-time gi\u1eefa c\u00e1c node. \u1ede pha chu\u1ea9n b\u1ecb, thay v\u00ec g\u1eedi full txs, validators tr\u00ean Celestia s\u1ebd sync mempool th\u00f4ng qua m\u1ed9t lo\u1ea1i ch\u1ee9ng ch\u1ec9 t\u00ean l\u00e0 VAC (Validator Availability Certificate). \u0110\u00e2y l\u00e0 l\u1eddi h\u1ee9a c\u1ee7a validator r\u1eb1ng h\u1ecd \u0111ang gi\u1eef m\u1ed9t tx n\u00e0o \u0111\u00f3 v\u00e0 s\u1ebd \u0111\u1ea3m b\u1ea3o tx \u0111\u00f3 c\u00f3 s\u1eb5n \u0111\u1ebfn m\u1ed9t \u0111\u1ed9 cao block nh\u1ea5t \u0111\u1ecbnh. VAC ho\u1ea1t \u0111\u1ed9ng nh\u01b0 m\u1ed9t d\u1ea1ng pre-announcement: thay v\u00ec \u0111\u1ea9y tx ra m\u1ea1ng, validator ch\u1ec9 c\u1ea7n ph\u00e1t t\u00e1n VACs \u0111\u1ec3 th\u00f4ng b\u00e1o \u201ctao \u0111ang gi\u1eef tx n\u00e0y, \u0111\u1ee9a n\u00e0o c\u1ea7n th\u00ec h\u1ecfi\u201d . Vi\u1ec7c n\u00e0y gi\u00fap m\u1ea1ng bi\u1ebft nhanh c\u00e1c tx quan tr\u1ecdng m\u00e0 kh\u00f4ng b\u1ecb ng\u1eadp v\u00ec payload l\u1edbn. \u1ede th\u1eddi \u0111i\u1ec3m Data Retrieval, khi node c\u1ea7n d\u1eef li\u1ec7u, n\u00f3 ch\u1ee7 \u0111\u1ed9ng \u0111i xin. Khi m\u1ed9t node th\u1ea5y VAC t\u1eeb validator kh\u00e1c m\u00e0 n\u00f3 ch\u01b0a c\u00f3 d\u1eef li\u1ec7u, n\u00f3 s\u1ebd quy\u1ebft \u0111\u1ecbnh c\u00f3 n\u00ean \u0111i fetch hay kh\u00f4ng. Ch\u00ednh s\u00e1ch c\u1ee7a Vacuum! l\u00e0 lu\u00f4n l\u1ea5y \u00edt nh\u1ea5t VAC \u0111\u1ea7u ti\u00ean (tx quan tr\u1ecdng nh\u1ea5t) t\u1eeb m\u1ed7i validator m\u1edbi th\u1ea5y l\u1ea7n \u0111\u1ea7u. C\u00f2n c\u00e1c VAC ti\u1ebfp theo th\u00ec ch\u1ec9 fetch n\u1ebfu node c\u00f2n \u0111\u1ee7 b\u0103ng th\u00f4ng, ho\u1eb7c n\u1ebfu tx \u0111\u00f3 quan tr\u1ecdng h\u01a1n nh\u1eefng tx n\u00f3 \u0111ang \u0111\u1ecbnh drop. \u0110\u1ec3 l\u1ea5y d\u1eef li\u1ec7u, node g\u1eedi m\u1ed9t y\u00eau c\u1ea7u c\u00f3 t\u00ean \u2018WantBlob\u2019 \u0111\u1ebfn peer \u0111ang gi\u1eef blob. Peer s\u1ebd g\u1eedi l\u1ea1i blob \u0111\u00f3, chia th\u00e0nh t\u1eebng chunk nh\u1ecf. \u0110i\u1ec1u th\u00fa v\u1ecb l\u00e0 ngay khi node b\u1eaft \u0111\u1ea7u t\u1ea3i blob v\u1ec1, n\u00f3 s\u1ebd gossip VAC \u0111\u00f3 ra cho nh\u1eefng node kh\u00e1c, t\u1ea1o ra m\u1ed9t chu\u1ed7i fetch pipeline theo nhu c\u1ea7u. M\u00f4 h\u00ecnh lazy gossiping ki\u1ec3u n\u00e0y tr\u00e1nh \u0111\u01b0\u1ee3c vi\u1ec7c truy\u1ec1n d\u1eef li\u1ec7u tr\u00f9ng l\u1eb7p, gi\u00fap m\u1ed7i tx ch\u1ec9 ch\u1ea3y qua m\u1ea1ng \u0111\u00fang m\u1ed9t l\u1ea7n, theo tuy\u1ebfn \u0111\u01b0\u1eddng t\u1ed1i \u01b0u v\u1eeba ti\u1ebft ki\u1ec7m, v\u1eeba t\u0103ng throughput. V\u00ec mempool \u0111\u00e3 \u0111\u01b0\u1ee3c sync k\u1ef9 nh\u1edd VACs t\u1eeb tr\u01b0\u1edbc, n\u00ean khi leader chu\u1ea9n b\u1ecb t\u1ea1o block, ph\u1ea7n l\u1edbn d\u1eef li\u1ec7u \u0111\u00e3 n\u1eb1m s\u1eb5n \u1edf c\u00e1c validator. Leader l\u00fac n\u00e0y ch\u1ec9 c\u1ea7n broadcast m\u1ed9t compact block c\u1ef1c nh\u1eb9, g\u1ea7n nh\u01b0 kh\u00f4ng t\u1ed1n b\u0103ng th\u00f4ng. Compact block g\u1ed3m 3 ph\u1ea7n ch\u00ednh: Cam k\u1ebft (commitment) v\u1edbi danh s\u00e1ch txs trong block Bitmap th\u1ec3 hi\u1ec7n nh\u1eefng tx n\u00e0o leader c\u00f3 th\u1ec3 cung c\u1ea5p n\u1ebfu c\u1ea7n Metadata \u0111\u1ec3 mapping chunk so v\u1edbi d\u1eef li\u1ec7u th\u1ef1c Sau khi nh\u1eadn compact block, c\u00e1c validator s\u1ebd check xem m\u00ecnh c\u00f3 \u0111\u1ee7 data ch\u01b0a. N\u1ebfu thi\u1ebfu, h\u1ecd y\u00eau c\u1ea7u ph\u1ea7n parity data c\u00f2n thi\u1ebfu \u0111\u1ec3 reconstruct l\u1ea1i block. V\u00ec m\u1ed7i node \u0111\u00e3 c\u00f3 \u0111\u1ee7 d\u1eef li\u1ec7u t\u1eeb tr\u01b0\u1edbc. L\u00fac n\u00e0y, leader kh\u00f4ng c\u1ea7n truy\u1ec1n g\u00ec th\u00eam ngo\u00e0i compact block. \u0110\u00e2y l\u00e0 actual black magic c\u1ee7a Vacuum!","title":"T\u00f3m l\u1ea1i:"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/03-VerifiableEncryption-PrivateDA/","text":"VERIFIABLE ENCRYPTION & PRIVATE Data tr\u00ean Celestia \u201cPrivacy matters. But so does verifiability.\u201d \u2014 Celestia Labs C\u00e1c kh\u00e1i ni\u1ec7m c\u1ed1t l\u00f5i m\u00e0 b\u1ea1n c\u1ea7n n\u1eafm (Core Concepts) D\u01b0\u1edbi \u0111\u00e2y l\u00e0 danh s\u00e1ch c\u00e1c kh\u00e1i ni\u1ec7m k\u1ef9 thu\u1eadt quan tr\u1ecdng li\u00ean quan \u0111\u1ebfn Private Data Availability tr\u00ean Celestia. B\u1ea1n n\u00ean tra c\u1ee9u s\u00e2u h\u01a1n t\u1eebng thu\u1eadt ng\u1eef \u0111\u1ec3 hi\u1ec3u r\u00f5 c\u01a1 ch\u1ebf v\u00e0 \u1ee9ng d\u1ee5ng c\u1ee7a n\u00f3. Private Data Availability (PDA) : C\u01a1 ch\u1ebf cho ph\u00e9p b\u1ea1n publish encrypted data l\u00ean Celestia DA layer v\u00e0 v\u1eabn prove data availability (ch\u1ee9ng minh d\u1eef li\u1ec7u t\u1ed3n t\u1ea1i v\u00e0 c\u00f3 th\u1ec3 truy xu\u1ea5t) m\u00e0 kh\u00f4ng c\u1ea7n c\u00f4ng khai n\u1ed9i dung. Verifiable Encryption (VE) : K\u1ef9 thu\u1eadt prove claims/properties about encrypted data (ch\u1ee9ng minh t\u00ednh \u0111\u00fang/sai li\u00ean quan \u0111\u1ebfn d\u1eef li\u1ec7u m\u00e3 ho\u00e1) without decrypting it. zkVM (Zero-Knowledge Virtual Machine) : M\u1ed9t m\u00e1y \u1ea3o c\u00f3 th\u1ec3 prove that a program ran correctly (ch\u1ee9ng minh ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea1y \u0111\u00fang) m\u00e0 kh\u00f4ng l\u1ed9 input/output. PDA Proxy : Middleware \u0111\u1ee9ng gi\u1eefa app v\u00e0 Celestia, gi\u00fap auto-handle encryption/decryption (t\u1ef1 \u0111\u1ed9ng m\u00e3 ho\u00e1/gi\u1ea3i m\u00e3 d\u1eef li\u1ec7u) tr\u01b0\u1edbc khi g\u1eedi l\u00ean DA layer. ChaCha20 : High-performance stream cipher (thu\u1eadt to\u00e1n m\u00e3 ho\u00e1 d\u00f2ng) m\u1ea1nh v\u00e0 nh\u1eb9, ph\u00f9 h\u1ee3p cho m\u00f4i tr\u01b0\u1eddng zkVM. Data Fingerprinting (Hash Commitments) : S\u1eed d\u1ee5ng cryptographic hash \u0111\u1ec3 t\u1ea1o ra commitment cho m\u1ed9t \u0111o\u1ea1n d\u1eef li\u1ec7u. B\u1ea1n c\u00f3 th\u1ec3 tra c\u1ee9u c\u00e1c c\u1ee5m t\u1eeb kh\u00f3a tr\u00ean trong t\u00e0i li\u1ec7u Celestia Docs, GitHub repo, ho\u1eb7c ZKPrimer \u0111\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n. \u0110\u00e2y l\u00e0 foundational building blocks cho m\u1ecdi \u1ee9ng d\u1ee5ng c\u1ea7n privacy + verifiability. Private Data Availability (PDA) l\u00e0 g\u00ec? Blockchains truy\u1ec1n th\u1ed1ng v\u1ed1n minh b\u1ea1ch theo m\u1eb7c \u0111\u1ecbnh \u2014 m\u1ecdi giao d\u1ecbch, m\u1ecdi tr\u1ea1ng th\u00e1i \u0111\u1ec1u hi\u1ec3n th\u1ecb c\u00f4ng khai. \u0110i\u1ec1u n\u00e0y r\u1ea5t t\u1ed1t cho t\u00ednh phi t\u1eadp trung v\u00e0 auditability, nh\u01b0ng l\u1ea1i l\u00e0 r\u00e0o c\u1ea3n l\u1edbn cho nh\u1eefng \u1ee9ng d\u1ee5ng c\u1ea7n s\u1ef1 ri\u00eang t\u01b0 nh\u01b0 DEX ri\u00eang t\u01b0 , Data marketplaces , Encrypted messaging .... Nh\u01b0 v\u1eady Private Data Availability (PDA) cho ph\u00e9p devs \u0111\u0103ng d\u1eef li\u1ec7u \u0111\u00e3 m\u00e3 ho\u00e1 l\u00ean Celestia , nh\u01b0ng v\u1eabn c\u00f3 th\u1ec3 ch\u1ee9ng minh r\u1eb1ng d\u1eef li\u1ec7u \u0111\u00f3 th\u1eadt s\u1ef1 t\u1ed3n t\u1ea1i v\u00e0 ai c\u0169ng c\u00f3 th\u1ec3 truy xu\u1ea5t \u0111\u01b0\u1ee3c (m\u1eb7c d\u00f9 ch\u01b0a th\u1ec3 \u0111\u1ecdc n\u1ed9i dung). N\u00f3i t\u00f3m l\u1ea1i th\u00ec mu\u1ed1n t\u1ea1o ra m\u1ed9t n\u01a1i credibly neutral trung l\u1eadp theo c\u00e1ch m\u00e0 ai c\u0169ng tin \u0111\u01b0\u1ee3c \u0111\u1ec3 ph\u1ee5c v\u1ee5 cho vi\u1ec7c Data Availability (DA) m\u1ed9t c\u00e1ch c\u00f4ng khai, minh b\u1ea1ch, nh\u01b0ng \u0111\u1ed3ng th\u1eddi v\u1eabn c\u00f3 kh\u1ea3 n\u0103ng ch\u1ecdn l\u1ecdc ai \u0111\u01b0\u1ee3c \u0111\u1ecdc n\u1ed9i dung b\u00ean trong. V\u00ec b\u1ea5t k\u1ef3 ai c\u0169ng c\u00f3 th\u1ec3 truy c\u1eadp \u0111\u01b0\u1ee3c d\u1eef li\u1ec7u, n\u00ean ta c\u1ea7n m\u1ed9t c\u00e1ch \u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a \u0111i\u1ec1u ki\u1ec7n n\u00e0o cho ph\u00e9p \u0111\u1ecdc \u0111\u01b0\u1ee3c n\u1ed9i dung \u0111\u00f3 (g\u1ecdi l\u00e0 selective disclosure ti\u1ebft l\u1ed9 ch\u1ecdn l\u1ecdc). V\u1edbi m\u1ed9t m\u1ea1ng DA phi t\u1eadp trung nh\u01b0 Celestia, b\u1ea5t k\u1ef3 giao th\u1ee9c n\u00e0o c\u1ea7n truy c\u1eadp d\u1eef li\u1ec7u \u0111\u1ec1u c\u00f3 \u0111\u1ea3m b\u1ea3o ch\u1eafc ch\u1eafn r\u1eb1ng khi d\u1eef li\u1ec7u \u0111\u00e3 \u0111\u01b0\u1ee3c publish th\u00ec kh\u00f4ng b\u00ean n\u00e0o c\u00f3 th\u1ec3 che gi\u1ea5u ho\u1eb7c gi\u1eef l\u1ea1i n\u00f3 (retrievability guarantee) \u2013 \u00edt nh\u1ea5t l\u00e0 trong m\u1ed9t kho\u1ea3ng th\u1eddi gian nh\u1ea5t \u0111\u1ecbnh. Th\u00eam n\u1eefa, nh\u1edd v\u00e0o c\u01a1 ch\u1ebf Data Availability Sampling (DAS), b\u1ea5t k\u1ef3 ai c\u0169ng c\u00f3 th\u1ec3 x\u00e1c minh m\u1ed9t c\u00e1ch ng\u1eafn g\u1ecdn r\u1eb1ng d\u1eef li\u1ec7u \u0111\u00e3 th\u1ef1c s\u1ef1 \u0111\u01b0\u1ee3c c\u00f4ng b\u1ed1 m\u00e0 kh\u00f4ng c\u1ea7n ph\u1ea3i download to\u00e0n b\u1ed9 d\u1eef li\u1ec7u g\u1ed1c. C\u1ed1t l\u00f5i c\u1ee7a PDA: Verifiable Encryption (VE) Trong m\u00e3 ho\u00e1 truy\u1ec1n th\u1ed1ng, ciphertext (d\u1eef li\u1ec7u \u0111\u00e3 m\u00e3 ho\u00e1) kh\u00f4ng ti\u1ebft l\u1ed9 g\u00ec v\u1ec1 plaintext (d\u1eef li\u1ec7u g\u1ed1c). \u0110i\u1ec1u n\u00e0y \u0111\u1ea3m b\u1ea3o quy\u1ec1n ri\u00eang t\u01b0 tuy\u1ec7t \u0111\u1ed1i( privacy)nh\u01b0ng l\u1ea1i t\u1ea1o ra m\u1ed9t c\u00e1i \u201ctrust bottleneck\u201d l\u00e0 b\u1ea1n ph\u1ea3i ho\u00e0n to\u00e0n tin t\u01b0\u1edfng ng\u01b0\u1eddi gi\u1eef key gi\u1ea3i m\u00e3 s\u1ebd kh\u00f4ng ch\u01a1i x\u1ea5u. Nh\u01b0ng n\u1ebfu m\u00ecnh kh\u00f4ng mu\u1ed1n \u0111\u1eb7t ni\u1ec1m tin m\u00f9 qu\u00e1ng v\u00e0o ng\u01b0\u1eddi c\u1ea7m key th\u00ec sao? C\u00f3 c\u00e1ch n\u00e0o \u0111\u1ec3 chuy\u1ec3n m\u1ed9t ph\u1ea7n ni\u1ec1m tin \u0111\u00f3 sang c\u01a1 ch\u1ebf c\u00f3 th\u1ec3 verify c\u00f4ng khai? VE t\u1ea1o ra kh\u1ea3 n\u0103ng n\u00e0y b\u1eb1ng c\u00e1ch \u00e1p d\u1ee5ng c\u00e1c r\u00e0ng bu\u1ed9c (constraints) l\u00ean: ch\u00ednh plaintext thu\u1eadt to\u00e1n encryption algorithm v\u00e0 encryption key Nh\u1edd \u0111\u00f3, ai c\u0169ng c\u00f3 th\u1ec3 x\u00e1c minh r\u1eb1ng d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c m\u00e3 ho\u00e1 tu\u00e2n th\u1ee7 m\u1ed9t s\u1ed1 \u0111i\u1ec1u ki\u1ec7n c\u1ee5 th\u1ec3 m\u00e0 kh\u00f4ng c\u1ea7n bi\u1ebft d\u1eef li\u1ec7u \u0111\u00f3 l\u00e0 g\u00ec. Khi k\u1ebft h\u1ee3p v\u1edbi Verifiable Encryption (VE) t\u1ee9c l\u00e0 k\u1ef9 thu\u1eadt m\u00e3 ho\u00e1 cho ph\u00e9p ch\u1ee9ng minh nh\u1eefng \u0111i\u1ec1u \u0111\u00fang/sai li\u00ean quan t\u1edbi d\u1eef li\u1ec7u m\u00e3 ho\u00e1 m\u00e0 kh\u00f4ng c\u1ea7n gi\u1ea3i m\u00e3. Ch\u00fang ta s\u1ebd v\u1eabn gi\u1eefa \u0111\u01b0\u1ee3c b\u00ed m\u1eadt m\u00e0 v\u1eabn ch\u1ee9ng minh t\u00ednh h\u1ee3p l\u1ec7. Thay v\u00ec ch\u1ec9 m\u00e3 ho\u00e1 \u0111\u01a1n thu\u1ea7n, VE cho ph\u00e9p b\u1ea1n \u201ccam k\u1ebft\u201d r\u1eb1ng ciphertext \u0111ang ch\u1ee9a m\u1ed9t n\u1ed9i dung th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n n\u00e0o \u0111\u00f3 \u2014 v\u00ed d\u1ee5 nh\u01b0 kh\u1edbp v\u1edbi m\u1ed9t hash c\u1ee5 th\u1ec3, ho\u1eb7c ch\u1ee9a m\u1ed9t gi\u00e1 tr\u1ecb n\u1eb1m trong t\u1eadp gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c ch\u1ea5p nh\u1eadn \u2014 v\u00e0 t\u1ea5t c\u1ea3 \u0111i\u1ec1u \u0111\u00f3 \u0111\u01b0\u1ee3c ch\u1ee9ng minh qua m\u1ed9t b\u1eb1ng ch\u1ee9ng kh\u00f4ng ti\u1ebft l\u1ed9 g\u00ec v\u1ec1 n\u1ed9i dung th\u1ef1c t\u1ebf b\u00ean trong. B\u1eb1ng ch\u1ee9ng n\u00e0y \u0111\u01b0\u1ee3c sinh b\u1edfi zkVM v\u00e0 ai c\u0169ng c\u00f3 th\u1ec3 verify m\u00e0 kh\u00f4ng c\u1ea7n gi\u1ea3i m\u00e3 d\u1eef li\u1ec7u Ki\u1ebfn tr\u00fac PDA Proxy \u0110\u1ec3 tri\u1ec3n khai nhanh ch\u00f3ng PDA, Celestia Labs x\u00e2y d\u1ef1ng m\u1ed9t proxy middleware cho c\u00e1c \u1ee9ng d\u1ee5ng: L\u00e0 c\u1ea7u n\u1ed1i gi\u1eefa app c\u1ee7a b\u1ea1n v\u00e0 Celestia node T\u1ef1 \u0111\u1ed9ng m\u00e3 ho\u00e1 d\u1eef li\u1ec7u + sinh b\u1eb1ng ch\u1ee9ng zk khi upload T\u1ef1 \u0111\u1ed9ng gi\u1ea3i m\u00e3 khi truy xu\u1ea5t (n\u1ebfu c\u00f3 kho\u00e1) S\u1eed d\u1ee5ng zkVM prover network (hi\u1ec7n t\u1ea1i l\u00e0 Succinct) \u0111\u1ec3 x\u1eed l\u00fd c\u00e1c b\u1eb1ng ch\u1ee9ng VE Dev ch\u1ec9 c\u1ea7n g\u1ecdi proxy thay v\u00ec node Celestia tr\u1ef1c ti\u1ebfp v\u00ec t\u1ea5t c\u1ea3 quy tr\u00ecnh m\u00e3 ho\u00e1, sinh ch\u1ee9ng c\u1ee9, upload \u0111\u01b0\u1ee3c x\u1eed l\u00fd \u1edf backend Ti\u00eau ch\u00ed Encryption th\u00f4ng th\u01b0\u1eddng Verifiable Encryption (VE) M\u1ee5c \u0111\u00edch ch\u00ednh B\u1ea3o v\u1ec7 n\u1ed9i dung kh\u1ecfi ng\u01b0\u1eddi ngo\u00e0i B\u1ea3o v\u1ec7 n\u1ed9i dung v\u00e0 ch\u1ee9ng minh thu\u1ed9c t\u00ednh d\u1eef li\u1ec7u Ai c\u00f3 th\u1ec3 x\u00e1c minh Ch\u1ec9 ng\u01b0\u1eddi c\u00f3 kh\u00f3a B\u1ea5t k\u1ef3 ai (d\u1ef1a tr\u00ean b\u1eb1ng ch\u1ee9ng zk) Ch\u1ee9ng minh n\u1ed9i dung \u0111\u00fang \u274c Kh\u00f4ng th\u1ec3 \u2705 C\u00f3 th\u1ec3 ch\u1ee9ng minh thu\u1ed9c t\u00ednh c\u1ee5 th\u1ec3 c\u1ee7a d\u1eef li\u1ec7u L\u1ed9 th\u00f4ng tin d\u1eef li\u1ec7u g\u1ed1c Kh\u00f4ng (n\u1ebfu b\u1ea3o m\u1eadt t\u1ed1t) Kh\u00f4ng (b\u1eb1ng zero-knowledge proof) Ph\u00f9 h\u1ee3p v\u1edbi use case n\u00e0o L\u01b0u tr\u1eef ri\u00eang t\u01b0, kh\u00f4ng c\u1ea7n ch\u1ee9ng minh DEX, data marketplace, zk-identity, whistleblowing... Y\u00eau c\u1ea7u t\u00ednh to\u00e1n zk proof \u274c Kh\u00f4ng \u2705 C\u00f3, c\u1ea7n zkVM ho\u1eb7c prover system Tri\u1ec3n khai tr\u00ean blockchain D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c m\u00e3 ho\u00e1 v\u00e0 \u0111\u0103ng onchain Ciphertext + zk proof \u0111\u01b0\u1ee3c \u0111\u0103ng onchain C\u00e1c use cases V\u00ed d\u1ee5 \u0111\u1ea7u ti\u00ean l\u00e0 Data Marketplace M\u1ed9t ng\u01b0\u1eddi b\u00e1n mu\u1ed1n b\u00e1n m\u1ed9t b\u1ee9c \u1ea3nh c\u00f3 \u0111\u1ed9 ph\u00e2n gi\u1ea3i cao. Tr\u01b0\u1edbc khi ng\u01b0\u1eddi mua thanh to\u00e1n, h\u1ecd c\u1ea7n bi\u1ebft ch\u1eafc ch\u1eafn r\u1eb1ng file \u0111\u01b0\u1ee3c m\u00e3 ho\u00e1 l\u00e0 \u0111\u00fang \u1ea3nh \u0111\u00f3, nh\u01b0ng kh\u00f4ng mu\u1ed1n ti\u1ebft l\u1ed9 \u1ea3nh. V\u1eady th\u00ec ch\u00fang ta c\u00f3 VE s\u1ebd gi\u00fap cam k\u1ebft r\u1eb1ng ciphertext ch\u1ee9a \u0111\u00fang file v\u1edbi hash H(x) m\u00e0 kh\u00f4ng gi\u1ea3i m\u00e3. Ho\u1eb7c v\u00ed d\u1ee5 nh\u01b0 Decentralized Uber Ng\u01b0\u1eddi d\u00f9ng c\u1ea7n g\u1ecdi xe m\u00e0 kh\u00f4ng ti\u1ebft l\u1ed9 v\u1ecb tr\u00ed c\u00f4ng khai. PDA proxy s\u1ebd m\u00e3 ho\u00e1 th\u00f4ng tin v\u1ecb tr\u00ed + \u0111\u00ednh k\u00e8m fingerprint thanh to\u00e1n v\u00f9 t\u00e0i x\u1ebf c\u00f3 th\u1ec3 x\u00e1c minh & nh\u1eadn l\u1ec7nh ride n\u1ebfu \u0111\u1ed3ng \u00fd. v\u00ed d\u1ee5 kh\u00e1c n\u1eefa l\u00e0 Perps DEX & Emergency Recovery: Celestia Labs c\u0169ng \u0111ang l\u00e0m vi\u1ec7c c\u00f9ng m\u1ed9t DEX c\u00f3 nhu c\u1ea7u \u0111\u1eb7c bi\u1ec7t: l\u01b0u th\u00f4ng tin ng\u01b0\u1eddi d\u00f9ng m\u1ed9t c\u00e1ch ri\u00eang t\u01b0, nh\u01b0ng ph\u1ea3i c\u00f3 kh\u1ea3 n\u0103ng kh\u00f4i ph\u1ee5c trong t\u00ecnh hu\u1ed1ng kh\u1ea9n c\u1ea5p. To\u00e0n b\u1ed9 th\u00f4ng tin ng\u01b0\u1eddi d\u00f9ng \u0111\u01b0\u1ee3c m\u00e3 ho\u00e1 v\u00e0 l\u01b0u l\u00ean Celestia th\u00f4ng qua PDA Proxy. Trong tr\u01b0\u1eddng h\u1ee3p b\u00ecnh th\u01b0\u1eddng, kh\u00f4ng ai c\u00f3 th\u1ec3 \u0111\u1ecdc \u0111\u01b0\u1ee3c d\u1eef li\u1ec7u. Nh\u01b0ng n\u1ebfu x\u1ea3y ra s\u1ef1 c\u1ed1 h\u1ec7 th\u1ed1ng, kh\u00f3a gi\u1ea3i m\u00e3 s\u1ebd \u0111\u01b0\u1ee3c c\u00f4ng khai th\u00f4ng qua m\u1ed9t c\u01a1 ch\u1ebf emergency fallback (c\u00f3 th\u1ec3 l\u00e0 MPC, threshold key release ho\u1eb7c multisig recovery), gi\u00fap ng\u01b0\u1eddi d\u00f9ng t\u1ef1 r\u00fat ti\u1ec1n kh\u1ecfi giao th\u1ee9c m\u00e0 kh\u00f4ng ph\u1ee5 thu\u1ed9c v\u00e0o team d\u1ef1 \u00e1n. \u0110\u1ebfn \u0111\u00e2y b\u1ea1n s\u1ebd \u0111\u1eb7t c\u00e2u h\u1ecfi PDA Proxy c\u00f3 th\u1ec3 d\u00f9ng cho nh\u1eefng ai? B\u1ea5t k\u1ef3 ai \u0111ang x\u00e2y d\u1ef1ng \u1ee9ng d\u1ee5ng c\u00f3 t\u00ednh ch\u1ea5t nh\u1ea1y c\u1ea3m v\u1ec1 d\u1eef li\u1ec7u \u0111\u1ec1u c\u00f3 th\u1ec3 t\u00edch h\u1ee3p PDA Proxy t\u1eeb DEX, encrypted off-chain storage, messaging app, \u0111\u1ebfn data DAO hay decentralized Uber. M\u1ed9t s\u1ed1 use case r\u1ea5t ph\u00f9 h\u1ee3p nh\u01b0: Tin nh\u1eafn \u0111\u01b0\u1ee3c \u0111\u1ea3m b\u1ea3o \u0111\u00e3 g\u1eedi, nh\u01b0ng kh\u00f4ng ai \u0111\u1ecdc \u0111\u01b0\u1ee3c ngo\u00e0i ng\u01b0\u1eddi nh\u1eadn Trao \u0111\u1ed5i d\u1eef li\u1ec7u gi\u1eefa Web2 v\u1edbi Web3 qua Celestia l\u00e0m \u201cinvisible pipe\u201d G\u1eedi location t\u1ea1m th\u1eddi trong decentralized ride-sharing m\u00e0 v\u1eabn gi\u1eef b\u00ed m\u1eadt M\u1ed9t v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh l\u00e0 d\u1ef1 \u00e1n Stock0 t\u1eeb hackathon h\u1ecd \u0111\u00e3 t\u1ea1o ra m\u1ed9t media marketplace n\u01a1i d\u1eef li\u1ec7u media \u0111\u01b0\u1ee3c m\u00e3 ho\u00e1, ng\u01b0\u1eddi mua ch\u1ec9 nh\u1eadn \u0111\u01b0\u1ee3c quy\u1ec1n gi\u1ea3i m\u00e3 khi ho\u00e0n t\u1ea5t deal t\u1ea5t c\u1ea3 \u0111\u1ec1u trustless. flowchart LR Data[\"Data to be Sold\"] --> zkVM_Algo[\"zkVM(transform media)\"] zkVM_Algo -- \"proven data transform w/ VE anchor\" --> Contract[\"Marketplace on <dApp chain>\"] Data -- \"VE data\" --> Celestia[\"Celestia\"] Celestia -- \"header\" --> Blobstream[\"Blobstream on <dApp chain>\"] Blobstream <-- \"verify VE anchor and DA\" --> Contract Example Architecture: How VE + PDA Work Together \u1ede ki\u1ebfn tr\u00fac m\u1eabu n\u00e0y, the anchor \u0111\u00f3ng vai tr\u00f2 trung t\u00e2m m\u1ed9t c\u1ea7u n\u1ed1i (bridge) gi\u1eefa b\u1ea5t k\u1ef3 protocol n\u00e0o v\u00e0 m\u1ed9t ch\u1ee9ng minh (proof) r\u1eb1ng d\u1eef li\u1ec7u ri\u00eang t\u01b0 n\u00e0o \u0111\u00f3 \u0111\u00e3 \u0111\u01b0\u1ee3c c\u00f4ng khai m\u1ed9t c\u00e1ch c\u00f3 th\u1ec3 ki\u1ec3m ch\u1ee9ng \u0111\u01b0\u1ee3c. Example dApps Private rollups/apps with (partial) obfuscation. Wrap your fav kit: Rollkit, OP, Nitro, \u2026 Verifiable Backups recover from \"disaster\": Reference Github: https://github.com/celestiaorg/pda-proxy Private Data Availability on Celestia docs: Slide Verifiable Encryption event: https://hackmd.io/@Nuke/SyHBUsdWlg#/","title":"VERIFIABLE ENCRYPTION &amp; PRIVATE Data tr\u00ean Celestia"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/03-VerifiableEncryption-PrivateDA/#verifiable-encryption-private-data-tren-celestia","text":"\u201cPrivacy matters. But so does verifiability.\u201d \u2014 Celestia Labs","title":"VERIFIABLE ENCRYPTION &amp; PRIVATE Data tr\u00ean Celestia"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/03-VerifiableEncryption-PrivateDA/#cac-khai-niem-cot-loi-ma-ban-can-nam-core-concepts","text":"D\u01b0\u1edbi \u0111\u00e2y l\u00e0 danh s\u00e1ch c\u00e1c kh\u00e1i ni\u1ec7m k\u1ef9 thu\u1eadt quan tr\u1ecdng li\u00ean quan \u0111\u1ebfn Private Data Availability tr\u00ean Celestia. B\u1ea1n n\u00ean tra c\u1ee9u s\u00e2u h\u01a1n t\u1eebng thu\u1eadt ng\u1eef \u0111\u1ec3 hi\u1ec3u r\u00f5 c\u01a1 ch\u1ebf v\u00e0 \u1ee9ng d\u1ee5ng c\u1ee7a n\u00f3. Private Data Availability (PDA) : C\u01a1 ch\u1ebf cho ph\u00e9p b\u1ea1n publish encrypted data l\u00ean Celestia DA layer v\u00e0 v\u1eabn prove data availability (ch\u1ee9ng minh d\u1eef li\u1ec7u t\u1ed3n t\u1ea1i v\u00e0 c\u00f3 th\u1ec3 truy xu\u1ea5t) m\u00e0 kh\u00f4ng c\u1ea7n c\u00f4ng khai n\u1ed9i dung. Verifiable Encryption (VE) : K\u1ef9 thu\u1eadt prove claims/properties about encrypted data (ch\u1ee9ng minh t\u00ednh \u0111\u00fang/sai li\u00ean quan \u0111\u1ebfn d\u1eef li\u1ec7u m\u00e3 ho\u00e1) without decrypting it. zkVM (Zero-Knowledge Virtual Machine) : M\u1ed9t m\u00e1y \u1ea3o c\u00f3 th\u1ec3 prove that a program ran correctly (ch\u1ee9ng minh ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea1y \u0111\u00fang) m\u00e0 kh\u00f4ng l\u1ed9 input/output. PDA Proxy : Middleware \u0111\u1ee9ng gi\u1eefa app v\u00e0 Celestia, gi\u00fap auto-handle encryption/decryption (t\u1ef1 \u0111\u1ed9ng m\u00e3 ho\u00e1/gi\u1ea3i m\u00e3 d\u1eef li\u1ec7u) tr\u01b0\u1edbc khi g\u1eedi l\u00ean DA layer. ChaCha20 : High-performance stream cipher (thu\u1eadt to\u00e1n m\u00e3 ho\u00e1 d\u00f2ng) m\u1ea1nh v\u00e0 nh\u1eb9, ph\u00f9 h\u1ee3p cho m\u00f4i tr\u01b0\u1eddng zkVM. Data Fingerprinting (Hash Commitments) : S\u1eed d\u1ee5ng cryptographic hash \u0111\u1ec3 t\u1ea1o ra commitment cho m\u1ed9t \u0111o\u1ea1n d\u1eef li\u1ec7u. B\u1ea1n c\u00f3 th\u1ec3 tra c\u1ee9u c\u00e1c c\u1ee5m t\u1eeb kh\u00f3a tr\u00ean trong t\u00e0i li\u1ec7u Celestia Docs, GitHub repo, ho\u1eb7c ZKPrimer \u0111\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n. \u0110\u00e2y l\u00e0 foundational building blocks cho m\u1ecdi \u1ee9ng d\u1ee5ng c\u1ea7n privacy + verifiability.","title":"C\u00e1c kh\u00e1i ni\u1ec7m c\u1ed1t l\u00f5i m\u00e0 b\u1ea1n c\u1ea7n n\u1eafm (Core Concepts)"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/03-VerifiableEncryption-PrivateDA/#private-data-availability-pda-la-gi","text":"Blockchains truy\u1ec1n th\u1ed1ng v\u1ed1n minh b\u1ea1ch theo m\u1eb7c \u0111\u1ecbnh \u2014 m\u1ecdi giao d\u1ecbch, m\u1ecdi tr\u1ea1ng th\u00e1i \u0111\u1ec1u hi\u1ec3n th\u1ecb c\u00f4ng khai. \u0110i\u1ec1u n\u00e0y r\u1ea5t t\u1ed1t cho t\u00ednh phi t\u1eadp trung v\u00e0 auditability, nh\u01b0ng l\u1ea1i l\u00e0 r\u00e0o c\u1ea3n l\u1edbn cho nh\u1eefng \u1ee9ng d\u1ee5ng c\u1ea7n s\u1ef1 ri\u00eang t\u01b0 nh\u01b0 DEX ri\u00eang t\u01b0 , Data marketplaces , Encrypted messaging .... Nh\u01b0 v\u1eady Private Data Availability (PDA) cho ph\u00e9p devs \u0111\u0103ng d\u1eef li\u1ec7u \u0111\u00e3 m\u00e3 ho\u00e1 l\u00ean Celestia , nh\u01b0ng v\u1eabn c\u00f3 th\u1ec3 ch\u1ee9ng minh r\u1eb1ng d\u1eef li\u1ec7u \u0111\u00f3 th\u1eadt s\u1ef1 t\u1ed3n t\u1ea1i v\u00e0 ai c\u0169ng c\u00f3 th\u1ec3 truy xu\u1ea5t \u0111\u01b0\u1ee3c (m\u1eb7c d\u00f9 ch\u01b0a th\u1ec3 \u0111\u1ecdc n\u1ed9i dung). N\u00f3i t\u00f3m l\u1ea1i th\u00ec mu\u1ed1n t\u1ea1o ra m\u1ed9t n\u01a1i credibly neutral trung l\u1eadp theo c\u00e1ch m\u00e0 ai c\u0169ng tin \u0111\u01b0\u1ee3c \u0111\u1ec3 ph\u1ee5c v\u1ee5 cho vi\u1ec7c Data Availability (DA) m\u1ed9t c\u00e1ch c\u00f4ng khai, minh b\u1ea1ch, nh\u01b0ng \u0111\u1ed3ng th\u1eddi v\u1eabn c\u00f3 kh\u1ea3 n\u0103ng ch\u1ecdn l\u1ecdc ai \u0111\u01b0\u1ee3c \u0111\u1ecdc n\u1ed9i dung b\u00ean trong. V\u00ec b\u1ea5t k\u1ef3 ai c\u0169ng c\u00f3 th\u1ec3 truy c\u1eadp \u0111\u01b0\u1ee3c d\u1eef li\u1ec7u, n\u00ean ta c\u1ea7n m\u1ed9t c\u00e1ch \u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a \u0111i\u1ec1u ki\u1ec7n n\u00e0o cho ph\u00e9p \u0111\u1ecdc \u0111\u01b0\u1ee3c n\u1ed9i dung \u0111\u00f3 (g\u1ecdi l\u00e0 selective disclosure ti\u1ebft l\u1ed9 ch\u1ecdn l\u1ecdc). V\u1edbi m\u1ed9t m\u1ea1ng DA phi t\u1eadp trung nh\u01b0 Celestia, b\u1ea5t k\u1ef3 giao th\u1ee9c n\u00e0o c\u1ea7n truy c\u1eadp d\u1eef li\u1ec7u \u0111\u1ec1u c\u00f3 \u0111\u1ea3m b\u1ea3o ch\u1eafc ch\u1eafn r\u1eb1ng khi d\u1eef li\u1ec7u \u0111\u00e3 \u0111\u01b0\u1ee3c publish th\u00ec kh\u00f4ng b\u00ean n\u00e0o c\u00f3 th\u1ec3 che gi\u1ea5u ho\u1eb7c gi\u1eef l\u1ea1i n\u00f3 (retrievability guarantee) \u2013 \u00edt nh\u1ea5t l\u00e0 trong m\u1ed9t kho\u1ea3ng th\u1eddi gian nh\u1ea5t \u0111\u1ecbnh. Th\u00eam n\u1eefa, nh\u1edd v\u00e0o c\u01a1 ch\u1ebf Data Availability Sampling (DAS), b\u1ea5t k\u1ef3 ai c\u0169ng c\u00f3 th\u1ec3 x\u00e1c minh m\u1ed9t c\u00e1ch ng\u1eafn g\u1ecdn r\u1eb1ng d\u1eef li\u1ec7u \u0111\u00e3 th\u1ef1c s\u1ef1 \u0111\u01b0\u1ee3c c\u00f4ng b\u1ed1 m\u00e0 kh\u00f4ng c\u1ea7n ph\u1ea3i download to\u00e0n b\u1ed9 d\u1eef li\u1ec7u g\u1ed1c.","title":"Private Data Availability (PDA) l\u00e0 g\u00ec?"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/03-VerifiableEncryption-PrivateDA/#cot-loi-cua-pda-verifiable-encryption-ve","text":"Trong m\u00e3 ho\u00e1 truy\u1ec1n th\u1ed1ng, ciphertext (d\u1eef li\u1ec7u \u0111\u00e3 m\u00e3 ho\u00e1) kh\u00f4ng ti\u1ebft l\u1ed9 g\u00ec v\u1ec1 plaintext (d\u1eef li\u1ec7u g\u1ed1c). \u0110i\u1ec1u n\u00e0y \u0111\u1ea3m b\u1ea3o quy\u1ec1n ri\u00eang t\u01b0 tuy\u1ec7t \u0111\u1ed1i( privacy)nh\u01b0ng l\u1ea1i t\u1ea1o ra m\u1ed9t c\u00e1i \u201ctrust bottleneck\u201d l\u00e0 b\u1ea1n ph\u1ea3i ho\u00e0n to\u00e0n tin t\u01b0\u1edfng ng\u01b0\u1eddi gi\u1eef key gi\u1ea3i m\u00e3 s\u1ebd kh\u00f4ng ch\u01a1i x\u1ea5u. Nh\u01b0ng n\u1ebfu m\u00ecnh kh\u00f4ng mu\u1ed1n \u0111\u1eb7t ni\u1ec1m tin m\u00f9 qu\u00e1ng v\u00e0o ng\u01b0\u1eddi c\u1ea7m key th\u00ec sao? C\u00f3 c\u00e1ch n\u00e0o \u0111\u1ec3 chuy\u1ec3n m\u1ed9t ph\u1ea7n ni\u1ec1m tin \u0111\u00f3 sang c\u01a1 ch\u1ebf c\u00f3 th\u1ec3 verify c\u00f4ng khai? VE t\u1ea1o ra kh\u1ea3 n\u0103ng n\u00e0y b\u1eb1ng c\u00e1ch \u00e1p d\u1ee5ng c\u00e1c r\u00e0ng bu\u1ed9c (constraints) l\u00ean: ch\u00ednh plaintext thu\u1eadt to\u00e1n encryption algorithm v\u00e0 encryption key Nh\u1edd \u0111\u00f3, ai c\u0169ng c\u00f3 th\u1ec3 x\u00e1c minh r\u1eb1ng d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c m\u00e3 ho\u00e1 tu\u00e2n th\u1ee7 m\u1ed9t s\u1ed1 \u0111i\u1ec1u ki\u1ec7n c\u1ee5 th\u1ec3 m\u00e0 kh\u00f4ng c\u1ea7n bi\u1ebft d\u1eef li\u1ec7u \u0111\u00f3 l\u00e0 g\u00ec. Khi k\u1ebft h\u1ee3p v\u1edbi Verifiable Encryption (VE) t\u1ee9c l\u00e0 k\u1ef9 thu\u1eadt m\u00e3 ho\u00e1 cho ph\u00e9p ch\u1ee9ng minh nh\u1eefng \u0111i\u1ec1u \u0111\u00fang/sai li\u00ean quan t\u1edbi d\u1eef li\u1ec7u m\u00e3 ho\u00e1 m\u00e0 kh\u00f4ng c\u1ea7n gi\u1ea3i m\u00e3. Ch\u00fang ta s\u1ebd v\u1eabn gi\u1eefa \u0111\u01b0\u1ee3c b\u00ed m\u1eadt m\u00e0 v\u1eabn ch\u1ee9ng minh t\u00ednh h\u1ee3p l\u1ec7. Thay v\u00ec ch\u1ec9 m\u00e3 ho\u00e1 \u0111\u01a1n thu\u1ea7n, VE cho ph\u00e9p b\u1ea1n \u201ccam k\u1ebft\u201d r\u1eb1ng ciphertext \u0111ang ch\u1ee9a m\u1ed9t n\u1ed9i dung th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n n\u00e0o \u0111\u00f3 \u2014 v\u00ed d\u1ee5 nh\u01b0 kh\u1edbp v\u1edbi m\u1ed9t hash c\u1ee5 th\u1ec3, ho\u1eb7c ch\u1ee9a m\u1ed9t gi\u00e1 tr\u1ecb n\u1eb1m trong t\u1eadp gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c ch\u1ea5p nh\u1eadn \u2014 v\u00e0 t\u1ea5t c\u1ea3 \u0111i\u1ec1u \u0111\u00f3 \u0111\u01b0\u1ee3c ch\u1ee9ng minh qua m\u1ed9t b\u1eb1ng ch\u1ee9ng kh\u00f4ng ti\u1ebft l\u1ed9 g\u00ec v\u1ec1 n\u1ed9i dung th\u1ef1c t\u1ebf b\u00ean trong. B\u1eb1ng ch\u1ee9ng n\u00e0y \u0111\u01b0\u1ee3c sinh b\u1edfi zkVM v\u00e0 ai c\u0169ng c\u00f3 th\u1ec3 verify m\u00e0 kh\u00f4ng c\u1ea7n gi\u1ea3i m\u00e3 d\u1eef li\u1ec7u","title":"C\u1ed1t l\u00f5i c\u1ee7a PDA: Verifiable Encryption (VE)"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/03-VerifiableEncryption-PrivateDA/#kien-truc-pda-proxy","text":"\u0110\u1ec3 tri\u1ec3n khai nhanh ch\u00f3ng PDA, Celestia Labs x\u00e2y d\u1ef1ng m\u1ed9t proxy middleware cho c\u00e1c \u1ee9ng d\u1ee5ng: L\u00e0 c\u1ea7u n\u1ed1i gi\u1eefa app c\u1ee7a b\u1ea1n v\u00e0 Celestia node T\u1ef1 \u0111\u1ed9ng m\u00e3 ho\u00e1 d\u1eef li\u1ec7u + sinh b\u1eb1ng ch\u1ee9ng zk khi upload T\u1ef1 \u0111\u1ed9ng gi\u1ea3i m\u00e3 khi truy xu\u1ea5t (n\u1ebfu c\u00f3 kho\u00e1) S\u1eed d\u1ee5ng zkVM prover network (hi\u1ec7n t\u1ea1i l\u00e0 Succinct) \u0111\u1ec3 x\u1eed l\u00fd c\u00e1c b\u1eb1ng ch\u1ee9ng VE Dev ch\u1ec9 c\u1ea7n g\u1ecdi proxy thay v\u00ec node Celestia tr\u1ef1c ti\u1ebfp v\u00ec t\u1ea5t c\u1ea3 quy tr\u00ecnh m\u00e3 ho\u00e1, sinh ch\u1ee9ng c\u1ee9, upload \u0111\u01b0\u1ee3c x\u1eed l\u00fd \u1edf backend Ti\u00eau ch\u00ed Encryption th\u00f4ng th\u01b0\u1eddng Verifiable Encryption (VE) M\u1ee5c \u0111\u00edch ch\u00ednh B\u1ea3o v\u1ec7 n\u1ed9i dung kh\u1ecfi ng\u01b0\u1eddi ngo\u00e0i B\u1ea3o v\u1ec7 n\u1ed9i dung v\u00e0 ch\u1ee9ng minh thu\u1ed9c t\u00ednh d\u1eef li\u1ec7u Ai c\u00f3 th\u1ec3 x\u00e1c minh Ch\u1ec9 ng\u01b0\u1eddi c\u00f3 kh\u00f3a B\u1ea5t k\u1ef3 ai (d\u1ef1a tr\u00ean b\u1eb1ng ch\u1ee9ng zk) Ch\u1ee9ng minh n\u1ed9i dung \u0111\u00fang \u274c Kh\u00f4ng th\u1ec3 \u2705 C\u00f3 th\u1ec3 ch\u1ee9ng minh thu\u1ed9c t\u00ednh c\u1ee5 th\u1ec3 c\u1ee7a d\u1eef li\u1ec7u L\u1ed9 th\u00f4ng tin d\u1eef li\u1ec7u g\u1ed1c Kh\u00f4ng (n\u1ebfu b\u1ea3o m\u1eadt t\u1ed1t) Kh\u00f4ng (b\u1eb1ng zero-knowledge proof) Ph\u00f9 h\u1ee3p v\u1edbi use case n\u00e0o L\u01b0u tr\u1eef ri\u00eang t\u01b0, kh\u00f4ng c\u1ea7n ch\u1ee9ng minh DEX, data marketplace, zk-identity, whistleblowing... Y\u00eau c\u1ea7u t\u00ednh to\u00e1n zk proof \u274c Kh\u00f4ng \u2705 C\u00f3, c\u1ea7n zkVM ho\u1eb7c prover system Tri\u1ec3n khai tr\u00ean blockchain D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c m\u00e3 ho\u00e1 v\u00e0 \u0111\u0103ng onchain Ciphertext + zk proof \u0111\u01b0\u1ee3c \u0111\u0103ng onchain","title":"Ki\u1ebfn tr\u00fac PDA Proxy"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/03-VerifiableEncryption-PrivateDA/#cac-use-cases","text":"V\u00ed d\u1ee5 \u0111\u1ea7u ti\u00ean l\u00e0 Data Marketplace M\u1ed9t ng\u01b0\u1eddi b\u00e1n mu\u1ed1n b\u00e1n m\u1ed9t b\u1ee9c \u1ea3nh c\u00f3 \u0111\u1ed9 ph\u00e2n gi\u1ea3i cao. Tr\u01b0\u1edbc khi ng\u01b0\u1eddi mua thanh to\u00e1n, h\u1ecd c\u1ea7n bi\u1ebft ch\u1eafc ch\u1eafn r\u1eb1ng file \u0111\u01b0\u1ee3c m\u00e3 ho\u00e1 l\u00e0 \u0111\u00fang \u1ea3nh \u0111\u00f3, nh\u01b0ng kh\u00f4ng mu\u1ed1n ti\u1ebft l\u1ed9 \u1ea3nh. V\u1eady th\u00ec ch\u00fang ta c\u00f3 VE s\u1ebd gi\u00fap cam k\u1ebft r\u1eb1ng ciphertext ch\u1ee9a \u0111\u00fang file v\u1edbi hash H(x) m\u00e0 kh\u00f4ng gi\u1ea3i m\u00e3. Ho\u1eb7c v\u00ed d\u1ee5 nh\u01b0 Decentralized Uber Ng\u01b0\u1eddi d\u00f9ng c\u1ea7n g\u1ecdi xe m\u00e0 kh\u00f4ng ti\u1ebft l\u1ed9 v\u1ecb tr\u00ed c\u00f4ng khai. PDA proxy s\u1ebd m\u00e3 ho\u00e1 th\u00f4ng tin v\u1ecb tr\u00ed + \u0111\u00ednh k\u00e8m fingerprint thanh to\u00e1n v\u00f9 t\u00e0i x\u1ebf c\u00f3 th\u1ec3 x\u00e1c minh & nh\u1eadn l\u1ec7nh ride n\u1ebfu \u0111\u1ed3ng \u00fd. v\u00ed d\u1ee5 kh\u00e1c n\u1eefa l\u00e0 Perps DEX & Emergency Recovery: Celestia Labs c\u0169ng \u0111ang l\u00e0m vi\u1ec7c c\u00f9ng m\u1ed9t DEX c\u00f3 nhu c\u1ea7u \u0111\u1eb7c bi\u1ec7t: l\u01b0u th\u00f4ng tin ng\u01b0\u1eddi d\u00f9ng m\u1ed9t c\u00e1ch ri\u00eang t\u01b0, nh\u01b0ng ph\u1ea3i c\u00f3 kh\u1ea3 n\u0103ng kh\u00f4i ph\u1ee5c trong t\u00ecnh hu\u1ed1ng kh\u1ea9n c\u1ea5p. To\u00e0n b\u1ed9 th\u00f4ng tin ng\u01b0\u1eddi d\u00f9ng \u0111\u01b0\u1ee3c m\u00e3 ho\u00e1 v\u00e0 l\u01b0u l\u00ean Celestia th\u00f4ng qua PDA Proxy. Trong tr\u01b0\u1eddng h\u1ee3p b\u00ecnh th\u01b0\u1eddng, kh\u00f4ng ai c\u00f3 th\u1ec3 \u0111\u1ecdc \u0111\u01b0\u1ee3c d\u1eef li\u1ec7u. Nh\u01b0ng n\u1ebfu x\u1ea3y ra s\u1ef1 c\u1ed1 h\u1ec7 th\u1ed1ng, kh\u00f3a gi\u1ea3i m\u00e3 s\u1ebd \u0111\u01b0\u1ee3c c\u00f4ng khai th\u00f4ng qua m\u1ed9t c\u01a1 ch\u1ebf emergency fallback (c\u00f3 th\u1ec3 l\u00e0 MPC, threshold key release ho\u1eb7c multisig recovery), gi\u00fap ng\u01b0\u1eddi d\u00f9ng t\u1ef1 r\u00fat ti\u1ec1n kh\u1ecfi giao th\u1ee9c m\u00e0 kh\u00f4ng ph\u1ee5 thu\u1ed9c v\u00e0o team d\u1ef1 \u00e1n. \u0110\u1ebfn \u0111\u00e2y b\u1ea1n s\u1ebd \u0111\u1eb7t c\u00e2u h\u1ecfi PDA Proxy c\u00f3 th\u1ec3 d\u00f9ng cho nh\u1eefng ai? B\u1ea5t k\u1ef3 ai \u0111ang x\u00e2y d\u1ef1ng \u1ee9ng d\u1ee5ng c\u00f3 t\u00ednh ch\u1ea5t nh\u1ea1y c\u1ea3m v\u1ec1 d\u1eef li\u1ec7u \u0111\u1ec1u c\u00f3 th\u1ec3 t\u00edch h\u1ee3p PDA Proxy t\u1eeb DEX, encrypted off-chain storage, messaging app, \u0111\u1ebfn data DAO hay decentralized Uber. M\u1ed9t s\u1ed1 use case r\u1ea5t ph\u00f9 h\u1ee3p nh\u01b0: Tin nh\u1eafn \u0111\u01b0\u1ee3c \u0111\u1ea3m b\u1ea3o \u0111\u00e3 g\u1eedi, nh\u01b0ng kh\u00f4ng ai \u0111\u1ecdc \u0111\u01b0\u1ee3c ngo\u00e0i ng\u01b0\u1eddi nh\u1eadn Trao \u0111\u1ed5i d\u1eef li\u1ec7u gi\u1eefa Web2 v\u1edbi Web3 qua Celestia l\u00e0m \u201cinvisible pipe\u201d G\u1eedi location t\u1ea1m th\u1eddi trong decentralized ride-sharing m\u00e0 v\u1eabn gi\u1eef b\u00ed m\u1eadt M\u1ed9t v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh l\u00e0 d\u1ef1 \u00e1n Stock0 t\u1eeb hackathon h\u1ecd \u0111\u00e3 t\u1ea1o ra m\u1ed9t media marketplace n\u01a1i d\u1eef li\u1ec7u media \u0111\u01b0\u1ee3c m\u00e3 ho\u00e1, ng\u01b0\u1eddi mua ch\u1ec9 nh\u1eadn \u0111\u01b0\u1ee3c quy\u1ec1n gi\u1ea3i m\u00e3 khi ho\u00e0n t\u1ea5t deal t\u1ea5t c\u1ea3 \u0111\u1ec1u trustless. flowchart LR Data[\"Data to be Sold\"] --> zkVM_Algo[\"zkVM(transform media)\"] zkVM_Algo -- \"proven data transform w/ VE anchor\" --> Contract[\"Marketplace on <dApp chain>\"] Data -- \"VE data\" --> Celestia[\"Celestia\"] Celestia -- \"header\" --> Blobstream[\"Blobstream on <dApp chain>\"] Blobstream <-- \"verify VE anchor and DA\" --> Contract","title":"C\u00e1c use cases"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/03-VerifiableEncryption-PrivateDA/#example-architecture-how-ve-pda-work-together","text":"\u1ede ki\u1ebfn tr\u00fac m\u1eabu n\u00e0y, the anchor \u0111\u00f3ng vai tr\u00f2 trung t\u00e2m m\u1ed9t c\u1ea7u n\u1ed1i (bridge) gi\u1eefa b\u1ea5t k\u1ef3 protocol n\u00e0o v\u00e0 m\u1ed9t ch\u1ee9ng minh (proof) r\u1eb1ng d\u1eef li\u1ec7u ri\u00eang t\u01b0 n\u00e0o \u0111\u00f3 \u0111\u00e3 \u0111\u01b0\u1ee3c c\u00f4ng khai m\u1ed9t c\u00e1ch c\u00f3 th\u1ec3 ki\u1ec3m ch\u1ee9ng \u0111\u01b0\u1ee3c.","title":"Example Architecture: How VE + PDA Work Together"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/03-VerifiableEncryption-PrivateDA/#example-dapps","text":"Private rollups/apps with (partial) obfuscation. Wrap your fav kit: Rollkit, OP, Nitro, \u2026 Verifiable Backups recover from \"disaster\":","title":"Example dApps"},{"location":"collections/Modular_blockchain/Celestia/Key-learning-notes-for-camp-mamo/03-VerifiableEncryption-PrivateDA/#reference","text":"Github: https://github.com/celestiaorg/pda-proxy Private Data Availability on Celestia docs: Slide Verifiable Encryption event: https://hackmd.io/@Nuke/SyHBUsdWlg#/","title":"Reference"},{"location":"collections/security%20researcher/images/Best%20resources%20to%20level%20up%20your%20auditing%20skills/","text":"Best resources to level up your auditing skills Link: https://github.com/tpiliposian/not-awesome-web3-security-roadmap?tab=readme-ov-file","title":"Best resources to level up your auditing skills"},{"location":"collections/security%20researcher/images/Best%20resources%20to%20level%20up%20your%20auditing%20skills/#best-resources-to-level-up-your-auditing-skills","text":"Link: https://github.com/tpiliposian/not-awesome-web3-security-roadmap?tab=readme-ov-file","title":"Best resources to level up your auditing skills"}]}
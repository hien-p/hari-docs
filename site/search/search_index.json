{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Harry's Home Honestly, it is always so hard for me to believe that my dream would come true someday. Challenges do bring growth, which I have experienced quite often recently. Thats the reason why I started this whole blogging thing, cause I want to share the lessons I learned from my journey with you. I'm fully aware that this will make it harder for my content to reach people, especially in these day. Especially when I'm just a 23-year-old average dude with no big achievements to his name yet. But there is something about reading that has always fascinated me. You can watch a TikTok reel or listening to a podcast while driving or cooking. You can pay half of your attention to these things and still get something out of it. But you can not be half-ass about reading. Words are boring and harder to follow, so if you want to get something out of it, you have to fully concentrate. You have to use your imagination and be very mindful about it. Thats why I chose this format. I want my readers to participate with me, to actively think while reading my stuffs. And I want to be surrounded by the type of people who enjoy that activity. So if you are reading this, you are exactly who I want to be here. Thank you a lot, and I wish yor with lots of growth and good challenges. We will see each other soon in 2025 \ud83d\ude4f\ud83d\udc9a Deciding what to write next???","title":"Welcome to Harry's Home"},{"location":"#welcome-to-harrys-home","text":"Honestly, it is always so hard for me to believe that my dream would come true someday. Challenges do bring growth, which I have experienced quite often recently. Thats the reason why I started this whole blogging thing, cause I want to share the lessons I learned from my journey with you. I'm fully aware that this will make it harder for my content to reach people, especially in these day. Especially when I'm just a 23-year-old average dude with no big achievements to his name yet. But there is something about reading that has always fascinated me. You can watch a TikTok reel or listening to a podcast while driving or cooking. You can pay half of your attention to these things and still get something out of it. But you can not be half-ass about reading. Words are boring and harder to follow, so if you want to get something out of it, you have to fully concentrate. You have to use your imagination and be very mindful about it. Thats why I chose this format. I want my readers to participate with me, to actively think while reading my stuffs. And I want to be surrounded by the type of people who enjoy that activity. So if you are reading this, you are exactly who I want to be here. Thank you a lot, and I wish yor with lots of growth and good challenges. We will see each other soon in 2025 \ud83d\ude4f\ud83d\udc9a Deciding what to write next???","title":"Welcome to Harry's Home"},{"location":"First%20Movers/Move%20101/move_101_module_1/","text":"title: Move 101 \u2013 Bu\u1ed5i 1: Gi\u1edbi thi\u1ec7u Sui Blockchain v\u00e0 Move summary: Move 101 \u2013 Bu\u1ed5i 1: Gi\u1edbi thi\u1ec7u Sui Blockchain v\u00e0 Move - Harry Phan date: 2025-07-12 some_url: Move 101 \u2013 Bu\u1ed5i 1: Gi\u1edbi thi\u1ec7u Sui Blockchain v\u00e0 Move Link Luma: https://lu.ma/1ybrbfcf B\u00e0i vi\u1ebft n\u00e0y \u0111\u1ec3 recap l\u1ea1i event h\u00f4m Saturday, July 12 . N\u1ebfu Blockchain l\u00e0 m\u1ed9t c\u0103n nh\u00e0 ? H\u00ecnh dung blockchain nh\u01b0 m\u1ed9t c\u0103n nh\u00e0. Trong nh\u00e0 \u0111\u00f3 c\u00f3 nhi\u1ec1u ph\u00f2ng: A, B, C, D\u2026 nh\u01b0ng v\u1ea5n \u0111\u1ec1 l\u00e0 m\u1ed7i l\u1ea7n ch\u1ec9 \u0111\u01b0\u1ee3c 1 ng\u01b0\u1eddi b\u01b0\u1edbc v\u00f4 nh\u00e0. Ng\u01b0\u1eddi \u0111\u00f3 v\u00f4 r\u1ed3i th\u00ec ng\u01b0\u1eddi kh\u00e1c ph\u1ea3i x\u1ebfp h\u00e0ng ch\u1edd \u0111\u1ec3 x\u1eed l\u00fd tu\u1ea7n t\u1ef1 t\u1eebng ng\u01b0\u1eddi m\u1ed9t. \u0110\u00f3 l\u00e0 ki\u1ec3u sequential processing c\u1ee7a blockchain truy\u1ec1n th\u1ed1ng. M\u1ecdi ng\u01b0\u1eddi th\u1ea5y r\u00f5 v\u1ea5n \u0111\u1ec1 r\u1ed3i \u0111\u00fang kh\u00f4ng? V\u1eady gi\u1ea3 s\u1eed t\u1ea1i sao kh\u00f4ng chia c\u0103n nh\u00e0 ra th\u00e0nh nh\u1eefng ph\u00f2ng \u0111\u1ed9c l\u1eadp, \u0111\u1ec3 ng\u01b0\u1eddi kh\u00e1c c\u00f3 th\u1ec3 v\u00e0o c\u00e1c ph\u00f2ng song song (parallel) m\u00e0 kh\u00f4ng \u0111\u1ee5ng nhau? Thay v\u00ec coi c\u0103n nh\u00e0 l\u00e0 m\u1ed9t kh\u1ed1i th\u1ed1ng nh\u1ea5t, m\u00ecnh chia ra th\u00e0nh t\u1eebng ph\u00f2ng \u0111\u1ed9c l\u1eadp th\u00ec m\u1ed7i ph\u00f2ng l\u00e0 m\u1ed9t object ri\u00eang bi\u1ec7t. B\u1ea1n c\u1ea7n v\u00e0o ph\u00f2ng A, m\u00ecnh c\u1ea7n v\u00e0o ph\u00f2ng D \u2192 t\u1ee5i m\u00ecnh c\u00f9ng v\u00e0o x\u1eed l\u00fd song song \u0110\u00e2y ch\u00ednh l\u00e0 core idea c\u1ee7a Sui: Parallel Execution via Object-centric State Management. V\u1eady Sui l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u \u0111\u00f3 nh\u01b0 th\u1ebf n\u00e0o? Sui scale theo chi\u1ec1u ngang (horizontal) \u0111\u1ec3 \u0111\u00e1p \u1ee9ng nhu c\u1ea7u cao c\u1ee7a m\u1ea1ng. Khi c\u1ea7n, validators c\u00f3 th\u1ec3 th\u00eam compute power \u0111\u1ec3 x\u1eed l\u00fd nhi\u1ec1u giao d\u1ecbch h\u01a1n. Ngo\u00e0i ra th\u00ec Gas fee tr\u00ean Sui v\u1eabn th\u1ea5p v\u00e0 \u1ed5n \u0111\u1ecbnh d\u00f9 traffic t\u0103ng cao, nh\u1edd v\u00e0o tokenomics thi\u1ebft k\u1ebf h\u1ee3p l\u00fd. Do Validators \u0111\u01b0\u1ee3c incentivized b\u1eb1ng vi\u1ec7c x\u1eed l\u00fd nhi\u1ec1u tx h\u01a1n ch\u1ee9 kh\u00f4ng ph\u1ea3i t\u0103ng gas fee. B\u00ean c\u1ea1nh \u0111\u00f3 Kh\u1ea3 n\u0103ng scale c\u1ee7a Sui kh\u00f4ng ch\u1ec9 d\u1eebng \u1edf transaction processing. Ph\u1ea7n storage c\u0169ng r\u1ebb v\u00e0 c\u00f3 th\u1ec3 scale theo chi\u1ec1u ngang(horizontally scalable) . N\u00ean devs c\u00f3 th\u1ec3 t\u1ea1o ra c\u00e1c t\u00e0i s\u1ea3n (object) ph\u1ee9c t\u1ea1p, nhi\u1ec1u thu\u1ed9c t\u00ednh tr\u00ean on chain.","title":"Move 101 module 1"},{"location":"First%20Movers/Move%20101/move_101_module_1/#move-101-buoi-1-gioi-thieu-sui-blockchain-va-move","text":"Link Luma: https://lu.ma/1ybrbfcf B\u00e0i vi\u1ebft n\u00e0y \u0111\u1ec3 recap l\u1ea1i event h\u00f4m Saturday, July 12 . N\u1ebfu Blockchain l\u00e0 m\u1ed9t c\u0103n nh\u00e0 ? H\u00ecnh dung blockchain nh\u01b0 m\u1ed9t c\u0103n nh\u00e0. Trong nh\u00e0 \u0111\u00f3 c\u00f3 nhi\u1ec1u ph\u00f2ng: A, B, C, D\u2026 nh\u01b0ng v\u1ea5n \u0111\u1ec1 l\u00e0 m\u1ed7i l\u1ea7n ch\u1ec9 \u0111\u01b0\u1ee3c 1 ng\u01b0\u1eddi b\u01b0\u1edbc v\u00f4 nh\u00e0. Ng\u01b0\u1eddi \u0111\u00f3 v\u00f4 r\u1ed3i th\u00ec ng\u01b0\u1eddi kh\u00e1c ph\u1ea3i x\u1ebfp h\u00e0ng ch\u1edd \u0111\u1ec3 x\u1eed l\u00fd tu\u1ea7n t\u1ef1 t\u1eebng ng\u01b0\u1eddi m\u1ed9t. \u0110\u00f3 l\u00e0 ki\u1ec3u sequential processing c\u1ee7a blockchain truy\u1ec1n th\u1ed1ng. M\u1ecdi ng\u01b0\u1eddi th\u1ea5y r\u00f5 v\u1ea5n \u0111\u1ec1 r\u1ed3i \u0111\u00fang kh\u00f4ng? V\u1eady gi\u1ea3 s\u1eed t\u1ea1i sao kh\u00f4ng chia c\u0103n nh\u00e0 ra th\u00e0nh nh\u1eefng ph\u00f2ng \u0111\u1ed9c l\u1eadp, \u0111\u1ec3 ng\u01b0\u1eddi kh\u00e1c c\u00f3 th\u1ec3 v\u00e0o c\u00e1c ph\u00f2ng song song (parallel) m\u00e0 kh\u00f4ng \u0111\u1ee5ng nhau? Thay v\u00ec coi c\u0103n nh\u00e0 l\u00e0 m\u1ed9t kh\u1ed1i th\u1ed1ng nh\u1ea5t, m\u00ecnh chia ra th\u00e0nh t\u1eebng ph\u00f2ng \u0111\u1ed9c l\u1eadp th\u00ec m\u1ed7i ph\u00f2ng l\u00e0 m\u1ed9t object ri\u00eang bi\u1ec7t. B\u1ea1n c\u1ea7n v\u00e0o ph\u00f2ng A, m\u00ecnh c\u1ea7n v\u00e0o ph\u00f2ng D \u2192 t\u1ee5i m\u00ecnh c\u00f9ng v\u00e0o x\u1eed l\u00fd song song","title":"Move 101 \u2013 Bu\u1ed5i 1: Gi\u1edbi thi\u1ec7u Sui Blockchain v\u00e0 Move"},{"location":"First%20Movers/Move%20101/move_101_module_1/#ay-chinh-la-core-idea-cua-sui-parallel-execution-via-object-centric-state-management","text":"","title":"\u0110\u00e2y ch\u00ednh l\u00e0 core idea c\u1ee7a Sui: Parallel Execution via Object-centric State Management."},{"location":"First%20Movers/Move%20101/move_101_module_1/#vay-sui-lam-uoc-ieu-o-nhu-the-nao","text":"Sui scale theo chi\u1ec1u ngang (horizontal) \u0111\u1ec3 \u0111\u00e1p \u1ee9ng nhu c\u1ea7u cao c\u1ee7a m\u1ea1ng. Khi c\u1ea7n, validators c\u00f3 th\u1ec3 th\u00eam compute power \u0111\u1ec3 x\u1eed l\u00fd nhi\u1ec1u giao d\u1ecbch h\u01a1n. Ngo\u00e0i ra th\u00ec Gas fee tr\u00ean Sui v\u1eabn th\u1ea5p v\u00e0 \u1ed5n \u0111\u1ecbnh d\u00f9 traffic t\u0103ng cao, nh\u1edd v\u00e0o tokenomics thi\u1ebft k\u1ebf h\u1ee3p l\u00fd. Do Validators \u0111\u01b0\u1ee3c incentivized b\u1eb1ng vi\u1ec7c x\u1eed l\u00fd nhi\u1ec1u tx h\u01a1n ch\u1ee9 kh\u00f4ng ph\u1ea3i t\u0103ng gas fee. B\u00ean c\u1ea1nh \u0111\u00f3 Kh\u1ea3 n\u0103ng scale c\u1ee7a Sui kh\u00f4ng ch\u1ec9 d\u1eebng \u1edf transaction processing. Ph\u1ea7n storage c\u0169ng r\u1ebb v\u00e0 c\u00f3 th\u1ec3 scale theo chi\u1ec1u ngang(horizontally scalable) . N\u00ean devs c\u00f3 th\u1ec3 t\u1ea1o ra c\u00e1c t\u00e0i s\u1ea3n (object) ph\u1ee9c t\u1ea1p, nhi\u1ec1u thu\u1ed9c t\u00ednh tr\u00ean on chain.","title":"V\u1eady Sui l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u \u0111\u00f3 nh\u01b0 th\u1ebf n\u00e0o?"},{"location":"First%20Movers/Move%20101/move_101_module_2/","text":"title: A Deep Dive into the Ethereum Virtual Machine (EVM) - Part 3 Execution Model of the EVM summary: This is a high-level overview of the execution model of the Ethereum Virtual Machine (EVM). It outlines the state(s) of the machine that changes between the exe authors: - Harry Phan date: 2025-07-19 some_url: Workshop move 101 bu\u1ed5i 2 Bu\u1ed5i workshop n\u00e0y m\u00ecnh chia s\u1ebb v\u1edbi m\u1ecdi ng\u01b0\u1eddi v\u1ec1 objects, resources tr\u00ean Sui.","title":"Move 101 module 2"},{"location":"First%20Movers/Move%20101/move_101_module_2/#workshop-move-101-buoi-2","text":"Bu\u1ed5i workshop n\u00e0y m\u00ecnh chia s\u1ebb v\u1edbi m\u1ecdi ng\u01b0\u1eddi v\u1ec1 objects, resources tr\u00ean Sui.","title":"Workshop move 101 bu\u1ed5i 2"},{"location":"First%20Movers/Walrus%20dev/Deploy_walrus/","text":"How to deploy a walrus site? trying to deploy a walrus site? I think you might want to use the site-builder cli for this","title":"How to deploy a walrus site?"},{"location":"First%20Movers/Walrus%20dev/Deploy_walrus/#how-to-deploy-a-walrus-site","text":"trying to deploy a walrus site? I think you might want to use the site-builder cli for this","title":"How to deploy a walrus site?"},{"location":"VBI_Academy/Blockchain_101_course%20/The_Anatomy_of_Web3/","text":"A article on the anatomy of Web3 B\u00e0i vi\u1ebft n\u00e0y vi\u1ebft to\u00e0n c\u1ea3nh v\u1ec1 h\u1ec7 sinh th\u00e1i c\u1ee7a Web3 Blockchain (my POV). Web3 \u0111\u1ebfn nay \u0111\u00e3 ph\u00e1t tri\u1ec3n t\u01b0\u01a1ng \u0111\u1ed1i \u0111\u1ea7y \u0111\u1ee7, h\u1ec7 sinh th\u00e1i c\u0169ng d\u1ea7n \u0111\u1ecbnh h\u00ecnh r\u00f5 r\u00e0ng. N\u1ebfu nh\u00ecn \u1edf g\u00f3c \u0111\u1ed9 ki\u1ebfn tr\u00fac t\u1ed5ng th\u1ec3 hi\u1ec7n t\u1ea1i th\u00ec ta c\u00f3 th\u1ec3 chia th\u00e0nh c\u00e1c layers l\u00e0 blockchain network layer, middleware layer, application layer, v\u00e0 access layer... Trong ph\u1ea7n n\u00e0y s\u1ebd nh\u1eafc \u0111\u1ebfn kh\u00e1 nhi\u1ec1u c\u00e1i t\u00ean d\u1ef1 \u00e1n, nh\u01b0ng v\u00ec dung l\u01b0\u1ee3ng ki\u1ebfn th\u1ee9c m\u00ecnh c\u00f3 h\u1ea1n n\u00ean m\u00ecnh s\u1ebd kh\u00f4ng \u0111i s\u00e2u v\u00e0o t\u1eebng c\u00e1i m\u00e0 ch\u1ec9 overall. 1. Blockchain network layer \u1ede t\u1ea7ng th\u1ea5p nh\u1ea5t trong ki\u1ebfn tr\u00fac Web3 l\u00e0 l\u1edbp m\u1ea1ng l\u01b0\u1edbi blockchain (blockchain network layer) hay c\u00f2n g\u1ecdi l\u00e0 l\u1edbp n\u1ec1n t\u1ea3ng (foundation layer). \u0110\u00e2y ch\u00ednh l\u00e0 \u201cc\u00e1i m\u00f3ng nh\u00e0\u201d c\u1ee7a to\u00e0n b\u1ed9 h\u1ec7 sinh th\u00e1i Web3, n\u01a1i t\u1eadp h\u1ee3p c\u00e1c blockchain kh\u00e1c nhau v\u1eadn h\u00e0nh \u0111\u1ed9c l\u1eadp ho\u1eb7c t\u01b0\u01a1ng t\u00e1c v\u1edbi nhau. Hi\u1ec7n c\u00f3 r\u1ea5t nhi\u1ec1u blockchain n\u1eb1m trong l\u1edbp n\u00e0y, c\u00f3 th\u1ec3 k\u1ec3 \u0111\u1ebfn nh\u01b0: Bitcoin, Ethereum, BNB Chain (BSC), Polygon, Arbitrum, Polkadot, Cosmos, Celestia, Avalanche, Aptos, Sui v\u00e0 c\u00f2n h\u00e0ng t\u00e1 c\u00e1i t\u00ean kh\u00e1c n\u1eefa. Ph\u00e2n t\u1ea7ng ki\u1ebfn tr\u00fac: Layer 0 / Layer 1 / Layer 2 Layer 0 (L0): Layer 0 l\u00e0 l\u1edbp tr\u1eebu t\u01b0\u1ee3ng h\u01a1n, th\u01b0\u1eddng \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 l\u1edbp h\u1ea1 t\u1ea7ng blockchain (infrastructure layer) \u2013 n\u01a1i cung c\u1ea5p c\u00e1c d\u1ecbch v\u1ee5 c\u01a1 b\u1ea3n gi\u00fap nhi\u1ec1u blockchain c\u00f3 th\u1ec3 t\u01b0\u01a1ng t\u00e1c ho\u1eb7c chia s\u1ebb t\u00e0i nguy\u00ean. V\u00ed d\u1ee5: Cosmos, Polkadot, Layer 1 (L1): C\u00e1c Layer 1 c\u0169ng ch\u00ednh l\u00e0 v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh cho \u201ctam gi\u00e1c b\u1ea5t kh\u1ea3 thi\u201d c\u1ee7a blockchain kh\u00f3 \u0111\u1ec3 m\u1ed9t blockchain \u0111\u1ed3ng th\u1eddi \u0111\u1ea3m b\u1ea3o c\u1ea3 3 y\u1ebfu t\u1ed1: m\u1edf r\u1ed9ng (scalability), b\u1ea3o m\u1eadt (security), v\u00e0 phi t\u1eadp trung (decentralization). Layer 2 (L2): Layer 2 ra \u0111\u1eddi \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n \u201cTPS th\u1ea5p\u201d c\u1ee7a Layer 1, nh\u1ea5t l\u00e0 Ethereum. Layer 2 l\u00e0 c\u00e1c chu\u1ed7i ph\u1ee5 (subchain) n\u1eb1m ph\u00eda tr\u00ean Layer 1, c\u00f3 nhi\u1ec7m v\u1ee5 x\u1eed l\u00fd giao d\u1ecbch nhanh v\u00e0 r\u1ebb h\u01a1n, sau \u0111\u00f3 g\u1eedi k\u1ebft qu\u1ea3 v\u1ec1 Layer 1 \u0111\u1ec3 l\u01b0u tr\u1eef. Layer 2 gi\u00fap Layer 1 tr\u1edf th\u00e0nh settlement layer (l\u1edbp thanh to\u00e1n), c\u00f2n m\u00ecnh th\u00ec lo ph\u1ea7n execution layer (l\u1edbp th\u1ef1c thi). M\u1ed9t s\u1ed1 Layer 2 n\u1ed5i b\u1eadt c\u1ee7a Ethereum g\u1ed3m: Arbitrum, Optimism, zkSync, StarkNet, Polygon. Bitcoin c\u0169ng c\u00f3 Layer 2 nh\u01b0: Lightning Network , Stacks , RSK , nh\u01b0ng hi\u1ec7n t\u1ea1i v\u1eabn ch\u01b0a ph\u1ed5 bi\u1ebfn b\u1eb1ng Ethereum. M\u00f4i tr\u01b0\u1eddng ch\u1ea1y smart contract S\u1ef1 ph\u00e1t tri\u1ec3n c\u1ee7a Web3 ch\u1ee7 y\u1ebfu nh\u1edd v\u00e0o smart contract, v\u00e0 c\u00e1c smart contract c\u1ea7n c\u00f3 m\u00f4i tr\u01b0\u1eddng \u0111\u1ec3 ch\u1ea1y \u2013 g\u1ecdi l\u00e0 virtual machine (m\u00e1y \u1ea3o). T\u01b0\u01a1ng t\u1ef1 nh\u01b0 Java c\u1ea7n JVM v\u1eady. Sau khi hi\u1ec3u c\u1ea5u tr\u00fac ph\u00e2n t\u1ea7ng, ta ti\u1ebfp t\u1ee5c ph\u00e2n lo\u1ea1i blockchain theo g\u00f3c nh\u00ecn EVM compatibility hay n\u00f3i c\u00e1ch kh\u00e1c, blockchain \u0111\u00f3 c\u00f3 ch\u1ea1y \u0111\u01b0\u1ee3c smart contract vi\u1ebft b\u1eb1ng Solidity v\u00e0 t\u01b0\u01a1ng th\u00edch v\u1edbi m\u00e1y \u1ea3o Ethereum hay kh\u00f4ng. V\u1ec1 c\u01a1 b\u1ea3n, c\u00f3 th\u1ec3 chia th\u00e0nh hai nh\u00f3m: EVM chains v\u00e0 Non-EVM chains . Hi\u1ec7n nay, EVM chains v\u1eabn l\u00e0 d\u00f2ng ch\u1ee7 \u0111\u1ea1o. Nh\u1eefng blockchain n\u00e0y thu h\u00fat l\u01b0\u1ee3ng l\u1edbn DApp v\u00e0 ng\u01b0\u1eddi d\u00f9ng Web3, nh\u1edd v\u00e0o c\u1ed9ng \u0111\u1ed3ng ph\u00e1t tri\u1ec3n r\u1ed9ng v\u00e0 h\u1ec7 sinh th\u00e1i c\u00f4ng c\u1ee5 phong ph\u00fa. M\u1ed9t s\u1ed1 blockchain t\u01b0\u01a1ng th\u00edch v\u1edbi EVM t\u1eeb \u0111\u1ea7u nh\u01b0 BSC, Heco, Arbitrum, Optimism, v.v. M\u1ed9t s\u1ed1 kh\u00e1c th\u00ec ph\u00e1t tri\u1ec3n sau n\u00e0y \u0111\u1ec3 t\u01b0\u01a1ng th\u00edch, v\u00ed d\u1ee5 nh\u01b0 zkSync: phi\u00ean b\u1ea3n 1.0 kh\u00f4ng h\u1ed7 tr\u1ee3 EVM, nh\u01b0ng t\u1eeb 2.0 tr\u1edf \u0111i th\u00ec \u0111\u00e3 embrace EVM ho\u00e0n to\u00e0n. T\u00ednh \u0111\u1ebfn hi\u1ec7n t\u1ea1i, ph\u1ea7n l\u1edbn c\u00e1c blockchain l\u1edbn \u0111\u1ec1u \u0111\u00e3 ho\u1eb7c \u0111ang h\u1ed7 tr\u1ee3 EVM. Tuy nhi\u00ean, v\u1eabn c\u00f2n m\u1ed9t s\u1ed1 chu\u1ed7i n\u1ed5i b\u1eadt n\u1eb1m ngo\u00e0i h\u1ec7 EVM, nh\u01b0 Solana, Terra, NEAR, Aptos, v\u00e0 Sui. C\u00e1c blockchain n\u00e0y th\u01b0\u1eddng ch\u1ecdn h\u01b0\u1edbng \u0111i kh\u00e1c bi\u1ec7t, c\u1ea3 v\u1ec1 ki\u1ebfn tr\u00fac l\u1eabn ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh smart contract: n\u1ebfu EVM chains d\u00f9ng Solidity, th\u00ec c\u00e1c Non-EVM chains th\u01b0\u1eddng d\u00f9ng Rust ho\u1eb7c Move T\u00f3m l\u1ea1i * EVM chains : L\u00e0 nh\u1eefng blockchain t\u01b0\u01a1ng th\u00edch v\u1edbi Ethereum Virtual Machine, c\u00f3 th\u1ec3 ch\u1ea1y c\u00e1c smart contract \u0111\u01b0\u1ee3c vi\u1ebft b\u1eb1ng Solidity. V\u00ed d\u1ee5: Ethereum, BNB Chain, Polygon, Avalanche C-Chain\u2026 * Non-EVM chains : Kh\u00f4ng t\u01b0\u01a1ng th\u00edch v\u1edbi EVM, s\u1eed d\u1ee5ng m\u00e1y \u1ea3o ri\u00eang v\u00e0 th\u01b0\u1eddng c\u00f3 ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh ri\u00eang, nh\u01b0: Solana (Rust/C/C++), Aptos & Sui (Move), Near protocol/ Cosmos d\u00f9ng rust, Cardano d\u00f9ng Haskell/Plutus.. C\u00e1c vai tr\u00f2 trong to\u00e0n h\u1ec7 sinh th\u00e1i nh\u01b0 T\u00ednh to\u00e1n hay L\u01b0u tr\u1eef Ta c\u0169ng c\u00f3 th\u1ec3 chia blockchain theo m\u1ee5c ti\u00eau s\u1eed d\u1ee5ng: * Compute Chains: T\u1eadp trung v\u00e0o x\u1eed l\u00fd logic v\u00e0 ch\u1ea1y smart contract. * Storage Chains: T\u1eadp trung v\u00e0o l\u01b0u tr\u1eef d\u1eef li\u1ec7u phi t\u1eadp trung \u2013 v\u00ed d\u1ee5: Filecoin, Arweave, Walrus.. Cross-chain bridges M\u1edf r\u1ed9ng h\u01a1n l\u00e0 c\u00e1c giao th\u1ee9c giao ti\u1ebfp gi\u1eefa nhi\u1ec1u blockchain. Kh\u00e1 kh\u00f3 \u0111\u1ec3 th\u1ed1ng k\u00ea ra s\u1ed1 l\u01b0\u1ee3ng bao nhi\u00eau cross-chain \u0111\u01b0\u1ee3c tri\u1ec3n khai nh\u01b0ng ta c\u00f3 nh\u1eefng t\u00ean d\u1eabn \u0111\u1ea7u cho ph\u00e9p chuy\u1ec3n t\u00e0i s\u1ea3n gi\u1eefa layer 2 v\u00e0 Ethereum m\u1ed9t c\u00e1ch m\u01b0\u1ee3c m\u00e0 nh\u01b0 Polygon , Arbitrum v\u00e0 Optimism . X\u1ebfp sau l\u00e0 Multichain (tr\u01b0\u1edbc \u0111\u00e2y l\u00e0 Anyswap) - tuy nhi\u00ean, tr\u1ea3i qua kho\u1ea3ng th\u1eddi gian kh\u1eafc nghi\u1ec7t c\u1ee7a th\u1ecb tr\u01b0\u1eddng, c\u00e1i t\u00ean Multichain \u0111\u00e3 d\u1ea7n phai m\u1edd trong tr\u00ed nh\u1edb c\u1ee7a nhi\u1ec1u ng\u01b0\u1eddi. T\u1ea1m th\u1eddi, \u0111\u00f3 l\u00e0 b\u1ee9c tranh t\u1ed5ng quan v\u1ec1 c\u00e1c \u201cth\u00e0nh vi\u00ean\u201d \u0111ang t\u1ea1o n\u00ean l\u1edbp m\u1ea1ng l\u01b0\u1edbi c\u1ee7a blockchain. T\u1ea5t nhi\u00ean, danh s\u00e1ch n\u00e0y s\u1ebd c\u00f2n ti\u1ebfp t\u1ee5c thay \u0111\u1ed5i s\u1ebd c\u00f3 nh\u1eefng c\u00e1i t\u00ean m\u1edbi gia nh\u1eadp, v\u00e0 c\u0169ng s\u1ebd c\u00f3 nh\u1eefng h\u1ec7 sinh th\u00e1i t\u1eebng r\u1ea7m r\u1ed9 r\u1ed3i d\u1ea7n b\u1ecb l\u00e3ng qu\u00ean \u1edf m\u1ed9t g\u00f3c c\u1ee7a l\u1ecbch s\u1eed Web3. 2. Middleware layer Ngay ph\u00eda tr\u00ean l\u1edbp m\u1ea1ng blockchain, m\u00ecnh g\u1ecdi \u0111\u00e2y l\u00e0 \"middleware layer\" chuy\u00ean cung c\u1ea5p c\u00e1c d\u1ecbch v\u1ee5 v\u00e0 ch\u1ee9c n\u0103ng n\u1ec1n t\u1ea3ng cho c\u00e1c \u1ee9ng d\u1ee5ng Security audits, oracles, index query services, API services, data analysis, data storage, basic financial services, digital identities, DAO governance.. C\u00e1c th\u00e0nh ph\u1ea7n trong l\u1edbp middleware n\u00e0y c\u00f3 th\u1ec3 l\u00e0: On-chain protocol (ch\u1ea1y tr\u1ef1c ti\u1ebfp tr\u00ean blockchain), Off-chain platform (ch\u1ea1y ngo\u00e0i blockchain), Ho\u1eb7c c\u00e1c t\u1ed5 ch\u1ee9c centralized enterprise. Tr\u01b0\u1edbc ti\u00ean l\u00e0 v\u1ec1 ki\u1ec3m to\u00e1n b\u1ea3o m\u1eadt ( Security Auditing ). \u0110\u00e2y l\u00e0 m\u1ed9t lo\u1ea1i middleware c\u1ed1t l\u00f5i. V\u00ec ph\u1ea7n l\u1edbn c\u00e1c blockchain v\u00e0 \u1ee9ng d\u1ee5ng Web3 \u0111\u1ec1u m\u00e3 ngu\u1ed3n m\u1edf (open-source), v\u00e0 nhi\u1ec1u \u1ee9ng d\u1ee5ng li\u00ean quan tr\u1ef1c ti\u1ebfp t\u1edbi t\u00e0i ch\u00ednh, n\u00ean v\u1ea5n \u0111\u1ec1 b\u1ea3o m\u1eadt tr\u1edf th\u00e0nh \u01b0u ti\u00ean h\u00e0ng \u0111\u1ea7u, v\u00e0 ki\u1ec3m to\u00e1n b\u1ea3o m\u1eadt \u0111\u01b0\u01a1ng nhi\u00ean tr\u1edf th\u00e0nh m\u1ed9t nhu c\u1ea7u b\u1eaft bu\u1ed9c. C\u00e1c c\u00f4ng ty n\u1ed5i ti\u1ebfng trong l\u0129nh v\u1ef1c n\u00e0y g\u1ed3m: CertiK , OpenZeppelin , ConsenSys , Hacken , Quantstamp ; \u1edf Trung Qu\u1ed1c c\u00f3 SlowMist , ChainSec , v\u00e0 Paidun . Ngo\u00e0i ra c\u00f2n c\u00f3 nhi\u1ec1u c\u00f4ng ty/team nhi\u1ec1u h\u01a1n th\u1ebf n\u1eefa... B\u00ean c\u1ea1nh \u0111\u00f3, kh\u00f4ng th\u1ec3 kh\u00f4ng k\u1ec3 t\u1edbi c\u00e1c Bug Bounty platform nh\u01b0 Immunefi , Hacker proof ... Ti\u1ebfp theo l\u00e0 Oracle , th\u00e0nh ph\u1ea7n \u0111\u00f3ng vai tr\u00f2 r\u1ea5t quan tr\u1ecdng trong h\u1ec7 sinh th\u00e1i Web3. Oracle l\u00e0 c\u1ea7u n\u1ed1i gi\u1eefa h\u1ec7 th\u1ed1ng blockchain v\u00e0 ngu\u1ed3n d\u1eef li\u1ec7u b\u00ean ngo\u00e0i, gi\u00fap th\u1ef1c hi\u1ec7n vi\u1ec7c giao ti\u1ebfp d\u1eef li\u1ec7u gi\u1eefa smart contract v\u00e0 th\u1ebf gi\u1edbi th\u1ef1c. V\u00ec b\u1ea3n th\u00e2n m\u1ea1ng l\u01b0\u1edbi blockchain b\u1ecb gi\u1edbi h\u1ea1n b\u1edfi t\u00ednh nh\u1ea5t qu\u00e1n tr\u1ea1ng th\u00e1i ( state consistency ), n\u00ean \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o r\u1eb1ng m\u1ed7i node \u0111\u1ec1u cho ra c\u00f9ng m\u1ed9t k\u1ebft qu\u1ea3 khi nh\u1eadn c\u00f9ng m\u1ed9t input, blockchain \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf nh\u01b0 m\u1ed9t h\u1ec7 th\u1ed1ng \u0111\u00f3ng, ch\u1ec9 c\u00f3 th\u1ec3 l\u1ea5y d\u1eef li\u1ec7u n\u1ed9i b\u1ed9 (on-chain), kh\u00f4ng th\u1ec3 ch\u1ee7 \u0111\u1ed9ng l\u1ea5y d\u1eef li\u1ec7u t\u1eeb b\u00ean ngo\u00e0i (off-chain). Tuy nhi\u00ean, trong nhi\u1ec1u t\u00ecnh hu\u1ed1ng \u1ee9ng d\u1ee5ng, d\u1eef li\u1ec7u b\u00ean ngo\u00e0i l\u00e0 b\u1eaft bu\u1ed9c v\u00e0 ch\u00fang \u0111\u01b0\u1ee3c cung c\u1ea5p th\u00f4ng qua oracle . \u0110\u00e2y c\u0169ng l\u00e0 c\u00e1ch duy nh\u1ea5t \u0111\u1ec3 blockchain c\u00f3 th\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi d\u1eef li\u1ec7u ngo\u00e0i chu\u1ed7i. C\u00e1c lo\u1ea1i oracle hi\u1ec7n nay c\u00f3 th\u1ec3 chia th\u00e0nh: oracle cho DeFi, NFT, SocialFi, oracle cross-chain, oracle b\u1ea3o m\u1eadt ri\u00eang t\u01b0, oracle t\u00edn d\u1ee5ng, v\u00e0 m\u1ea1ng l\u01b0\u1edbi oracle phi t\u1eadp trung. M\u1ed9t s\u1ed1 d\u1ef1 \u00e1n oracle ti\u00eau bi\u1ec3u g\u1ed3m: CreDA, Privy, UMA, Banksea, DOS, NEST, Chainlink, v.v. Trong \u0111\u00f3, Chainlink l\u00e0 d\u1ef1 \u00e1n d\u1eabn \u0111\u1ea7u m\u1ea3ng oracle, \u0111\u01b0\u1ee3c \u0111\u1ecbnh v\u1ecb l\u00e0 m\u1ed9t m\u1ea1ng l\u01b0\u1edbi oracle phi t\u1eadp trung, cung c\u1ea5p nhi\u1ec1u s\u1ea3n ph\u1ea9m nh\u01b0: Data Feeds, VRF, Keepers, Proof of Reserve, CCIP,\u2026 Ti\u1ebfp theo l\u00e0 truy v\u1ea5n d\u1eef li\u1ec7u ( Index Query ), m\u1ed9t middleware quan tr\u1ecdng gi\u00fap gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n truy v\u1ea5n d\u1eef li\u1ec7u on-chain ph\u1ee9c t\u1ea1p. V\u00ed d\u1ee5, n\u1ebfu mu\u1ed1n truy v\u1ea5n t\u1ed5ng kh\u1ed1i l\u01b0\u1ee3ng giao d\u1ecbch tr\u00ean Uniswap trong m\u1ed9t ng\u00e0y c\u1ee5 th\u1ec3, th\u00ec vi\u1ec7c truy v\u1ea5n tr\u1ef1c ti\u1ebfp t\u1eeb blockchain l\u00e0 r\u1ea5t kh\u00f3 kh\u0103n. Do \u0111\u00f3, c\u1ea7n c\u00f3 c\u00e1c d\u1ecbch v\u1ee5 truy v\u1ea5n ch\u1ec9 m\u1ee5c, v\u1edbi nh\u1eefng \u0111\u1ea1i di\u1ec7n ch\u00ednh l\u00e0 The Graph v\u00e0 Covalent. The Graph ho\u1ea1t \u0111\u1ed9ng b\u1eb1ng c\u00e1ch gi\u00e1m s\u00e1t d\u1eef li\u1ec7u on-chain v\u00e0 chuy\u1ec3n h\u00f3a ch\u00fang th\u00e0nh d\u1eef li\u1ec7u t\u00f9y ch\u1ec9nh \u0111\u1ec3 l\u01b0u tr\u1eef v\u00e0 truy v\u1ea5n. Trong khi \u0111\u00f3, Covalent \u0111\u00f3ng g\u00f3i c\u00e1c d\u1eef li\u1ec7u ph\u1ed5 bi\u1ebfn v\u00e0 th\u01b0\u1eddng d\u00f9ng th\u00e0nh c\u00e1c API th\u1ed1ng nh\u1ea5t \u0111\u1ec3 ng\u01b0\u1eddi d\u00f9ng d\u1ec5 truy v\u1ea5n. Khi n\u00f3i \u0111\u1ebfn d\u1ecbch v\u1ee5 API, ngo\u00e0i Covalent, c\u00f2n c\u00f3 nhi\u1ec1u nh\u00e0 cung c\u1ea5p API ph\u1ee5c v\u1ee5 c\u00e1c m\u1ee5c \u0111\u00edch kh\u00e1c nhau, v\u00ed d\u1ee5: * NFTScan: chuy\u00ean cung c\u1ea5p d\u1eef li\u1ec7u API v\u1ec1 NFT, * Infura v\u00e0 Alchemy: cung c\u1ea5p d\u1ecbch v\u1ee5 node cho blockchain. Data analytics c\u0169ng l\u00e0 m\u1ed9t th\u00e0nh ph\u1ea7n middleware li\u00ean quan t\u1edbi d\u1eef li\u1ec7u. B\u1ea1n c\u00f3 th\u1ec3 t\u1eebng nghe nh\u01b0 Dune Analytics , Flipside Crypto , DeBank , Chainalysis . Ti\u1ebfp theo l\u00e0 middleware cung c\u1ea5p c\u00e1c d\u1ecbch v\u1ee5 t\u00e0i ch\u00ednh c\u01a1 b\u1ea3n. C\u00e1c giao th\u1ee9c ti\u00eau bi\u1ec3u g\u1ed3m: Uniswap, Curve, Compound, Aave, v.v. \u2022 Uniswap v\u00e0 Curve l\u00e0 c\u00e1c giao th\u1ee9c giao d\u1ecbch (DEX), \u2022 Compound v\u00e0 Aave l\u00e0 c\u00e1c giao th\u1ee9c cho vay (lending). V\u1ec1 b\u1ea3n ch\u1ea5t, \u0111\u00e2y l\u00e0 c\u00e1c giao th\u1ee9c \u1edf l\u1edbp \u1ee9ng d\u1ee5ng (application layer), nh\u01b0ng v\u00ec ng\u00e0y c\u00e0ng c\u00f3 nhi\u1ec1u \u1ee9ng d\u1ee5ng kh\u00e1c d\u1ef1a v\u00e0o ch\u00fang nh\u01b0 m\u1ed9t th\u00e0nh ph\u1ea7n c\u01a1 b\u1ea3n \u0111\u1ec3 x\u00e2y d\u1ef1ng, n\u00ean ch\u00fang tr\u1edf th\u00e0nh c\u00e1c giao th\u1ee9c d\u00f9ng chung, t\u01b0\u01a1ng t\u1ef1 nh\u01b0 c\u00e1c kh\u1ed1i Lego \u2013 t\u1eeb \u0111\u00f3 \u0111\u1ea3m nh\u1eadn vai tr\u00f2 c\u1ee7a middleware. \u2e3b Tr\u00ean th\u1ef1c t\u1ebf, b\u1ea5t k\u1ef3 th\u00e0nh ph\u1ea7n c\u00f3 th\u1ec3 t\u00e1i s\u1eed d\u1ee5ng (composable) n\u00e0o \u2013 d\u00f9 l\u00e0 giao th\u1ee9c on-chain, d\u1ecbch v\u1ee5 off-chain do th\u1ef1c th\u1ec3 t\u1eadp trung cung c\u1ea5p, ho\u1eb7c t\u1ed5 ch\u1ee9c DAO \u2013 \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ph\u00e2n lo\u1ea1i v\u00e0o \u201cl\u1edbp middleware\u201d, mi\u1ec5n l\u00e0 d\u1ecbch v\u1ee5 m\u00e0 n\u00f3 cung c\u1ea5p \u0111\u01b0\u1ee3c \u0111a s\u1ed1 \u1ee9ng d\u1ee5ng kh\u00e1c c\u1ea7n s\u1eed d\u1ee5ng.","title":"A article on the anatomy of Web3"},{"location":"VBI_Academy/Blockchain_101_course%20/The_Anatomy_of_Web3/#a-article-on-the-anatomy-of-web3","text":"B\u00e0i vi\u1ebft n\u00e0y vi\u1ebft to\u00e0n c\u1ea3nh v\u1ec1 h\u1ec7 sinh th\u00e1i c\u1ee7a Web3 Blockchain (my POV). Web3 \u0111\u1ebfn nay \u0111\u00e3 ph\u00e1t tri\u1ec3n t\u01b0\u01a1ng \u0111\u1ed1i \u0111\u1ea7y \u0111\u1ee7, h\u1ec7 sinh th\u00e1i c\u0169ng d\u1ea7n \u0111\u1ecbnh h\u00ecnh r\u00f5 r\u00e0ng. N\u1ebfu nh\u00ecn \u1edf g\u00f3c \u0111\u1ed9 ki\u1ebfn tr\u00fac t\u1ed5ng th\u1ec3 hi\u1ec7n t\u1ea1i th\u00ec ta c\u00f3 th\u1ec3 chia th\u00e0nh c\u00e1c layers l\u00e0 blockchain network layer, middleware layer, application layer, v\u00e0 access layer... Trong ph\u1ea7n n\u00e0y s\u1ebd nh\u1eafc \u0111\u1ebfn kh\u00e1 nhi\u1ec1u c\u00e1i t\u00ean d\u1ef1 \u00e1n, nh\u01b0ng v\u00ec dung l\u01b0\u1ee3ng ki\u1ebfn th\u1ee9c m\u00ecnh c\u00f3 h\u1ea1n n\u00ean m\u00ecnh s\u1ebd kh\u00f4ng \u0111i s\u00e2u v\u00e0o t\u1eebng c\u00e1i m\u00e0 ch\u1ec9 overall.","title":"A article on the anatomy of Web3"},{"location":"VBI_Academy/Blockchain_101_course%20/The_Anatomy_of_Web3/#1-blockchain-network-layer","text":"\u1ede t\u1ea7ng th\u1ea5p nh\u1ea5t trong ki\u1ebfn tr\u00fac Web3 l\u00e0 l\u1edbp m\u1ea1ng l\u01b0\u1edbi blockchain (blockchain network layer) hay c\u00f2n g\u1ecdi l\u00e0 l\u1edbp n\u1ec1n t\u1ea3ng (foundation layer). \u0110\u00e2y ch\u00ednh l\u00e0 \u201cc\u00e1i m\u00f3ng nh\u00e0\u201d c\u1ee7a to\u00e0n b\u1ed9 h\u1ec7 sinh th\u00e1i Web3, n\u01a1i t\u1eadp h\u1ee3p c\u00e1c blockchain kh\u00e1c nhau v\u1eadn h\u00e0nh \u0111\u1ed9c l\u1eadp ho\u1eb7c t\u01b0\u01a1ng t\u00e1c v\u1edbi nhau. Hi\u1ec7n c\u00f3 r\u1ea5t nhi\u1ec1u blockchain n\u1eb1m trong l\u1edbp n\u00e0y, c\u00f3 th\u1ec3 k\u1ec3 \u0111\u1ebfn nh\u01b0: Bitcoin, Ethereum, BNB Chain (BSC), Polygon, Arbitrum, Polkadot, Cosmos, Celestia, Avalanche, Aptos, Sui v\u00e0 c\u00f2n h\u00e0ng t\u00e1 c\u00e1i t\u00ean kh\u00e1c n\u1eefa.","title":"1. Blockchain network layer"},{"location":"VBI_Academy/Blockchain_101_course%20/The_Anatomy_of_Web3/#phan-tang-kien-truc-layer-0-layer-1-layer-2","text":"Layer 0 (L0): Layer 0 l\u00e0 l\u1edbp tr\u1eebu t\u01b0\u1ee3ng h\u01a1n, th\u01b0\u1eddng \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 l\u1edbp h\u1ea1 t\u1ea7ng blockchain (infrastructure layer) \u2013 n\u01a1i cung c\u1ea5p c\u00e1c d\u1ecbch v\u1ee5 c\u01a1 b\u1ea3n gi\u00fap nhi\u1ec1u blockchain c\u00f3 th\u1ec3 t\u01b0\u01a1ng t\u00e1c ho\u1eb7c chia s\u1ebb t\u00e0i nguy\u00ean. V\u00ed d\u1ee5: Cosmos, Polkadot, Layer 1 (L1): C\u00e1c Layer 1 c\u0169ng ch\u00ednh l\u00e0 v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh cho \u201ctam gi\u00e1c b\u1ea5t kh\u1ea3 thi\u201d c\u1ee7a blockchain kh\u00f3 \u0111\u1ec3 m\u1ed9t blockchain \u0111\u1ed3ng th\u1eddi \u0111\u1ea3m b\u1ea3o c\u1ea3 3 y\u1ebfu t\u1ed1: m\u1edf r\u1ed9ng (scalability), b\u1ea3o m\u1eadt (security), v\u00e0 phi t\u1eadp trung (decentralization). Layer 2 (L2): Layer 2 ra \u0111\u1eddi \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n \u201cTPS th\u1ea5p\u201d c\u1ee7a Layer 1, nh\u1ea5t l\u00e0 Ethereum. Layer 2 l\u00e0 c\u00e1c chu\u1ed7i ph\u1ee5 (subchain) n\u1eb1m ph\u00eda tr\u00ean Layer 1, c\u00f3 nhi\u1ec7m v\u1ee5 x\u1eed l\u00fd giao d\u1ecbch nhanh v\u00e0 r\u1ebb h\u01a1n, sau \u0111\u00f3 g\u1eedi k\u1ebft qu\u1ea3 v\u1ec1 Layer 1 \u0111\u1ec3 l\u01b0u tr\u1eef. Layer 2 gi\u00fap Layer 1 tr\u1edf th\u00e0nh settlement layer (l\u1edbp thanh to\u00e1n), c\u00f2n m\u00ecnh th\u00ec lo ph\u1ea7n execution layer (l\u1edbp th\u1ef1c thi). M\u1ed9t s\u1ed1 Layer 2 n\u1ed5i b\u1eadt c\u1ee7a Ethereum g\u1ed3m: Arbitrum, Optimism, zkSync, StarkNet, Polygon. Bitcoin c\u0169ng c\u00f3 Layer 2 nh\u01b0: Lightning Network , Stacks , RSK , nh\u01b0ng hi\u1ec7n t\u1ea1i v\u1eabn ch\u01b0a ph\u1ed5 bi\u1ebfn b\u1eb1ng Ethereum.","title":"Ph\u00e2n t\u1ea7ng ki\u1ebfn tr\u00fac: Layer 0 / Layer 1 / Layer 2"},{"location":"VBI_Academy/Blockchain_101_course%20/The_Anatomy_of_Web3/#moi-truong-chay-smart-contract","text":"S\u1ef1 ph\u00e1t tri\u1ec3n c\u1ee7a Web3 ch\u1ee7 y\u1ebfu nh\u1edd v\u00e0o smart contract, v\u00e0 c\u00e1c smart contract c\u1ea7n c\u00f3 m\u00f4i tr\u01b0\u1eddng \u0111\u1ec3 ch\u1ea1y \u2013 g\u1ecdi l\u00e0 virtual machine (m\u00e1y \u1ea3o). T\u01b0\u01a1ng t\u1ef1 nh\u01b0 Java c\u1ea7n JVM v\u1eady. Sau khi hi\u1ec3u c\u1ea5u tr\u00fac ph\u00e2n t\u1ea7ng, ta ti\u1ebfp t\u1ee5c ph\u00e2n lo\u1ea1i blockchain theo g\u00f3c nh\u00ecn EVM compatibility hay n\u00f3i c\u00e1ch kh\u00e1c, blockchain \u0111\u00f3 c\u00f3 ch\u1ea1y \u0111\u01b0\u1ee3c smart contract vi\u1ebft b\u1eb1ng Solidity v\u00e0 t\u01b0\u01a1ng th\u00edch v\u1edbi m\u00e1y \u1ea3o Ethereum hay kh\u00f4ng. V\u1ec1 c\u01a1 b\u1ea3n, c\u00f3 th\u1ec3 chia th\u00e0nh hai nh\u00f3m: EVM chains v\u00e0 Non-EVM chains . Hi\u1ec7n nay, EVM chains v\u1eabn l\u00e0 d\u00f2ng ch\u1ee7 \u0111\u1ea1o. Nh\u1eefng blockchain n\u00e0y thu h\u00fat l\u01b0\u1ee3ng l\u1edbn DApp v\u00e0 ng\u01b0\u1eddi d\u00f9ng Web3, nh\u1edd v\u00e0o c\u1ed9ng \u0111\u1ed3ng ph\u00e1t tri\u1ec3n r\u1ed9ng v\u00e0 h\u1ec7 sinh th\u00e1i c\u00f4ng c\u1ee5 phong ph\u00fa. M\u1ed9t s\u1ed1 blockchain t\u01b0\u01a1ng th\u00edch v\u1edbi EVM t\u1eeb \u0111\u1ea7u nh\u01b0 BSC, Heco, Arbitrum, Optimism, v.v. M\u1ed9t s\u1ed1 kh\u00e1c th\u00ec ph\u00e1t tri\u1ec3n sau n\u00e0y \u0111\u1ec3 t\u01b0\u01a1ng th\u00edch, v\u00ed d\u1ee5 nh\u01b0 zkSync: phi\u00ean b\u1ea3n 1.0 kh\u00f4ng h\u1ed7 tr\u1ee3 EVM, nh\u01b0ng t\u1eeb 2.0 tr\u1edf \u0111i th\u00ec \u0111\u00e3 embrace EVM ho\u00e0n to\u00e0n. T\u00ednh \u0111\u1ebfn hi\u1ec7n t\u1ea1i, ph\u1ea7n l\u1edbn c\u00e1c blockchain l\u1edbn \u0111\u1ec1u \u0111\u00e3 ho\u1eb7c \u0111ang h\u1ed7 tr\u1ee3 EVM. Tuy nhi\u00ean, v\u1eabn c\u00f2n m\u1ed9t s\u1ed1 chu\u1ed7i n\u1ed5i b\u1eadt n\u1eb1m ngo\u00e0i h\u1ec7 EVM, nh\u01b0 Solana, Terra, NEAR, Aptos, v\u00e0 Sui. C\u00e1c blockchain n\u00e0y th\u01b0\u1eddng ch\u1ecdn h\u01b0\u1edbng \u0111i kh\u00e1c bi\u1ec7t, c\u1ea3 v\u1ec1 ki\u1ebfn tr\u00fac l\u1eabn ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh smart contract: n\u1ebfu EVM chains d\u00f9ng Solidity, th\u00ec c\u00e1c Non-EVM chains th\u01b0\u1eddng d\u00f9ng Rust ho\u1eb7c Move T\u00f3m l\u1ea1i * EVM chains : L\u00e0 nh\u1eefng blockchain t\u01b0\u01a1ng th\u00edch v\u1edbi Ethereum Virtual Machine, c\u00f3 th\u1ec3 ch\u1ea1y c\u00e1c smart contract \u0111\u01b0\u1ee3c vi\u1ebft b\u1eb1ng Solidity. V\u00ed d\u1ee5: Ethereum, BNB Chain, Polygon, Avalanche C-Chain\u2026 * Non-EVM chains : Kh\u00f4ng t\u01b0\u01a1ng th\u00edch v\u1edbi EVM, s\u1eed d\u1ee5ng m\u00e1y \u1ea3o ri\u00eang v\u00e0 th\u01b0\u1eddng c\u00f3 ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh ri\u00eang, nh\u01b0: Solana (Rust/C/C++), Aptos & Sui (Move), Near protocol/ Cosmos d\u00f9ng rust, Cardano d\u00f9ng Haskell/Plutus..","title":"M\u00f4i tr\u01b0\u1eddng ch\u1ea1y smart contract"},{"location":"VBI_Academy/Blockchain_101_course%20/The_Anatomy_of_Web3/#cac-vai-tro-trong-toan-he-sinh-thai-nhu-tinh-toan-hay-luu-tru","text":"Ta c\u0169ng c\u00f3 th\u1ec3 chia blockchain theo m\u1ee5c ti\u00eau s\u1eed d\u1ee5ng: * Compute Chains: T\u1eadp trung v\u00e0o x\u1eed l\u00fd logic v\u00e0 ch\u1ea1y smart contract. * Storage Chains: T\u1eadp trung v\u00e0o l\u01b0u tr\u1eef d\u1eef li\u1ec7u phi t\u1eadp trung \u2013 v\u00ed d\u1ee5: Filecoin, Arweave, Walrus..","title":"C\u00e1c vai tr\u00f2 trong to\u00e0n h\u1ec7 sinh th\u00e1i nh\u01b0 T\u00ednh to\u00e1n hay L\u01b0u tr\u1eef"},{"location":"VBI_Academy/Blockchain_101_course%20/The_Anatomy_of_Web3/#cross-chain-bridges","text":"M\u1edf r\u1ed9ng h\u01a1n l\u00e0 c\u00e1c giao th\u1ee9c giao ti\u1ebfp gi\u1eefa nhi\u1ec1u blockchain. Kh\u00e1 kh\u00f3 \u0111\u1ec3 th\u1ed1ng k\u00ea ra s\u1ed1 l\u01b0\u1ee3ng bao nhi\u00eau cross-chain \u0111\u01b0\u1ee3c tri\u1ec3n khai nh\u01b0ng ta c\u00f3 nh\u1eefng t\u00ean d\u1eabn \u0111\u1ea7u cho ph\u00e9p chuy\u1ec3n t\u00e0i s\u1ea3n gi\u1eefa layer 2 v\u00e0 Ethereum m\u1ed9t c\u00e1ch m\u01b0\u1ee3c m\u00e0 nh\u01b0 Polygon , Arbitrum v\u00e0 Optimism . X\u1ebfp sau l\u00e0 Multichain (tr\u01b0\u1edbc \u0111\u00e2y l\u00e0 Anyswap) - tuy nhi\u00ean, tr\u1ea3i qua kho\u1ea3ng th\u1eddi gian kh\u1eafc nghi\u1ec7t c\u1ee7a th\u1ecb tr\u01b0\u1eddng, c\u00e1i t\u00ean Multichain \u0111\u00e3 d\u1ea7n phai m\u1edd trong tr\u00ed nh\u1edb c\u1ee7a nhi\u1ec1u ng\u01b0\u1eddi. T\u1ea1m th\u1eddi, \u0111\u00f3 l\u00e0 b\u1ee9c tranh t\u1ed5ng quan v\u1ec1 c\u00e1c \u201cth\u00e0nh vi\u00ean\u201d \u0111ang t\u1ea1o n\u00ean l\u1edbp m\u1ea1ng l\u01b0\u1edbi c\u1ee7a blockchain. T\u1ea5t nhi\u00ean, danh s\u00e1ch n\u00e0y s\u1ebd c\u00f2n ti\u1ebfp t\u1ee5c thay \u0111\u1ed5i s\u1ebd c\u00f3 nh\u1eefng c\u00e1i t\u00ean m\u1edbi gia nh\u1eadp, v\u00e0 c\u0169ng s\u1ebd c\u00f3 nh\u1eefng h\u1ec7 sinh th\u00e1i t\u1eebng r\u1ea7m r\u1ed9 r\u1ed3i d\u1ea7n b\u1ecb l\u00e3ng qu\u00ean \u1edf m\u1ed9t g\u00f3c c\u1ee7a l\u1ecbch s\u1eed Web3.","title":"Cross-chain bridges"},{"location":"VBI_Academy/Blockchain_101_course%20/The_Anatomy_of_Web3/#2-middleware-layer","text":"Ngay ph\u00eda tr\u00ean l\u1edbp m\u1ea1ng blockchain, m\u00ecnh g\u1ecdi \u0111\u00e2y l\u00e0 \"middleware layer\" chuy\u00ean cung c\u1ea5p c\u00e1c d\u1ecbch v\u1ee5 v\u00e0 ch\u1ee9c n\u0103ng n\u1ec1n t\u1ea3ng cho c\u00e1c \u1ee9ng d\u1ee5ng Security audits, oracles, index query services, API services, data analysis, data storage, basic financial services, digital identities, DAO governance.. C\u00e1c th\u00e0nh ph\u1ea7n trong l\u1edbp middleware n\u00e0y c\u00f3 th\u1ec3 l\u00e0: On-chain protocol (ch\u1ea1y tr\u1ef1c ti\u1ebfp tr\u00ean blockchain), Off-chain platform (ch\u1ea1y ngo\u00e0i blockchain), Ho\u1eb7c c\u00e1c t\u1ed5 ch\u1ee9c centralized enterprise. Tr\u01b0\u1edbc ti\u00ean l\u00e0 v\u1ec1 ki\u1ec3m to\u00e1n b\u1ea3o m\u1eadt ( Security Auditing ). \u0110\u00e2y l\u00e0 m\u1ed9t lo\u1ea1i middleware c\u1ed1t l\u00f5i. V\u00ec ph\u1ea7n l\u1edbn c\u00e1c blockchain v\u00e0 \u1ee9ng d\u1ee5ng Web3 \u0111\u1ec1u m\u00e3 ngu\u1ed3n m\u1edf (open-source), v\u00e0 nhi\u1ec1u \u1ee9ng d\u1ee5ng li\u00ean quan tr\u1ef1c ti\u1ebfp t\u1edbi t\u00e0i ch\u00ednh, n\u00ean v\u1ea5n \u0111\u1ec1 b\u1ea3o m\u1eadt tr\u1edf th\u00e0nh \u01b0u ti\u00ean h\u00e0ng \u0111\u1ea7u, v\u00e0 ki\u1ec3m to\u00e1n b\u1ea3o m\u1eadt \u0111\u01b0\u01a1ng nhi\u00ean tr\u1edf th\u00e0nh m\u1ed9t nhu c\u1ea7u b\u1eaft bu\u1ed9c. C\u00e1c c\u00f4ng ty n\u1ed5i ti\u1ebfng trong l\u0129nh v\u1ef1c n\u00e0y g\u1ed3m: CertiK , OpenZeppelin , ConsenSys , Hacken , Quantstamp ; \u1edf Trung Qu\u1ed1c c\u00f3 SlowMist , ChainSec , v\u00e0 Paidun . Ngo\u00e0i ra c\u00f2n c\u00f3 nhi\u1ec1u c\u00f4ng ty/team nhi\u1ec1u h\u01a1n th\u1ebf n\u1eefa... B\u00ean c\u1ea1nh \u0111\u00f3, kh\u00f4ng th\u1ec3 kh\u00f4ng k\u1ec3 t\u1edbi c\u00e1c Bug Bounty platform nh\u01b0 Immunefi , Hacker proof ... Ti\u1ebfp theo l\u00e0 Oracle , th\u00e0nh ph\u1ea7n \u0111\u00f3ng vai tr\u00f2 r\u1ea5t quan tr\u1ecdng trong h\u1ec7 sinh th\u00e1i Web3. Oracle l\u00e0 c\u1ea7u n\u1ed1i gi\u1eefa h\u1ec7 th\u1ed1ng blockchain v\u00e0 ngu\u1ed3n d\u1eef li\u1ec7u b\u00ean ngo\u00e0i, gi\u00fap th\u1ef1c hi\u1ec7n vi\u1ec7c giao ti\u1ebfp d\u1eef li\u1ec7u gi\u1eefa smart contract v\u00e0 th\u1ebf gi\u1edbi th\u1ef1c. V\u00ec b\u1ea3n th\u00e2n m\u1ea1ng l\u01b0\u1edbi blockchain b\u1ecb gi\u1edbi h\u1ea1n b\u1edfi t\u00ednh nh\u1ea5t qu\u00e1n tr\u1ea1ng th\u00e1i ( state consistency ), n\u00ean \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o r\u1eb1ng m\u1ed7i node \u0111\u1ec1u cho ra c\u00f9ng m\u1ed9t k\u1ebft qu\u1ea3 khi nh\u1eadn c\u00f9ng m\u1ed9t input, blockchain \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf nh\u01b0 m\u1ed9t h\u1ec7 th\u1ed1ng \u0111\u00f3ng, ch\u1ec9 c\u00f3 th\u1ec3 l\u1ea5y d\u1eef li\u1ec7u n\u1ed9i b\u1ed9 (on-chain), kh\u00f4ng th\u1ec3 ch\u1ee7 \u0111\u1ed9ng l\u1ea5y d\u1eef li\u1ec7u t\u1eeb b\u00ean ngo\u00e0i (off-chain). Tuy nhi\u00ean, trong nhi\u1ec1u t\u00ecnh hu\u1ed1ng \u1ee9ng d\u1ee5ng, d\u1eef li\u1ec7u b\u00ean ngo\u00e0i l\u00e0 b\u1eaft bu\u1ed9c v\u00e0 ch\u00fang \u0111\u01b0\u1ee3c cung c\u1ea5p th\u00f4ng qua oracle . \u0110\u00e2y c\u0169ng l\u00e0 c\u00e1ch duy nh\u1ea5t \u0111\u1ec3 blockchain c\u00f3 th\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi d\u1eef li\u1ec7u ngo\u00e0i chu\u1ed7i. C\u00e1c lo\u1ea1i oracle hi\u1ec7n nay c\u00f3 th\u1ec3 chia th\u00e0nh: oracle cho DeFi, NFT, SocialFi, oracle cross-chain, oracle b\u1ea3o m\u1eadt ri\u00eang t\u01b0, oracle t\u00edn d\u1ee5ng, v\u00e0 m\u1ea1ng l\u01b0\u1edbi oracle phi t\u1eadp trung. M\u1ed9t s\u1ed1 d\u1ef1 \u00e1n oracle ti\u00eau bi\u1ec3u g\u1ed3m: CreDA, Privy, UMA, Banksea, DOS, NEST, Chainlink, v.v. Trong \u0111\u00f3, Chainlink l\u00e0 d\u1ef1 \u00e1n d\u1eabn \u0111\u1ea7u m\u1ea3ng oracle, \u0111\u01b0\u1ee3c \u0111\u1ecbnh v\u1ecb l\u00e0 m\u1ed9t m\u1ea1ng l\u01b0\u1edbi oracle phi t\u1eadp trung, cung c\u1ea5p nhi\u1ec1u s\u1ea3n ph\u1ea9m nh\u01b0: Data Feeds, VRF, Keepers, Proof of Reserve, CCIP,\u2026 Ti\u1ebfp theo l\u00e0 truy v\u1ea5n d\u1eef li\u1ec7u ( Index Query ), m\u1ed9t middleware quan tr\u1ecdng gi\u00fap gi\u1ea3i quy\u1ebft b\u00e0i to\u00e1n truy v\u1ea5n d\u1eef li\u1ec7u on-chain ph\u1ee9c t\u1ea1p. V\u00ed d\u1ee5, n\u1ebfu mu\u1ed1n truy v\u1ea5n t\u1ed5ng kh\u1ed1i l\u01b0\u1ee3ng giao d\u1ecbch tr\u00ean Uniswap trong m\u1ed9t ng\u00e0y c\u1ee5 th\u1ec3, th\u00ec vi\u1ec7c truy v\u1ea5n tr\u1ef1c ti\u1ebfp t\u1eeb blockchain l\u00e0 r\u1ea5t kh\u00f3 kh\u0103n. Do \u0111\u00f3, c\u1ea7n c\u00f3 c\u00e1c d\u1ecbch v\u1ee5 truy v\u1ea5n ch\u1ec9 m\u1ee5c, v\u1edbi nh\u1eefng \u0111\u1ea1i di\u1ec7n ch\u00ednh l\u00e0 The Graph v\u00e0 Covalent. The Graph ho\u1ea1t \u0111\u1ed9ng b\u1eb1ng c\u00e1ch gi\u00e1m s\u00e1t d\u1eef li\u1ec7u on-chain v\u00e0 chuy\u1ec3n h\u00f3a ch\u00fang th\u00e0nh d\u1eef li\u1ec7u t\u00f9y ch\u1ec9nh \u0111\u1ec3 l\u01b0u tr\u1eef v\u00e0 truy v\u1ea5n. Trong khi \u0111\u00f3, Covalent \u0111\u00f3ng g\u00f3i c\u00e1c d\u1eef li\u1ec7u ph\u1ed5 bi\u1ebfn v\u00e0 th\u01b0\u1eddng d\u00f9ng th\u00e0nh c\u00e1c API th\u1ed1ng nh\u1ea5t \u0111\u1ec3 ng\u01b0\u1eddi d\u00f9ng d\u1ec5 truy v\u1ea5n. Khi n\u00f3i \u0111\u1ebfn d\u1ecbch v\u1ee5 API, ngo\u00e0i Covalent, c\u00f2n c\u00f3 nhi\u1ec1u nh\u00e0 cung c\u1ea5p API ph\u1ee5c v\u1ee5 c\u00e1c m\u1ee5c \u0111\u00edch kh\u00e1c nhau, v\u00ed d\u1ee5: * NFTScan: chuy\u00ean cung c\u1ea5p d\u1eef li\u1ec7u API v\u1ec1 NFT, * Infura v\u00e0 Alchemy: cung c\u1ea5p d\u1ecbch v\u1ee5 node cho blockchain. Data analytics c\u0169ng l\u00e0 m\u1ed9t th\u00e0nh ph\u1ea7n middleware li\u00ean quan t\u1edbi d\u1eef li\u1ec7u. B\u1ea1n c\u00f3 th\u1ec3 t\u1eebng nghe nh\u01b0 Dune Analytics , Flipside Crypto , DeBank , Chainalysis . Ti\u1ebfp theo l\u00e0 middleware cung c\u1ea5p c\u00e1c d\u1ecbch v\u1ee5 t\u00e0i ch\u00ednh c\u01a1 b\u1ea3n. C\u00e1c giao th\u1ee9c ti\u00eau bi\u1ec3u g\u1ed3m: Uniswap, Curve, Compound, Aave, v.v. \u2022 Uniswap v\u00e0 Curve l\u00e0 c\u00e1c giao th\u1ee9c giao d\u1ecbch (DEX), \u2022 Compound v\u00e0 Aave l\u00e0 c\u00e1c giao th\u1ee9c cho vay (lending). V\u1ec1 b\u1ea3n ch\u1ea5t, \u0111\u00e2y l\u00e0 c\u00e1c giao th\u1ee9c \u1edf l\u1edbp \u1ee9ng d\u1ee5ng (application layer), nh\u01b0ng v\u00ec ng\u00e0y c\u00e0ng c\u00f3 nhi\u1ec1u \u1ee9ng d\u1ee5ng kh\u00e1c d\u1ef1a v\u00e0o ch\u00fang nh\u01b0 m\u1ed9t th\u00e0nh ph\u1ea7n c\u01a1 b\u1ea3n \u0111\u1ec3 x\u00e2y d\u1ef1ng, n\u00ean ch\u00fang tr\u1edf th\u00e0nh c\u00e1c giao th\u1ee9c d\u00f9ng chung, t\u01b0\u01a1ng t\u1ef1 nh\u01b0 c\u00e1c kh\u1ed1i Lego \u2013 t\u1eeb \u0111\u00f3 \u0111\u1ea3m nh\u1eadn vai tr\u00f2 c\u1ee7a middleware. \u2e3b Tr\u00ean th\u1ef1c t\u1ebf, b\u1ea5t k\u1ef3 th\u00e0nh ph\u1ea7n c\u00f3 th\u1ec3 t\u00e1i s\u1eed d\u1ee5ng (composable) n\u00e0o \u2013 d\u00f9 l\u00e0 giao th\u1ee9c on-chain, d\u1ecbch v\u1ee5 off-chain do th\u1ef1c th\u1ec3 t\u1eadp trung cung c\u1ea5p, ho\u1eb7c t\u1ed5 ch\u1ee9c DAO \u2013 \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c ph\u00e2n lo\u1ea1i v\u00e0o \u201cl\u1edbp middleware\u201d, mi\u1ec5n l\u00e0 d\u1ecbch v\u1ee5 m\u00e0 n\u00f3 cung c\u1ea5p \u0111\u01b0\u1ee3c \u0111a s\u1ed1 \u1ee9ng d\u1ee5ng kh\u00e1c c\u1ea7n s\u1eed d\u1ee5ng.","title":"2. Middleware layer"},{"location":"VBI_Academy/Blockchain_101_course%20/blockchain_dilemma/","text":"","title":"Blockchain dilemma"},{"location":"VBI_Academy/Blockchain_101_course%20/Module%203/EVM%20and%20NON%20EVM/","text":"Ethereum Virtual Machine (EVM) The EVM is the part of Ethereum that handles the deployment and execution of smart contracts. In reality, a simple value transfer transaction from one EOA to another does not require the EVM, but everything else will involve state updates computed by the EVM. From a higher level perspective, the EVM running on the Ethereum blockchain can be viewed as a global decentralized computer containing millions of executable objects, each with its own permanent data storage. \u2014Andreas Antonopoulos and Dr. Gavin Wood, Mastering Ethereum Bytecode l\u00e0 g\u00ec ? Bytecode basically l\u00e0 \u201cmachine code\u201d \u0111\u01b0\u1ee3c generate sau khi compile ng\u00f4n ng\u1eef smart contract c\u1ea5p cao nh\u01b0 Solidity. N\u00f3 ki\u1ec3u nh\u01b0 v\u1ea7y (s\u1ed1 li\u1ec7u d\u00e0i qu\u00e1 n\u00ean m\u00ecnh b\u1ecf b\u1edbt): T\u1ea1i v\u00ec n\u1ebfu b\u1ea1n kh\u00f4ng c\u00f3 source code v\u00e0 ABI (Application Binary Interface) c\u1ee7a smart contract \u0111\u00f3 th\u00ec vi\u1ec7c t\u01b0\u01a1ng t\u00e1c v\u1edbi n\u00f3 tr\u00ean blockchain s\u1ebd r\u1ea5t risky v\u00e0 d\u1ec5 sai. \u0110o\u1ea1n bytecode m\u00e0 m\u00ecnh show ph\u00eda tr\u00ean ch\u00ednh l\u00e0 deployment bytecode c\u1ee7a contract HelloWorld.sol l\u00e0 contract m\u1eabu m\u00e0 t\u1ee5i m\u00ecnh \u0111\u00e3 deploy \u1edf ... Kh\u00e1c v\u1edbi runtime bytecode , deployment bytecode s\u1ebd g\u1ed3m th\u00eam m\u1ea5y code h\u1ed7 tr\u1ee3 ( auxiliary code ) \u0111\u1ec3 gi\u00fap qu\u00e1 tr\u00ecnh deploy di\u1ec5n ra th\u00e0nh c\u00f4ng. Sau khi contract \u0111\u01b0\u1ee3c deploy th\u00e0nh c\u00f4ng, ch\u1ec9 c\u00f2n runtime bytecode \u1edf l\u1ea1i n\u1eb1m t\u1ea1i \u0111\u1ecba ch\u1ec9 contract tr\u00ean blockchain \u0111\u00e2y ch\u00ednh l\u00e0 ph\u1ea7n s\u1ebd \u0111\u01b0\u1ee3c EVM d\u00f9ng m\u1ed7i khi c\u00f3 ng\u01b0\u1eddi g\u1ecdi h\u00e0m c\u1ee7a contract \u0111\u00f3. EVM Assembly Solidity compiler c\u00f3 th\u1ec3 in ra phi\u00ean b\u1ea3n human-readable c\u1ee7a EVM Assembly cho contract HelloWorld.sol . Khi b\u1ea1n bi\u00ean d\u1ecbch contract, b\u1ea1n kh\u00f4ng ch\u1ec9 ra bytecode m\u00e0 c\u00f2n c\u00f3 th\u1ec3 l\u1ea5y c\u1ea3 assembly code, t\u1ee9c l\u00e0 ng\u00f4n ng\u1eef g\u1ea7n s\u00e1t m\u00e1y nh\u1ea5t nh\u01b0ng v\u1eabn c\u00f3 th\u1ec3 \u0111\u1ecdc \u0111\u01b0\u1ee3c ph\u1ea7n n\u00e0o n\u1ebfu b\u1ea1n \u0111\u00e3 quen v\u1edbi EVM. V\u00ed d\u1ee5 \u0111o\u1ea1n d\u01b0\u1edbi l\u00e0 m\u1ed9t ph\u1ea7n c\u1ee7a EVM assembly cho contract HelloWorld : mstore(0x40, 0x80) callvalue dup1 iszero jumpi(tag_1) ... greeting = \"Hello, World.\" 0x48656c6c6f2c20576f726c642e... Smart contracts c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c compiled th\u00e0nh EVM bytecode. H\u00ecnh dung cho d\u1ec5 thif Solidity code ng\u00f4n ng\u1eef \u0111\u1ec3 vi\u1ebft smart contractgi\u1ed1ng nh\u01b0 C++ trong l\u1eadp tr\u00ecnh truy\u1ec1n th\u1ed1ng. C\u00f2n EVM bytecode th\u00ec nh\u01b0 machine code m\u00e0 CPU hi\u1ec3u \u0111\u01b0\u1ee3c. EVM bytecode l\u00e0 m\u1ed9t chu\u1ed7i c\u00e1c opcode (operation code) v\u00e0 d\u1eef li\u1ec7u, \u0111\u01b0\u1ee3c EVM x\u1eed l\u00fd \u0111\u1ec3 th\u1ef1c hi\u1ec7n state transition \u2013 t\u1ee9c l\u00e0 thay \u0111\u1ed5i tr\u1ea1ng th\u00e1i to\u00e0n c\u1ee5c c\u1ee7a Ethereum sau m\u1ed7i giao d\u1ecbch ho\u1eb7c function call trong smart contract. V\u1eady r\u1ed1t cu\u1ed9c vai tr\u00f2 c\u1ee7a EVM trong vi\u1ec7c execute m\u1ed9t transaction l\u00e0 g\u00ec? \u0110\u1ea7u ti\u00ean, n\u00f3 cho ph\u00e9p chuy\u1ec3n WEI (1 ETH = 10\u00b9\u2078 WEI) t\u1eeb account n\u00e0y sang account kh\u00e1c. V\u00e0 n\u1ebfu account nh\u1eadn \u0111\u01b0\u1ee3c giao d\u1ecbch \u0111\u00f3 c\u00f3 ch\u1ee9a bytecode li\u00ean quan t\u1edbi EVM, th\u00ec EVM s\u1ebd ph\u1ea3i ch\u1ea1y c\u00e1i \u0111o\u1ea1n bytecode \u0111\u00f3 c\u00f3 th\u1ec3 k\u00e8m theo transaction.data l\u00e0m input (input n\u00e0y l\u00e0 d\u1eef li\u1ec7u t\u1eeb tr\u01b0\u1eddng data c\u1ee7a transaction). V\u1eady account n\u00e0o c\u0169ng c\u00f3 bytecode h\u1ebft \u00e0?\u201d C\u00e2u tr\u1ea3 l\u1eddi l\u00e0: kh\u00f4ng. Trong Ethereum, ch\u1ec9 c\u00f3 2 lo\u1ea1i account: EOA (Externally Owned Account): L\u00e0 account do m\u1ed9t ng\u01b0\u1eddi/ t\u1ed5 ch\u1ee9c ki\u1ec3m so\u00e1t th\u00f4ng qua private key. Ki\u1ec3u nh\u01b0 v\u00ed Metamask c\u1ee7a b\u1ea1n \u1ea5y. CA (Contract Account): L\u00e0 account \u0111\u01b0\u1ee3c t\u1ea1o ra b\u1eb1ng c\u00e1ch deploy smart contract. Nh\u1eefng account n\u00e0y kh\u00f4ng c\u00f3 private key, v\u00e0 \u0111\u01b0\u1ee3c control b\u1edfi code, th\u00f4ng qua c\u00e1c call t\u1eeb EOA (transaction). N\u00f3i \u0111\u01a1n gi\u1ea3n, ch\u1ec9 c\u00f3 Contract Account m\u1edbi ch\u1ee9a bytecode \u0111\u1ec3 EVM th\u1ef1c thi. Let\u2019s dive deeper\u2026 v\u00e0o ki\u1ebfn tr\u00fac b\u00ean trong c\u1ee7a EVM: Diagram from https://ethereum.org/en/developers/docs/evm/ M\u1ed7i EVM instance \u0111\u01b0\u1ee3c kh\u1edfi ch\u1ea1y l\u00e0 \u0111\u1ec3 th\u1ef1c thi m\u1ed9t \u0111o\u1ea1n bytecode c\u1ee5 th\u1ec3 (v\u00ec m\u1ee5c ti\u00eau c\u1ee7a transaction l\u00e0 m\u1ed9t Contract Account). Do \u0111\u00f3, \u0111o\u1ea1n bytecode n\u00e0y ho\u1ea1t \u0111\u1ed9ng nh\u01b0 ROM, b\u1ed9 nh\u1edb ch\u1ec9 \u0111\u1ecdc c\u1ee7a EVM instance , v\u00e0 t\u1ea5t nhi\u00ean l\u00e0 kh\u00f4ng th\u1ec3 b\u1ecb thay \u0111\u1ed5i sau khi \u0111\u00e3 deploy. T\u01b0\u1edfng t\u01b0\u1ee3ng gi\u1ed1ng nh\u01b0 m\u1ed9t Turing Machine , EVM c\u0169ng c\u00f3 c\u00e1c th\u00e0nh ph\u1ea7n c\u01a1 b\u1ea3n g\u1ed3m: Program Counter (PC): L\u00e0 m\u1ed9t con tr\u1ecf ch\u1ec9 t\u1edbi opcode ti\u1ebfp theo trong bytecode m\u00e0 EVM c\u1ea7n th\u1ef1c thi. PC l\u00e0 s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m trong kho\u1ea3ng [0, s\u1ed1 l\u01b0\u1ee3ng byte c\u1ee7a bytecode - 1]. Memory: L\u00e0 b\u1ed9 nh\u1edb t\u1ea1m, c\u00f3 th\u1ec3 m\u1edf r\u1ed9ng v\u00f4 h\u1ea1n (mi\u1ec5n l\u00e0 b\u1ea1n ch\u1ecbu tr\u1ea3 th\u00eam ph\u00ed gas cho vi\u1ec7c m\u1edf r\u1ed9ng). M\u1ed7i slot trong memory l\u00e0 1 byte (unsigned 8-bit integer). Stack: Stack trong EVM c\u00f3 th\u1ec3 ch\u1ee9a t\u1ed1i \u0111a 1024 ph\u1ea7n t\u1eed , m\u1ed7i ph\u1ea7n t\u1eed l\u00e0 m\u1ed9t unsigned integer 256-bit (t\u1ee9c 32 byte). \u0110\u00e2y l\u00e0 n\u01a1i c\u00e1c gi\u00e1 tr\u1ecb trung gian \u0111\u01b0\u1ee3c x\u1eed l\u00fd li\u00ean t\u1ee5c nh\u01b0 push, pop, add, sub, v.v. External Storage: v\u00f9ng l\u01b0u tr\u1eef permanent c\u1ee7a c\u00e1c account, n\u01a1i contract c\u00f3 th\u1ec3 l\u01b0u state. EVM bytecode c\u00f3 th\u1ec3 \u0111\u1ecdc/ghi v\u00e0o storage c\u1ee7a account hi\u1ec7n t\u1ea1i ho\u1eb7c external account kh\u00e1c Trong \u0111\u00f3, external storage l\u00e0 n\u01a1i l\u01b0u tr\u1eef v\u0129nh vi\u1ec5n t\u1ea5t c\u1ea3 tr\u1ea1ng th\u00e1i v\u00e0 d\u1eef li\u1ec7u li\u00ean quan \u0111\u1ebfn smart contract. Ng\u01b0\u1ee3c l\u1ea1i, c\u00e1c th\u00e0nh ph\u1ea7n c\u00f2n l\u1ea1i nh\u01b0 PC, stack, v\u00e0 memory \u0111\u1ec1u l\u00e0 volatile \u2013 t\u1ee9c l\u00e0 ch\u1ec9 t\u1ed3n t\u1ea1i trong l\u00fac EVM instance \u0111ang ch\u1ea1y v\u00e0 s\u1ebd b\u1ecb reset m\u1ed7i l\u1ea7n instance m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o. T\u01b0\u01a1ng t\u1ef1 nh\u01b0 CPU hi\u1ec3u c\u00e1c l\u1ec7nh trong Instruction Set, EVM c\u0169ng c\u1ea7n hi\u1ec3u c\u00e1c opcode (m\u1ed7i opcode l\u00e0 1 byte => t\u1ed1i \u0111a 256 opcode). M\u1eb7c d\u00f9 kh\u00f4ng li\u1ec7t k\u00ea to\u00e0n b\u1ed9 \u1edf \u0111\u00e2y, nh\u01b0ng ta c\u00f3 th\u1ec3 chia opcode th\u00e0nh c\u00e1c nh\u00f3m ch\u00ednh nh\u01b0 sau: Control Opcodes: \u0111i\u1ec1u khi\u1ec3n PC, stack, memory, storage Arithmetic & Bitwise: nh\u01b0 ADD, MUL, AND, OR, XOR\u2026 Contextual Info: truy xu\u1ea5t th\u00f4ng tin block, transaction, msg.sender Log: t\u1ea1o log record (LOG0, LOG1,\u2026) System-level: t\u1ea1o contract m\u1edbi (CREATE), g\u1ecdi contract kh\u00e1c (CALL, DELEGATECALL), xo\u00e1 contract (SELFDESTRUCT)","title":"Ethereum Virtual Machine (EVM)"},{"location":"VBI_Academy/Blockchain_101_course%20/Module%203/EVM%20and%20NON%20EVM/#ethereum-virtual-machine-evm","text":"The EVM is the part of Ethereum that handles the deployment and execution of smart contracts. In reality, a simple value transfer transaction from one EOA to another does not require the EVM, but everything else will involve state updates computed by the EVM. From a higher level perspective, the EVM running on the Ethereum blockchain can be viewed as a global decentralized computer containing millions of executable objects, each with its own permanent data storage. \u2014Andreas Antonopoulos and Dr. Gavin Wood, Mastering Ethereum","title":"Ethereum Virtual Machine (EVM)"},{"location":"VBI_Academy/Blockchain_101_course%20/Module%203/EVM%20and%20NON%20EVM/#bytecode-la-gi","text":"Bytecode basically l\u00e0 \u201cmachine code\u201d \u0111\u01b0\u1ee3c generate sau khi compile ng\u00f4n ng\u1eef smart contract c\u1ea5p cao nh\u01b0 Solidity. N\u00f3 ki\u1ec3u nh\u01b0 v\u1ea7y (s\u1ed1 li\u1ec7u d\u00e0i qu\u00e1 n\u00ean m\u00ecnh b\u1ecf b\u1edbt): T\u1ea1i v\u00ec n\u1ebfu b\u1ea1n kh\u00f4ng c\u00f3 source code v\u00e0 ABI (Application Binary Interface) c\u1ee7a smart contract \u0111\u00f3 th\u00ec vi\u1ec7c t\u01b0\u01a1ng t\u00e1c v\u1edbi n\u00f3 tr\u00ean blockchain s\u1ebd r\u1ea5t risky v\u00e0 d\u1ec5 sai. \u0110o\u1ea1n bytecode m\u00e0 m\u00ecnh show ph\u00eda tr\u00ean ch\u00ednh l\u00e0 deployment bytecode c\u1ee7a contract HelloWorld.sol l\u00e0 contract m\u1eabu m\u00e0 t\u1ee5i m\u00ecnh \u0111\u00e3 deploy \u1edf ... Kh\u00e1c v\u1edbi runtime bytecode , deployment bytecode s\u1ebd g\u1ed3m th\u00eam m\u1ea5y code h\u1ed7 tr\u1ee3 ( auxiliary code ) \u0111\u1ec3 gi\u00fap qu\u00e1 tr\u00ecnh deploy di\u1ec5n ra th\u00e0nh c\u00f4ng. Sau khi contract \u0111\u01b0\u1ee3c deploy th\u00e0nh c\u00f4ng, ch\u1ec9 c\u00f2n runtime bytecode \u1edf l\u1ea1i n\u1eb1m t\u1ea1i \u0111\u1ecba ch\u1ec9 contract tr\u00ean blockchain \u0111\u00e2y ch\u00ednh l\u00e0 ph\u1ea7n s\u1ebd \u0111\u01b0\u1ee3c EVM d\u00f9ng m\u1ed7i khi c\u00f3 ng\u01b0\u1eddi g\u1ecdi h\u00e0m c\u1ee7a contract \u0111\u00f3.","title":"Bytecode l\u00e0 g\u00ec ?"},{"location":"VBI_Academy/Blockchain_101_course%20/Module%203/EVM%20and%20NON%20EVM/#evm-assembly","text":"Solidity compiler c\u00f3 th\u1ec3 in ra phi\u00ean b\u1ea3n human-readable c\u1ee7a EVM Assembly cho contract HelloWorld.sol . Khi b\u1ea1n bi\u00ean d\u1ecbch contract, b\u1ea1n kh\u00f4ng ch\u1ec9 ra bytecode m\u00e0 c\u00f2n c\u00f3 th\u1ec3 l\u1ea5y c\u1ea3 assembly code, t\u1ee9c l\u00e0 ng\u00f4n ng\u1eef g\u1ea7n s\u00e1t m\u00e1y nh\u1ea5t nh\u01b0ng v\u1eabn c\u00f3 th\u1ec3 \u0111\u1ecdc \u0111\u01b0\u1ee3c ph\u1ea7n n\u00e0o n\u1ebfu b\u1ea1n \u0111\u00e3 quen v\u1edbi EVM. V\u00ed d\u1ee5 \u0111o\u1ea1n d\u01b0\u1edbi l\u00e0 m\u1ed9t ph\u1ea7n c\u1ee7a EVM assembly cho contract HelloWorld : mstore(0x40, 0x80) callvalue dup1 iszero jumpi(tag_1) ... greeting = \"Hello, World.\" 0x48656c6c6f2c20576f726c642e... Smart contracts c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c compiled th\u00e0nh EVM bytecode. H\u00ecnh dung cho d\u1ec5 thif Solidity code ng\u00f4n ng\u1eef \u0111\u1ec3 vi\u1ebft smart contractgi\u1ed1ng nh\u01b0 C++ trong l\u1eadp tr\u00ecnh truy\u1ec1n th\u1ed1ng. C\u00f2n EVM bytecode th\u00ec nh\u01b0 machine code m\u00e0 CPU hi\u1ec3u \u0111\u01b0\u1ee3c. EVM bytecode l\u00e0 m\u1ed9t chu\u1ed7i c\u00e1c opcode (operation code) v\u00e0 d\u1eef li\u1ec7u, \u0111\u01b0\u1ee3c EVM x\u1eed l\u00fd \u0111\u1ec3 th\u1ef1c hi\u1ec7n state transition \u2013 t\u1ee9c l\u00e0 thay \u0111\u1ed5i tr\u1ea1ng th\u00e1i to\u00e0n c\u1ee5c c\u1ee7a Ethereum sau m\u1ed7i giao d\u1ecbch ho\u1eb7c function call trong smart contract. V\u1eady r\u1ed1t cu\u1ed9c vai tr\u00f2 c\u1ee7a EVM trong vi\u1ec7c execute m\u1ed9t transaction l\u00e0 g\u00ec? \u0110\u1ea7u ti\u00ean, n\u00f3 cho ph\u00e9p chuy\u1ec3n WEI (1 ETH = 10\u00b9\u2078 WEI) t\u1eeb account n\u00e0y sang account kh\u00e1c. V\u00e0 n\u1ebfu account nh\u1eadn \u0111\u01b0\u1ee3c giao d\u1ecbch \u0111\u00f3 c\u00f3 ch\u1ee9a bytecode li\u00ean quan t\u1edbi EVM, th\u00ec EVM s\u1ebd ph\u1ea3i ch\u1ea1y c\u00e1i \u0111o\u1ea1n bytecode \u0111\u00f3 c\u00f3 th\u1ec3 k\u00e8m theo transaction.data l\u00e0m input (input n\u00e0y l\u00e0 d\u1eef li\u1ec7u t\u1eeb tr\u01b0\u1eddng data c\u1ee7a transaction). V\u1eady account n\u00e0o c\u0169ng c\u00f3 bytecode h\u1ebft \u00e0?\u201d C\u00e2u tr\u1ea3 l\u1eddi l\u00e0: kh\u00f4ng. Trong Ethereum, ch\u1ec9 c\u00f3 2 lo\u1ea1i account: EOA (Externally Owned Account): L\u00e0 account do m\u1ed9t ng\u01b0\u1eddi/ t\u1ed5 ch\u1ee9c ki\u1ec3m so\u00e1t th\u00f4ng qua private key. Ki\u1ec3u nh\u01b0 v\u00ed Metamask c\u1ee7a b\u1ea1n \u1ea5y. CA (Contract Account): L\u00e0 account \u0111\u01b0\u1ee3c t\u1ea1o ra b\u1eb1ng c\u00e1ch deploy smart contract. Nh\u1eefng account n\u00e0y kh\u00f4ng c\u00f3 private key, v\u00e0 \u0111\u01b0\u1ee3c control b\u1edfi code, th\u00f4ng qua c\u00e1c call t\u1eeb EOA (transaction). N\u00f3i \u0111\u01a1n gi\u1ea3n, ch\u1ec9 c\u00f3 Contract Account m\u1edbi ch\u1ee9a bytecode \u0111\u1ec3 EVM th\u1ef1c thi. Let\u2019s dive deeper\u2026 v\u00e0o ki\u1ebfn tr\u00fac b\u00ean trong c\u1ee7a EVM: Diagram from https://ethereum.org/en/developers/docs/evm/ M\u1ed7i EVM instance \u0111\u01b0\u1ee3c kh\u1edfi ch\u1ea1y l\u00e0 \u0111\u1ec3 th\u1ef1c thi m\u1ed9t \u0111o\u1ea1n bytecode c\u1ee5 th\u1ec3 (v\u00ec m\u1ee5c ti\u00eau c\u1ee7a transaction l\u00e0 m\u1ed9t Contract Account). Do \u0111\u00f3, \u0111o\u1ea1n bytecode n\u00e0y ho\u1ea1t \u0111\u1ed9ng nh\u01b0 ROM, b\u1ed9 nh\u1edb ch\u1ec9 \u0111\u1ecdc c\u1ee7a EVM instance , v\u00e0 t\u1ea5t nhi\u00ean l\u00e0 kh\u00f4ng th\u1ec3 b\u1ecb thay \u0111\u1ed5i sau khi \u0111\u00e3 deploy. T\u01b0\u1edfng t\u01b0\u1ee3ng gi\u1ed1ng nh\u01b0 m\u1ed9t Turing Machine , EVM c\u0169ng c\u00f3 c\u00e1c th\u00e0nh ph\u1ea7n c\u01a1 b\u1ea3n g\u1ed3m: Program Counter (PC): L\u00e0 m\u1ed9t con tr\u1ecf ch\u1ec9 t\u1edbi opcode ti\u1ebfp theo trong bytecode m\u00e0 EVM c\u1ea7n th\u1ef1c thi. PC l\u00e0 s\u1ed1 nguy\u00ean kh\u00f4ng \u00e2m trong kho\u1ea3ng [0, s\u1ed1 l\u01b0\u1ee3ng byte c\u1ee7a bytecode - 1]. Memory: L\u00e0 b\u1ed9 nh\u1edb t\u1ea1m, c\u00f3 th\u1ec3 m\u1edf r\u1ed9ng v\u00f4 h\u1ea1n (mi\u1ec5n l\u00e0 b\u1ea1n ch\u1ecbu tr\u1ea3 th\u00eam ph\u00ed gas cho vi\u1ec7c m\u1edf r\u1ed9ng). M\u1ed7i slot trong memory l\u00e0 1 byte (unsigned 8-bit integer). Stack: Stack trong EVM c\u00f3 th\u1ec3 ch\u1ee9a t\u1ed1i \u0111a 1024 ph\u1ea7n t\u1eed , m\u1ed7i ph\u1ea7n t\u1eed l\u00e0 m\u1ed9t unsigned integer 256-bit (t\u1ee9c 32 byte). \u0110\u00e2y l\u00e0 n\u01a1i c\u00e1c gi\u00e1 tr\u1ecb trung gian \u0111\u01b0\u1ee3c x\u1eed l\u00fd li\u00ean t\u1ee5c nh\u01b0 push, pop, add, sub, v.v. External Storage: v\u00f9ng l\u01b0u tr\u1eef permanent c\u1ee7a c\u00e1c account, n\u01a1i contract c\u00f3 th\u1ec3 l\u01b0u state. EVM bytecode c\u00f3 th\u1ec3 \u0111\u1ecdc/ghi v\u00e0o storage c\u1ee7a account hi\u1ec7n t\u1ea1i ho\u1eb7c external account kh\u00e1c Trong \u0111\u00f3, external storage l\u00e0 n\u01a1i l\u01b0u tr\u1eef v\u0129nh vi\u1ec5n t\u1ea5t c\u1ea3 tr\u1ea1ng th\u00e1i v\u00e0 d\u1eef li\u1ec7u li\u00ean quan \u0111\u1ebfn smart contract. Ng\u01b0\u1ee3c l\u1ea1i, c\u00e1c th\u00e0nh ph\u1ea7n c\u00f2n l\u1ea1i nh\u01b0 PC, stack, v\u00e0 memory \u0111\u1ec1u l\u00e0 volatile \u2013 t\u1ee9c l\u00e0 ch\u1ec9 t\u1ed3n t\u1ea1i trong l\u00fac EVM instance \u0111ang ch\u1ea1y v\u00e0 s\u1ebd b\u1ecb reset m\u1ed7i l\u1ea7n instance m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o. T\u01b0\u01a1ng t\u1ef1 nh\u01b0 CPU hi\u1ec3u c\u00e1c l\u1ec7nh trong Instruction Set, EVM c\u0169ng c\u1ea7n hi\u1ec3u c\u00e1c opcode (m\u1ed7i opcode l\u00e0 1 byte => t\u1ed1i \u0111a 256 opcode). M\u1eb7c d\u00f9 kh\u00f4ng li\u1ec7t k\u00ea to\u00e0n b\u1ed9 \u1edf \u0111\u00e2y, nh\u01b0ng ta c\u00f3 th\u1ec3 chia opcode th\u00e0nh c\u00e1c nh\u00f3m ch\u00ednh nh\u01b0 sau: Control Opcodes: \u0111i\u1ec1u khi\u1ec3n PC, stack, memory, storage Arithmetic & Bitwise: nh\u01b0 ADD, MUL, AND, OR, XOR\u2026 Contextual Info: truy xu\u1ea5t th\u00f4ng tin block, transaction, msg.sender Log: t\u1ea1o log record (LOG0, LOG1,\u2026) System-level: t\u1ea1o contract m\u1edbi (CREATE), g\u1ecdi contract kh\u00e1c (CALL, DELEGATECALL), xo\u00e1 contract (SELFDESTRUCT)","title":"EVM Assembly"},{"location":"VBI_Academy/Rust%20learning%20/Rust%20Core%20Concept%20Analysis/","text":"Rust core concepts analysis: references, borrowing and internal mutability The Rust language provides strong guarantees for solving these problems at the compile stage through its ownership and borrowing checking system. This article focuses on a key part of this system: references. We will analyze in detail the differences between shared references (&T) and mutable references (&mut) Tham chi\u1ebfu (References) Rust cho ph\u00e9p b\u1ea1n m\u01b0\u1ee3n gi\u00e1 tr\u1ecb m\u00e0 kh\u00f4ng c\u1ea7n chuy\u1ec3n quy\u1ec1n s\u1edf h\u1eefu , th\u00f4ng qua tham chi\u1ebfu (reference) . M\u1ed9t reference l\u00e0 m\u1ed9t con tr\u1ecf ( pointer ) nh\u01b0ng c\u00f3 k\u00e8m theo \u201ch\u1ee3p \u0111\u1ed3ng\u201d v\u1ec1 quy\u1ec1n truy c\u1eadp. &T \u2013 Shared Reference (tham chi\u1ebfu chia s\u1ebb)","title":"Rust core concepts analysis: references, borrowing and internal mutability"},{"location":"VBI_Academy/Rust%20learning%20/Rust%20Core%20Concept%20Analysis/#rust-core-concepts-analysis-references-borrowing-and-internal-mutability","text":"The Rust language provides strong guarantees for solving these problems at the compile stage through its ownership and borrowing checking system. This article focuses on a key part of this system: references. We will analyze in detail the differences between shared references (&T) and mutable references (&mut)","title":"Rust core concepts analysis: references, borrowing and internal mutability"},{"location":"VBI_Academy/Rust%20learning%20/Rust%20Core%20Concept%20Analysis/#tham-chieu-references","text":"Rust cho ph\u00e9p b\u1ea1n m\u01b0\u1ee3n gi\u00e1 tr\u1ecb m\u00e0 kh\u00f4ng c\u1ea7n chuy\u1ec3n quy\u1ec1n s\u1edf h\u1eefu , th\u00f4ng qua tham chi\u1ebfu (reference) . M\u1ed9t reference l\u00e0 m\u1ed9t con tr\u1ecf ( pointer ) nh\u01b0ng c\u00f3 k\u00e8m theo \u201ch\u1ee3p \u0111\u1ed3ng\u201d v\u1ec1 quy\u1ec1n truy c\u1eadp.","title":"Tham chi\u1ebfu (References)"},{"location":"VBI_Academy/Rust%20learning%20/Rust%20Core%20Concept%20Analysis/#t-shared-reference-tham-chieu-chia-se","text":"","title":"&amp;T \u2013 Shared Reference (tham chi\u1ebfu chia s\u1ebb)"},{"location":"VBI_Academy/Rust%20learning%20/data_types/","text":"Data Types in Rust Rust is a systems programming language designed with performance, safety, and reliability in mind. One of the foundational concepts that supports these goals is data typing . Every value in Rust has a specific data type , which helps the compiler understand how that value should behave. We will learn about the following data types in rust and understand how they work under the hood: * Scalar * Floating point types * Numeric Operation * Boolean * character types * compound types \ud83e\udd77 Static Typing trong Rust l\u00e0 sao? Rust l\u00e0 m\u1ed9t ng\u00f4n ng\u1eef c\u00f3 ki\u1ec3u t\u0129nh ( statically typed language ). \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u ( data type ) c\u1ee7a m\u1ed7i bi\u1ebfn ph\u1ea3i \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh ngay t\u1ea1i th\u1eddi \u0111i\u1ec3m bi\u00ean d\u1ecbch ( compile time ). Nh\u1edd \u0111\u00f3, tr\u00ecnh bi\u00ean d\u1ecbch c\u00f3 th\u1ec3 b\u1eaft l\u1ed7i s\u1edbm ( early bug detection ), v\u00e0 qu\u1ea3n l\u00fd b\u1ed9 nh\u1edb hi\u1ec7u qu\u1ea3 h\u01a1n v\u00ec n\u00f3 bi\u1ebft ch\u00ednh x\u00e1c m\u1ed7i bi\u1ebfn c\u1ea7n bao nhi\u00eau byte. Tuy nhi\u00ean, b\u1ea1n kh\u00f4ng c\u1ea7n l\u00fac n\u00e0o c\u0169ng khai b\u00e1o r\u00f5 ki\u1ec3u bi\u1ebfn. Rust c\u00f3 kh\u1ea3 n\u0103ng suy lu\u1eadn ki\u1ec3u d\u1eef li\u1ec7u ( type inference ) kh\u00e1 th\u00f4ng minh, d\u1ef1a tr\u00ean ng\u1eef c\u1ea3nh. V\u00ed d\u1ee5: let x = 5; // Rust hi\u1ec3u \u0111\u00e2y l\u00e0 i32 let name = \"Harry\"; // hi\u1ec3u l\u00e0 &str T\u1ee9c l\u00e0 b\u1ea1n kh\u00f4ng c\u1ea7n vi\u1ebft let x: i32 = 5 ; n\u1ebfu Rust t\u1ef1 \u0111o\u00e1n \u0111\u01b0\u1ee3c r\u1ed3i. Nh\u01b0ng n\u1ebfu Rust g\u1eb7p t\u00ecnh hu\u1ed1ng kh\u00f4ng th\u1ec3 t\u1ef1 \u0111o\u00e1n ki\u1ec3u \u0111\u01b0\u1ee3c v\u00ed d\u1ee5 nh\u01b0 khi parsing t\u1eeb chu\u1ed7i \"42\" th\u00ec b\u1ea1n ph\u1ea3i cung c\u1ea5p r\u00f5 ki\u1ec3u d\u1eef li\u1ec7u: let guess: u32 = \"42\".parse().expect(\"Not a number!\"); \ud83d\udca1 \u1ede \u0111\u00e2y, \"42\".parse() c\u00f3 th\u1ec3 tr\u1ea3 v\u1ec1 nhi\u1ec1u ki\u1ec3u s\u1ed1 (i32, u32, f64, etc.), n\u00ean Rust c\u1ea7n b\u1ea1n n\u00f3i r\u00f5 l\u00e0 b\u1ea1n mu\u1ed1n guess l\u00e0 ki\u1ec3u g\u00ec (u32 trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y). N\u1ebfu b\u1ea1n kh\u00f4ng s\u1eed d\u1ee5ng bi\u1ebfn \u0111\u00f3 sau khi khai b\u00e1o, Rust s\u1ebd c\u1ea3nh b\u00e1o nh\u01b0 trong h\u00ecnh: \u1ede \u0111\u00e2y, \"42\".parse() c\u00f3 th\u1ec3 tr\u1ea3 v\u1ec1 nhi\u1ec1u ki\u1ec3u s\u1ed1 (i32, u32, f64, etc.), n\u00ean Rust c\u1ea7n b\u1ea1n n\u00f3i r\u00f5 l\u00e0 b\u1ea1n mu\u1ed1n guess l\u00e0 ki\u1ec3u g\u00ec (u32 trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y). warning: unused variable: `guess` help: if this is intentional, prefix it with an underscore: `_guess` \u2728 C\u00e1i hay c\u1ee7a Rust l\u00e0 n\u00f3 c\u1ef1c k\u1ef3 quan t\u00e2m \u0111\u1ebfn \u0111\u1ed9 an to\u00e0n (safety). Ngay c\u1ea3 nh\u1eefng bi\u1ebfn kh\u00f4ng d\u00f9ng c\u0169ng \u0111\u01b0\u1ee3c nh\u1eafc nh\u1edf r\u00f5 r\u00e0ng, \u0111\u1ec3 tr\u00e1nh bug ti\u1ec1m \u1ea9n. \u2699\ufe0f Scalar Types \u2013 Ki\u1ec3u d\u1eef li\u1ec7u c\u00f3 m\u1ed9t gi\u00e1 tr\u1ecb trong Rust Scalar types \u0111\u1ea1i di\u1ec7n cho m\u1ed9t gi\u00e1 tr\u1ecb duy nh\u1ea5t. Trong Rust, c\u00f3 4 ki\u1ec3u scalar ch\u00ednh: 1\ufe0f\u20e3 Integers \u2013 S\u1ed1 nguy\u00ean S\u1ed1 nguy\u00ean l\u00e0 nh\u1eefng con s\u1ed1 kh\u00f4ng c\u00f3 ph\u1ea7n th\u1eadp ph\u00e2n (no floating-point) . Rust chia th\u00e0nh hai lo\u1ea1i: Signed integers (i): ch\u1ee9a \u0111\u01b0\u1ee3c c\u1ea3 s\u1ed1 \u00e2m v\u00e0 s\u1ed1 d\u01b0\u01a1ng. V\u00ed d\u1ee5: -42, 0, 123 Unsigned integers (u): ch\u1ec9 ch\u1ee9a \u0111\u01b0\u1ee3c s\u1ed1 d\u01b0\u01a1ng. V\u00ed d\u1ee5: 0, 200, 999 C\u1ea3 hai lo\u1ea1i \u0111\u1ec1u c\u00f3 c\u00e1c \u201csize\u201d kh\u00e1c nhau nh\u01b0: i8, i16, i32, i64, i128 \u2014 t\u01b0\u01a1ng \u1ee9ng v\u1edbi s\u1ed1 bit l\u01b0u tr\u1eef. T\u01b0\u01a1ng t\u1ef1 v\u1edbi u8, u16, v.v. \ud83d\udca1 Nh\u1edb nha: c\u00e0ng nhi\u1ec1u bit th\u00ec c\u00e0ng ch\u1ee9a \u0111\u01b0\u1ee3c s\u1ed1 to h\u01a1n, nh\u01b0ng c\u0169ng t\u1ed1n nhi\u1ec1u b\u1ed9 nh\u1edb h\u01a1n! Integer Overflow \u2013 Tr\u00e0n s\u1ed1 trong Rust Trong Rust, khi b\u1ea1n g\u00e1n m\u1ed9t gi\u00e1 tr\u1ecb v\u01b0\u1ee3t qu\u00e1 gi\u1edbi h\u1ea1n c\u1ee7a ki\u1ec3u s\u1ed1 nguy\u00ean , th\u00ec s\u1ebd x\u1ea3y ra hi\u1ec7n t\u01b0\u1ee3ng overflow (tr\u00e0n s\u1ed1). V\u00ed d\u1ee5: b\u1ea1n th\u1eed g\u00e1n 256 cho u8 (ki\u1ec3u n\u00e0y ch\u1ec9 ch\u1ee9a t\u1eeb 0 \u0111\u1ebfn 255) th\u00ec chuy\u1ec7n g\u00ec x\u1ea3y ra? \ud83d\udc40 Trong Debug mode : => Rust s\u1ebd panic ngay l\u1eadp t\u1ee9c v\u00e0 b\u00e1o l\u1ed7i. \u0110i\u1ec1u n\u00e0y gi\u00fap b\u1ea1n ph\u00e1t hi\u1ec7n bug s\u1edbm, tr\u00e1nh silent errors C\u00f2n khi Release mode th\u00ec Rust s\u1ebd wrap around gi\u00e1 tr\u1ecb (gi\u1ed1ng ki\u1ec3u quay v\u00f2ng v\u00f2ng): V\u00ed d\u1ee5: 256 th\u00e0nh 0, 257 th\u00e0nh 1, v.v. V\u1eady n\u00ean \u0111\u1ec3 x\u1eed l\u00fd overflow m\u1ed9t c\u00e1ch ch\u1ee7 \u0111\u1ed9ng. Rust cung c\u1ea5p m\u1ed9t s\u1ed1 h\u00e0m \u201cchuy\u00ean tr\u1ecb\u201d overflow \u0111\u1ec3 b\u1ea1n ki\u1ec3m so\u00e1t k\u1ebft qu\u1ea3 r\u00f5 r\u00e0ng h\u01a1n: Method M\u00f4 t\u1ea3 ng\u1eafn g\u1ecdn wrapping_add Cho ra k\u1ebft qu\u1ea3 ki\u1ec3u wrap (gi\u1ed1ng release mode) checked_add Tr\u1ea3 v\u1ec1 None n\u1ebfu b\u1ecb tr\u00e0n overflowing_add Tr\u1ea3 v\u1ec1 tuple (value, is_overflow) saturating_add Tr\u1ea3 v\u1ec1 max/min n\u1ebfu v\u01b0\u1ee3t gi\u1edbi h\u1ea1n Floating-Point Numbers \u2013 S\u1ed1 th\u1ef1c d\u1ea5u ph\u1ea9y \u0111\u1ed9ng Rust h\u1ed7 tr\u1ee3 2 ki\u1ec3u s\u1ed1 th\u1ef1c ch\u00ednh: * f32: s\u1ed1 th\u1ef1c 32-bit (nh\u1eb9, nhanh h\u01a1n, nh\u01b0ng \u0111\u1ed9 ch\u00ednh x\u00e1c th\u1ea5p h\u01a1n) * f64: s\u1ed1 th\u1ef1c 64-bit (default, ch\u00ednh x\u00e1c h\u01a1n, d\u00f9ng ph\u1ed5 bi\u1ebfn) V\u00ed d\u1ee5: let x = 2.0; // ki\u1ec3u f64 \u2013 \u0111\u01b0\u1ee3c suy lu\u1eadn t\u1ef1 \u0111\u1ed9ng let y: f32 = 3.0; // ki\u1ec3u f32 \u2013 \u0111\u01b0\u1ee3c ch\u1ec9 \u0111\u1ecbnh r\u00f5 Boolean \u2013 Ki\u1ec3u logic \u0111\u00fang/sai Rust c\u00f3 ki\u1ec3u bool, \u0111\u1ea1i di\u1ec7n cho hai gi\u00e1 tr\u1ecb: true ho\u1eb7c false . C\u1ef1c k\u1ef3 quan tr\u1ecdng trong \u0111i\u1ec1u ki\u1ec7n, v\u00f2ng l\u1eb7p, v.v. let t = true; let f: bool = false; Th\u01b0\u1eddng d\u00f9ng trong c\u00e1c bi\u1ec3u th\u1ee9c \u0111i\u1ec1u ki\u1ec7n nh\u01b0: if t { println!(\"It\u2019s true!\"); } Reference [1]. https://medium.com/@estheraladioche569/data-types-in-rust-eef697a3408e","title":"Data Types in Rust"},{"location":"VBI_Academy/Rust%20learning%20/data_types/#data-types-in-rust","text":"Rust is a systems programming language designed with performance, safety, and reliability in mind. One of the foundational concepts that supports these goals is data typing . Every value in Rust has a specific data type , which helps the compiler understand how that value should behave. We will learn about the following data types in rust and understand how they work under the hood: * Scalar * Floating point types * Numeric Operation * Boolean * character types * compound types","title":"Data Types in Rust"},{"location":"VBI_Academy/Rust%20learning%20/data_types/#static-typing-trong-rust-la-sao","text":"Rust l\u00e0 m\u1ed9t ng\u00f4n ng\u1eef c\u00f3 ki\u1ec3u t\u0129nh ( statically typed language ). \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u ( data type ) c\u1ee7a m\u1ed7i bi\u1ebfn ph\u1ea3i \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh ngay t\u1ea1i th\u1eddi \u0111i\u1ec3m bi\u00ean d\u1ecbch ( compile time ). Nh\u1edd \u0111\u00f3, tr\u00ecnh bi\u00ean d\u1ecbch c\u00f3 th\u1ec3 b\u1eaft l\u1ed7i s\u1edbm ( early bug detection ), v\u00e0 qu\u1ea3n l\u00fd b\u1ed9 nh\u1edb hi\u1ec7u qu\u1ea3 h\u01a1n v\u00ec n\u00f3 bi\u1ebft ch\u00ednh x\u00e1c m\u1ed7i bi\u1ebfn c\u1ea7n bao nhi\u00eau byte. Tuy nhi\u00ean, b\u1ea1n kh\u00f4ng c\u1ea7n l\u00fac n\u00e0o c\u0169ng khai b\u00e1o r\u00f5 ki\u1ec3u bi\u1ebfn. Rust c\u00f3 kh\u1ea3 n\u0103ng suy lu\u1eadn ki\u1ec3u d\u1eef li\u1ec7u ( type inference ) kh\u00e1 th\u00f4ng minh, d\u1ef1a tr\u00ean ng\u1eef c\u1ea3nh. V\u00ed d\u1ee5: let x = 5; // Rust hi\u1ec3u \u0111\u00e2y l\u00e0 i32 let name = \"Harry\"; // hi\u1ec3u l\u00e0 &str T\u1ee9c l\u00e0 b\u1ea1n kh\u00f4ng c\u1ea7n vi\u1ebft let x: i32 = 5 ; n\u1ebfu Rust t\u1ef1 \u0111o\u00e1n \u0111\u01b0\u1ee3c r\u1ed3i. Nh\u01b0ng n\u1ebfu Rust g\u1eb7p t\u00ecnh hu\u1ed1ng kh\u00f4ng th\u1ec3 t\u1ef1 \u0111o\u00e1n ki\u1ec3u \u0111\u01b0\u1ee3c v\u00ed d\u1ee5 nh\u01b0 khi parsing t\u1eeb chu\u1ed7i \"42\" th\u00ec b\u1ea1n ph\u1ea3i cung c\u1ea5p r\u00f5 ki\u1ec3u d\u1eef li\u1ec7u: let guess: u32 = \"42\".parse().expect(\"Not a number!\"); \ud83d\udca1 \u1ede \u0111\u00e2y, \"42\".parse() c\u00f3 th\u1ec3 tr\u1ea3 v\u1ec1 nhi\u1ec1u ki\u1ec3u s\u1ed1 (i32, u32, f64, etc.), n\u00ean Rust c\u1ea7n b\u1ea1n n\u00f3i r\u00f5 l\u00e0 b\u1ea1n mu\u1ed1n guess l\u00e0 ki\u1ec3u g\u00ec (u32 trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y). N\u1ebfu b\u1ea1n kh\u00f4ng s\u1eed d\u1ee5ng bi\u1ebfn \u0111\u00f3 sau khi khai b\u00e1o, Rust s\u1ebd c\u1ea3nh b\u00e1o nh\u01b0 trong h\u00ecnh: \u1ede \u0111\u00e2y, \"42\".parse() c\u00f3 th\u1ec3 tr\u1ea3 v\u1ec1 nhi\u1ec1u ki\u1ec3u s\u1ed1 (i32, u32, f64, etc.), n\u00ean Rust c\u1ea7n b\u1ea1n n\u00f3i r\u00f5 l\u00e0 b\u1ea1n mu\u1ed1n guess l\u00e0 ki\u1ec3u g\u00ec (u32 trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y). warning: unused variable: `guess` help: if this is intentional, prefix it with an underscore: `_guess` \u2728 C\u00e1i hay c\u1ee7a Rust l\u00e0 n\u00f3 c\u1ef1c k\u1ef3 quan t\u00e2m \u0111\u1ebfn \u0111\u1ed9 an to\u00e0n (safety). Ngay c\u1ea3 nh\u1eefng bi\u1ebfn kh\u00f4ng d\u00f9ng c\u0169ng \u0111\u01b0\u1ee3c nh\u1eafc nh\u1edf r\u00f5 r\u00e0ng, \u0111\u1ec3 tr\u00e1nh bug ti\u1ec1m \u1ea9n.","title":"\ud83e\udd77 Static Typing trong Rust l\u00e0 sao?"},{"location":"VBI_Academy/Rust%20learning%20/data_types/#scalar-types-kieu-du-lieu-co-mot-gia-tri-trong-rust","text":"Scalar types \u0111\u1ea1i di\u1ec7n cho m\u1ed9t gi\u00e1 tr\u1ecb duy nh\u1ea5t. Trong Rust, c\u00f3 4 ki\u1ec3u scalar ch\u00ednh:","title":"\u2699\ufe0f Scalar Types \u2013 Ki\u1ec3u d\u1eef li\u1ec7u c\u00f3 m\u1ed9t gi\u00e1 tr\u1ecb trong Rust"},{"location":"VBI_Academy/Rust%20learning%20/data_types/#1-integers-so-nguyen","text":"S\u1ed1 nguy\u00ean l\u00e0 nh\u1eefng con s\u1ed1 kh\u00f4ng c\u00f3 ph\u1ea7n th\u1eadp ph\u00e2n (no floating-point) . Rust chia th\u00e0nh hai lo\u1ea1i: Signed integers (i): ch\u1ee9a \u0111\u01b0\u1ee3c c\u1ea3 s\u1ed1 \u00e2m v\u00e0 s\u1ed1 d\u01b0\u01a1ng. V\u00ed d\u1ee5: -42, 0, 123 Unsigned integers (u): ch\u1ec9 ch\u1ee9a \u0111\u01b0\u1ee3c s\u1ed1 d\u01b0\u01a1ng. V\u00ed d\u1ee5: 0, 200, 999 C\u1ea3 hai lo\u1ea1i \u0111\u1ec1u c\u00f3 c\u00e1c \u201csize\u201d kh\u00e1c nhau nh\u01b0: i8, i16, i32, i64, i128 \u2014 t\u01b0\u01a1ng \u1ee9ng v\u1edbi s\u1ed1 bit l\u01b0u tr\u1eef. T\u01b0\u01a1ng t\u1ef1 v\u1edbi u8, u16, v.v. \ud83d\udca1 Nh\u1edb nha: c\u00e0ng nhi\u1ec1u bit th\u00ec c\u00e0ng ch\u1ee9a \u0111\u01b0\u1ee3c s\u1ed1 to h\u01a1n, nh\u01b0ng c\u0169ng t\u1ed1n nhi\u1ec1u b\u1ed9 nh\u1edb h\u01a1n!","title":"1\ufe0f\u20e3 Integers \u2013 S\u1ed1 nguy\u00ean"},{"location":"VBI_Academy/Rust%20learning%20/data_types/#integer-overflow-tran-so-trong-rust","text":"Trong Rust, khi b\u1ea1n g\u00e1n m\u1ed9t gi\u00e1 tr\u1ecb v\u01b0\u1ee3t qu\u00e1 gi\u1edbi h\u1ea1n c\u1ee7a ki\u1ec3u s\u1ed1 nguy\u00ean , th\u00ec s\u1ebd x\u1ea3y ra hi\u1ec7n t\u01b0\u1ee3ng overflow (tr\u00e0n s\u1ed1). V\u00ed d\u1ee5: b\u1ea1n th\u1eed g\u00e1n 256 cho u8 (ki\u1ec3u n\u00e0y ch\u1ec9 ch\u1ee9a t\u1eeb 0 \u0111\u1ebfn 255) th\u00ec chuy\u1ec7n g\u00ec x\u1ea3y ra? \ud83d\udc40 Trong Debug mode : => Rust s\u1ebd panic ngay l\u1eadp t\u1ee9c v\u00e0 b\u00e1o l\u1ed7i. \u0110i\u1ec1u n\u00e0y gi\u00fap b\u1ea1n ph\u00e1t hi\u1ec7n bug s\u1edbm, tr\u00e1nh silent errors C\u00f2n khi Release mode th\u00ec Rust s\u1ebd wrap around gi\u00e1 tr\u1ecb (gi\u1ed1ng ki\u1ec3u quay v\u00f2ng v\u00f2ng): V\u00ed d\u1ee5: 256 th\u00e0nh 0, 257 th\u00e0nh 1, v.v. V\u1eady n\u00ean \u0111\u1ec3 x\u1eed l\u00fd overflow m\u1ed9t c\u00e1ch ch\u1ee7 \u0111\u1ed9ng. Rust cung c\u1ea5p m\u1ed9t s\u1ed1 h\u00e0m \u201cchuy\u00ean tr\u1ecb\u201d overflow \u0111\u1ec3 b\u1ea1n ki\u1ec3m so\u00e1t k\u1ebft qu\u1ea3 r\u00f5 r\u00e0ng h\u01a1n: Method M\u00f4 t\u1ea3 ng\u1eafn g\u1ecdn wrapping_add Cho ra k\u1ebft qu\u1ea3 ki\u1ec3u wrap (gi\u1ed1ng release mode) checked_add Tr\u1ea3 v\u1ec1 None n\u1ebfu b\u1ecb tr\u00e0n overflowing_add Tr\u1ea3 v\u1ec1 tuple (value, is_overflow) saturating_add Tr\u1ea3 v\u1ec1 max/min n\u1ebfu v\u01b0\u1ee3t gi\u1edbi h\u1ea1n","title":"Integer Overflow \u2013 Tr\u00e0n s\u1ed1 trong Rust"},{"location":"VBI_Academy/Rust%20learning%20/data_types/#floating-point-numbers-so-thuc-dau-phay-ong","text":"Rust h\u1ed7 tr\u1ee3 2 ki\u1ec3u s\u1ed1 th\u1ef1c ch\u00ednh: * f32: s\u1ed1 th\u1ef1c 32-bit (nh\u1eb9, nhanh h\u01a1n, nh\u01b0ng \u0111\u1ed9 ch\u00ednh x\u00e1c th\u1ea5p h\u01a1n) * f64: s\u1ed1 th\u1ef1c 64-bit (default, ch\u00ednh x\u00e1c h\u01a1n, d\u00f9ng ph\u1ed5 bi\u1ebfn) V\u00ed d\u1ee5: let x = 2.0; // ki\u1ec3u f64 \u2013 \u0111\u01b0\u1ee3c suy lu\u1eadn t\u1ef1 \u0111\u1ed9ng let y: f32 = 3.0; // ki\u1ec3u f32 \u2013 \u0111\u01b0\u1ee3c ch\u1ec9 \u0111\u1ecbnh r\u00f5","title":"Floating-Point Numbers \u2013 S\u1ed1 th\u1ef1c d\u1ea5u ph\u1ea9y \u0111\u1ed9ng"},{"location":"VBI_Academy/Rust%20learning%20/data_types/#boolean-kieu-logic-ungsai","text":"Rust c\u00f3 ki\u1ec3u bool, \u0111\u1ea1i di\u1ec7n cho hai gi\u00e1 tr\u1ecb: true ho\u1eb7c false . C\u1ef1c k\u1ef3 quan tr\u1ecdng trong \u0111i\u1ec1u ki\u1ec7n, v\u00f2ng l\u1eb7p, v.v. let t = true; let f: bool = false; Th\u01b0\u1eddng d\u00f9ng trong c\u00e1c bi\u1ec3u th\u1ee9c \u0111i\u1ec1u ki\u1ec7n nh\u01b0: if t { println!(\"It\u2019s true!\"); }","title":"Boolean \u2013 Ki\u1ec3u logic \u0111\u00fang/sai"},{"location":"VBI_Academy/Rust%20learning%20/data_types/#reference","text":"[1]. https://medium.com/@estheraladioche569/data-types-in-rust-eef697a3408e","title":"Reference"},{"location":"collections/Awesome%20Smart%20Contracts/","text":"Awesome Smart Contracts The best smart contracts in one place. Protocol Type Repository Documentation The Bytecode Episode Aave Lending https://github.com/aave/protocol-v2 Docs N/A Ajna Lending https://github.com/ajna-finance/ajna-core Docs N/A Art Gobblers NFT https://github.com/artgobblers/art-gobblers Docs N/A Balancer V2 DEX https://github.com/balancer/balancer-v2-monorepo Docs N/A Balancer V3 DEX https://github.com/balancer/balancer-v3-monorepo Docs N/A Compound Lending https://github.com/compound-finance/compound-protocol Docs N/A Curve DEX https://github.com/curvefi/curve-contract Docs N/A EigenLayer Restaking https://github.com/Layr-Labs/eigenlayer-contracts Docs N/A MakerDAO Stablecoin https://github.com/makerdao/dss Docs N/A Maple Lending https://github.com/maple-labs/maple-core-v2 Docs Youtube Sablier V2 Streaming https://github.com/sablier-labs/v2-core Docs Youtube Seaport NFT Marketplace https://github.com/ProjectOpenSea/seaport Docs Youtube \ud83d\udc0d snekmate Library https://github.com/pcaversaccio/snekmate Docs N/A Solady Library https://github.com/Vectorized/solady Docs N/A Solmate Library https://github.com/transmissions11/solmate Docs N/A Synthetix Derivatives https://github.com/Synthetixio/synthetix Docs N/A Uniswap V2 DEX https://github.com/Uniswap/uniswap-v2-core Docs N/A Uniswap V3 DEX https://github.com/Uniswap/v3-core Docs N/A Yearn V3 Yield Farming https://github.com/yearn/yearn-vaults-v3 Docs N/A Github: https://github.com/shafu0x/awesome-smart-contracts/blob/main/README.md?plain=1","title":"Awesome Smart Contracts"},{"location":"collections/Awesome%20Smart%20Contracts/#awesome-smart-contracts","text":"The best smart contracts in one place. Protocol Type Repository Documentation The Bytecode Episode Aave Lending https://github.com/aave/protocol-v2 Docs N/A Ajna Lending https://github.com/ajna-finance/ajna-core Docs N/A Art Gobblers NFT https://github.com/artgobblers/art-gobblers Docs N/A Balancer V2 DEX https://github.com/balancer/balancer-v2-monorepo Docs N/A Balancer V3 DEX https://github.com/balancer/balancer-v3-monorepo Docs N/A Compound Lending https://github.com/compound-finance/compound-protocol Docs N/A Curve DEX https://github.com/curvefi/curve-contract Docs N/A EigenLayer Restaking https://github.com/Layr-Labs/eigenlayer-contracts Docs N/A MakerDAO Stablecoin https://github.com/makerdao/dss Docs N/A Maple Lending https://github.com/maple-labs/maple-core-v2 Docs Youtube Sablier V2 Streaming https://github.com/sablier-labs/v2-core Docs Youtube Seaport NFT Marketplace https://github.com/ProjectOpenSea/seaport Docs Youtube \ud83d\udc0d snekmate Library https://github.com/pcaversaccio/snekmate Docs N/A Solady Library https://github.com/Vectorized/solady Docs N/A Solmate Library https://github.com/transmissions11/solmate Docs N/A Synthetix Derivatives https://github.com/Synthetixio/synthetix Docs N/A Uniswap V2 DEX https://github.com/Uniswap/uniswap-v2-core Docs N/A Uniswap V3 DEX https://github.com/Uniswap/v3-core Docs N/A Yearn V3 Yield Farming https://github.com/yearn/yearn-vaults-v3 Docs N/A Github: https://github.com/shafu0x/awesome-smart-contracts/blob/main/README.md?plain=1","title":"Awesome Smart Contracts"},{"location":"collections/Hackathon%2C%20Grant%2C%20and%20Bounty%20Platforms/","text":"Hackathon, Grant, and Bounty Platforms For developers, participating in hackathons is an important way to help us quickly improve our technology, participate in ecological contributions, accumulate project experience, obtain opportunities, enhance communication, integrate into the circle and establish connections. Hackathons are usually organized by public chain foundations, infrastructure project owners, funds and incubators to enhance brand image, attract more user attention and creative developers to participate in ecosystem construction. There are also investors who participate in order to discover potential talents and projects. Most of the hackathons held by ETHGlobal are related to the EVM ecosystem, covering multiple tracks such as DeFi, NFT and infrastructure: https://ethglobal.com/ DoraHacks is a multi-chain developer incentive platform and hackathon platform. Gitcoin is a public goods support platform. Projects can raise funds in Gitcoin DAO, which is very similar to participating in a hackathon, except that the time and form of receiving bonuses are different . Chainlink has organized hackathons almost every year in recent years. Colosseum is a platform that combines a hackathon, accelerator, and venture fund focused on accelerating the Solana ecosystem. Sui Overflow is Sui\u2019s first global virtual hackathon. Other public chains, such as Avanlanche , Ton Blockchain , Polygon , Monad , Aptos , etc. will hold corresponding hackathons. If you are interested in a certain blockchain, you can directly observe their social media or official website to get the latest hackathon and Grant news. Some bounty platforms HackenProof Immunefi certik dework hashlock cyfrin-codehawks audit task upwork tags: #web3hackathons #web3social","title":"Hackathon, Grant, and Bounty Platforms"},{"location":"collections/Hackathon%2C%20Grant%2C%20and%20Bounty%20Platforms/#hackathon-grant-and-bounty-platforms","text":"For developers, participating in hackathons is an important way to help us quickly improve our technology, participate in ecological contributions, accumulate project experience, obtain opportunities, enhance communication, integrate into the circle and establish connections. Hackathons are usually organized by public chain foundations, infrastructure project owners, funds and incubators to enhance brand image, attract more user attention and creative developers to participate in ecosystem construction. There are also investors who participate in order to discover potential talents and projects. Most of the hackathons held by ETHGlobal are related to the EVM ecosystem, covering multiple tracks such as DeFi, NFT and infrastructure: https://ethglobal.com/ DoraHacks is a multi-chain developer incentive platform and hackathon platform. Gitcoin is a public goods support platform. Projects can raise funds in Gitcoin DAO, which is very similar to participating in a hackathon, except that the time and form of receiving bonuses are different . Chainlink has organized hackathons almost every year in recent years. Colosseum is a platform that combines a hackathon, accelerator, and venture fund focused on accelerating the Solana ecosystem. Sui Overflow is Sui\u2019s first global virtual hackathon. Other public chains, such as Avanlanche , Ton Blockchain , Polygon , Monad , Aptos , etc. will hold corresponding hackathons. If you are interested in a certain blockchain, you can directly observe their social media or official website to get the latest hackathon and Grant news.","title":"Hackathon, Grant, and Bounty Platforms"},{"location":"collections/Hackathon%2C%20Grant%2C%20and%20Bounty%20Platforms/#some-bounty-platforms","text":"HackenProof Immunefi certik dework hashlock cyfrin-codehawks audit task upwork tags: #web3hackathons #web3social","title":"Some bounty platforms"},{"location":"collections/How%20to%20secure%20Smart%20Contracts/","text":"How to secure Smart Contracts unit tests fuzz tests fork tests invariant tests formal verification static analysis mutation testing static Analysis solo Audit in House Audit audit by Tier-B Company contests audit by Tier-A Company AI audit","title":"How to secure Smart Contracts"},{"location":"collections/How%20to%20secure%20Smart%20Contracts/#how-to-secure-smart-contracts","text":"unit tests fuzz tests fork tests invariant tests formal verification static analysis mutation testing static Analysis solo Audit in House Audit audit by Tier-B Company contests audit by Tier-A Company AI audit","title":"How to secure Smart Contracts"},{"location":"collections/Web3%20Job%20Search%20Sites/","text":"Remote Job Search Cryptojobslist Cryptocurrency Engineering Jobs: https://cryptocurrencyjobs.co/engineering/ https://www.remote3.co/ https://crypto.jobs/ https://www.defi.jobs/ https://blockchain.works-hub.com/web3-jobs https://github.com/remoteintech/remote-jobs Hackathon, Grant, and Bounty Platforms For developers, participating in hackathons is an important way to help us quickly improve our technology, participate in ecological contributions, accumulate project experience, obtain opportunities, enhance communication, integrate into the circle and establish connections. Hackathons are usually organized by public chain foundations, infrastructure project owners, funds and incubators to enhance brand image, attract more user attention and creative developers to participate in ecosystem construction. There are also investors who participate in order to discover potential talents and projects.","title":"Remote Job Search"},{"location":"collections/Web3%20Job%20Search%20Sites/#remote-job-search","text":"Cryptojobslist Cryptocurrency Engineering Jobs: https://cryptocurrencyjobs.co/engineering/ https://www.remote3.co/ https://crypto.jobs/ https://www.defi.jobs/ https://blockchain.works-hub.com/web3-jobs https://github.com/remoteintech/remote-jobs","title":"Remote Job Search"},{"location":"collections/Web3%20Job%20Search%20Sites/#hackathon-grant-and-bounty-platforms","text":"For developers, participating in hackathons is an important way to help us quickly improve our technology, participate in ecological contributions, accumulate project experience, obtain opportunities, enhance communication, integrate into the circle and establish connections. Hackathons are usually organized by public chain foundations, infrastructure project owners, funds and incubators to enhance brand image, attract more user attention and creative developers to participate in ecosystem construction. There are also investors who participate in order to discover potential talents and projects.","title":"Hackathon, Grant, and Bounty Platforms"},{"location":"collections/Blockchain%20Interview%20Guide/How%20become%20a%20blockchain%20enginner%3F/","text":"interview ideas and interview questions in blockchain. Link: https://github.com/the-web3/chaineye-blockchain-interview/tree/main","title":"interview ideas and interview questions in blockchain."},{"location":"collections/Blockchain%20Interview%20Guide/How%20become%20a%20blockchain%20enginner%3F/#interview-ideas-and-interview-questions-in-blockchain","text":"Link: https://github.com/the-web3/chaineye-blockchain-interview/tree/main","title":"interview ideas and interview questions in blockchain."},{"location":"collections/Defi/ERC-6551%20Token%20Bound%20Accounts/","text":"ERC-6551 Token Bound Accounts (aka how NFTs can own assets). Every NFT has it owns wallet The ERC-6551 standard specifies how an NFT can \"own\" other assets. Essentially, the NFT owns a variation of a \"smart wallet\" that itself is the owner of other assets. If you want to bring together your knowledge of proxies, assembly optimization, NFTs, and several other ERCs, ERC-6551 will do that for you! The interace interface IERC6551Registry { function createAccount( address implementation, uint256 chainId, address tokenContract, uint256 tokenId, uint256 salt, bytes calldata initData ) external returns (address) ; function account( address implementation, uint256 chainId, address tokenContract, uint256 tokenId, uint256 salt ) external view returns (address); } Case studies AI-powered simulation game using NFT character Mint unique digital signature NFTS video: https://www.youtube.com/watch?v=TNuLH47vZ2w The article here: https://medium.com/klaytn/revolutionizing-nfts-how-erc6551-token-bound-accounts-drive-nft-innovation-b7c262a2302c","title":"ERC-6551 Token Bound Accounts"},{"location":"collections/Defi/ERC-6551%20Token%20Bound%20Accounts/#erc-6551-token-bound-accounts","text":"(aka how NFTs can own assets). Every NFT has it owns wallet The ERC-6551 standard specifies how an NFT can \"own\" other assets. Essentially, the NFT owns a variation of a \"smart wallet\" that itself is the owner of other assets. If you want to bring together your knowledge of proxies, assembly optimization, NFTs, and several other ERCs, ERC-6551 will do that for you! The interace interface IERC6551Registry { function createAccount( address implementation, uint256 chainId, address tokenContract, uint256 tokenId, uint256 salt, bytes calldata initData ) external returns (address) ; function account( address implementation, uint256 chainId, address tokenContract, uint256 tokenId, uint256 salt ) external view returns (address); }","title":"ERC-6551 Token Bound Accounts"},{"location":"collections/Defi/ERC-6551%20Token%20Bound%20Accounts/#case-studies","text":"AI-powered simulation game using NFT character Mint unique digital signature NFTS video: https://www.youtube.com/watch?v=TNuLH47vZ2w The article here: https://medium.com/klaytn/revolutionizing-nfts-how-erc6551-token-bound-accounts-drive-nft-innovation-b7c262a2302c","title":"Case studies"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/","text":"What is a liquidity pool? What is a liquidity pool? Uniswap ho\u1ea1t \u0111\u1ed9ng kh\u00f4ng gi\u1ed1ng s\u00e0n t\u1eadp trung (CEX). N\u00f3 kh\u00f4ng c\u00f3 order book. Thay v\u00e0o \u0111\u00f3, n\u00f3 d\u00f9ng m\u1ed9t th\u1ee9 g\u1ecdi l\u00e0 liquidity pool n\u01a1i m\u00e0 ng\u01b0\u1eddi d\u00f9ng ( liquidity provider) \u0111\u1ed5 c\u1ea3 ETH v\u00e0 token v\u00e0o \u0111\u1ec3 ng\u01b0\u1eddi kh\u00e1c swap qua l\u1ea1i. Liquidity Pool l\u00e0 g\u00ec? Liquidity Pool (LP) l\u00e0 m\u1ed9t smart contract ch\u1ee9a hai lo\u1ea1i t\u00e0i s\u1ea3n (vd: ETH v\u00e0 DAI). Ai c\u0169ng c\u00f3 th\u1ec3 swap qua l\u1ea1i gi\u1eefa 2 token n\u00e0y trong pool, kh\u00f4ng c\u1ea7n order book, kh\u00f4ng c\u1ea7n matching engine. LP Token l\u00e0 g\u00ec? Khi th\u00eam thanh kho\u1ea3n v\u00e0o pool, Uniswap s\u1ebd mint ra LP token \u0111\u1ec3 ch\u1ee9ng nh\u1eadn r\u1eb1ng: \u201cYou now own a piece of the pool, homie.\u201d \ud83d\udcb8 LP token gi\u1ed1ng v\u00e9 x\u00e1c nh\u1eadn quy\u1ec1n s\u1edf h\u1eefu. T\u1ea5t nhi\u00ean LP c\u0169ng l\u00e0 token chu\u1ea9n ERC-20 n\u00ean b\u1ea1n c\u00f3 th\u1ec3 chuy\u1ec3n nh\u01b0\u1ee3ng, b\u00e1n, farm, ho\u1eb7c c\u1ea7m \u0111i th\u1ebf ch\u1ea5p n\u1ebfu protocol n\u00e0o \u0111\u00f3 cho ph\u00e9p. \u203c\ufe0f N\u1ebfu b\u1ea1n chuy\u1ec3n LP token cho ng\u01b0\u1eddi kh\u00e1c, t\u1ee9c l\u00e0 b\u1ea1n \u0111\u00e3 chuy\u1ec3n quy\u1ec1n s\u1edf h\u1eefu pool cho h\u1ecd lu\u00f4n. H\u1ecd c\u00f3 th\u1ec3 r\u00fat ETH v\u00e0 token ra thay b\u1ea1n \ud83e\udee0 Ai l\u00e0 Liquidity Provider (LP-er)? L\u00e0 ng\u01b0\u1eddi ch\u01a1i ch\u1ecbu b\u1ecf ETH v\u00e0 token (c\u00f9ng gi\u00e1 tr\u1ecb) v\u00e0o pool. Khi swapper swap token trong pool \u2192 LP-er nh\u1eadn \u0111\u01b0\u1ee3c ph\u00ed giao d\u1ecbch (0.3%/swap tr\u00ean V1). /** * @notice Remove liquidity, burn LP tokens, and retrieve ETH and tokens proportionally * @param amount The amount of LP tokens to burn * @param min_eth The minimum amount of ETH expected to receive * @param min_tokens The minimum amount of tokens expected to receive * @param deadline The transaction deadline (timestamp) * @return The actual amounts of ETH and tokens withdrawn */ function removeLiquidity( uint256 amount, uint256 min_eth, uint256 min_tokens, uint256 deadline ) external returns (uint256, uint256) { // Validate input parameters require(amount > 0, \"Factory: INVALID_AMOUNT\"); // LP token amount must be greater than 0 require(deadline >= block.timestamp, \"Factory: DEADLINE_EXCEEDED\"); // Ensure the transaction hasn't expired // Get the total current liquidity uint256 totalLiquidity = totalSupply; require(totalLiquidity > 0, \"Factory: EMPTY_LIQUIDITY\"); // Ensure there is liquidity in the pool // Calculate the amount of ETH and tokens to return proportionally uint256 tokenReserve = IERC20(token).balanceOf(address(this)); // Get the current token balance in the contract uint256 ethWithdrawn = (amount * address(this).balance) / totalLiquidity; // Proportional ETH to return uint256 tokenWithdrawn = (amount * tokenReserve) / totalLiquidity; // Proportional token to return // Ensure the returned amounts meet the minimum expected values (to prevent slippage) require(ethWithdrawn >= min_eth, \"Factory: ETH_UNDERFLOW\"); require(tokenWithdrawn >= min_tokens, \"Factory: TOKEN_UNDERFLOW\"); // Burn the user's LP tokens using inherited _burn function _burn(msg.sender, amount); // Safely send ETH back to the user (bool success, ) = msg.sender.call{value: ethWithdrawn}(\"\"); require(success, \"Factory: ETH_TRANSFER_FAILED\"); // Ensure ETH transfer succeeds // Send tokens back to the user require(IERC20(token).transfer(msg.sender, tokenWithdrawn), \"Factory: TOKEN_TRANSFER_FAILED\"); // Emit the RemoveLiquidity event emit RemoveLiquidity(msg.sender, ethWithdrawn, tokenWithdrawn); // Return the actual amounts of ETH and tokens withdrawn return (ethWithdrawn, tokenWithdrawn); } Calculation principle of proportional extraction Uniswap V1 s\u1eed d\u1ee5ng nguy\u00ean t\u1eafc c\u1ed1t l\u00f5i l\u00e0 ph\u00e2n ph\u1ed1i theo t\u1ef7 l\u1ec7 : C\u00f4ng th\u1ee9c t\u00ednh: * S\u1ed1 ETH c\u00f3 th\u1ec3 r\u00fat = (S\u1ed1 l\u01b0\u1ee3ng LP token ng\u01b0\u1eddi d\u00f9ng n\u1eafm / T\u1ed5ng s\u1ed1 LP token trong pool) \u00d7 T\u1ed5ng l\u01b0\u1ee3ng ETH trong pool S\u1ed1 token c\u00f3 th\u1ec3 r\u00fat = (S\u1ed1 l\u01b0\u1ee3ng LP token ng\u01b0\u1eddi d\u00f9ng n\u1eafm / T\u1ed5ng s\u1ed1 LP token trong pool) \u00d7 T\u1ed5ng l\u01b0\u1ee3ng token trong pool V\u00ed d\u1ee5 c\u1ee5 th\u1ec3: Gi\u1ea3 s\u1eed tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i c\u1ee7a pool l\u00e0: * T\u1ed5ng c\u1ed9ng c\u00f3 1000 LP token * Pool ch\u1ee9a 10 ETH * Pool c\u00f3 20,000 USDC * M\u00ecnh \u0111ang n\u1eafm 100 LP token (t\u1ee9c l\u00e0 chi\u1ebfm 10% t\u1ed5ng pool) V\u1eady m\u00ecnh c\u00f3 th\u1ec3 r\u00fat: * ETH: 100 \u00f7 1000 \u00d7 10 = 1 ETH * USDC: 100 \u00f7 1000 \u00d7 20000 = 2000 USDC C\u01a1 ch\u1ebf n\u00e0y \u0111\u1ea3m b\u1ea3o r\u1eb1ng ng\u01b0\u1eddi cung c\u1ea5p thanh kho\u1ea3n s\u1ebd nh\u1eadn l\u1ea1i l\u01b0\u1ee3ng t\u00e0i s\u1ea3n t\u01b0\u01a1ng \u1ee9ng v\u1edbi t\u1ef7 l\u1ec7 \u0111\u00f3ng g\u00f3p c\u1ee7a m\u00ecnh, bao g\u1ed3m c\u1ea3 ph\u1ea7n ph\u00ed giao d\u1ecbch \u0111\u00e3 t\u00edch l\u0169y trong qu\u00e1 kh\u1ee9. \u2753T\u1ea1i sao ph\u1ea3i h\u1ee7y (burn) LP token? Nh\u01b0 \u0111\u1ec1 c\u1eadp \u1edf tr\u00ean, LP token l\u00e0 ch\u1ee9ng ch\u1ec9 th\u1ec3 hi\u1ec7n ph\u1ea7n s\u1edf h\u1eefu c\u1ee7a m\u00ecnh trong pool. Khi r\u00fat thanh kho\u1ea3n, LP token ph\u1ea3i \u0111\u01b0\u1ee3c ti\u00eau h\u1ee7y \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o t\u00ednh to\u00e1n ph\u1ea7n tr\u0103m s\u1edf h\u1eefu c\u00f2n l\u1ea1i c\u1ee7a c\u00e1c LP kh\u00e1c l\u00e0 ch\u00ednh x\u00e1c. Ngo\u00e0i ra ng\u0103n vi\u1ec7c LP token b\u1ecb t\u00e1i s\u1eed d\u1ee5ng sai m\u1ee5c \u0111\u00edch. Duy tr\u00ec t\u1ef7 l\u1ec7 gi\u1eefa t\u1ed5ng LP token v\u00e0 t\u1ed5ng t\u00e0i s\u1ea3n trong pool Slippage (Tr\u01b0\u1ee3t gi\u00e1) l\u00e0 g\u00ec? Slippage l\u00e0 s\u1ef1 ch\u00eanh l\u1ec7ch gi\u1eefa gi\u00e1 b\u1ea1n k\u1ef3 v\u1ecdng v\u00e0 gi\u00e1 th\u1ef1c t\u1ebf khi giao d\u1ecbch \u0111\u01b0\u1ee3c th\u1ef1c thi. Khi b\u1ea1n remove liquidity, slippage th\u01b0\u1eddng \u0111\u1ebfn t\u1eeb bi\u1ebfn \u0111\u1ed9ng gi\u00e1 \u0111\u1ed9t ng\u1ed9t trong th\u1eddi gian ch\u1edd giao d\u1ecbch x\u00e1c nh\u1eadn. C\u01a1 ch\u1ebf b\u1ea3o v\u1ec7 slippage ho\u1ea1t \u0111\u1ed9ng nh\u01b0 th\u1ebf n\u00e0o? B\u1ea1n ch\u1ecdn m\u1ee9c slippage tolerance (v\u00ed d\u1ee5: 5%) tr\u00ean Dapp Dapp s\u1ebd t\u00ednh to\u00e1n tr\u01b0\u1edbc min_eth v\u00e0 min_tokens d\u1ef1a theo gi\u00e1 hi\u1ec7n t\u1ea1i v\u00e0 m\u1ee9c slippage \u0111\u00f3 N\u1ebfu l\u01b0\u1ee3ng th\u1ef1c nh\u1eadn th\u1ea5p h\u01a1n m\u1ee9c t\u1ed1i thi\u1ec3u \u2192 giao d\u1ecbch s\u1ebd b\u1ecb revert (th\u1ea5t b\u1ea1i)","title":"What is a liquidity pool?"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/#what-is-a-liquidity-pool","text":"What is a liquidity pool? Uniswap ho\u1ea1t \u0111\u1ed9ng kh\u00f4ng gi\u1ed1ng s\u00e0n t\u1eadp trung (CEX). N\u00f3 kh\u00f4ng c\u00f3 order book. Thay v\u00e0o \u0111\u00f3, n\u00f3 d\u00f9ng m\u1ed9t th\u1ee9 g\u1ecdi l\u00e0 liquidity pool n\u01a1i m\u00e0 ng\u01b0\u1eddi d\u00f9ng ( liquidity provider) \u0111\u1ed5 c\u1ea3 ETH v\u00e0 token v\u00e0o \u0111\u1ec3 ng\u01b0\u1eddi kh\u00e1c swap qua l\u1ea1i.","title":"What is a liquidity pool?"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/#liquidity-pool-la-gi","text":"Liquidity Pool (LP) l\u00e0 m\u1ed9t smart contract ch\u1ee9a hai lo\u1ea1i t\u00e0i s\u1ea3n (vd: ETH v\u00e0 DAI). Ai c\u0169ng c\u00f3 th\u1ec3 swap qua l\u1ea1i gi\u1eefa 2 token n\u00e0y trong pool, kh\u00f4ng c\u1ea7n order book, kh\u00f4ng c\u1ea7n matching engine.","title":"Liquidity Pool l\u00e0 g\u00ec?"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/#lp-token-la-gi","text":"Khi th\u00eam thanh kho\u1ea3n v\u00e0o pool, Uniswap s\u1ebd mint ra LP token \u0111\u1ec3 ch\u1ee9ng nh\u1eadn r\u1eb1ng: \u201cYou now own a piece of the pool, homie.\u201d \ud83d\udcb8 LP token gi\u1ed1ng v\u00e9 x\u00e1c nh\u1eadn quy\u1ec1n s\u1edf h\u1eefu. T\u1ea5t nhi\u00ean LP c\u0169ng l\u00e0 token chu\u1ea9n ERC-20 n\u00ean b\u1ea1n c\u00f3 th\u1ec3 chuy\u1ec3n nh\u01b0\u1ee3ng, b\u00e1n, farm, ho\u1eb7c c\u1ea7m \u0111i th\u1ebf ch\u1ea5p n\u1ebfu protocol n\u00e0o \u0111\u00f3 cho ph\u00e9p. \u203c\ufe0f N\u1ebfu b\u1ea1n chuy\u1ec3n LP token cho ng\u01b0\u1eddi kh\u00e1c, t\u1ee9c l\u00e0 b\u1ea1n \u0111\u00e3 chuy\u1ec3n quy\u1ec1n s\u1edf h\u1eefu pool cho h\u1ecd lu\u00f4n. H\u1ecd c\u00f3 th\u1ec3 r\u00fat ETH v\u00e0 token ra thay b\u1ea1n \ud83e\udee0","title":"LP Token l\u00e0 g\u00ec?"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/#ai-la-liquidity-provider-lp-er","text":"L\u00e0 ng\u01b0\u1eddi ch\u01a1i ch\u1ecbu b\u1ecf ETH v\u00e0 token (c\u00f9ng gi\u00e1 tr\u1ecb) v\u00e0o pool. Khi swapper swap token trong pool \u2192 LP-er nh\u1eadn \u0111\u01b0\u1ee3c ph\u00ed giao d\u1ecbch (0.3%/swap tr\u00ean V1). /** * @notice Remove liquidity, burn LP tokens, and retrieve ETH and tokens proportionally * @param amount The amount of LP tokens to burn * @param min_eth The minimum amount of ETH expected to receive * @param min_tokens The minimum amount of tokens expected to receive * @param deadline The transaction deadline (timestamp) * @return The actual amounts of ETH and tokens withdrawn */ function removeLiquidity( uint256 amount, uint256 min_eth, uint256 min_tokens, uint256 deadline ) external returns (uint256, uint256) { // Validate input parameters require(amount > 0, \"Factory: INVALID_AMOUNT\"); // LP token amount must be greater than 0 require(deadline >= block.timestamp, \"Factory: DEADLINE_EXCEEDED\"); // Ensure the transaction hasn't expired // Get the total current liquidity uint256 totalLiquidity = totalSupply; require(totalLiquidity > 0, \"Factory: EMPTY_LIQUIDITY\"); // Ensure there is liquidity in the pool // Calculate the amount of ETH and tokens to return proportionally uint256 tokenReserve = IERC20(token).balanceOf(address(this)); // Get the current token balance in the contract uint256 ethWithdrawn = (amount * address(this).balance) / totalLiquidity; // Proportional ETH to return uint256 tokenWithdrawn = (amount * tokenReserve) / totalLiquidity; // Proportional token to return // Ensure the returned amounts meet the minimum expected values (to prevent slippage) require(ethWithdrawn >= min_eth, \"Factory: ETH_UNDERFLOW\"); require(tokenWithdrawn >= min_tokens, \"Factory: TOKEN_UNDERFLOW\"); // Burn the user's LP tokens using inherited _burn function _burn(msg.sender, amount); // Safely send ETH back to the user (bool success, ) = msg.sender.call{value: ethWithdrawn}(\"\"); require(success, \"Factory: ETH_TRANSFER_FAILED\"); // Ensure ETH transfer succeeds // Send tokens back to the user require(IERC20(token).transfer(msg.sender, tokenWithdrawn), \"Factory: TOKEN_TRANSFER_FAILED\"); // Emit the RemoveLiquidity event emit RemoveLiquidity(msg.sender, ethWithdrawn, tokenWithdrawn); // Return the actual amounts of ETH and tokens withdrawn return (ethWithdrawn, tokenWithdrawn); }","title":"Ai l\u00e0 Liquidity Provider (LP-er)?"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/#calculation-principle-of-proportional-extraction","text":"Uniswap V1 s\u1eed d\u1ee5ng nguy\u00ean t\u1eafc c\u1ed1t l\u00f5i l\u00e0 ph\u00e2n ph\u1ed1i theo t\u1ef7 l\u1ec7 : C\u00f4ng th\u1ee9c t\u00ednh: * S\u1ed1 ETH c\u00f3 th\u1ec3 r\u00fat = (S\u1ed1 l\u01b0\u1ee3ng LP token ng\u01b0\u1eddi d\u00f9ng n\u1eafm / T\u1ed5ng s\u1ed1 LP token trong pool) \u00d7 T\u1ed5ng l\u01b0\u1ee3ng ETH trong pool S\u1ed1 token c\u00f3 th\u1ec3 r\u00fat = (S\u1ed1 l\u01b0\u1ee3ng LP token ng\u01b0\u1eddi d\u00f9ng n\u1eafm / T\u1ed5ng s\u1ed1 LP token trong pool) \u00d7 T\u1ed5ng l\u01b0\u1ee3ng token trong pool V\u00ed d\u1ee5 c\u1ee5 th\u1ec3: Gi\u1ea3 s\u1eed tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i c\u1ee7a pool l\u00e0: * T\u1ed5ng c\u1ed9ng c\u00f3 1000 LP token * Pool ch\u1ee9a 10 ETH * Pool c\u00f3 20,000 USDC * M\u00ecnh \u0111ang n\u1eafm 100 LP token (t\u1ee9c l\u00e0 chi\u1ebfm 10% t\u1ed5ng pool) V\u1eady m\u00ecnh c\u00f3 th\u1ec3 r\u00fat: * ETH: 100 \u00f7 1000 \u00d7 10 = 1 ETH * USDC: 100 \u00f7 1000 \u00d7 20000 = 2000 USDC C\u01a1 ch\u1ebf n\u00e0y \u0111\u1ea3m b\u1ea3o r\u1eb1ng ng\u01b0\u1eddi cung c\u1ea5p thanh kho\u1ea3n s\u1ebd nh\u1eadn l\u1ea1i l\u01b0\u1ee3ng t\u00e0i s\u1ea3n t\u01b0\u01a1ng \u1ee9ng v\u1edbi t\u1ef7 l\u1ec7 \u0111\u00f3ng g\u00f3p c\u1ee7a m\u00ecnh, bao g\u1ed3m c\u1ea3 ph\u1ea7n ph\u00ed giao d\u1ecbch \u0111\u00e3 t\u00edch l\u0169y trong qu\u00e1 kh\u1ee9.","title":"Calculation principle of proportional extraction"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/#tai-sao-phai-huy-burn-lp-token","text":"Nh\u01b0 \u0111\u1ec1 c\u1eadp \u1edf tr\u00ean, LP token l\u00e0 ch\u1ee9ng ch\u1ec9 th\u1ec3 hi\u1ec7n ph\u1ea7n s\u1edf h\u1eefu c\u1ee7a m\u00ecnh trong pool. Khi r\u00fat thanh kho\u1ea3n, LP token ph\u1ea3i \u0111\u01b0\u1ee3c ti\u00eau h\u1ee7y \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o t\u00ednh to\u00e1n ph\u1ea7n tr\u0103m s\u1edf h\u1eefu c\u00f2n l\u1ea1i c\u1ee7a c\u00e1c LP kh\u00e1c l\u00e0 ch\u00ednh x\u00e1c. Ngo\u00e0i ra ng\u0103n vi\u1ec7c LP token b\u1ecb t\u00e1i s\u1eed d\u1ee5ng sai m\u1ee5c \u0111\u00edch. Duy tr\u00ec t\u1ef7 l\u1ec7 gi\u1eefa t\u1ed5ng LP token v\u00e0 t\u1ed5ng t\u00e0i s\u1ea3n trong pool","title":"\u2753T\u1ea1i sao ph\u1ea3i h\u1ee7y (burn) LP token?"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/#slippage-truot-gia-la-gi","text":"Slippage l\u00e0 s\u1ef1 ch\u00eanh l\u1ec7ch gi\u1eefa gi\u00e1 b\u1ea1n k\u1ef3 v\u1ecdng v\u00e0 gi\u00e1 th\u1ef1c t\u1ebf khi giao d\u1ecbch \u0111\u01b0\u1ee3c th\u1ef1c thi. Khi b\u1ea1n remove liquidity, slippage th\u01b0\u1eddng \u0111\u1ebfn t\u1eeb bi\u1ebfn \u0111\u1ed9ng gi\u00e1 \u0111\u1ed9t ng\u1ed9t trong th\u1eddi gian ch\u1edd giao d\u1ecbch x\u00e1c nh\u1eadn.","title":"Slippage (Tr\u01b0\u1ee3t gi\u00e1) l\u00e0 g\u00ec?"},{"location":"collections/Defi/Uniswap_V1_remove_liquidity/#co-che-bao-ve-slippage-hoat-ong-nhu-the-nao","text":"B\u1ea1n ch\u1ecdn m\u1ee9c slippage tolerance (v\u00ed d\u1ee5: 5%) tr\u00ean Dapp Dapp s\u1ebd t\u00ednh to\u00e1n tr\u01b0\u1edbc min_eth v\u00e0 min_tokens d\u1ef1a theo gi\u00e1 hi\u1ec7n t\u1ea1i v\u00e0 m\u1ee9c slippage \u0111\u00f3 N\u1ebfu l\u01b0\u1ee3ng th\u1ef1c nh\u1eadn th\u1ea5p h\u01a1n m\u1ee9c t\u1ed1i thi\u1ec3u \u2192 giao d\u1ecbch s\u1ebd b\u1ecb revert (th\u1ea5t b\u1ea1i)","title":"C\u01a1 ch\u1ebf b\u1ea3o v\u1ec7 slippage ho\u1ea1t \u0111\u1ed9ng nh\u01b0 th\u1ebf n\u00e0o?"}]}